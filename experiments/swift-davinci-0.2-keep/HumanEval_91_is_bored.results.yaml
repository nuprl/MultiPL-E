language: swift
name: HumanEval_91_is_bored
results:
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    return\
    \ sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7ljsvl6s.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ count = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpxt_04onv.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"I\") }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmps1pw8v_d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"\
    I\") }.count\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwmx2rijc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    return\
    \ sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7ljsvl6s.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"I\") }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmps1pw8v_d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"\
    I\") }.count\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n          \
    \  boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpu12c_10h/tmpu12c_10h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1dc02ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1dbffe2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1dbffe2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1dbffe17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu12c_10h                        0x0000555e3a9cf7cb <unavailable> + 6091

    5    libc.so.6                          0x00002b1dc04d7460 __libc_start_main +
    245

    6    tmpu12c_10h                        0x0000555e3a9cf3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".?!\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpb786j2je.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".?!\")\n     \
    \               ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"I\") }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmps1pw8v_d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"\
    I\") }.count\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: \".\")\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpoe4j9r2m.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: \".\")\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpoe4j9r2m.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwmx2rijc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpxbapex5k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    var sentences = S.split(separator: \".\")\n    sentences.append(contentsOf:\
    \ S.split(separator: \"?\"))\n    sentences.append(contentsOf: S.split(separator:\
    \ \"!\"))\n    for sentence in sentences {\n        if sentence.split(separator:\
    \ \" \").first == \"I\" {\n            boredoms += 1\n        }\n    }\n    return\
    \ boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmpbqyar2zx/tmpbqyar2zx.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6a643d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6a640d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6a640d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6a640cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbqyar2zx                        0x000055ed6e92b9a2 <unavailable> + 6562

    5    libc.so.6                          0x00002b6a645c5460 __libc_start_main +
    245

    6    tmpbqyar2zx                        0x000055ed6e92b4d9 <unavailable> + 5337

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n          \
    \  boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpu12c_10h/tmpu12c_10h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1dc02ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1dbffe2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1dbffe2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1dbffe17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu12c_10h                        0x0000555e3a9cf7cb <unavailable> + 6091

    5    libc.so.6                          0x00002b1dc04d7460 __libc_start_main +
    245

    6    tmpu12c_10h                        0x0000555e3a9cf3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    var sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpayr8antp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: \".\")\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpoe4j9r2m.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    var sentences = S.components(separatedBy: \".\")\n\
    \    sentences.append(contentsOf: S.components(separatedBy: \"?\"))\n    sentences.append(contentsOf:\
    \ S.components(separatedBy: \"!\"))\n    for sentence in sentences {\n       \
    \ if sentence.hasPrefix(\"I\") {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcyr6rle1.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n/tmp/tmpcyr6rle1.swift:13:36: error: value of type\
    \ 'String' has no member 'components'\n    sentences.append(contentsOf: S.components(separatedBy:\
    \ \"?\"))\n                                 ~ ^~~~~~~~~~\n/tmp/tmpcyr6rle1.swift:14:36:\
    \ error: value of type 'String' has no member 'components'\n    sentences.append(contentsOf:\
    \ S.components(separatedBy: \"!\"))\n                                 ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let s = S.lowercased()\n    var boredoms = 0\n    var start = s.startIndex\n\
    \    var end = s.endIndex\n    var range = start..<end\n    while range.lowerBound\
    \ < range.upperBound {\n        let r = s.rangeOfCharacter(from: CharacterSet(charactersIn:\
    \ \"!?.\"), options: [], range: range)\n        if let r = r {\n            end\
    \ = r.lowerBound\n            range = start..<end\n        } else {\n        \
    \    end = s.endIndex\n            range = start..<end\n        }\n        let\
    \ sub = s[range]\n        if sub.hasPrefix(\"i\") {\n            boredoms += 1\n\
    \        }\n        start = s.index(after: end)\n        range = start..<s.endIndex\n\
    \    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp98rjirxk.swift:17:42: error: cannot find 'CharacterSet' in scope\n\
    \        let r = s.rangeOfCharacter(from: CharacterSet(charactersIn: \"!?.\"),\
    \ options: [], range: range)\n                                         ^~~~~~~~~~~~\n\
    /tmp/tmp98rjirxk.swift:17:19: error: value of type 'String' has no member 'rangeOfCharacter'\n\
    \        let r = s.rangeOfCharacter(from: CharacterSet(charactersIn: \"!?.\"),\
    \ options: [], range: range)\n                ~ ^~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"I\") }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmps1pw8v_d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"\
    I\") }.count\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    var sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpayr8antp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpxbapex5k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.first == \"I\" {\n            boredoms += 1\n        }\n \
    \   }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    var sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpayr8antp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    return sentences.filter\
    \ { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp50csmtbu.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.starts(with: \"I\") {\n       \
    \     boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp5f1r4tq8/tmp5f1r4tq8.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b05115d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b05112cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b05112cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b05112ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5f1r4tq8                        0x000055b51d7d37eb <unavailable> + 6123

    5    libc.so.6                          0x00002b05117c4460 __libc_start_main +
    245

    6    tmp5f1r4tq8                        0x000055b51d7d33c9 <unavailable> + 5065

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n          \
    \  boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpu12c_10h/tmpu12c_10h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1dc02ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1dbffe2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1dbffe2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1dbffe17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu12c_10h                        0x0000555e3a9cf7cb <unavailable> + 6091

    5    libc.so.6                          0x00002b1dc04d7460 __libc_start_main +
    245

    6    tmpu12c_10h                        0x0000555e3a9cf3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwmx2rijc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwmx2rijc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwmx2rijc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.split(separator: \".\").filter { $0.hasPrefix(\"I\") }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp38gw2e0t/tmp38gw2e0t.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a5a413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a5a10ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a5a10a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a5a1097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38gw2e0t                        0x000055b9f9f7d6db <unavailable> + 5851

    5    libc.so.6                          0x00002b1a5a5ff460 __libc_start_main +
    245

    6    tmp38gw2e0t                        0x000055b9f9f7d2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.split(separator: \".\").filter { $0.hasPrefix(\"I\") }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp38gw2e0t/tmp38gw2e0t.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a5a413c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a5a10ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a5a10a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a5a1097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp38gw2e0t                        0x000055b9f9f7d6db <unavailable> + 5851

    5    libc.so.6                          0x00002b1a5a5ff460 __libc_start_main +
    245

    6    tmp38gw2e0t                        0x000055b9f9f7d2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 {\n            if words[0] == \"I\" {\n        \
    \        boredoms += 1\n            }\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    var sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpayr8antp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n          \
    \  boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpu12c_10h/tmpu12c_10h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1dc02ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1dbffe2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1dbffe2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1dbffe17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu12c_10h                        0x0000555e3a9cf7cb <unavailable> + 6091

    5    libc.so.6                          0x00002b1dc04d7460 __libc_start_main +
    245

    6    tmpu12c_10h                        0x0000555e3a9cf3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwmx2rijc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\").map { String($0) }\n    let boredoms\
    \ = sentences.filter { $0.starts(with: \"I\") }\n    return boredoms.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpf7peqs2b/tmpf7peqs2b.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69e07fec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69e04f5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69e04f5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69e04f47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf7peqs2b                        0x000055cb414c882b <unavailable> + 6187

    5    libc.so.6                          0x00002b69e09ea460 __libc_start_main +
    245

    6    tmpf7peqs2b                        0x000055cb414c8409 <unavailable> + 5129

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 {\n            if words[0] == \"I\" {\n \
    \               boredoms += 1\n            }\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpawltjvse.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824432
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.starts(with: \"I\") {\n       \
    \     boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp5f1r4tq8/tmp5f1r4tq8.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b05115d8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b05112cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b05112cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b05112ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5f1r4tq8                        0x000055b51d7d37eb <unavailable> + 6123

    5    libc.so.6                          0x00002b05117c4460 __libc_start_main +
    245

    6    tmp5f1r4tq8                        0x000055b51d7d33c9 <unavailable> + 5065

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\").map { String($0) }\n    let boredoms\
    \ = sentences.filter { $0.hasPrefix(\"I\") }\n    return boredoms.count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmp7lkwl4ra/tmp7lkwl4ra.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab1e03ddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab1e00d4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab1e00d4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab1e00d37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7lkwl4ra                        0x0000556bb248b7bb <unavailable> + 6075

    5    libc.so.6                          0x00002ab1e05c9460 __libc_start_main +
    245

    6    tmp7lkwl4ra                        0x0000556bb248b399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 {\n            if words[0] == \"I\" {\n        \
    \        boredoms += 1\n            }\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".!?\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp83i9x9qc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".!?\")\n     \
    \               ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.trimmingCharacters(in: .whitespacesAndNewlines).hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp5qyeufhr.swift:14:21: error: value of type 'String.SubSequence'\
    \ (aka 'Substring') has no member 'trimmingCharacters'\n        if sentence.trimmingCharacters(in:\
    \ .whitespacesAndNewlines).hasPrefix(\"I\") {\n           ~~~~~~~~ ^~~~~~~~~~~~~~~~~~\n\
    /tmp/tmp5qyeufhr.swift:14:45: error: cannot infer contextual base in reference\
    \ to member 'whitespacesAndNewlines'\n        if sentence.trimmingCharacters(in:\
    \ .whitespacesAndNewlines).hasPrefix(\"I\") {\n                              \
    \             ~^~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwmx2rijc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n          \
    \  boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpu12c_10h/tmpu12c_10h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1dc02ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1dbffe2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1dbffe2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1dbffe17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu12c_10h                        0x0000555e3a9cf7cb <unavailable> + 6091

    5    libc.so.6                          0x00002b1dc04d7460 __libc_start_main +
    245

    6    tmpu12c_10h                        0x0000555e3a9cf3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    var sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpayr8antp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    var sentences = S.components(separatedBy: \".\")\n\
    \    sentences += S.components(separatedBy: \"?\")\n    sentences += S.components(separatedBy:\
    \ \"!\")\n    for sentence in sentences {\n        if sentence.hasPrefix(\"I\"\
    ) {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpuwsf2lmu.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n/tmp/tmpuwsf2lmu.swift:13:20: error: value of type\
    \ 'String' has no member 'components'\n    sentences += S.components(separatedBy:\
    \ \"?\")\n                 ~ ^~~~~~~~~~\n/tmp/tmpuwsf2lmu.swift:14:20: error:\
    \ value of type 'String' has no member 'components'\n    sentences += S.components(separatedBy:\
    \ \"!\")\n                 ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: \".\")\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpoe4j9r2m.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let s = S.lowercased()\n    let sentences = s.components(separatedBy: [\"\
    .\", \"?\", \"!\"])\n    var boredoms = 0\n    for sentence in sentences {\n \
    \       if sentence.hasPrefix(\"i\") {\n            boredoms += 1\n        }\n\
    \    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpt84_gnor.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = s.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwmx2rijc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    var sentences = S.split(separator: \".\")\n    sentences.append(contentsOf:\
    \ S.split(separator: \"?\"))\n    sentences.append(contentsOf: S.split(separator:\
    \ \"!\"))\n    for sentence in sentences {\n        if sentence.split(separator:\
    \ \" \").first == \"I\" {\n            boredoms += 1\n        }\n    }\n    return\
    \ boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_bored(S: \"Hello\
    \ world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmpbqyar2zx/tmpbqyar2zx.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6a643d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6a640d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6a640d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6a640cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbqyar2zx                        0x000055ed6e92b9a2 <unavailable> + 6562

    5    libc.so.6                          0x00002b6a645c5460 __libc_start_main +
    245

    6    tmpbqyar2zx                        0x000055ed6e92b4d9 <unavailable> + 5337

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\", omittingEmptySubsequences: true)\n\
    \    var boredoms = 0\n    for sentence in sentences {\n        let words = sentence.split(separator:\
    \ \" \", omittingEmptySubsequences: true)\n        if words.count > 0 && words[0]\
    \ == \"I\" {\n            boredoms += 1\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    var sentences = S.components(separatedBy: \".\")\n\
    \    sentences.append(contentsOf: S.components(separatedBy: \"?\"))\n    sentences.append(contentsOf:\
    \ S.components(separatedBy: \"!\"))\n    for sentence in sentences {\n       \
    \ if sentence.hasPrefix(\"I\") {\n            boredoms += 1\n        }\n    }\n\
    \    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcyr6rle1.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n/tmp/tmpcyr6rle1.swift:13:36: error: value of type\
    \ 'String' has no member 'components'\n    sentences.append(contentsOf: S.components(separatedBy:\
    \ \"?\"))\n                                 ~ ^~~~~~~~~~\n/tmp/tmpcyr6rle1.swift:14:36:\
    \ error: value of type 'String' has no member 'components'\n    sentences.append(contentsOf:\
    \ S.components(separatedBy: \"!\"))\n                                 ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwmx2rijc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    var sentences = S.split(separator: \".\")\n    sentences.append(contentsOf:\
    \ S.split(separator: \"?\"))\n    sentences.append(contentsOf: S.split(separator:\
    \ \"!\"))\n    for sentence in sentences {\n        if sentence.trimmingCharacters(in:\
    \ .whitespacesAndNewlines).hasPrefix(\"I\") {\n            boredoms += 1\n   \
    \     }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\"\
    ) == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\"\
    ) == 0)\nassert(is_bored(S: \"I feel good today. I will be productive. will kill\
    \ It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\") == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpuef4v3pm.swift:16:21: error: value of type 'String.SubSequence'\
    \ (aka 'Substring') has no member 'trimmingCharacters'\n        if sentence.trimmingCharacters(in:\
    \ .whitespacesAndNewlines).hasPrefix(\"I\") {\n           ~~~~~~~~ ^~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpuef4v3pm.swift:16:45: error: cannot infer contextual base in reference\
    \ to member 'whitespacesAndNewlines'\n        if sentence.trimmingCharacters(in:\
    \ .whitespacesAndNewlines).hasPrefix(\"I\") {\n                              \
    \             ~^~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.split(separator: \".\")\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.first == \"I\" {\n            boredoms += 1\n        }\n \
    \   }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"I\") }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmps1pw8v_d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"\
    I\") }.count\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwmx2rijc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n          \
    \  boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpu12c_10h/tmpu12c_10h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1dc02ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1dbffe2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1dbffe2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1dbffe17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu12c_10h                        0x0000555e3a9cf7cb <unavailable> + 6091

    5    libc.so.6                          0x00002b1dc04d7460 __libc_start_main +
    245

    6    tmpu12c_10h                        0x0000555e3a9cf3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: \".\")\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpoe4j9r2m.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    let sentences2 = S.split(separator:\
    \ \"?\")\n    let sentences3 = S.split(separator: \"!\")\n    var count = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         count += 1\n        }\n    }\n    for sentence in sentences2 {\n   \
    \     if sentence.hasPrefix(\"I\") {\n            count += 1\n        }\n    }\n\
    \    for sentence in sentences3 {\n        if sentence.hasPrefix(\"I\") {\n  \
    \          count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpmaddylv7/tmpmaddylv7.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab7108edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab7105e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab7105e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab7105e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmaddylv7                        0x00005611be28f7cb <unavailable> + 6091

    5    libc.so.6                          0x00002ab710ad9460 __libc_start_main +
    245

    6    tmpmaddylv7                        0x00005611be28f3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n          \
    \  boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpu12c_10h/tmpu12c_10h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1dc02ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1dbffe2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1dbffe2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1dbffe17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu12c_10h                        0x0000555e3a9cf7cb <unavailable> + 6091

    5    libc.so.6                          0x00002b1dc04d7460 __libc_start_main +
    245

    6    tmpu12c_10h                        0x0000555e3a9cf3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpxbapex5k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwmx2rijc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    return\
    \ sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7ljsvl6s.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.split(separator: \".\")\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 {\n            if words[0] == \"I\" {\n        \
    \        boredoms += 1\n            }\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"I\") }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmps1pw8v_d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"\
    I\") }.count\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 {\n            if words[0] == \"I\" {\n        \
    \        boredoms += 1\n            }\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: \".\")\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 {\n            if words[0] == \"I\" {\n \
    \               boredoms += 1\n            }\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpnwb3qv9i.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n          \
    \  boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpu12c_10h/tmpu12c_10h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1dc02ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1dbffe2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1dbffe2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1dbffe17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu12c_10h                        0x0000555e3a9cf7cb <unavailable> + 6091

    5    libc.so.6                          0x00002b1dc04d7460 __libc_start_main +
    245

    6    tmpu12c_10h                        0x0000555e3a9cf3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: \".\")\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp842nq9v_.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.first == \"I\" {\n            boredoms += 1\n        }\n \
    \   }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \"I\").count - 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpblrkh10d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \"I\").count - 1\n      \
    \     ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n          \
    \  boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpu12c_10h/tmpu12c_10h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1dc02ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1dbffe2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1dbffe2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1dbffe17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu12c_10h                        0x0000555e3a9cf7cb <unavailable> + 6091

    5    libc.so.6                          0x00002b1dc04d7460 __libc_start_main +
    245

    6    tmpu12c_10h                        0x0000555e3a9cf3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk11rt5jg.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    return\
    \ sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7ljsvl6s.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: \".\")\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp842nq9v_.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824432
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\").map(String.init)\n    return sentences.filter\
    \ { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: Exception
  stderr: 'tmpbe6keupm/tmpbe6keupm.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b537e395c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b537e08cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b537e08c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b537e08b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbe6keupm                        0x0000562d83e787bb <unavailable> + 6075

    5    libc.so.6                          0x00002b537e581460 __libc_start_main +
    245

    6    tmpbe6keupm                        0x0000562d83e78399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpxbapex5k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n          \
    \  boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpu12c_10h/tmpu12c_10h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1dc02ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1dbffe2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1dbffe2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1dbffe17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu12c_10h                        0x0000555e3a9cf7cb <unavailable> + 6091

    5    libc.so.6                          0x00002b1dc04d7460 __libc_start_main +
    245

    6    tmpu12c_10h                        0x0000555e3a9cf3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: \".\")\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp842nq9v_.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824432
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.split(separator: \".\")\n    for\
    \ sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n          \
    \  boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpcnex0jfc/tmpcnex0jfc.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b6352cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b63223b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b63223988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b632227b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcnex0jfc                        0x0000557c2f9b37cb <unavailable> + 6091

    5    libc.so.6                          0x00002b7b63718460 __libc_start_main +
    245

    6    tmpcnex0jfc                        0x0000557c2f9b33a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpxbapex5k.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms +=\
    \ 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: \".\")\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpoe4j9r2m.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    var sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpayr8antp.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    var sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n          \
    \  boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpu12c_10h/tmpu12c_10h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1dc02ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1dbffe2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1dbffe2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1dbffe17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu12c_10h                        0x0000555e3a9cf7cb <unavailable> + 6091

    5    libc.so.6                          0x00002b1dc04d7460 __libc_start_main +
    245

    6    tmpu12c_10h                        0x0000555e3a9cf3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.first == \"I\" {\n            boredoms += 1\n        }\n \
    \   }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_bored(S:\
    \ \"Hello world\") == 0)\nassert(is_bored(S: \"Is the sky blue?\") == 0)\nassert(is_bored(S:\
    \ \"I love It !\") == 1)\nassert(is_bored(S: \"bIt\") == 0)\nassert(is_bored(S:\
    \ \"I feel good today. I will be productive. will kill It\") == 2)\nassert(is_bored(S:\
    \ \"You and I are going for a walk\") == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwmx2rijc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 0
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        let words = sentence.split(separator: \" \"\
    )\n        if words.count > 0 {\n            if words[0] == \"I\" {\n        \
    \        boredoms += 1\n            }\n        }\n    }\n    return boredoms\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        let words = sentence.components(separatedBy:\
    \ \" \")\n        if words.count > 0 && words[0] == \"I\" {\n            boredoms\
    \ += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"Is the\
    \ sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmptit3_ivs.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: -4
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.split(separator: \".\")\n    var boredoms = 0\n    for\
    \ sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n          \
    \  boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: Exception
  stderr: 'tmpu12c_10h/tmpu12c_10h.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1dc02ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1dbffe2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1dbffe2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1dbffe17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu12c_10h                        0x0000555e3a9cf7cb <unavailable> + 6091

    5    libc.so.6                          0x00002b1dc04d7460 __libc_start_main +
    245

    6    tmpu12c_10h                        0x0000555e3a9cf3a9 <unavailable> + 5033

    '
  stdout: ''
  timestamp: 1659824432
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    return\
    \ sentences.filter { $0.hasPrefix(\"I\") }.count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S: \"\
    Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp7ljsvl6s.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: [\".\", \"?\", \"!\"])\n    var\
    \ boredoms = 0\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk2p3q8po.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"I\") }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmps1pw8v_d.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return S.components(separatedBy: \".!?\").filter { $0.hasPrefix(\"\
    I\") }.count\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    var boredoms = 0\n    let sentences = S.components(separatedBy: [\".\", \"\
    ?\", \"!\"])\n    for sentence in sentences {\n        if sentence.hasPrefix(\"\
    I\") {\n            boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2_mtjk_t.swift:12:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: [\".\", \"?\", \"\
    !\"])\n                    ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431
- exit_code: 1
  program: "\n/// You'll be given a string of words, and your task is to count the\
    \ number\n/// of boredoms. A boredom is a sentence that starts with the word \"\
    I\".\n/// Sentences are delimited by '.', '?' or '!'.\n/// For example:\n/// >>>\
    \ is_bored(\"Hello world\")\n/// 0\n/// >>> is_bored(\"The sky is blue. The sun\
    \ is shining. I love this weather\")\n/// 1\nfunc is_bored(S: String) -> Int {\n\
    \    let sentences = S.components(separatedBy: \".\")\n    var boredoms = 0\n\
    \    for sentence in sentences {\n        if sentence.hasPrefix(\"I\") {\n   \
    \         boredoms += 1\n        }\n    }\n    return boredoms\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_bored(S: \"Hello world\") == 0)\nassert(is_bored(S:\
    \ \"Is the sky blue?\") == 0)\nassert(is_bored(S: \"I love It !\") == 1)\nassert(is_bored(S:\
    \ \"bIt\") == 0)\nassert(is_bored(S: \"I feel good today. I will be productive.\
    \ will kill It\") == 2)\nassert(is_bored(S: \"You and I are going for a walk\"\
    ) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpwmx2rijc.swift:11:23: error: value of type 'String' has no member\
    \ 'components'\n    let sentences = S.components(separatedBy: \".\")\n       \
    \             ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824431

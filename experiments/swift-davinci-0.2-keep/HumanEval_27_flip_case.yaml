name: HumanEval_27_flip_case
language: swift
prompt: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
  \ String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
  \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
  \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
completions: ["    return string.characters.map {\n        if $0.isUppercase {\n \
    \           return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: { $0 + String($1) })", "    return string.characters.map\
    \ { char in\n        if char.isUppercase {\n            return char.lowercase\n\
    \        } else {\n            return char.uppercase\n        }\n    }.reduce(\"\
    \", combine: +)", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isLowercase {\n            return Character($0.uppercaseString)\n   \
    \     } else {\n            return Character($0.lowercaseString)\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return String(string.characters.map {\n\
    \        if $0.isLowercase {\n            return $0.uppercase\n        } else\
    \ {\n            return $0.lowercase\n        }\n    })", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.map {\n        if $0.isUppercase {\n            return $0.lowercased()\n\
    \        } else {\n            return $0.uppercased()\n        }\n    }", "  \
    \  return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isLowercase {\n            return $0.uppercase\n        } else {\n  \
    \          return $0.lowercase\n        }\n    }.joinWithSeparator(\"\")", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return String(string.characters.map {\n        if $0.isUppercase {\n     \
    \       return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    })", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.map {\n        $0.isUppercase ? $0.lowercased() : $0.uppercased()\n\
    \    }", "    return string.characters.map {\n        if $0.isUppercase {\n  \
    \          return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    var newString = \"\"\n    for\
    \ character in string {\n        if character.isUppercase {\n            newString.append(character.lowercased())\n\
    \        } else {\n            newString.append(character.uppercased())\n    \
    \    }\n    }\n    return newString", "    return string.characters.map {\n  \
    \      if $0.isUppercase {\n            return $0.lowercase\n        } else {\n\
    \            return $0.uppercase\n        }\n    }.reduce(\"\", combine: { $0\
    \ + String($1) })", "    var flipped = \"\"\n    for char in string {\n      \
    \  if char.isUppercase {\n            flipped.append(char.lowercased())\n    \
    \    } else {\n            flipped.append(char.uppercased())\n        }\n    }\n\
    \    return flipped", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ Character($0.lowercaseString)\n        } else {\n            return Character($0.uppercaseString)\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map({\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }).reduce(\"\", combine: { $0 + String($1) })", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    var flipped = \"\"\n    for char in string {\n        let str = String(char)\n\
    \        if str.lowercased() == str {\n            flipped.append(str.uppercased())\n\
    \        } else {\n            flipped.append(str.lowercased())\n        }\n \
    \   }\n    return flipped", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if let char = String($0).lowercaseString.characters.first {\n            return\
    \ Character(String(char).uppercaseString)\n        } else {\n            return\
    \ $0\n        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.map {\n        if $0.isUppercase {\n            return $0.lowercased()\n\
    \        } else {\n            return $0.uppercased()\n        }\n    }", "  \
    \  return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map { char in\n        if char.isUppercase {\n  \
    \          return char.lowercase\n        } else {\n            return char.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    var result = \"\"\n    for char\
    \ in string {\n        if char.isUppercase {\n            result.append(char.lowercased())\n\
    \        } else {\n            result.append(char.uppercased())\n        }\n \
    \   }\n    return result", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    var result = \"\"\n    for char in string\
    \ {\n        if char.isUppercase {\n            result.append(char.lowercased())\n\
    \        } else {\n            result.append(char.uppercased())\n        }\n \
    \   }\n    return result", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: { $0 +\
    \ String($1) })", '    return string.uppercased()', "    var newString = \"\"\n\
    \    for character in string {\n        if character.isUppercase {\n         \
    \   newString.append(character.lowercased())\n        } else {\n            newString.append(character.uppercased())\n\
    \        }\n    }\n    return newString", "    return string.characters.map {\n\
    \        if $0.isLowercase {\n            return $0.uppercase\n        } else\
    \ {\n            return $0.lowercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isLowercase {\n            return\
    \ $0.uppercase\n        } else {\n            return $0.lowercase\n        }\n\
    \    }.reduce(\"\", combine: { $0 + String($1) })", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  '    return String(string.characters.map { $0.isUpperCase() ? $0.lowercase() : $0.uppercase()
    })', "    return string.characters.map {\n        if $0.isUppercase {\n      \
    \      return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   var result = \"\"\n    for char in string {\n        if char.isUppercase {\n\
    \            result.append(char.lowercased())\n        } else {\n            result.append(char.uppercased())\n\
    \        }\n    }\n    return result", "    var flipped = \"\"\n    for char in\
    \ string {\n        if char.isUppercase {\n            flipped.append(char.lowercased())\n\
    \        } else {\n            flipped.append(char.uppercased())\n        }\n\
    \    }\n    return flipped", '    return string.map { $0.isUppercase ? $0.lowercased()
    : $0.uppercased() }', "    var flipped = \"\"\n    for char in string {\n    \
    \    if char.isUppercase {\n            flipped.append(char.lowercased())\n  \
    \      } else {\n            flipped.append(char.uppercased())\n        }\n  \
    \  }\n    return flipped", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return String(string.characters.map {\n        if $0.isUppercase() {\n    \
    \        return $0.lowercase()\n        } else {\n            return $0.uppercase()\n\
    \        }\n    })", "    return String(string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    })", "    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase\n        } else {\n            return $0.lowercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: { $0 + String($1) })", "    var result = \"\"\n \
    \   for char in string {\n        if char.isUppercase {\n            result.append(char.lowercased())\n\
    \        } else {\n            result.append(char.uppercased())\n        }\n \
    \   }\n    return result", "    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase\n        } else {\n            return $0.lowercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    var flipped = \"\"\n    for char in string {\n        if char.isUppercase {\n\
    \            flipped.append(char.lowercased())\n        } else {\n           \
    \ flipped.append(char.uppercased())\n        }\n    }\n    return flipped", '    return
    string.characters.map { $0.isUpperCase() ? $0.lowercase() : $0.uppercase() }.reduce("",
    combine: +)', "    return string.characters.map {\n        if $0.isUppercase {\n\
    \            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.joinWithSeparator(\"\")", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isLowercase {\n            return\
    \ $0.uppercase()\n        } else {\n            return $0.lowercase()\n      \
    \  }\n    }.reduce(\"\", combine: +)", "    return string.characters.map {\n \
    \       if $0.isUppercase {\n            return $0.lowercase\n        } else {\n\
    \            return $0.uppercase\n        }\n    }.reduce(\"\", combine: { $0\
    \ + String($1) })", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.joinWithSeparator(\"\")", "    return string.characters.map {\n       \
    \ if $0.isUppercase {\n            return $0.lowercase\n        } else {\n   \
    \         return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    let flipped = string.characters.map {\n\
    \        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }\n    return String(flipped)",
  "    var flipped_string = \"\"\n    for char in string {\n        if char.isUppercase\
    \ {\n            flipped_string.append(char.lowercased())\n        } else {\n\
    \            flipped_string.append(char.uppercased())\n        }\n    }\n    return\
    \ flipped_string", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    var newString = \"\"\n    for char in string\
    \ {\n        if char.isUppercase {\n            newString.append(char.lowercased())\n\
    \        } else {\n            newString.append(char.uppercased())\n        }\n\
    \    }\n    return newString", '    return string.characters.map { $0.isUpperCase()
    ? $0.lowercase() : $0.uppercase() }.reduce("", combine: { $0 + String($1) })',
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    var result = \"\"\n    for char in string\
    \ {\n        if char.isUppercase {\n            result.append(char.lowercased())\n\
    \        } else {\n            result.append(char.uppercased())\n        }\n \
    \   }\n    return result", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isLowercase {\n            return\
    \ $0.uppercase\n        } else {\n            return $0.lowercase\n        }\n\
    \    }.reduce(\"\", combine: { $0 + String($1) })", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isLowercase {\n            return\
    \ $0.uppercase\n        } else {\n            return $0.lowercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    var result = \"\"\n    for char in string\
    \ {\n        if char.isUppercase {\n            result.append(char.lowercased())\n\
    \        } else {\n            result.append(char.uppercased())\n        }\n \
    \   }\n    return result", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.joinWithSeparator(\"\")", "    return string.characters.map {\n       \
    \ if $0.isUppercase {\n            return $0.lowercase\n        } else {\n   \
    \         return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map({\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }).reduce(\"\", combine: { $0 +\
    \ String($1) })", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    var newString = \"\"\n    for character\
    \ in string {\n        if character.isUppercase {\n            newString.append(character.lowercased())\n\
    \        } else {\n            newString.append(character.uppercased())\n    \
    \    }\n    }\n    return newString", "    return string.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercased()\n        } else {\n            return\
    \ $0.uppercased()\n        }\n    }", "    return string.characters.map {\n  \
    \      if $0.isUppercase {\n            return $0.lowercase\n        } else {\n\
    \            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.joinWithSeparator(\"\")", "    return string.characters.map {\n       \
    \ if $0.isUppercase {\n            return $0.lowercase\n        } else {\n   \
    \         return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: {$0 + String($1)})",
  "    var result = \"\"\n    for char in string {\n        if char.isUppercase {\n\
    \            result.append(char.lowercased())\n        } else {\n            result.append(char.uppercased())\n\
    \        }\n    }\n    return result", "    return string.characters.map {\n \
    \       if $0.isUppercase {\n            return $0.lowercase\n        } else {\n\
    \            return $0.uppercase\n        }\n    }.joinWithSeparator(\"\")", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", '    return String(string.characters.map { $0.isUpperCase()
    ? $0.lowercase() : $0.uppercase() })', "    return string.characters.map {\n \
    \       if $0.isUppercase {\n            return $0.lowercase\n        } else {\n\
    \            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isLowercase {\n            return\
    \ $0.uppercase()\n        } else {\n            return $0.lowercase()\n      \
    \  }\n    }.reduce(\"\", combine: +)", "    return string.characters.map {\n \
    \       if $0.isUppercase {\n            return $0.lowercase\n        } else {\n\
    \            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isLowercase {\n            return\
    \ $0.uppercaseString\n        } else {\n            return $0.lowercaseString\n\
    \        }\n    }.joinWithSeparator(\"\")", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isLowercase {\n            return\
    \ $0.uppercase\n        } else {\n            return $0.lowercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    var result = \"\"\n    for char in string\
    \ {\n        if char.isUppercase {\n            result.append(char.lowercased())\n\
    \        } else {\n            result.append(char.uppercased())\n        }\n \
    \   }\n    return result", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map({\n\
    \        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }).reduce(\"\", combine:\
    \ { $0 + String($1) })", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    var flipped_string = \"\"\n    for char in string {\n        if char.isUppercase\
    \ {\n            flipped_string.append(char.lowercased())\n        } else {\n\
    \            flipped_string.append(char.uppercased())\n        }\n    }\n    return\
    \ flipped_string", "    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)", "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isLowercase {\n            return\
    \ $0.uppercase()\n        } else {\n            return $0.lowercase()\n      \
    \  }\n    }.reduce(\"\", combine: +)", "    return string.characters.map {\n \
    \       if $0.isUppercase {\n            return $0.lowercase\n        } else {\n\
    \            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   var flipped = \"\"\n    for char in string {\n        if char.isUppercase\
    \ {\n            flipped.append(char.lowercased())\n        } else {\n       \
    \     flipped.append(char.uppercased())\n        }\n    }\n    return flipped",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", '    return string.characters.map { $0.isUpperCase()
    ? $0.lowercase() : $0.uppercase() }.reduce("", combine: +)', "    return string.characters.map\
    \ {\n        if $0.isUppercase {\n            return $0.lowercase\n        } else\
    \ {\n            return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)",
  "    return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)", " \
    \   return string.characters.map {\n        if $0.isUppercase {\n            return\
    \ $0.lowercase\n        } else {\n            return $0.uppercase\n        }\n\
    \    }.reduce(\"\", combine: +)", "    return string.characters.map {\n      \
    \  if $0.isUppercase {\n            return $0.lowercase\n        } else {\n  \
    \          return $0.uppercase\n        }\n    }.reduce(\"\", combine: +)"]
stop_tokens:
- "\n}"

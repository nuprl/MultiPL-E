name: HumanEval_110_exchange
language: swift
prompt: "\n/// In this problem, you will implement a function that takes two lists\
  \ of numbers,\n/// and determines whether it is possible to perform an exchange\
  \ of elements\n/// between them to make lst1 a list of only even numbers.\n/// There\
  \ is no limit on the number of exchanged elements between lst1 and lst2.\n/// If\
  \ it is possible to exchange elements between the lst1 and lst2 to make\n/// all\
  \ the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return \"NO\"\
  .\n/// For example:\n/// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n/// exchange([1,\
  \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n/// It is assumed that the input lists will\
  \ be non-empty.\nfunc exchange(lst1: [Int], lst2: [Int]) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(exchange(lst1: [1, 2, 3, 4], lst2: [1, 2,\
  \ 3, 4]) == \"YES\")\nassert(exchange(lst1: [1, 2, 3, 4], lst2: [1, 5, 3, 4]) ==\
  \ \"NO\")\nassert(exchange(lst1: [1, 2, 3, 4], lst2: [2, 1, 4, 3]) == \"YES\")\n\
  assert(exchange(lst1: [5, 7, 3], lst2: [2, 6, 4]) == \"YES\")\nassert(exchange(lst1:\
  \ [5, 7, 3], lst2: [2, 6, 3]) == \"NO\")\nassert(exchange(lst1: [3, 2, 6, 1, 8,\
  \ 9], lst2: [3, 5, 5, 1, 1, 1]) == \"NO\")\nassert(exchange(lst1: [100, 200], lst2:\
  \ [200, 200]) == \"YES\")"
completions: ["    let lst1IsEven = lst1.filter { $0 % 2 == 0 }.count == lst1.count\n\
    \    let lst2IsEven = lst2.filter { $0 % 2 == 0 }.count == lst2.count\n    return\
    \ lst1IsEven || lst2IsEven ? \"YES\" : \"NO\"", "    let lst1Even = lst1.filter\
    \ { $0 % 2 == 0 }\n    let lst2Even = lst2.filter { $0 % 2 == 0 }\n    return\
    \ lst1Even.count + lst2Even.count >= lst1.count ? \"YES\" : \"NO\"", "    let\
    \ lst1Even = lst1.filter { $0 % 2 == 0 }\n    let lst2Even = lst2.filter { $0\
    \ % 2 == 0 }\n    return lst1Even.count + lst2Even.count >= lst1.count ? \"YES\"\
    \ : \"NO\"", "    var lst1 = lst1\n    var lst2 = lst2\n    var evens = [Int]()\n\
    \    var odds = [Int]()\n    for i in lst1 {\n        if i % 2 == 0 {\n      \
    \      evens.append(i)\n        } else {\n            odds.append(i)\n       \
    \ }\n    }\n    for i in lst2 {\n        if i % 2 == 0 {\n            evens.append(i)\n\
    \        } else {\n            odds.append(i)\n        }\n    }\n    if odds.count\
    \ % 2 == 0 {\n        return \"YES\"\n    } else {\n        return \"NO\"\n  \
    \  }", "    let evens = lst1.filter { $0 % 2 == 0 }\n    let odds = lst2.filter\
    \ { $0 % 2 != 0 }\n    return evens.count + odds.count == lst1.count + lst2.count\
    \ ? \"YES\" : \"NO\"", "    var lst1 = lst1\n    var lst2 = lst2\n    var evens\
    \ = [Int]()\n    var odds = [Int]()\n    for i in lst1 {\n        if i % 2 ==\
    \ 0 {\n            evens.append(i)\n        } else {\n            odds.append(i)\n\
    \        }\n    }\n    for i in lst2 {\n        if i % 2 == 0 {\n            evens.append(i)\n\
    \        } else {\n            odds.append(i)\n        }\n    }\n    if odds.count\
    \ == 0 {\n        return \"YES\"\n    } else if evens.count == 0 {\n        return\
    \ \"NO\"\n    } else {\n        return \"YES\"\n    }", "    var lst1 = lst1\n\
    \    var lst2 = lst2\n    var lst1Even = lst1.filter { $0 % 2 == 0 }\n    var\
    \ lst2Even = lst2.filter { $0 % 2 == 0 }\n    var lst1Odd = lst1.filter { $0 %\
    \ 2 != 0 }\n    var lst2Odd = lst2.filter { $0 % 2 != 0 }\n    if lst1Even.count\
    \ == lst1.count && lst2Even.count == lst2.count {\n        return \"YES\"\n  \
    \  }\n    if lst1Odd.count == lst1.count && lst2Odd.count == lst2.count {\n  \
    \      return \"YES\"\n    }\n    if lst1Even.count == lst1.count {\n        return\
    \ \"YES\"\n    }\n    if lst2Even.count == lst2.count {\n        return \"YES\"\
    \n    }\n    if lst1Odd.count == lst1.count {\n        return \"YES\"\n    }\n\
    \    if lst2Odd.count == lst2.count {\n        return \"YES\"\n    }\n    return\
    \ \"NO\"", "    var lst1 = lst1\n    var lst2 = lst2\n    var lst1Even = lst1.filter\
    \ { $0 % 2 == 0 }\n    var lst2Even = lst2.filter { $0 % 2 == 0 }\n    var lst1Odd\
    \ = lst1.filter { $0 % 2 != 0 }\n    var lst2Odd = lst2.filter { $0 % 2 != 0 }\n\
    \    if lst1Even.count == lst1.count {\n        return \"YES\"\n    }\n    if\
    \ lst2Even.count == lst2.count {\n        return \"YES\"\n    }\n    if lst1Even.count\
    \ + lst2Even.count >= lst1.count {\n        return \"YES\"\n    }\n    if lst1Odd.count\
    \ + lst2Odd.count >= lst2.count {\n        return \"YES\"\n    }\n    return \"\
    NO\"", "    var lst1 = lst1\n    var lst2 = lst2\n    var evens = 0\n    var odds\
    \ = 0\n    for i in lst1 {\n        if i % 2 == 0 {\n            evens += 1\n\
    \        } else {\n            odds += 1\n        }\n    }\n    for i in lst2\
    \ {\n        if i % 2 == 0 {\n            evens += 1\n        } else {\n     \
    \       odds += 1\n        }\n    }\n    if odds % 2 == 0 {\n        return \"\
    YES\"\n    } else {\n        return \"NO\"\n    }", "    var lst1 = lst1\n   \
    \ var lst2 = lst2\n    var lst1Odd = [Int]()\n    var lst2Even = [Int]()\n   \
    \ for i in 0..<lst1.count {\n        if lst1[i] % 2 != 0 {\n            lst1Odd.append(lst1[i])\n\
    \        }\n    }\n    for i in 0..<lst2.count {\n        if lst2[i] % 2 == 0\
    \ {\n            lst2Even.append(lst2[i])\n        }\n    }\n    if lst1Odd.count\
    \ == lst2Even.count {\n        return \"YES\"\n    } else {\n        return \"\
    NO\"\n    }", "    let lst1Even = lst1.filter { $0 % 2 == 0 }\n    let lst2Even\
    \ = lst2.filter { $0 % 2 == 0 }\n    let lst1Odd = lst1.filter { $0 % 2 != 0 }\n\
    \    let lst2Odd = lst2.filter { $0 % 2 != 0 }\n    if lst1Even.count + lst2Even.count\
    \ == lst1.count + lst2.count {\n        return \"YES\"\n    } else if lst1Odd.count\
    \ + lst2Odd.count == lst1.count + lst2.count {\n        return \"YES\"\n    }\
    \ else {\n        return \"NO\"\n    }", "    for i in lst1 {\n        if i %\
    \ 2 != 0 {\n            for j in lst2 {\n                if j % 2 == 0 {\n   \
    \                 return \"YES\"\n                }\n            }\n        }\n\
    \    }\n    return \"NO\"", "    var lst1 = lst1\n    var lst2 = lst2\n    for\
    \ i in 0..<lst1.count {\n        if lst1[i] % 2 != 0 {\n            for j in 0..<lst2.count\
    \ {\n                if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j]\n\
    \                    lst2[j] = lst1[i]\n                    break\n          \
    \      }\n            }\n        }\n    }\n    for i in 0..<lst1.count {\n   \
    \     if lst1[i] % 2 != 0 {\n            return \"NO\"\n        }\n    }\n   \
    \ return \"YES\"", "    var lst1 = lst1\n    var lst2 = lst2\n    var lst1Even\
    \ = lst1.filter { $0 % 2 == 0 }\n    var lst2Even = lst2.filter { $0 % 2 == 0\
    \ }\n    var lst1Odd = lst1.filter { $0 % 2 != 0 }\n    var lst2Odd = lst2.filter\
    \ { $0 % 2 != 0 }\n    var lst1EvenCount = lst1Even.count\n    var lst2EvenCount\
    \ = lst2Even.count\n    var lst1OddCount = lst1Odd.count\n    var lst2OddCount\
    \ = lst2Odd.count\n    var lst1EvenIndex = 0\n    var lst2EvenIndex = 0\n    var\
    \ lst1OddIndex = 0\n    var lst2OddIndex = 0\n    var lst1EvenIndexMax = lst1EvenCount\
    \ - 1\n    var lst2EvenIndexMax = lst2EvenCount - 1\n    var lst1OddIndexMax =\
    \ lst1OddCount - 1\n    var lst2OddIndexMax = lst2OddCount - 1\n    var lst1EvenIndexMin\
    \ = 0\n    var lst2EvenIndexMin = 0\n    var lst1OddIndexMin = 0\n    var lst2OddIndexMin\
    \ = 0\n    var lst1EvenIndexMinMax = 0\n    var lst2EvenIndexMinMax = 0\n    var\
    \ lst1OddIndexMinMax = 0\n    var lst2OddIndexMinMax = 0\n    var lst1EvenIndexMaxMin\
    \ = 0\n    var lst2EvenIndexMaxMin = 0\n    var lst1OddIndexMaxMin = 0\n    var\
    \ lst2OddIndexMaxMin = 0\n    var lst1EvenIndexMinMaxMin = 0\n    var lst2EvenIndexMinMaxMin\
    \ = 0\n    var lst1OddIndexMinMaxMin = 0\n    var lst2OddIndexMinMaxMin = 0\n\
    \    var lst1EvenIndexMaxMinMax = 0\n    var lst2EvenIndexMaxMinMax = 0\n   ",
  "    let lst1Odd = lst1.filter { $0 % 2 != 0 }\n    let lst2Even = lst2.filter {\
    \ $0 % 2 == 0 }\n    return lst1Odd.count == lst2Even.count ? \"YES\" : \"NO\"",
  "    let lst1Odd = lst1.filter { $0 % 2 != 0 }\n    let lst2Even = lst2.filter {\
    \ $0 % 2 == 0 }\n    return lst1Odd.count == lst2Even.count ? \"YES\" : \"NO\"",
  "    var lst1 = lst1\n    var lst2 = lst2\n    var i = 0\n    var j = 0\n    while\
    \ i < lst1.count && j < lst2.count {\n        if lst1[i] % 2 == 0 {\n        \
    \    i += 1\n        } else if lst2[j] % 2 == 1 {\n            j += 1\n      \
    \  } else {\n            let temp = lst1[i]\n            lst1[i] = lst2[j]\n \
    \           lst2[j] = temp\n            i += 1\n            j += 1\n        }\n\
    \    }\n    return lst1.filter { $0 % 2 == 1 }.isEmpty ? \"YES\" : \"NO\"", " \
    \   var lst1 = lst1\n    var lst2 = lst2\n    var evens = 0\n    for i in 0..<lst1.count\
    \ {\n        if lst1[i] % 2 == 0 {\n            evens += 1\n        }\n    }\n\
    \    var odds = lst1.count - evens\n    for i in 0..<lst2.count {\n        if\
    \ lst2[i] % 2 == 0 {\n            odds -= 1\n        } else {\n            evens\
    \ -= 1\n        }\n        if odds < 0 || evens < 0 {\n            return \"NO\"\
    \n        }\n    }\n    return \"YES\"", "    var lst1 = lst1\n    var lst2 =\
    \ lst2\n    var even = 0\n    var odd = 0\n    for i in lst1 {\n        if i %\
    \ 2 == 0 {\n            even += 1\n        } else {\n            odd += 1\n  \
    \      }\n    }\n    for i in lst2 {\n        if i % 2 == 0 {\n            even\
    \ += 1\n        } else {\n            odd += 1\n        }\n    }\n    if even\
    \ % 2 == 0 && odd % 2 == 0 {\n        return \"YES\"\n    } else {\n        return\
    \ \"NO\"\n    }", "    let evens = lst1.filter { $0 % 2 == 0 }\n    let odds =\
    \ lst2.filter { $0 % 2 != 0 }\n    return evens.count == lst1.count && odds.count\
    \ == lst2.count ? \"YES\" : \"NO\""]
stop_tokens:
- "\n}"

name: HumanEval_13_greatest_common_divisor
language: swift
prompt: "\n/// Return a greatest common divisor of two integers a and b\n/// >>> greatest_common_divisor(3,\
  \ 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n/// 5\nfunc greatest_common_divisor(a:\
  \ Int, b: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(greatest_common_divisor(a: 3, b: 7) == 1)\n\
  assert(greatest_common_divisor(a: 10, b: 15) == 5)\nassert(greatest_common_divisor(a:\
  \ 49, b: 14) == 7)\nassert(greatest_common_divisor(a: 144, b: 60) == 12)"
completions: ["    if a == 0 {\n        return b\n    }\n    if b == 0 {\n       \
    \ return a\n    }\n    if a > b {\n        return greatest_common_divisor(a: a\
    \ % b, b: b)\n    } else {\n        return greatest_common_divisor(a: a, b: b\
    \ % a)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n \
    \       return a\n    }\n    if a == b {\n        return a\n    }\n    if a >\
    \ b {\n        return greatest_common_divisor(a: a - b, b: b)\n    }\n    return\
    \ greatest_common_divisor(a: a, b: b - a)", "    if b == 0 {\n        return a\n\
    \    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }", " \
    \   if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    var a = a\n    var b = b\n    while b != 0 {\n     \
    \   let r = a % b\n        a = b\n        b = r\n    }\n    return a", "    if\
    \ b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0\
    \ {\n        return a\n    }\n    if a == b {\n        return a\n    }\n    if\
    \ a > b {\n        return greatest_common_divisor(a: a - b, b: b)\n    }\n   \
    \ return greatest_common_divisor(a: a, b: b - a)", "    var a = a\n    var b =\
    \ b\n    while b != 0 {\n        let t = b\n        b = a % b\n        a = t\n\
    \    }\n    return a", "    if a == 0 {\n        return b\n    }\n    if b ==\
    \ 0 {\n        return a\n    }\n    if a == b {\n        return a\n    }\n   \
    \ if a > b {\n        return greatest_common_divisor(a: a - b, b: b)\n    }\n\
    \    return greatest_common_divisor(a: a, b: b - a)", "    if b == 0 {\n     \
    \   return a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n\
    \    }", "    var a = a\n    var b = b\n    while b != 0 {\n        let t = b\n\
    \        b = a % b\n        a = t\n    }\n    return a", "    if b == 0 {\n  \
    \      return a\n    } else {\n        return greatest_common_divisor(b, b: a\
    \ % b)\n    }", '    return b == 0 ? a : greatest_common_divisor(b, a % b)', " \
    \   if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    return greatest_common_divisor(b\
    \ % a, b: a)", "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n  \
    \      return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a % b, b: b)\n    } else {\n        return greatest_common_divisor(a: a, b:\
    \ b % a)\n    }", "    if b == 0 {\n        return a\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a > b {\n       \
    \ return greatest_common_divisor(a: a % b, b: b)\n    } else {\n        return\
    \ greatest_common_divisor(a: a, b: b % a)\n    }", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a == b {\n      \
    \  return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a - b, b: b)\n    }\n    return greatest_common_divisor(a: a, b: b - a)", " \
    \   if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0\
    \ {\n        return a\n    }\n    if a == b {\n        return a\n    }\n    if\
    \ a > b {\n        return greatest_common_divisor(a: a - b, b: b)\n    }\n   \
    \ return greatest_common_divisor(a: a, b: b - a)", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a > b {\n       \
    \ return greatest_common_divisor(a: a % b, b: b)\n    } else {\n        return\
    \ greatest_common_divisor(a: a, b: b % a)\n    }", "    if b == 0 {\n        return\
    \ a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }",
  "    if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0\
    \ {\n        return a\n    }\n    if a == b {\n        return a\n    }\n    if\
    \ a > b {\n        return greatest_common_divisor(a: a - b, b: b)\n    }\n   \
    \ return greatest_common_divisor(a: a, b: b - a)", "    if b == 0 {\n        return\
    \ a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }",
  "    var a = a\n    var b = b\n    while b != 0 {\n        a %= b\n        swap(&a,\
    \ &b)\n    }\n    return a", "    var a = a\n    var b = b\n    while a != 0 &&\
    \ b != 0 {\n        if a > b {\n            a %= b\n        } else {\n       \
    \     b %= a\n        }\n    }\n    return a + b", "    if b == 0 {\n        return\
    \ a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }",
  '    return b == 0 ? a : greatest_common_divisor(b, a % b)', "    if b == 0 {\n\
    \        return a\n    } else {\n        return greatest_common_divisor(b, b:\
    \ a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n\
    \        return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a % b, b: b)\n    } else {\n        return greatest_common_divisor(a: a, b:\
    \ b % a)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n\
    \        return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a % b, b: b)\n    } else {\n        return greatest_common_divisor(a: a, b:\
    \ b % a)\n    }", "    if b == 0 {\n        return a\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a > b {\n       \
    \ return greatest_common_divisor(a: a % b, b: b)\n    } else {\n        return\
    \ greatest_common_divisor(a: a, b: b % a)\n    }", "    if b == 0 {\n        return\
    \ a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }",
  "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n        return a\n \
    \   }\n    if a == b {\n        return a\n    }\n    if a > b {\n        return\
    \ greatest_common_divisor(a: a - b, b: b)\n    }\n    return greatest_common_divisor(a:\
    \ a, b: b - a)", "    if b == 0 {\n        return a\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a == b {\n      \
    \  return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a - b, b: b)\n    }\n    return greatest_common_divisor(a: a, b: b - a)", " \
    \   if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", '    return b == 0 ? a : greatest_common_divisor(b, a % b)',
  "    if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if b == 0 {\n        return a\n    } else {\n      \
    \  return greatest_common_divisor(b, b: a % b)\n    }", "    if b == 0 {\n   \
    \     return a\n    } else {\n        return greatest_common_divisor(b, b: a %\
    \ b)\n    }", "    if b == 0 {\n        return a\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if b == 0 {\n        return\
    \ a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }",
  "    if a == 0 {\n        return b\n    }\n    return greatest_common_divisor(b\
    \ % a, b: a)", "    var a = a\n    var b = b\n    while b != 0 {\n        let\
    \ t = b\n        b = a % b\n        a = t\n    }\n    return a", "    if a ==\
    \ 0 {\n        return b\n    }\n    if b == 0 {\n        return a\n    }\n   \
    \ if a > b {\n        return greatest_common_divisor(a: a % b, b: b)\n    } else\
    \ {\n        return greatest_common_divisor(a: a, b: b % a)\n    }", "    if b\
    \ == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    var a = a\n    var b = b\n    while b != 0 {\n     \
    \   let t = b\n        b = a % b\n        a = t\n    }\n    return a", "    if\
    \ b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", '    return b == 0 ? a : greatest_common_divisor(b, a % b)',
  "    if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if b == 0 {\n        return a\n    } else {\n      \
    \  return greatest_common_divisor(b, b: a % b)\n    }", "    if b == 0 {\n   \
    \     return a\n    } else {\n        return greatest_common_divisor(b, b: a %\
    \ b)\n    }", "    if b == 0 {\n        return a\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a == b {\n      \
    \  return a\n    }\n    if a == 1 || b == 1 {\n        return 1\n    }\n    if\
    \ a % 2 == 0 && b % 2 == 0 {\n        return 2 * greatest_common_divisor(a / 2,\
    \ b: b / 2)\n    }\n    if a % 2 == 0 && b % 2 != 0 {\n        return greatest_common_divisor(a\
    \ / 2, b: b)\n    }\n    if a % 2 != 0 && b % 2 == 0 {\n        return greatest_common_divisor(a,\
    \ b: b / 2)\n    }\n    if a > b {\n        return greatest_common_divisor((a\
    \ - b) / 2, b: b)\n    }\n    return greatest_common_divisor(a, b: (b - a) / 2)",
  "    var a = a\n    var b = b\n    while a != 0 && b != 0 {\n        if a > b {\n\
    \            a %= b\n        } else {\n            b %= a\n        }\n    }\n\
    \    return a + b", "    if a % b == 0 {\n        return b\n    } else {\n   \
    \     return greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n\
    \        return b\n    }\n    if b == 0 {\n        return a\n    }\n    if a >\
    \ b {\n        return greatest_common_divisor(a: a % b, b: b)\n    } else {\n\
    \        return greatest_common_divisor(a: a, b: b % a)\n    }", "    if a ==\
    \ 0 {\n        return b\n    }\n    if b == 0 {\n        return a\n    }\n   \
    \ if a == b {\n        return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a - b, b: b)\n    }\n    return greatest_common_divisor(a: a, b: b - a)", " \
    \   var a = a\n    var b = b\n    while a != 0 && b != 0 {\n        if a > b {\n\
    \            a %= b\n        } else {\n            b %= a\n        }\n    }\n\
    \    return a + b", "    if b == 0 {\n        return a\n    } else {\n       \
    \ return greatest_common_divisor(b, b: a % b)\n    }", "    if b == 0 {\n    \
    \    return a\n    } else {\n        return greatest_common_divisor(b, b: a %\
    \ b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n   \
    \     return a\n    }\n    if a == b {\n        return a\n    }\n    if a > b\
    \ {\n        return greatest_common_divisor(a: a - b, b: b)\n    }\n    return\
    \ greatest_common_divisor(a: a, b: b - a)", "    if b == 0 {\n        return a\n\
    \    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }", " \
    \   if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0\
    \ {\n        return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a % b, b: b)\n    } else {\n        return greatest_common_divisor(a: a, b:\
    \ b % a)\n    }", '    return b == 0 ? a : greatest_common_divisor(b, a % b)',
  "    if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if b == 0 {\n        return a\n    } else {\n      \
    \  return greatest_common_divisor(b, b: a % b)\n    }", "    if b == 0 {\n   \
    \     return a\n    } else {\n        return greatest_common_divisor(b, b: a %\
    \ b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n   \
    \     return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a % b, b: b)\n    } else {\n        return greatest_common_divisor(a: a, b:\
    \ b % a)\n    }", "    if b == 0 {\n        return a\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if b == 0 {\n        return\
    \ a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }",
  "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n        return a\n \
    \   }\n    if a > b {\n        return greatest_common_divisor(a: a % b, b: b)\n\
    \    } else {\n        return greatest_common_divisor(a: a, b: b % a)\n    }",
  "    if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0\
    \ {\n        return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a % b, b: b)\n    } else {\n        return greatest_common_divisor(a: a, b:\
    \ b % a)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n\
    \        return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a % b, b: b)\n    } else {\n        return greatest_common_divisor(a: a, b:\
    \ b % a)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n\
    \        return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a % b, b: b)\n    } else {\n        return greatest_common_divisor(a: a, b:\
    \ b % a)\n    }", "    var a = a\n    var b = b\n    while b != 0 {\n        let\
    \ tmp = a % b\n        a = b\n        b = tmp\n    }\n    return a", "    if a\
    \ % b == 0 {\n        return b\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0\
    \ {\n        return a\n    }\n    if a == b {\n        return a\n    }\n    if\
    \ a > b {\n        return greatest_common_divisor(a: a - b, b: b)\n    }\n   \
    \ return greatest_common_divisor(a: a, b: b - a)", "    if b == 0 {\n        return\
    \ a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }",
  "    if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a % b == 0 {\n        return b\n    } else {\n  \
    \      return greatest_common_divisor(b, b: a % b)\n    }", "    if b == 0 {\n\
    \        return a\n    } else {\n        return greatest_common_divisor(b, b:\
    \ a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n\
    \        return a\n    }\n    if a == b {\n        return a\n    }\n    if a >\
    \ b {\n        return greatest_common_divisor(a: a - b, b: b)\n    }\n    return\
    \ greatest_common_divisor(a: a, b: b - a)", "    if b == 0 {\n        return a\n\
    \    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }", " \
    \   if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", '    return b == 0 ? a : greatest_common_divisor(b, a % b)',
  "    if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0\
    \ {\n        return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a % b, b: b)\n    } else {\n        return greatest_common_divisor(a: a, b:\
    \ b % a)\n    }", "    if b == 0 {\n        return a\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a == b {\n      \
    \  return a\n    }\n    if a == 1 || b == 1 {\n        return 1\n    }\n    if\
    \ a % 2 == 0 && b % 2 == 0 {\n        return 2 * greatest_common_divisor(a: a\
    \ / 2, b: b / 2)\n    }\n    if a % 2 == 0 && b % 2 != 0 {\n        return greatest_common_divisor(a:\
    \ a / 2, b: b)\n    }\n    if a % 2 != 0 && b % 2 == 0 {\n        return greatest_common_divisor(a:\
    \ a, b: b / 2)\n    }\n    if a % 2 != 0 && b % 2 != 0 && a < b {\n        return\
    \ greatest_common_divisor(a: a, b: (b - a) / 2)\n    }\n    if a % 2 != 0 && b\
    \ % 2 != 0 && a > b {\n        return greatest_common_divisor(a: (a - b) / 2,\
    \ b: b)\n    }\n    return 0", "    if b == 0 {\n        return a\n    } else\
    \ {\n        return greatest_common_divisor(b, b: a % b)\n    }", "    var a =\
    \ a\n    var b = b\n    while b != 0 {\n        let t = b\n        b = a % b\n\
    \        a = t\n    }\n    return a", "    if b == 0 {\n        return a\n   \
    \ } else {\n        return greatest_common_divisor(b, b: a % b)\n    }", "   \
    \ if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if b == 0 {\n        return a\n    } else {\n      \
    \  return greatest_common_divisor(b, b: a % b)\n    }", "    var a = a\n    var\
    \ b = b\n    while b != 0 {\n        let t = b\n        b = a % b\n        a =\
    \ t\n    }\n    return a", "    if b == 0 {\n        return a\n    } else {\n\
    \        return greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n\
    \        return b\n    }\n    if b == 0 {\n        return a\n    }\n    if a >\
    \ b {\n        return greatest_common_divisor(a: a % b, b: b)\n    } else {\n\
    \        return greatest_common_divisor(a: a, b: b % a)\n    }", "    var a =\
    \ a\n    var b = b\n    while b != 0 {\n        let r = a % b\n        a = b\n\
    \        b = r\n    }\n    return a", "    if b == 0 {\n        return a\n   \
    \ } else {\n        return greatest_common_divisor(b, b: a % b)\n    }", "   \
    \ if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0\
    \ {\n        return a\n    }\n    if a == b {\n        return a\n    }\n    if\
    \ a > b {\n        return greatest_common_divisor(a: a - b, b: b)\n    }\n   \
    \ return greatest_common_divisor(a: a, b: b - a)", "    if b == 0 {\n        return\
    \ a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }",
  "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n        return a\n \
    \   }\n    if a == b {\n        return a\n    }\n    if a > b {\n        return\
    \ greatest_common_divisor(a: a - b, b: b)\n    }\n    return greatest_common_divisor(a:\
    \ a, b: b - a)", "    if b == 0 {\n        return a\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a == b {\n      \
    \  return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a - b, b: b)\n    }\n    return greatest_common_divisor(a: a, b: b - a)", " \
    \   if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if b == 0 {\n        return a\n    } else {\n      \
    \  return greatest_common_divisor(b, b: a % b)\n    }", "    var a = a\n    var\
    \ b = b\n    while b != 0 {\n        let t = b\n        b = a % b\n        a =\
    \ t\n    }\n    return a", "    if b == 0 {\n        return a\n    } else {\n\
    \        return greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n\
    \        return b\n    }\n    if b == 0 {\n        return a\n    }\n    if a >\
    \ b {\n        return greatest_common_divisor(a: a % b, b: b)\n    } else {\n\
    \        return greatest_common_divisor(a: a, b: b % a)\n    }", "    if b ==\
    \ 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a < b {\n        return greatest_common_divisor(b,\
    \ b: a)\n    }\n    if b == 0 {\n        return a\n    }\n    return greatest_common_divisor(b,\
    \ b: a % b)", "    if b == 0 {\n        return a\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if b == 0 {\n        return\
    \ a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }",
  "    var a = a\n    var b = b\n    while b != 0 {\n        let t = b\n        b\
    \ = a % b\n        a = t\n    }\n    return a", "    var a = a\n    var b = b\n\
    \    while b != 0 {\n        let tmp = a % b\n        a = b\n        b = tmp\n\
    \    }\n    return a", "    if b == 0 {\n        return a\n    } else {\n    \
    \    return greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n \
    \       return b\n    }\n    if b == 0 {\n        return a\n    }\n    if a ==\
    \ b {\n        return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a - b, b: b)\n    }\n    return greatest_common_divisor(a: a, b: b - a)", " \
    \   if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0\
    \ {\n        return a\n    }\n    if a == b {\n        return a\n    }\n    if\
    \ a > b {\n        return greatest_common_divisor(a: a - b, b: b)\n    }\n   \
    \ return greatest_common_divisor(a: a, b: b - a)", '    return b == 0 ? a : greatest_common_divisor(b,
    a % b)', "    var a = a\n    var b = b\n    while a != 0 && b != 0 {\n       \
    \ if a > b {\n            a %= b\n        } else {\n            b %= a\n     \
    \   }\n    }\n    return a + b", "    if a == 0 {\n        return b\n    }\n \
    \   if b == 0 {\n        return a\n    }\n    if a == b {\n        return a\n\
    \    }\n    if a > b {\n        return greatest_common_divisor(a: a - b, b: b)\n\
    \    }\n    return greatest_common_divisor(a: a, b: b - a)", "    if a == 0 {\n\
    \        return b\n    }\n    return greatest_common_divisor(b % a, b: a)", " \
    \   if a == 0 {\n        return b\n    }\n    if b == 0 {\n        return a\n\
    \    }\n    if a > b {\n        return greatest_common_divisor(a: a % b, b: b)\n\
    \    } else {\n        return greatest_common_divisor(a: a, b: b % a)\n    }",
  "    if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if b == 0 {\n        return a\n    } else {\n      \
    \  return greatest_common_divisor(b, b: a % b)\n    }", "    if b == 0 {\n   \
    \     return a\n    } else {\n        return greatest_common_divisor(b, b: a %\
    \ b)\n    }", "    if a % b == 0 {\n        return b\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if b == 0 {\n        return\
    \ a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }",
  "    if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if b == 0 {\n        return a\n    } else {\n      \
    \  return greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n   \
    \     return b\n    }\n    return greatest_common_divisor(b % a, b: a)", "   \
    \ if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if b == 0 {\n        return a\n    } else {\n      \
    \  return greatest_common_divisor(b, b: a % b)\n    }", "    if b == 0 {\n   \
    \     return a\n    } else {\n        return greatest_common_divisor(b, b: a %\
    \ b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n   \
    \     return a\n    }\n    if a == b {\n        return a\n    }\n    if a > b\
    \ {\n        return greatest_common_divisor(a: a - b, b: b)\n    }\n    return\
    \ greatest_common_divisor(a: a, b: b - a)", "    if a == 0 {\n        return b\n\
    \    }\n    return greatest_common_divisor(b % a, b: a)", "    var a = a\n   \
    \ var b = b\n    while b != 0 {\n        let t = b\n        b = a % b\n      \
    \  a = t\n    }\n    return a", "    if b == 0 {\n        return a\n    } else\
    \ {\n        return greatest_common_divisor(b, b: a % b)\n    }", "    var a =\
    \ a\n    var b = b\n    while b != 0 {\n        let t = b\n        b = a % b\n\
    \        a = t\n    }\n    return a", "    if a % b == 0 {\n        return b\n\
    \    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }", " \
    \   if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    var a = a\n    var b = b\n    while a != 0 && b != 0\
    \ {\n        if a > b {\n            a %= b\n        } else {\n            b %=\
    \ a\n        }\n    }\n    return a + b", "    if a == 0 {\n        return b\n\
    \    }\n    if b == 0 {\n        return a\n    }\n    if a == b {\n        return\
    \ a\n    }\n    if a == 1 || b == 1 {\n        return 1\n    }\n    if a % 2 ==\
    \ 0 && b % 2 == 0 {\n        return 2 * greatest_common_divisor(a / 2, b: b /\
    \ 2)\n    }\n    if a % 2 == 0 && b % 2 != 0 {\n        return greatest_common_divisor(a\
    \ / 2, b: b)\n    }\n    if a % 2 != 0 && b % 2 == 0 {\n        return greatest_common_divisor(a,\
    \ b: b / 2)\n    }\n    if a % 2 != 0 && b % 2 != 0 && a < b {\n        return\
    \ greatest_common_divisor((b - a) / 2, b: a)\n    }\n    if a % 2 != 0 && b %\
    \ 2 != 0 && a > b {\n        return greatest_common_divisor((a - b) / 2, b: b)\n\
    \    }\n    return 0", "    var a = a\n    var b = b\n    while b != 0 {\n   \
    \     let t = b\n        b = a % b\n        a = t\n    }\n    return a", "   \
    \ var a = a\n    var b = b\n    while b != 0 {\n        let t = b\n        b =\
    \ a % b\n        a = t\n    }\n    return a", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a == b {\n      \
    \  return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a - b, b: b)\n    }\n    return greatest_common_divisor(a: a, b: b - a)", " \
    \   if a == 0 {\n        return b\n    }\n    if b == 0 {\n        return a\n\
    \    }\n    if a > b {\n        return greatest_common_divisor(a: a % b, b: b)\n\
    \    } else {\n        return greatest_common_divisor(a: a, b: b % a)\n    }",
  '    return b == 0 ? a : greatest_common_divisor(b, a % b)', "    var a = a\n  \
    \  var b = b\n    while b != 0 {\n        let c = a % b\n        a = b\n     \
    \   b = c\n    }\n    return a", "    if b == 0 {\n        return a\n    } else\
    \ {\n        return greatest_common_divisor(b, b: a % b)\n    }", '    return
    b == 0 ? a : greatest_common_divisor(b, a % b)', "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a >= b {\n      \
    \  return greatest_common_divisor(a: a % b, b: b)\n    } else {\n        return\
    \ greatest_common_divisor(a: a, b: b % a)\n    }", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a == b {\n      \
    \  return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a - b, b: b)\n    }\n    return greatest_common_divisor(a: a, b: b - a)", " \
    \   if a % b == 0 {\n        return b\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0\
    \ {\n        return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a % b, b: b)\n    } else {\n        return greatest_common_divisor(a: a, b:\
    \ b % a)\n    }", "    if b == 0 {\n        return a\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a > b {\n       \
    \ return greatest_common_divisor(a: a % b, b: b)\n    } else {\n        return\
    \ greatest_common_divisor(a: a, b: b % a)\n    }", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a == b {\n      \
    \  return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a - b, b: b)\n    }\n    return greatest_common_divisor(a: a, b: b - a)", " \
    \   var a = a\n    var b = b\n    while b != 0 {\n        let t = b\n        b\
    \ = a % b\n        a = t\n    }\n    return a", "    if b == 0 {\n        return\
    \ a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }",
  '    return b == 0 ? a : greatest_common_divisor(b, a % b)', '    return b == 0
    ? a : greatest_common_divisor(b, a % b)', "    if a == 0 {\n        return b\n\
    \    }\n    if b == 0 {\n        return a\n    }\n    if a == b {\n        return\
    \ a\n    }\n    if a == 1 || b == 1 {\n        return 1\n    }\n    if a % 2 ==\
    \ 0 && b % 2 == 0 {\n        return 2 * greatest_common_divisor(a / 2, b: b /\
    \ 2)\n    }\n    if a % 2 == 0 && b % 2 != 0 {\n        return greatest_common_divisor(a\
    \ / 2, b: b)\n    }\n    if a % 2 != 0 && b % 2 == 0 {\n        return greatest_common_divisor(a,\
    \ b: b / 2)\n    }\n    if a % 2 != 0 && b % 2 != 0 && a < b {\n        return\
    \ greatest_common_divisor((b - a) / 2, b: a)\n    }\n    if a % 2 != 0 && b %\
    \ 2 != 0 && a > b {\n        return greatest_common_divisor((a - b) / 2, b: b)\n\
    \    }\n    return 0", "    if b == 0 {\n        return a\n    } else {\n    \
    \    return greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n \
    \       return b\n    }\n    if b == 0 {\n        return a\n    }\n    if a >\
    \ b {\n        return greatest_common_divisor(a: a % b, b: b)\n    } else {\n\
    \        return greatest_common_divisor(a: a, b: b % a)\n    }", "    if a ==\
    \ 0 {\n        return b\n    }\n    if b == 0 {\n        return a\n    }\n   \
    \ if a == b {\n        return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a - b, b: b)\n    }\n    return greatest_common_divisor(a: a, b: b - a)", " \
    \   if a == 0 {\n        return b\n    }\n    if b == 0 {\n        return a\n\
    \    }\n    if a > b {\n        return greatest_common_divisor(a: a % b, b: b)\n\
    \    } else {\n        return greatest_common_divisor(a: a, b: b % a)\n    }",
  "    if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    return greatest_common_divisor(b\
    \ % a, b: a)", "    if b == 0 {\n        return a\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if b == 0 {\n        return\
    \ a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }",
  "    if a == 0 {\n        return b\n    }\n    return greatest_common_divisor(b\
    \ % a, b: a)", "    if a == 0 {\n        return b\n    }\n    return greatest_common_divisor(b\
    \ % a, b: a)", "    if b == 0 {\n        return a\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if b == 0 {\n        return\
    \ a\n    } else {\n        return greatest_common_divisor(b, b: a % b)\n    }",
  '    return b == 0 ? a : greatest_common_divisor(b, a % b)', "    if b == 0 {\n\
    \        return a\n    } else {\n        return greatest_common_divisor(b, b:\
    \ a % b)\n    }", "    if b == 0 {\n        return a\n    } else {\n        return\
    \ greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a > b {\n       \
    \ return greatest_common_divisor(a: a % b, b: b)\n    } else {\n        return\
    \ greatest_common_divisor(a: a, b: b % a)\n    }", "    if a == 0 {\n        return\
    \ b\n    }\n    if b == 0 {\n        return a\n    }\n    if a == b {\n      \
    \  return a\n    }\n    if a > b {\n        return greatest_common_divisor(a:\
    \ a - b, b: b)\n    }\n    return greatest_common_divisor(a: a, b: b - a)", " \
    \   if a == 0 {\n        return b\n    }\n    if b == 0 {\n        return a\n\
    \    }\n    if a > b {\n        return greatest_common_divisor(a: a % b, b: b)\n\
    \    } else {\n        return greatest_common_divisor(a: a, b: b % a)\n    }",
  "    if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if b == 0 {\n        return a\n    } else {\n      \
    \  return greatest_common_divisor(b, b: a % b)\n    }", "    if a == 0 {\n   \
    \     return b\n    }\n    if b == 0 {\n        return a\n    }\n    if a > b\
    \ {\n        return greatest_common_divisor(a: a % b, b: b)\n    } else {\n  \
    \      return greatest_common_divisor(a: a, b: b % a)\n    }", "    if b == 0\
    \ {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    if a == 0 {\n        return b\n    }\n    if b == 0\
    \ {\n        return a\n    }\n    if a == b {\n        return a\n    }\n    if\
    \ a > b {\n        return greatest_common_divisor(a: a - b, b: b)\n    }\n   \
    \ return greatest_common_divisor(a: a, b: b - a)", '    return b == 0 ? a : greatest_common_divisor(b,
    a % b)', "    if a == 0 {\n        return b\n    }\n    if b == 0 {\n        return\
    \ a\n    }\n    if a == b {\n        return a\n    }\n    if a == 1 || b == 1\
    \ {\n        return 1\n    }\n    if a % 2 == 0 && b % 2 == 0 {\n        return\
    \ 2 * greatest_common_divisor(a / 2, b: b / 2)\n    }\n    if a % 2 == 0 && b\
    \ % 2 != 0 {\n        return greatest_common_divisor(a / 2, b: b)\n    }\n   \
    \ if a % 2 != 0 && b % 2 == 0 {\n        return greatest_common_divisor(a, b:\
    \ b / 2)\n    }\n    if a % 2 != 0 && b % 2 != 0 && a < b {\n        return greatest_common_divisor((b\
    \ - a) / 2, b: a)\n    }\n    if a % 2 != 0 && b % 2 != 0 && a > b {\n       \
    \ return greatest_common_divisor((a - b) / 2, b: b)\n    }\n    return 0", " \
    \   if b == 0 {\n        return a\n    } else {\n        return greatest_common_divisor(b,\
    \ b: a % b)\n    }", "    var a = a\n    var b = b\n    while b != 0 {\n     \
    \   let t = b\n        b = a % b\n        a = t\n    }\n    return a", "    if\
    \ a == 0 {\n        return b\n    }\n    if b == 0 {\n        return a\n    }\n\
    \    if a > b {\n        return greatest_common_divisor(a: a % b, b: b)\n    }\
    \ else {\n        return greatest_common_divisor(a: a, b: b % a)\n    }"]
stop_tokens:
- "\n}"

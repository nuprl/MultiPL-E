language: swift
name: HumanEval_155_even_odd_count
results:
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    if num\
    \ < 0 {\n        num *= -1\n    }\n    while num > 0 {\n        let digit = num\
    \ % 10\n        if digit % 2 == 0 {\n            evenCount += 1\n        } else\
    \ {\n            oddCount += 1\n        }\n        num /= 10\n    }\n    return\
    \ (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpm7b6ymgz/tmpm7b6ymgz.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73b67cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73b64c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73b64c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73b64c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm7b6ymgz                        0x0000555e0f8548ed <unavailable> + 6381

    5    libc.so.6                          0x00002b73b69b7460 __libc_start_main +
    245

    6    tmpm7b6ymgz                        0x0000555e0f853f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for i in String(num).characters\
    \ {\n        if Int(String(i))! % 2 == 0 {\n            evenCount += 1\n     \
    \   } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpqhk0fnng.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n    \
    \        odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvp0ggyu6/tmpvp0ggyu6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba1a7d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba1a4ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba1a4ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba1a4cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp0ggyu6                        0x000056290b5638ed <unavailable> + 6381

    5    libc.so.6                          0x00002aba1a9c3460 __libc_start_main +
    245

    6    tmpvp0ggyu6                        0x000056290b562f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for char in String(num).characters\
    \ {\n        if Int(String(char))! % 2 == 0 {\n            evenCount += 1\n  \
    \      } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpegjocw_u.swift:9:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in String(num).characters {\n            \
    \                ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n    \
    \        odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvp0ggyu6/tmpvp0ggyu6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba1a7d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba1a4ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba1a4ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba1a4cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp0ggyu6                        0x000056290b5638ed <unavailable> + 6381

    5    libc.so.6                          0x00002aba1a9c3460 __libc_start_main +
    245

    6    tmpvp0ggyu6                        0x000056290b562f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n    \
    \        evenCount += 1\n        } else {\n            oddCount += 1\n       \
    \ }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpzx_htnhu/tmpzx_htnhu.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7ff213c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7fef0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7fef0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7fef097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzx_htnhu                        0x000055bfb575a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae7ff3ff460 __libc_start_main +
    245

    6    tmpzx_htnhu                        0x000055bfb5759f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n    \
    \        evenCount += 1\n        } else {\n            oddCount += 1\n       \
    \ }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpzx_htnhu/tmpzx_htnhu.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7ff213c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7fef0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7fef0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7fef097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzx_htnhu                        0x000055bfb575a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae7ff3ff460 __libc_start_main +
    245

    6    tmpzx_htnhu                        0x000055bfb5759f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n    \
    \        evenCount += 1\n        } else {\n            oddCount += 1\n       \
    \ }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpzx_htnhu/tmpzx_htnhu.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7ff213c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7fef0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7fef0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7fef097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzx_htnhu                        0x000055bfb575a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae7ff3ff460 __libc_start_main +
    245

    6    tmpzx_htnhu                        0x000055bfb5759f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var n = num\n    while n != 0 {\n\
    \        if n % 2 == 0 {\n            even += 1\n        } else {\n          \
    \  odd += 1\n        }\n        n /= 10\n    }\n    return (even, odd)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpi5z8qx3d/tmpi5z8qx3d.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b398aa0fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b398a706b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b398a706988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b398a7057b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi5z8qx3d                        0x000055c2d058f8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b398abfb460 __libc_start_main +
    245

    6    tmpi5z8qx3d                        0x000055c2d058ef69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for c in String(num).characters {\n\
    \        if Int(String(c))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpbwjvcdb1.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n    \
    \        odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvp0ggyu6/tmpvp0ggyu6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba1a7d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba1a4ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba1a4ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba1a4cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp0ggyu6                        0x000056290b5638ed <unavailable> + 6381

    5    libc.so.6                          0x00002aba1a9c3460 __libc_start_main +
    245

    6    tmpvp0ggyu6                        0x000056290b562f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    let nums = String(num).characters.map\
    \ { Int(String($0))! }\n    for n in nums {\n        if n % 2 == 0 {\n       \
    \     even += 1\n        } else {\n            odd += 1\n        }\n    }\n  \
    \  return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpnlz4aah5.swift:9:28: error: 'characters' is unavailable: Please\
    \ use String directly\n    let nums = String(num).characters.map { Int(String($0))!\
    \ }\n                           ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    return (0, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvrn27lw5/tmpvrn27lw5.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a9d99ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a9d695b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a9d695988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a9d6947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvrn27lw5                        0x00005566a83f2264 <unavailable> + 4708

    5    libc.so.6                          0x00002b7a9db8a460 __libc_start_main +
    245

    6    tmpvrn27lw5                        0x00005566a83f1ec9 <unavailable> + 3785

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    if num\
    \ < 0 {\n        num *= -1\n    }\n    while num > 0 {\n        let digit = num\
    \ % 10\n        if digit % 2 == 0 {\n            evenCount += 1\n        } else\
    \ {\n            oddCount += 1\n        }\n        num /= 10\n    }\n    return\
    \ (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpm7b6ymgz/tmpm7b6ymgz.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73b67cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73b64c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73b64c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73b64c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm7b6ymgz                        0x0000555e0f8548ed <unavailable> + 6381

    5    libc.so.6                          0x00002b73b69b7460 __libc_start_main +
    245

    6    tmpm7b6ymgz                        0x0000555e0f853f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n    \
    \        odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvp0ggyu6/tmpvp0ggyu6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba1a7d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba1a4ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba1a4ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba1a4cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp0ggyu6                        0x000056290b5638ed <unavailable> + 6381

    5    libc.so.6                          0x00002aba1a9c3460 __libc_start_main +
    245

    6    tmpvp0ggyu6                        0x000056290b562f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n    \
    \        evenCount += 1\n        } else {\n            oddCount += 1\n       \
    \ }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpzx_htnhu/tmpzx_htnhu.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7ff213c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7fef0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7fef0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7fef097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzx_htnhu                        0x000055bfb575a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae7ff3ff460 __libc_start_main +
    245

    6    tmpzx_htnhu                        0x000055bfb5759f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n    \
    \        odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvp0ggyu6/tmpvp0ggyu6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba1a7d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba1a4ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba1a4ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba1a4cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp0ggyu6                        0x000056290b5638ed <unavailable> + 6381

    5    libc.so.6                          0x00002aba1a9c3460 __libc_start_main +
    245

    6    tmpvp0ggyu6                        0x000056290b562f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        let digit = num % 10\n        if digit % 2 == 0 {\n            even\
    \ += 1\n        } else {\n            odd += 1\n        }\n        num /= 10\n\
    \    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpx9nwwj2n/tmpx9nwwj2n.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab081ea9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab081ba0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab081ba0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab081b9f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx9nwwj2n                        0x0000557599a7c8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ab082095460 __libc_start_main +
    245

    6    tmpx9nwwj2n                        0x0000557599a7bf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmppipvhmyn.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for i in String(num).characters\
    \ {\n        if Int(String(i))! % 2 == 0 {\n            evenCount += 1\n     \
    \   } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpqhk0fnng.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmppipvhmyn.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n    \
    \        evenCount += 1\n        } else {\n            oddCount += 1\n       \
    \ }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpzx_htnhu/tmpzx_htnhu.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7ff213c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7fef0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7fef0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7fef097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzx_htnhu                        0x000055bfb575a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae7ff3ff460 __libc_start_main +
    245

    6    tmpzx_htnhu                        0x000055bfb5759f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmppipvhmyn.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for char in String(num).characters\
    \ {\n        if Int(String(char))! % 2 == 0 {\n            evenCount += 1\n  \
    \      } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpegjocw_u.swift:9:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in String(num).characters {\n            \
    \                ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for char in String(num).characters\
    \ {\n        if Int(String(char))! % 2 == 0 {\n            evenCount += 1\n  \
    \      } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpegjocw_u.swift:9:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in String(num).characters {\n            \
    \                ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n    \
    \        odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvp0ggyu6/tmpvp0ggyu6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba1a7d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba1a4ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba1a4ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba1a4cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp0ggyu6                        0x000056290b5638ed <unavailable> + 6381

    5    libc.so.6                          0x00002aba1a9c3460 __libc_start_main +
    245

    6    tmpvp0ggyu6                        0x000056290b562f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for char in String(num).characters\
    \ {\n        if Int(String(char))! % 2 == 0 {\n            evenCount += 1\n  \
    \      } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpegjocw_u.swift:9:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in String(num).characters {\n            \
    \                ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    return (0, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvrn27lw5/tmpvrn27lw5.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a9d99ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a9d695b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a9d695988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a9d6947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvrn27lw5                        0x00005566a83f2264 <unavailable> + 4708

    5    libc.so.6                          0x00002b7a9db8a460 __libc_start_main +
    245

    6    tmpvrn27lw5                        0x00005566a83f1ec9 <unavailable> + 3785

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        let digit = num % 10\n        if digit % 2 == 0 {\n            even\
    \ += 1\n        } else {\n            odd += 1\n        }\n        num /= 10\n\
    \    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpx9nwwj2n/tmpx9nwwj2n.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab081ea9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab081ba0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab081ba0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab081b9f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx9nwwj2n                        0x0000557599a7c8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ab082095460 __libc_start_main +
    245

    6    tmpx9nwwj2n                        0x0000557599a7bf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmppipvhmyn.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for c in String(num).characters {\n\
    \        if Int(String(c))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpbwjvcdb1.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    if num\
    \ < 0 {\n        num *= -1\n    }\n    while num > 0 {\n        let digit = num\
    \ % 10\n        if digit % 2 == 0 {\n            evenCount += 1\n        } else\
    \ {\n            oddCount += 1\n        }\n        num /= 10\n    }\n    return\
    \ (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpm7b6ymgz/tmpm7b6ymgz.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73b67cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73b64c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73b64c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73b64c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm7b6ymgz                        0x0000555e0f8548ed <unavailable> + 6381

    5    libc.so.6                          0x00002b73b69b7460 __libc_start_main +
    245

    6    tmpm7b6ymgz                        0x0000555e0f853f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for char in String(num).characters\
    \ {\n        if Int(String(char))! % 2 == 0 {\n            even += 1\n       \
    \ } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmp9waf0u23.swift:9:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in String(num).characters {\n            \
    \                ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmppipvhmyn.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for char in String(num).characters\
    \ {\n        if Int(String(char))! % 2 == 0 {\n            even += 1\n       \
    \ } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmp9waf0u23.swift:9:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in String(num).characters {\n            \
    \                ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        let digit = num % 10\n        if digit % 2 == 0 {\n            even\
    \ += 1\n        } else {\n            odd += 1\n        }\n        num /= 10\n\
    \    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpx9nwwj2n/tmpx9nwwj2n.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab081ea9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab081ba0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab081ba0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab081b9f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx9nwwj2n                        0x0000557599a7c8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ab082095460 __libc_start_main +
    245

    6    tmpx9nwwj2n                        0x0000557599a7bf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n    \
    \        odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvp0ggyu6/tmpvp0ggyu6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba1a7d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba1a4ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba1a4ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba1a4cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp0ggyu6                        0x000056290b5638ed <unavailable> + 6381

    5    libc.so.6                          0x00002aba1a9c3460 __libc_start_main +
    245

    6    tmpvp0ggyu6                        0x000056290b562f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmppipvhmyn.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n    \
    \        evenCount += 1\n        } else {\n            oddCount += 1\n       \
    \ }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpzx_htnhu/tmpzx_htnhu.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7ff213c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7fef0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7fef0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7fef097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzx_htnhu                        0x000055bfb575a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae7ff3ff460 __libc_start_main +
    245

    6    tmpzx_htnhu                        0x000055bfb5759f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n    \
    \        odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvp0ggyu6/tmpvp0ggyu6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba1a7d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba1a4ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba1a4ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba1a4cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp0ggyu6                        0x000056290b5638ed <unavailable> + 6381

    5    libc.so.6                          0x00002aba1a9c3460 __libc_start_main +
    245

    6    tmpvp0ggyu6                        0x000056290b562f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    if num\
    \ < 0 {\n        num *= -1\n    }\n    while num > 0 {\n        let digit = num\
    \ % 10\n        if digit % 2 == 0 {\n            evenCount += 1\n        } else\
    \ {\n            oddCount += 1\n        }\n        num /= 10\n    }\n    return\
    \ (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpm7b6ymgz/tmpm7b6ymgz.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73b67cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73b64c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73b64c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73b64c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm7b6ymgz                        0x0000555e0f8548ed <unavailable> + 6381

    5    libc.so.6                          0x00002b73b69b7460 __libc_start_main +
    245

    6    tmpm7b6ymgz                        0x0000555e0f853f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        let digit = num % 10\n        if digit % 2 == 0 {\n            even\
    \ += 1\n        } else {\n            odd += 1\n        }\n        num /= 10\n\
    \    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpx9nwwj2n/tmpx9nwwj2n.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab081ea9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab081ba0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab081ba0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab081b9f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx9nwwj2n                        0x0000557599a7c8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ab082095460 __libc_start_main +
    245

    6    tmpx9nwwj2n                        0x0000557599a7bf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for n in String(num).characters {\n\
    \        if Int(String(n))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmp22uorlev.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for n in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for n in String(num).characters {\n\
    \        if Int(String(n))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmp22uorlev.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for n in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n    \
    \        evenCount += 1\n        } else {\n            oddCount += 1\n       \
    \ }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpzx_htnhu/tmpzx_htnhu.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7ff213c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7fef0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7fef0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7fef097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzx_htnhu                        0x000055bfb575a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae7ff3ff460 __libc_start_main +
    245

    6    tmpzx_htnhu                        0x000055bfb5759f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for i in String(num).characters\
    \ {\n        if Int(String(i))! % 2 == 0 {\n            evenCount += 1\n     \
    \   } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpqhk0fnng.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmppipvhmyn.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 0
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    let num = abs(num)\n    for digit\
    \ in String(num) {\n        if Int(String(digit))! % 2 == 0 {\n            even\
    \ += 1\n        } else {\n            odd += 1\n        }\n    }\n    return (even,\
    \ odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(even_odd_count(num: 7)\
    \ == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    if num\
    \ < 0 {\n        num *= -1\n    }\n    while num > 0 {\n        let digit = num\
    \ % 10\n        if digit % 2 == 0 {\n            evenCount += 1\n        } else\
    \ {\n            oddCount += 1\n        }\n        num /= 10\n    }\n    return\
    \ (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpm7b6ymgz/tmpm7b6ymgz.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73b67cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73b64c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73b64c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73b64c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm7b6ymgz                        0x0000555e0f8548ed <unavailable> + 6381

    5    libc.so.6                          0x00002b73b69b7460 __libc_start_main +
    245

    6    tmpm7b6ymgz                        0x0000555e0f853f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    let even = num.digits.filter { $0 % 2 == 0 }.count\n    let odd = num.digits.filter\
    \ { $0 % 2 != 0 }.count\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78)\
    \ == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpgx92xm4c.swift:7:20: error: value of type 'Int' has no member 'digits'\n\
    \    let even = num.digits.filter { $0 % 2 == 0 }.count\n               ~~~ ^~~~~~\n\
    /tmp/tmpgx92xm4c.swift:8:19: error: value of type 'Int' has no member 'digits'\n\
    \    let odd = num.digits.filter { $0 % 2 != 0 }.count\n              ~~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmppipvhmyn.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for n in String(num).characters {\n\
    \        if Int(String(n))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmp22uorlev.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for n in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for char in String(num).characters\
    \ {\n        if Int(String(char))! % 2 == 0 {\n            evenCount += 1\n  \
    \      } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpegjocw_u.swift:9:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in String(num).characters {\n            \
    \                ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var n = num\n    while n != 0 {\n\
    \        let digit = n % 10\n        if digit % 2 == 0 {\n            even +=\
    \ 1\n        } else {\n            odd += 1\n        }\n        n /= 10\n    }\n\
    \    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp4ycq_rzn/tmp4ycq_rzn.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b83e90bcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b83e8db3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b83e8db3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b83e8db27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4ycq_rzn                        0x00005605d9e378ed <unavailable> + 6381

    5    libc.so.6                          0x00002b83e92a8460 __libc_start_main +
    245

    6    tmp4ycq_rzn                        0x00005605d9e36f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for i in String(num).characters\
    \ {\n        if Int(String(i))! % 2 == 0 {\n            evenCount += 1\n     \
    \   } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpqhk0fnng.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n    \
    \        odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvp0ggyu6/tmpvp0ggyu6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba1a7d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba1a4ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba1a4ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba1a4cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp0ggyu6                        0x000056290b5638ed <unavailable> + 6381

    5    libc.so.6                          0x00002aba1a9c3460 __libc_start_main +
    245

    6    tmpvp0ggyu6                        0x000056290b562f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n    \
    \        odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvp0ggyu6/tmpvp0ggyu6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba1a7d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba1a4ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba1a4ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba1a4cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp0ggyu6                        0x000056290b5638ed <unavailable> + 6381

    5    libc.so.6                          0x00002aba1a9c3460 __libc_start_main +
    245

    6    tmpvp0ggyu6                        0x000056290b562f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n    \
    \        odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvp0ggyu6/tmpvp0ggyu6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba1a7d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba1a4ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba1a4ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba1a4cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp0ggyu6                        0x000056290b5638ed <unavailable> + 6381

    5    libc.so.6                          0x00002aba1a9c3460 __libc_start_main +
    245

    6    tmpvp0ggyu6                        0x000056290b562f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n    \
    \        evenCount += 1\n        } else {\n            oddCount += 1\n       \
    \ }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpzx_htnhu/tmpzx_htnhu.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7ff213c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7fef0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7fef0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7fef097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzx_htnhu                        0x000055bfb575a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae7ff3ff460 __libc_start_main +
    245

    6    tmpzx_htnhu                        0x000055bfb5759f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for char in String(num).characters\
    \ {\n        if Int(String(char))! % 2 == 0 {\n            even += 1\n       \
    \ } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmp9waf0u23.swift:9:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in String(num).characters {\n            \
    \                ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for c in String(num).characters {\n\
    \        if c % 2 == 0 {\n            even += 1\n        } else {\n          \
    \  odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpa0f8ixpg.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n\
    /tmp/tmpa0f8ixpg.swift:10:12: error: cannot convert value of type 'Character'\
    \ to expected argument type 'Int'\n        if c % 2 == 0 {\n           ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmppipvhmyn.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n    \
    \        evenCount += 1\n        } else {\n            oddCount += 1\n       \
    \ }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpzx_htnhu/tmpzx_htnhu.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7ff213c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7fef0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7fef0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7fef097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzx_htnhu                        0x000055bfb575a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae7ff3ff460 __libc_start_main +
    245

    6    tmpzx_htnhu                        0x000055bfb5759f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for char in String(num).characters\
    \ {\n        if Int(String(char))! % 2 == 0 {\n            even += 1\n       \
    \ } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmp9waf0u23.swift:9:29: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in String(num).characters {\n            \
    \                ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmppipvhmyn.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    let numString = String(num)\n\
    \    for char in numString {\n        if Int(String(char))! % 2 == 0 {\n     \
    \       evenCount += 1\n        } else {\n            oddCount += 1\n        }\n\
    \    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1,\
    \ 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpxk4elgnm/tmpxk4elgnm.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b18e4a40c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18e4737561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b18e4737286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b18e473713c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b18e4736bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpxk4elgnm                        0x0000560c98925d84 <unavailable> + 7556

    6    tmpxk4elgnm                        0x0000560c98925584 <unavailable> + 5508

    7    libc.so.6                          0x00002b18e4c2c460 __libc_start_main +
    245

    8    tmpxk4elgnm                        0x0000560c989251d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmppipvhmyn.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n    \
    \        evenCount += 1\n        } else {\n            oddCount += 1\n       \
    \ }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpzx_htnhu/tmpzx_htnhu.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7ff213c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7fef0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7fef0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7fef097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzx_htnhu                        0x000055bfb575a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae7ff3ff460 __libc_start_main +
    245

    6    tmpzx_htnhu                        0x000055bfb5759f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            even += 1\n      \
    \  } else {\n            odd += 1\n        }\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmppipvhmyn.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n    \
    \        odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvp0ggyu6/tmpvp0ggyu6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba1a7d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba1a4ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba1a4ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba1a4cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp0ggyu6                        0x000056290b5638ed <unavailable> + 6381

    5    libc.so.6                          0x00002aba1a9c3460 __libc_start_main +
    245

    6    tmpvp0ggyu6                        0x000056290b562f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        let digit = num % 10\n        if digit % 2 == 0 {\n    \
    \        evenCount += 1\n        } else {\n            oddCount += 1\n       \
    \ }\n        num /= 10\n    }\n    return (evenCount, oddCount)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpzx_htnhu/tmpzx_htnhu.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7ff213c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7fef0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7fef0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7fef097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzx_htnhu                        0x000055bfb575a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ae7ff3ff460 __libc_start_main +
    245

    6    tmpzx_htnhu                        0x000055bfb5759f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for n in String(num).characters {\n\
    \        if Int(String(n))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmp22uorlev.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for n in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    if num\
    \ < 0 {\n        num *= -1\n    }\n    while num > 0 {\n        let digit = num\
    \ % 10\n        if digit % 2 == 0 {\n            evenCount += 1\n        } else\
    \ {\n            oddCount += 1\n        }\n        num /= 10\n    }\n    return\
    \ (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpm7b6ymgz/tmpm7b6ymgz.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73b67cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73b64c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73b64c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73b64c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm7b6ymgz                        0x0000555e0f8548ed <unavailable> + 6381

    5    libc.so.6                          0x00002b73b69b7460 __libc_start_main +
    245

    6    tmpm7b6ymgz                        0x0000555e0f853f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        if num % 2 == 0 {\n            even += 1\n        } else {\n    \
    \        odd += 1\n        }\n        num /= 10\n    }\n    return (even, odd)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvp0ggyu6/tmpvp0ggyu6.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba1a7d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba1a4ceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba1a4ce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba1a4cd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvp0ggyu6                        0x000056290b5638ed <unavailable> + 6381

    5    libc.so.6                          0x00002aba1a9c3460 __libc_start_main +
    245

    6    tmpvp0ggyu6                        0x000056290b562f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    for digit in String(num).characters\
    \ {\n        if Int(String(digit))! % 2 == 0 {\n            evenCount += 1\n \
    \       } else {\n            oddCount += 1\n        }\n    }\n    return (evenCount,\
    \ oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpcbbh6ypm.swift:9:30: error: 'characters' is unavailable: Please\
    \ use String directly\n    for digit in String(num).characters {\n           \
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    if num\
    \ < 0 {\n        num *= -1\n    }\n    while num > 0 {\n        let digit = num\
    \ % 10\n        if digit % 2 == 0 {\n            evenCount += 1\n        } else\
    \ {\n            oddCount += 1\n        }\n        num /= 10\n    }\n    return\
    \ (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpm7b6ymgz/tmpm7b6ymgz.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73b67cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73b64c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73b64c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73b64c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm7b6ymgz                        0x0000555e0f8548ed <unavailable> + 6381

    5    libc.so.6                          0x00002b73b69b7460 __libc_start_main +
    245

    6    tmpm7b6ymgz                        0x0000555e0f853f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    var num = num\n    while num != 0\
    \ {\n        let digit = num % 10\n        if digit % 2 == 0 {\n            even\
    \ += 1\n        } else {\n            odd += 1\n        }\n        num /= 10\n\
    \    }\n    return (even, odd)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpx9nwwj2n/tmpx9nwwj2n.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab081ea9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab081ba0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab081ba0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab081b9f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx9nwwj2n                        0x0000557599a7c8ed <unavailable> + 6381

    5    libc.so.6                          0x00002ab082095460 __libc_start_main +
    245

    6    tmpx9nwwj2n                        0x0000557599a7bf69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var evenCount = 0\n    var oddCount = 0\n    var num = num\n    while\
    \ num != 0 {\n        if num % 2 == 0 {\n            evenCount += 1\n        }\
    \ else {\n            oddCount += 1\n        }\n        num /= 10\n    }\n   \
    \ return (evenCount, oddCount)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmp5fgjitxt/tmp5fgjitxt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3a2a2b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3a29fafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3a29faf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3a29fae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5fgjitxt                        0x000055d2bdf3a8ed <unavailable> + 6381

    5    libc.so.6                          0x00002b3a2a4a4460 __libc_start_main +
    245

    6    tmp5fgjitxt                        0x000055d2bdf39f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013527
- exit_code: 1
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    var even = 0\n    var odd = 0\n    for i in String(num).characters {\n\
    \        if Int(String(i))! % 2 == 0 {\n            even += 1\n        } else\
    \ {\n            odd += 1\n        }\n    }\n    return (even, odd)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(even_odd_count(num: 7) == (0, 1))\nassert(even_odd_count(num:\
    \ -78) == (1, 1))\nassert(even_odd_count(num: 3452) == (2, 2))\nassert(even_odd_count(num:\
    \ 346211) == (3, 3))\nassert(even_odd_count(num: -345821) == (3, 3))\nassert(even_odd_count(num:\
    \ -2) == (1, 0))\nassert(even_odd_count(num: -45347) == (2, 3))\nassert(even_odd_count(num:\
    \ 0) == (1, 0))"
  status: SyntaxError
  stderr: "/tmp/tmpzga6cow9.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    for i in String(num).characters {\n               \
    \          ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in\
    \ Swift 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013527
- exit_code: -4
  program: "\n/// Given an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\n/// Example:\n/// even_odd_count(-12) ==> (1, 1)\n\
    /// even_odd_count(123) ==> (1, 2)\nfunc even_odd_count(num: Int) -> (Int, Int)\
    \ {\n    return (0, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(even_odd_count(num:\
    \ 7) == (0, 1))\nassert(even_odd_count(num: -78) == (1, 1))\nassert(even_odd_count(num:\
    \ 3452) == (2, 2))\nassert(even_odd_count(num: 346211) == (3, 3))\nassert(even_odd_count(num:\
    \ -345821) == (3, 3))\nassert(even_odd_count(num: -2) == (1, 0))\nassert(even_odd_count(num:\
    \ -45347) == (2, 3))\nassert(even_odd_count(num: 0) == (1, 0))"
  status: Exception
  stderr: 'tmpvrn27lw5/tmpvrn27lw5.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a9d99ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a9d695b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a9d695988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a9d6947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvrn27lw5                        0x00005566a83f2264 <unavailable> + 4708

    5    libc.so.6                          0x00002b7a9db8a460 __libc_start_main +
    245

    6    tmpvrn27lw5                        0x00005566a83f1ec9 <unavailable> + 3785

    '
  stdout: ''
  timestamp: 1660013527

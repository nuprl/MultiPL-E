name: HumanEval_99_closest_integer
language: swift
prompt: "\n/// Create a function that takes a value (string) representing a number\n\
  /// and returns the closest integer to it. If the number is equidistant\n/// from\
  \ two integers, round it away from zero.\n/// Examples\n/// >>> closest_integer(\"\
  10\")\n/// 10\n/// >>> closest_integer(\"15.3\")\n/// 15\n/// Note:\n/// Rounding\
  \ away from zero means that if the given number is equidistant\n/// from two integers,\
  \ the one you should return is the one that is the\n/// farthest from zero. For\
  \ example closest_integer(\"14.5\") should\n/// return 15 and closest_integer(\"\
  -14.5\") should return -15.\nfunc closest_integer(value: String) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(closest_integer(value: \"10\") == 10)\n\
  assert(closest_integer(value: \"14.5\") == 15)\nassert(closest_integer(value: \"\
  -15.5\") == -16)\nassert(closest_integer(value: \"15.3\") == 15)\nassert(closest_integer(value:\
  \ \"0\") == 0)"
completions: ["    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let ceiled = Int(number.rounded(.up))\n    let floored = Int(number.rounded(.down))\n\
    \    let diff1 = abs(number - Double(rounded))\n    let diff2 = abs(number - Double(ceiled))\n\
    \    let diff3 = abs(number - Double(floored))\n    if diff1 < diff2 && diff1\
    \ < diff3 {\n        return rounded\n    } else if diff2 < diff1 && diff2 < diff3\
    \ {\n        return ceiled\n    } else {\n        return floored\n    }", "  \
    \  let number = Double(value)!\n    let rounded = Int(number.rounded())\n    let\
    \ ceiled = Int(number.rounded(.up))\n    let floored = Int(number.rounded(.down))\n\
    \    let diff1 = abs(number - Double(rounded))\n    let diff2 = abs(number - Double(ceiled))\n\
    \    let diff3 = abs(number - Double(floored))\n    if diff1 < diff2 && diff1\
    \ < diff3 {\n        return rounded\n    } else if diff2 < diff1 && diff2 < diff3\
    \ {\n        return ceiled\n    } else {\n        return floored\n    }", "  \
    \  let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let doubleValue = Double(value)\n    let\
    \ roundedValue = round(doubleValue!)\n    return Int(roundedValue)", "    let\
    \ doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n  \
    \  return Int(roundedValue)", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", "    let doubleValue =\
    \ Double(value)\n    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)",
  "    let doubleValue = Double(value)\n    let roundedValue = Int(round(doubleValue!))\n\
    \    return roundedValue", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", "    let num = Double(value)!\n\
    \    let int = Int(num)\n    let decimal = num - Double(int)\n    if decimal >=\
    \ 0.5 {\n        return int + 1\n    } else {\n        return int\n    }", " \
    \   let value = Double(value)!\n    let floor = Int(floor(value))\n    let ceil\
    \ = Int(ceil(value))\n    return value - Double(floor) < Double(ceil) - value\
    \ ? floor : ceil", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    let int = Int(rounded)\n    return int",
  "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let number = Double(value)!\n    let rounded\
    \ = round(number)\n    if number - rounded >= 0.5 {\n        return Int(rounded\
    \ + 1)\n    } else {\n        return Int(rounded)\n    }", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    if number - Double(floor) == 0.5\
    \ {\n        return floor\n    } else if number - Double(ceil) == -0.5 {\n   \
    \     return ceil\n    } else {\n        return rounded\n    }", "    let number\
    \ = Double(value)!\n    let rounded = number.rounded()\n    let roundedInt = Int(rounded)\n\
    \    if rounded - Double(roundedInt) >= 0.5 {\n        return roundedInt + 1\n\
    \    } else {\n        return roundedInt\n    }", "    let doubleValue = Double(value)\n\
    \    let intValue = Int(doubleValue!)\n    let decimal = doubleValue! - Double(intValue)\n\
    \    if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    let int = Int(rounded)\n    return int", "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    let floor = Int(rounded)\n    let ceil =\
    \ Int(rounded) + 1\n    let diffFloor = abs(number - Double(floor))\n    let diffCeil\
    \ = abs(number - Double(ceil))\n    if diffFloor < diffCeil {\n        return\
    \ floor\n    } else {\n        return ceil\n    }", "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    if rounded - Double(floor) == 0.5\
    \ {\n        return ceil\n    } else if rounded - Double(floor) == -0.5 {\n  \
    \      return floor\n    } else {\n        return Int(rounded)\n    }", "    let\
    \ number = Double(value)!\n    let rounded = round(number)\n    let integer =\
    \ Int(rounded)\n    return integer", "    let doubleValue = Double(value)\n  \
    \  let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", "  \
    \  let doubleValue = Double(value)\n    let roundedValue = doubleValue!.rounded()\n\
    \    return Int(roundedValue)", "    let number = Double(value)!\n    let rounded\
    \ = round(number)\n    if number - rounded == 0.5 {\n        return Int(number\
    \ > 0 ? rounded + 1 : rounded - 1)\n    }\n    return Int(rounded)", '    return
    Int(round(Double(value)!))', "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", '    return Int(round(Double(value)!))',
  "    let number = Double(value)!\n    let rounded = round(number)\n    let roundedInt\
    \ = Int(rounded)\n    let decimal = number - rounded\n    if decimal > 0.5 {\n\
    \        return roundedInt + 1\n    } else if decimal < -0.5 {\n        return\
    \ roundedInt - 1\n    } else {\n        return roundedInt\n    }", "    let doubleValue\
    \ = Double(value)\n    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)",
  "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n   \
    \ let decimalValue = doubleValue! - Double(intValue)\n    if decimalValue >= 0.5\
    \ {\n        return intValue + 1\n    } else {\n        return intValue\n    }",
  "    let number = Double(value)!\n    let rounded = number.rounded()\n    if number\
    \ - rounded >= 0.5 {\n        return Int(rounded + 1)\n    } else {\n        return\
    \ Int(rounded)\n    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let diff_floor = abs(number - Double(floor))\n    let diff_ceil = abs(number\
    \ - Double(ceil))\n    if diff_floor == diff_ceil {\n        return number > 0\
    \ ? ceil : floor\n    }\n    return diff_floor < diff_ceil ? floor : ceil", " \
    \   let doubleValue = Double(value)\n    let integerValue = Int(doubleValue!)\n\
    \    let decimalValue = doubleValue! - Double(integerValue)\n    if decimalValue\
    \ < 0.5 {\n        return integerValue\n    } else {\n        return integerValue\
    \ + 1\n    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let floorDiff = abs(number - Double(floor))\n    let ceilDiff = abs(number\
    \ - Double(ceil))\n    if floorDiff == ceilDiff {\n        return number < 0 ?\
    \ floor : ceil\n    }\n    return floorDiff < ceilDiff ? floor : ceil", "    let\
    \ doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n    let decimal\
    \ = doubleValue! - Double(intValue)\n    if decimal >= 0.5 {\n        return intValue\
    \ + 1\n    } else {\n        return intValue\n    }", "    let floatValue = Float(value)\n\
    \    let intValue = Int(floatValue!)\n    let decimalValue = floatValue! - Float(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let number = Double(value)!\n    let rounded\
    \ = round(number)\n    return Int(rounded)", "    let doubleValue = Double(value)\n\
    \    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", " \
    \   let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n  \
    \  let decimalValue = doubleValue! - Double(intValue)\n    if decimalValue >=\
    \ 0.5 {\n        return intValue + 1\n    } else {\n        return intValue\n\
    \    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let floorDistance = abs(number - Double(floor))\n    let ceilDistance = abs(number\
    \ - Double(ceil))\n    if floorDistance == ceilDistance {\n        return number\
    \ < 0 ? floor : ceil\n    }\n    return floorDistance < ceilDistance ? floor :\
    \ ceil", "    let number = Double(value)!\n    let rounded = round(number)\n \
    \   return Int(rounded)", "    let number = Double(value)!\n    let integer =\
    \ Int(number)\n    let decimal = number - Double(integer)\n    if decimal >= 0.5\
    \ {\n        return integer + 1\n    } else {\n        return integer\n    }",
  "    let number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil\
    \ = Int(ceil(number))\n    if number - Double(floor) < Double(ceil) - number {\n\
    \        return floor\n    } else {\n        return ceil\n    }", "    let doubleValue\
    \ = Double(value)\n    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)",
  "    let value = Double(value)!\n    let floor = Int(floor(value))\n    let ceil\
    \ = Int(ceil(value))\n    if abs(value - Double(floor)) < abs(value - Double(ceil))\
    \ {\n        return floor\n    }\n    return ceil", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let ceiled = Int(number.rounded(.up))\n\
    \    let floored = Int(number.rounded(.down))\n    let distanceFromRounded = abs(number\
    \ - Double(rounded))\n    let distanceFromCeiled = abs(number - Double(ceiled))\n\
    \    let distanceFromFloored = abs(number - Double(floored))\n    if distanceFromRounded\
    \ == distanceFromCeiled {\n        return ceiled\n    } else if distanceFromRounded\
    \ == distanceFromFloored {\n        return floored\n    } else {\n        return\
    \ rounded\n    }", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", "    let doubleValue =\
    \ Double(value)\n    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)",
  "    let number = Double(value)!\n    let integer = Int(number)\n    let decimal\
    \ = number - Double(integer)\n    if decimal >= 0.5 {\n        return integer\
    \ + 1\n    } else {\n        return integer\n    }", "    let doubleValue = Double(value)\n\
    \    let intValue = Int(doubleValue!)\n    let decimalValue = doubleValue! - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", "    let number = Double(value)!\n\
    \    let rounded = Int(round(number))\n    if number - Double(rounded) == 0.5\
    \ {\n        return rounded + 1\n    }\n    return rounded", "    let number =\
    \ Double(value)!\n    let rounded = number.rounded()\n    if rounded > number\
    \ {\n        return Int(rounded - 1)\n    }\n    return Int(rounded)", "    let\
    \ doubleValue = Double(value)\n    return Int(doubleValue! + (doubleValue! > 0\
    \ ? 0.5 : -0.5))", "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n\
    \    let decimal = doubleValue! - Double(intValue)\n    if decimal >= 0.5 {\n\
    \        return intValue + 1\n    } else {\n        return intValue\n    }", " \
    \   var result = 0\n    if let doubleValue = Double(value) {\n        result =\
    \ Int(doubleValue)\n        if doubleValue - Double(result) >= 0.5 {\n       \
    \     result += 1\n        }\n    }\n    return result", "    let doubleValue\
    \ = Double(value)\n    let intValue = Int(doubleValue!)\n    let decimal = doubleValue!\
    \ - Double(intValue)\n    if decimal >= 0.5 {\n        return intValue + 1\n \
    \   } else {\n        return intValue\n    }", "    let doubleValue = Double(value)\n\
    \    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", " \
    \   let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let number = Double(value)!\n    let rounded\
    \ = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n    let\
    \ ceiling = Int(number.rounded(.up))\n    let floor_diff = abs(number - Double(floor))\n\
    \    let ceiling_diff = abs(number - Double(ceiling))\n    if floor_diff < ceiling_diff\
    \ {\n        return floor\n    } else if floor_diff > ceiling_diff {\n       \
    \ return ceiling\n    } else {\n        return rounded\n    }", "    let num =\
    \ Double(value)!\n    let int = Int(num)\n    let decimal = num - Double(int)\n\
    \    if decimal >= 0.5 {\n        return int + 1\n    } else {\n        return\
    \ int\n    }", "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let doubleValue = Double(value)\n    let\
    \ intValue = Int(doubleValue!)\n    let doubleValue2 = Double(intValue)\n    if\
    \ doubleValue! - doubleValue2 > 0.5 {\n        return intValue + 1\n    } else\
    \ {\n        return intValue\n    }", "    let doubleValue = Double(value)\n \
    \   let intValue = Int(doubleValue!)\n    let decimalValue = doubleValue! - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", '    return Int(round(Double(value)!))',
  "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let number = Double(value)!\n    let rounded\
    \ = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n    let\
    \ ceil = Int(number.rounded(.up))\n    let floorDiff = abs(number - Double(floor))\n\
    \    let ceilDiff = abs(number - Double(ceil))\n    if floorDiff == ceilDiff {\n\
    \        return number > 0 ? ceil : floor\n    }\n    return floorDiff < ceilDiff\
    \ ? floor : ceil", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", "    let number = Double(value)!\n\
    \    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    if\
    \ number - Double(floor) < Double(ceil) - number {\n        return floor\n   \
    \ } else {\n        return ceil\n    }", "    let number = Double(value)!\n  \
    \  let rounded = Int(number.rounded())\n    let ceiled = Int(number.rounded(.up))\n\
    \    let floored = Int(number.rounded(.down))\n    let rounded_diff = abs(rounded\
    \ - number)\n    let ceiled_diff = abs(ceiled - number)\n    let floored_diff\
    \ = abs(floored - number)\n    if rounded_diff < ceiled_diff && rounded_diff <\
    \ floored_diff {\n        return rounded\n    } else if ceiled_diff < rounded_diff\
    \ && ceiled_diff < floored_diff {\n        return ceiled\n    } else {\n     \
    \   return floored\n    }", "    let number = Double(value)!\n    let rounded\
    \ = round(number)\n    let diff = abs(number - rounded)\n    if diff < 0.5 {\n\
    \        return Int(rounded)\n    } else {\n        return Int(number > 0 ? rounded\
    \ + 1 : rounded - 1)\n    }", "    let value = Double(value)!\n    let floor =\
    \ Int(floor(value))\n    let ceil = Int(ceil(value))\n    if value - Double(floor)\
    \ < Double(ceil) - value {\n        return floor\n    } else {\n        return\
    \ ceil\n    }", "    let num = Double(value)!\n    let rounded = round(num)\n\
    \    let int = Int(rounded)\n    return int", "    let doubleValue = Double(value)\n\
    \    let roundedValue = doubleValue!.rounded()\n    return Int(roundedValue)",
  "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let doubleValue = Double(value)\n    let\
    \ roundedValue = doubleValue!.rounded()\n    let intValue = Int(roundedValue)\n\
    \    return intValue", "    let doubleValue = Double(value)\n    let intValue\
    \ = Int(doubleValue!)\n    let decimal = doubleValue! - Double(intValue)\n   \
    \ if decimal < 0.5 {\n        return intValue\n    } else {\n        return intValue\
    \ + 1\n    }", "    let number = Double(value)!\n    let floor = Int(floor(number))\n\
    \    let ceil = Int(ceil(number))\n    if number - Double(floor) < Double(ceil)\
    \ - number {\n        return floor\n    } else {\n        return ceil\n    }",
  "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n    let\
    \ floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    if number - Double(floor) == 0.5 {\n        return floor\n    } else if number\
    \ - Double(ceil) == -0.5 {\n        return ceil\n    } else {\n        return\
    \ rounded\n    }", "    let num = Double(value)!\n    let int = Int(num)\n   \
    \ let decimal = num - Double(int)\n    if decimal >= 0.5 {\n        return int\
    \ + 1\n    } else {\n        return int\n    }", "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    let int = Int(rounded)\n    return int",
  "    let number = Double(value)!\n    let rounded = round(number)\n    let ceiled\
    \ = ceil(number)\n    let floored = floor(number)\n    if (number - rounded) ==\
    \ 0 {\n        return Int(rounded)\n    } else if (number - rounded) > 0 {\n \
    \       return Int(ceiled)\n    } else {\n        return Int(floored)\n    }",
  "    let number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil\
    \ = Int(ceil(number))\n    if number - Double(floor) < Double(ceil) - number {\n\
    \        return floor\n    } else {\n        return ceil\n    }", "    let doubleValue\
    \ = Double(value)\n    let intValue = Int(doubleValue!)\n    let decimalValue\
    \ = doubleValue! - Double(intValue)\n    if decimalValue >= 0.5 {\n        return\
    \ intValue + 1\n    } else {\n        return intValue\n    }", "    let number\
    \ = Double(value)!\n    let rounded = round(number)\n    let integer = Int(rounded)\n\
    \    return integer", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", "    let value = Double(value)!\n\
    \    let floor = Int(floor(value))\n    let ceil = Int(ceil(value))\n    if value\
    \ - Double(floor) < Double(ceil) - value {\n        return floor\n    } else {\n\
    \        return ceil\n    }", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", "    let doubleValue =\
    \ Double(value)\n    let intValue = Int(doubleValue!)\n    let decimalValue =\
    \ doubleValue! - Double(intValue)\n    if decimalValue >= 0.5 {\n        return\
    \ intValue + 1\n    } else {\n        return intValue\n    }", "    let number\
    \ = Double(value)!\n    let rounded = round(number)\n    let roundedInt = Int(rounded)\n\
    \    let decimal = number - rounded\n    if decimal == 0 {\n        return roundedInt\n\
    \    } else if decimal > 0 {\n        return roundedInt + 1\n    } else {\n  \
    \      return roundedInt - 1\n    }", "    let number = Double(value)!\n    let\
    \ rounded = round(number)\n    let floor = Int(rounded)\n    let ceil = Int(rounded)\
    \ + 1\n    let diff_floor = abs(number - Double(floor))\n    let diff_ceil = abs(number\
    \ - Double(ceil))\n    if diff_floor < diff_ceil {\n        return floor\n   \
    \ } else {\n        return ceil\n    }", "    let num = Double(value)!\n    let\
    \ int = Int(num)\n    if num - Double(int) < 0.5 {\n        return int\n    }\
    \ else {\n        return int + 1\n    }", "    let number = Double(value)!\n \
    \   let rounded = round(number)\n    let ceiled = ceil(number)\n    let floored\
    \ = floor(number)\n    let rounded_diff = abs(rounded - number)\n    let ceiled_diff\
    \ = abs(ceiled - number)\n    let floored_diff = abs(floored - number)\n    if\
    \ rounded_diff < ceiled_diff && rounded_diff < floored_diff {\n        return\
    \ Int(rounded)\n    } else if ceiled_diff < rounded_diff && ceiled_diff < floored_diff\
    \ {\n        return Int(ceiled)\n    } else {\n        return Int(floored)\n \
    \   }", "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    let rounded_int = Int(rounded)\n    let decimal = number - rounded\n    if\
    \ decimal > 0.5 {\n        return rounded_int + 1\n    } else if decimal < -0.5\
    \ {\n        return rounded_int - 1\n    } else {\n        return rounded_int\n\
    \    }", "    let doubleValue = Double(value)\n    let rounded = round(doubleValue!)\n\
    \    return Int(rounded)", "    let number = Double(value)!\n    let rounded =\
    \ round(number)\n    let int = Int(rounded)\n    return int", "    let number\
    \ = Double(value)!\n    let integer = Int(number)\n    if number - Double(integer)\
    \ < 0.5 {\n        return integer\n    } else {\n        return integer + 1\n\
    \    }", "    let doubleValue = Double(value)\n    let roundedValue = doubleValue!.rounded()\n\
    \    let intValue = Int(roundedValue)\n    return intValue", "    let number =\
    \ Double(value)!\n    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let diff_floor = abs(number - Double(floor))\n    let diff_ceil = abs(number\
    \ - Double(ceil))\n    return diff_floor < diff_ceil ? floor : ceil", "    let\
    \ number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil =\
    \ Int(ceil(number))\n    let diff1 = abs(number - Double(floor))\n    let diff2\
    \ = abs(number - Double(ceil))\n    if diff1 < diff2 {\n        return floor\n\
    \    } else {\n        return ceil\n    }", "    let doubleValue = Double(value)\n\
    \    let intValue = Int(doubleValue!)\n    let decimalValue = doubleValue! - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let number = Double(value)!\n    let integer\
    \ = Int(number)\n    let decimal = number - Double(integer)\n    if decimal <\
    \ 0.5 {\n        return integer\n    } else {\n        return integer + 1\n  \
    \  }", "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let doubleValue = Double(value)\n    let\
    \ intValue = Int(doubleValue!)\n    let decimal = doubleValue! - Double(intValue)\n\
    \    if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let rounded = number.rounded()\n\
    \    let integer = Int(rounded)\n    let decimal = rounded - Double(integer)\n\
    \    if decimal >= 0.5 {\n        return integer + 1\n    } else {\n        return\
    \ integer\n    }", "    let num = Double(value)!\n    let floor = Int(floor(num))\n\
    \    let ceil = Int(ceil(num))\n    let diff1 = abs(num - Double(floor))\n   \
    \ let diff2 = abs(num - Double(ceil))\n    if diff1 < diff2 {\n        return\
    \ floor\n    } else {\n        return ceil\n    }", "    let doubleValue = Double(value)\n\
    \    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", " \
    \   let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let number = Double(value)!\n    let rounded\
    \ = number.rounded()\n    let roundedInt = Int(rounded)\n    let roundedDouble\
    \ = Double(roundedInt)\n    if number > roundedDouble {\n        return roundedInt\
    \ + 1\n    } else if number < roundedDouble {\n        return roundedInt - 1\n\
    \    } else {\n        return roundedInt\n    }", "    let doubleValue = Double(value)\n\
    \    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", " \
    \   let number = Double(value)!\n    let rounded = round(number)\n    if number\
    \ - rounded > 0.5 {\n        return Int(rounded + 1)\n    } else if number - rounded\
    \ < -0.5 {\n        return Int(rounded - 1)\n    } else {\n        return Int(rounded)\n\
    \    }", "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n\
    \    let decimalValue = doubleValue! - Double(intValue)\n    if decimalValue >=\
    \ 0.5 {\n        return intValue + 1\n    } else {\n        return intValue\n\
    \    }", "    let value = Double(value)!\n    let floor = Int(floor(value))\n\
    \    let ceil = Int(ceil(value))\n    let floorDiff = abs(floor - value)\n   \
    \ let ceilDiff = abs(ceil - value)\n    if floorDiff == ceilDiff {\n        return\
    \ floor > 0 ? floor : ceil\n    }\n    return floorDiff < ceilDiff ? floor : ceil",
  "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let doubleValue = Double(value)\n    let\
    \ intValue = Int(doubleValue!)\n    let decimalValue = doubleValue! - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let number = Double(value)!\n    let rounded\
    \ = round(number)\n    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n\
    \    if rounded - Double(floor) == 0.5 {\n        return floor\n    } else if\
    \ rounded - Double(ceil) == 0.5 {\n        return ceil\n    } else {\n       \
    \ return Int(rounded)\n    }", "    let number = Double(value)!\n    let rounded\
    \ = number.rounded()\n    let ceiled = number.rounded(.up)\n    let floored =\
    \ number.rounded(.down)\n    let diffRounded = abs(number - rounded)\n    let\
    \ diffCeiled = abs(number - ceiled)\n    let diffFloored = abs(number - floored)\n\
    \    if diffRounded < diffCeiled && diffRounded < diffFloored {\n        return\
    \ Int(rounded)\n    } else if diffCeiled < diffFloored {\n        return Int(ceiled)\n\
    \    } else {\n        return Int(floored)\n    }", "    let doubleValue = Double(value)\n\
    \    let intValue = Int(doubleValue!)\n    let decimalValue = doubleValue! - Double(intValue)\n\
    \    if decimalValue >= 0.5 {\n        return intValue + 1\n    } else {\n   \
    \     return intValue\n    }", "    let doubleValue = Double(value)\n    let intValue\
    \ = Int(doubleValue!)\n    let decimal = doubleValue! - Double(intValue)\n   \
    \ if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let floatValue = Float(value)\n    let intValue = Int(floatValue!)\n\
    \    let decimalValue = floatValue! - Float(intValue)\n    if decimalValue >=\
    \ 0.5 {\n        return intValue + 1\n    } else {\n        return intValue\n\
    \    }", "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n\
    \    let decimalValue = doubleValue! - Double(intValue)\n    if decimalValue >=\
    \ 0.5 {\n        return intValue + 1\n    } else {\n        return intValue\n\
    \    }", "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let doubleValue = Double(value)\n    let\
    \ roundedValue = round(doubleValue!)\n    return Int(roundedValue)", "    let\
    \ number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil =\
    \ Int(ceil(number))\n    if number - Double(floor) < Double(ceil) - number {\n\
    \        return floor\n    } else {\n        return ceil\n    }", '    return
    Int(Double(value)!.rounded(.awayFromZero))', "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    let roundedInt = Int(rounded)\n    let roundedDouble\
    \ = Double(roundedInt)\n    if number > roundedDouble {\n        return roundedInt\
    \ + 1\n    } else if number < roundedDouble {\n        return roundedInt - 1\n\
    \    } else {\n        return roundedInt\n    }", "    let doubleValue = Double(value)\n\
    \    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", " \
    \   let number = Double(value)!\n    let intNumber = Int(number)\n    let decimal\
    \ = number - Double(intNumber)\n    if decimal >= 0.5 {\n        return intNumber\
    \ + 1\n    } else {\n        return intNumber\n    }", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    if number - Double(floor) < Double(ceil)\
    \ - number {\n        return floor\n    } else {\n        return ceil\n    }",
  "    let number = Double(value)!\n    let rounded = round(number)\n    if number\
    \ - rounded < 0.5 {\n        return Int(rounded)\n    } else {\n        return\
    \ Int(rounded + 1)\n    }", "    let number = Double(value)!\n    let rounded\
    \ = round(number)\n    let floor = Int(rounded)\n    let ceil = Int(rounded) +\
    \ 1\n    let diffFloor = abs(number - Double(floor))\n    let diffCeil = abs(number\
    \ - Double(ceil))\n    if diffFloor < diffCeil {\n        return floor\n    }\
    \ else {\n        return ceil\n    }", "    let number = Double(value)!\n    let\
    \ floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    let diffFloor\
    \ = abs(number - Double(floor))\n    let diffCeil = abs(number - Double(ceil))\n\
    \    if diffFloor < diffCeil {\n        return floor\n    } else {\n        return\
    \ ceil\n    }", "    let number = Double(value)!\n    let rounded = round(number)\n\
    \    let integer = Int(rounded)\n    return integer", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let ceiled = Int(number.rounded(.up))\n\
    \    let floored = Int(number.rounded(.down))\n    let diff1 = abs(number - Double(rounded))\n\
    \    let diff2 = abs(number - Double(ceiled))\n    let diff3 = abs(number - Double(floored))\n\
    \    if diff1 <= diff2 && diff1 <= diff3 {\n        return rounded\n    } else\
    \ if diff2 <= diff1 && diff2 <= diff3 {\n        return ceiled\n    } else {\n\
    \        return floored\n    }", "    let doubleValue = Double(value)\n    let\
    \ roundedValue = round(doubleValue!)\n    return Int(roundedValue)", "    let\
    \ number = Double(value)!\n    let rounded = Int(round(number))\n    return rounded",
  "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n    let\
    \ ceiled = Int(number.rounded(.up))\n    let floored = Int(number.rounded(.down))\n\
    \    let diffRounded = abs(number - Double(rounded))\n    let diffCeiled = abs(number\
    \ - Double(ceiled))\n    let diffFloored = abs(number - Double(floored))\n   \
    \ if diffRounded == diffCeiled {\n        return ceiled\n    } else if diffRounded\
    \ == diffFloored {\n        return floored\n    } else {\n        return rounded\n\
    \    }", "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let doubleValue = Double(value)\n    return\
    \ Int(doubleValue! + (doubleValue! > 0 ? 0.5 : -0.5))", "    let floatValue =\
    \ Float(value)\n    let intValue = Int(floatValue!)\n    let decimal = floatValue!\
    \ - Float(intValue)\n    if decimal >= 0.5 {\n        return intValue + 1\n  \
    \  } else {\n        return intValue\n    }", "    let number = Double(value)!\n\
    \    let integer = Int(number)\n    let decimal = number - Double(integer)\n \
    \   if decimal >= 0.5 {\n        return integer + 1\n    } else {\n        return\
    \ integer\n    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    if number - Double(floor) < Double(ceil) - number {\n        return floor\n\
    \    } else {\n        return ceil\n    }", "    let doubleValue = Double(value)\n\
    \    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", " \
    \   let value = Double(value)!\n    let floor = Int(floor(value))\n    let ceil\
    \ = Int(ceil(value))\n    let diff_floor = abs(value - Double(floor))\n    let\
    \ diff_ceil = abs(value - Double(ceil))\n    return diff_floor < diff_ceil ? floor\
    \ : ceil", "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", '    return Int(value)!', "    let number = Double(value)!\n\
    \    let rounded = round(number)\n    let floor = Int(number.rounded(.down))\n\
    \    let ceil = Int(number.rounded(.up))\n    let floor_diff = abs(number - Double(floor))\n\
    \    let ceil_diff = abs(number - Double(ceil))\n    if floor_diff == ceil_diff\
    \ {\n        return number > 0 ? ceil : floor\n    }\n    return floor_diff <\
    \ ceil_diff ? floor : ceil", "    let floatValue = Float(value)\n    let intValue\
    \ = Int(floatValue!)\n    let decimal = floatValue! - Float(intValue)\n    if\
    \ decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let rounded = Int(number.rounded())\n\
    \    let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    if number - Double(floor) == 0.5 {\n        return floor\n    } else if number\
    \ - Double(ceil) == -0.5 {\n        return ceil\n    } else {\n        return\
    \ rounded\n    }", "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n\
    \    let decimal = doubleValue! - Double(intValue)\n    if decimal >= 0.5 {\n\
    \        return intValue + 1\n    } else {\n        return intValue\n    }", " \
    \   let number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil\
    \ = Int(ceil(number))\n    if number - Double(floor) < Double(ceil) - number {\n\
    \        return floor\n    } else {\n        return ceil\n    }", "    let num\
    \ = Double(value)!\n    let int = Int(num)\n    let decimal = num - Double(int)\n\
    \    if decimal >= 0.5 {\n        return int + 1\n    } else {\n        return\
    \ int\n    }", "    let number = Double(value)!\n    let integer = Int(number)\n\
    \    let decimal = number - Double(integer)\n    if decimal < 0.5 {\n        return\
    \ integer\n    } else {\n        return integer + 1\n    }", "    let number =\
    \ Double(value)!\n    let rounded = round(number)\n    let ceiled = ceil(number)\n\
    \    let floored = floor(number)\n    if rounded - number == 0.5 {\n        return\
    \ Int(ceiled)\n    } else if number - rounded == 0.5 {\n        return Int(floored)\n\
    \    } else {\n        return Int(rounded)\n    }", "    let number = Double(value)!\n\
    \    let intNumber = Int(number)\n    let decimal = number - Double(intNumber)\n\
    \    if decimal >= 0.5 {\n        return intNumber + 1\n    } else {\n       \
    \ return intNumber\n    }", "    let doubleValue = Double(value)\n    let roundedValue\
    \ = round(doubleValue!)\n    return Int(roundedValue)", "    let doubleValue =\
    \ Double(value)\n    return Int(doubleValue! + 0.5)", "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceiling = Int(number.rounded(.up))\n    let floorDiff = abs(number -\
    \ Double(floor))\n    let ceilingDiff = abs(number - Double(ceiling))\n    if\
    \ floorDiff == ceilingDiff {\n        return rounded > 0 ? ceiling : floor\n \
    \   }\n    return floorDiff < ceilingDiff ? floor : ceiling", "    let doubleValue\
    \ = Double(value)\n    let roundedValue = round(doubleValue!)\n    let intValue\
    \ = Int(roundedValue)\n    return intValue", "    let doubleValue = Double(value)\n\
    \    let intValue = Int(doubleValue!)\n    let decimal = doubleValue! - Double(intValue)\n\
    \    if decimal >= 0.5 {\n        return intValue + 1\n    } else {\n        return\
    \ intValue\n    }", "    let number = Double(value)!\n    let floor = Int(floor(number))\n\
    \    let ceil = Int(ceil(number))\n    let diff1 = abs(number - Double(floor))\n\
    \    let diff2 = abs(number - Double(ceil))\n    if diff1 < diff2 {\n        return\
    \ floor\n    } else {\n        return ceil\n    }", "    let doubleValue = Double(value)\n\
    \    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", " \
    \   let number = Double(value)!\n    let rounded = number.rounded()\n    let int\
    \ = Int(rounded)\n    let decimal = rounded - Double(int)\n    if decimal == 0.5\
    \ {\n        if int > 0 {\n            return int + 1\n        } else {\n    \
    \        return int - 1\n        }\n    }\n    return int", "    let number =\
    \ Double(value)!\n    let rounded = round(number)\n    return Int(rounded)", " \
    \   let number = Double(value)!\n    let rounded = Int(number.rounded())\n   \
    \ let floor = Int(number.rounded(.down))\n    let ceil = Int(number.rounded(.up))\n\
    \    let floor_diff = abs(number - Double(floor))\n    let ceil_diff = abs(number\
    \ - Double(ceil))\n    if floor_diff == ceil_diff {\n        return number < 0\
    \ ? floor : ceil\n    }\n    return floor_diff < ceil_diff ? floor : ceil", " \
    \   let number = Double(value)!\n    let rounded = number.rounded()\n    let int\
    \ = Int(rounded)\n    let decimal = rounded - Double(int)\n    if decimal > 0.5\
    \ {\n        return int + 1\n    } else if decimal < -0.5 {\n        return int\
    \ - 1\n    } else {\n        return int\n    }", "    let doubleValue = Double(value)\n\
    \    let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", " \
    \   let doubleValue = Double(value)\n    return Int(doubleValue! + 0.5)", "  \
    \  let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let number = Double(value)!\n    let rounded\
    \ = number.rounded()\n    let intValue = Int(rounded)\n    if number - Double(intValue)\
    \ >= 0.5 {\n        return intValue + 1\n    } else {\n        return intValue\n\
    \    }", "    var result = 0\n    let number = Double(value)\n    if number !=\
    \ nil {\n        result = Int(number! + 0.5)\n    }\n    return result", "   \
    \ let number = Double(value)!\n    let intNumber = Int(number)\n    if number\
    \ - Double(intNumber) < 0.5 {\n        return intNumber\n    } else {\n      \
    \  return intNumber + 1\n    }", '    return Int(round(Double(value)!))', "  \
    \  let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let number = Double(value)!\n    let rounded\
    \ = round(number)\n    let int = Int(rounded)\n    if rounded - Double(int) >\
    \ 0.5 {\n        return int + 1\n    } else {\n        return int\n    }", " \
    \   let number = Double(value)!\n    let rounded = round(number)\n    return Int(rounded)",
  "    let doubleValue = Double(value)\n    let intValue = Int(doubleValue!)\n   \
    \ let decimalValue = doubleValue! - Double(intValue)\n    if decimalValue < 0.5\
    \ {\n        return intValue\n    } else {\n        return intValue + 1\n    }",
  '    return Int(value)!', "    let number = Double(value)!\n    let floor = Int(floor(number))\n\
    \    let ceil = Int(ceil(number))\n    if number - Double(floor) < Double(ceil)\
    \ - number {\n        return floor\n    } else {\n        return ceil\n    }",
  "    let number = Double(value)!\n    let floor = Int(floor(number))\n    let ceil\
    \ = Int(ceil(number))\n    if number - Double(floor) < Double(ceil) - number {\n\
    \        return floor\n    } else {\n        return ceil\n    }", "    let doubleValue\
    \ = Double(value)\n    let intValue = Int(doubleValue!)\n    let decimalValue\
    \ = doubleValue! - Double(intValue)\n    if decimalValue >= 0.5 {\n        return\
    \ intValue + 1\n    } else {\n        return intValue\n    }", "    let number\
    \ = Double(value)!\n    let int = Int(number)\n    let decimal = number - Double(int)\n\
    \    if decimal >= 0.5 {\n        return int + 1\n    } else {\n        return\
    \ int\n    }", "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let num = Double(value)!\n    let floor =\
    \ Int(floor(num))\n    let ceil = Int(ceil(num))\n    let diff1 = abs(num - Double(floor))\n\
    \    let diff2 = abs(num - Double(ceil))\n    if diff1 < diff2 {\n        return\
    \ floor\n    } else {\n        return ceil\n    }", "    let number = Double(value)!\n\
    \    let floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    let\
    \ diff1 = abs(number - Double(floor))\n    let diff2 = abs(number - Double(ceil))\n\
    \    if diff1 < diff2 {\n        return floor\n    } else {\n        return ceil\n\
    \    }", "    let num = Double(value)!\n    let int = Int(num)\n    let decimal\
    \ = num - Double(int)\n    if decimal >= 0.5 {\n        return int + 1\n    }\
    \ else {\n        return int\n    }", "    let doubleValue = Double(value)\n \
    \   let roundedValue = round(doubleValue!)\n    return Int(roundedValue)", '    return
    Int(Double(value)!.rounded(.awayFromZero))', "    let number = Double(value)!\n\
    \    let rounded = Int(number.rounded())\n    let floor = Int(number.rounded(.down))\n\
    \    let ceiling = Int(number.rounded(.up))\n    let floorDiff = abs(number -\
    \ Double(floor))\n    let ceilingDiff = abs(number - Double(ceiling))\n    if\
    \ floorDiff == ceilingDiff {\n        return rounded\n    } else if floorDiff\
    \ < ceilingDiff {\n        return floor\n    } else {\n        return ceiling\n\
    \    }", "    let number = Double(value)!\n    let floor = Int(floor(number))\n\
    \    let ceil = Int(ceil(number))\n    let diff1 = abs(number - Double(floor))\n\
    \    let diff2 = abs(number - Double(ceil))\n    if diff1 == diff2 {\n       \
    \ return number > 0 ? ceil : floor\n    }\n    return diff1 < diff2 ? floor :\
    \ ceil", "    let doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n\
    \    return Int(roundedValue)", "    let doubleValue = Double(value)\n    let\
    \ roundedValue = doubleValue!.rounded()\n    return Int(roundedValue)", "    let\
    \ doubleValue = Double(value)\n    let roundedValue = round(doubleValue!)\n  \
    \  return Int(roundedValue)", "    let number = Double(value)!\n    let rounded\
    \ = number.rounded()\n    let intValue = Int(rounded)\n    if number - Double(intValue)\
    \ >= 0.5 {\n        return intValue + 1\n    } else {\n        return intValue\n\
    \    }", "    let number = Double(value)!\n    let rounded = round(number)\n \
    \   let floor = Int(rounded.rounded(.down))\n    let ceil = Int(rounded.rounded(.up))\n\
    \    if abs(number - Double(floor)) == abs(number - Double(ceil)) {\n        return\
    \ number > 0 ? ceil : floor\n    }\n    return number > 0 ? floor : ceil", " \
    \   let number = Double(value)!\n    let rounded = Int(round(number))\n    let\
    \ floor = Int(floor(number))\n    let ceil = Int(ceil(number))\n    if abs(number\
    \ - Double(rounded)) < abs(number - Double(floor)) {\n        return rounded\n\
    \    } else if abs(number - Double(rounded)) < abs(number - Double(ceil)) {\n\
    \        return rounded\n    } else if abs(number - Double(floor)) < abs(number\
    \ - Double(ceil)) {\n        return floor\n    } else {\n        return ceil\n\
    \    }", "    let num = Double(value)!\n    let rounded = round(num)\n    let\
    \ diff = abs(num - rounded)\n    if diff == 0.5 {\n        return Int(num > 0\
    \ ? rounded + 1 : rounded - 1)\n    }\n    return Int(rounded)", "    let doubleValue\
    \ = Double(value)\n    return Int(doubleValue!.rounded(.awayFromZero))"]
stop_tokens:
- "\n}"

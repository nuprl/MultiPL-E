name: HumanEval_87_get_row
language: swift
prompt: "\n/// You are given a 2 dimensional data, as a nested lists,\n/// which is\
  \ similar to matrix, however, unlike matrices,\n/// each row may contain a different\
  \ number of columns.\n/// Given lst, and integer x, find integers x in the list,\n\
  /// and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n/// each tuple\
  \ is a coordinate - (row, columns), starting with 0.\n/// Sort coordinates initially\
  \ by rows in ascending order.\n/// Also, sort coordinates of the row by columns\
  \ in descending order.\n/// Examples:\n/// get_row([\n/// [1,2,3,4,5,6],\n/// [1,2,3,4,1,6],\n\
  /// [1,2,3,4,5,1]\n/// ], 1) == [(0, 0), (1, 4), (1, 0), (2, 5), (2, 0)]\n/// get_row([],\
  \ 1) == []\n/// get_row([[], [1], [1, 2, 3]], 3) == [(2, 2)]\nfunc get_row(lst:\
  \ [[Int]], x: Int) -> [(Int, Int)] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(get_row(lst: [[1, 2, 3, 4, 5, 6], [1, 2,\
  \ 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], x: 1) == [(0, 0), (1, 4), (1, 0), (2, 5), (2,\
  \ 0)])\nassert(get_row(lst: [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4,\
  \ 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]], x: 2) == [(0,\
  \ 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1)])\nassert(get_row(lst: [[1, 2, 3, 4,\
  \ 5, 6], [1, 2, 3, 4, 5, 6], [1, 1, 3, 4, 5, 6], [1, 2, 1, 4, 5, 6], [1, 2, 3, 1,\
  \ 5, 6], [1, 2, 3, 4, 1, 6], [1, 2, 3, 4, 5, 1]], x: 1) == [(0, 0), (1, 0), (2,\
  \ 1), (2, 0), (3, 2), (3, 0), (4, 3), (4, 0), (5, 4), (5, 0), (6, 5), (6, 0)])\n\
  assert(get_row(lst: [] as [[Int]], x: 1) == [] as [(Int, Int)])\nassert(get_row(lst:\
  \ [[1]], x: 2) == [] as [(Int, Int)])\nassert(get_row(lst: [[] as [Int], [1], [1,\
  \ 2, 3]], x: 3) == [(2, 2)])"
completions: ["    var result: [(Int, Int)] = []\n    for (row, rowArray) in lst.enumerated()\
    \ {\n        for (column, value) in rowArray.enumerated() {\n            if value\
    \ == x {\n                result.append((row, column))\n            }\n      \
    \  }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 >\
    \ $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (row, row_lst) in lst.enumerated() {\n        for (col, item) in row_lst.enumerated()\
    \ {\n            if item == x {\n                result.append((row, col))\n \
    \           }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (row, row_list) in lst.enumerated() {\n        for\
    \ (column, element) in row_list.enumerated() {\n            if element == x {\n\
    \                result.append((row, column))\n            }\n        }\n    }\n\
    \    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", " \
    \   var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n  \
    \      for (j, item) in row.enumerated() {\n            if item == x {\n     \
    \           result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted { (a, b) -> Bool\
    \ in\n        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n     \
    \   return a.0 < b.0\n    }", "    var result: [(Int, Int)] = []\n    for (i,\
    \ row) in lst.enumerated() {\n        for (j, item) in row.enumerated() {\n  \
    \          if item == x {\n                result.append((i, j))\n           \
    \ }\n        }\n    }\n    return result.sorted { (a, b) -> Bool in\n        if\
    \ a.0 == b.0 {\n            return a.1 > b.1\n        }\n        return a.0 <\
    \ b.0\n    }", "    var result: [(Int, Int)] = []\n    for (index, row) in lst.enumerated()\
    \ {\n        for (index2, item) in row.enumerated() {\n            if item ==\
    \ x {\n                result.append((index, index2))\n            }\n       \
    \ }\n    }\n    return result.sorted(by: {$0.0 < $1.0}).sorted(by: {$0.1 > $1.1})",
  "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n   \
    \     for (j, item) in row.enumerated() {\n            if item == x {\n      \
    \          result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result = [(Int, Int)]()\n   \
    \ for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, value) in row.enumerated() {\n            if value == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { (a, b) -> Bool in\n        if a.0 == b.0 {\n           \
    \ return a.1 > b.1\n        }\n        return a.0 < b.0\n    })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, col)\
    \ in row.enumerated() {\n            if col == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted { (a, b) -> Bool\
    \ in\n        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n     \
    \   return a.0 < b.0\n    }", "    var result: [(Int, Int)] = []\n    for (row,\
    \ row_lst) in lst.enumerated() {\n        for (col, val) in row_lst.enumerated()\
    \ {\n            if val == x {\n                result.append((row, col))\n  \
    \          }\n        }\n    }\n    return result.sorted {\n        if $0.0 ==\
    \ $1.0 {\n            return $0.1 > $1.1\n        }\n        return $0.0 < $1.0\n\
    \    }", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted { (a, b) -> Bool in\n        if a.0 == b.0 {\n            return\
    \ a.1 > b.1\n        }\n        return a.0 < b.0\n    }", "    var result: [(Int,\
    \ Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item) in\
    \ row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (row, row_lst) in lst.enumerated() {\n        for (column, value) in row_lst.enumerated()\
    \ {\n            if value == x {\n                result.append((row, column))\n\
    \            }\n        }\n    }\n    return result.sorted { (a, b) -> Bool in\n\
    \        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n        return\
    \ a.0 < b.0\n    }", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted { (a, b) -> Bool in\n        if a.0 == b.0 {\n            return\
    \ a.1 > b.1\n        }\n        return a.0 < b.0\n    }", "    var result: [(Int,\
    \ Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item) in\
    \ row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (row, row_lst) in lst.enumerated() {\n        for (col, val) in row_lst.enumerated()\
    \ {\n            if val == x {\n                result.append((row, col))\n  \
    \          }\n        }\n    }\n    return result.sorted(by: {\n        if $0.0\
    \ == $1.0 {\n            return $0.1 > $1.1\n        }\n        return $0.0 <\
    \ $1.0\n    })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, elem)\
    \ in row.enumerated() {\n            if elem == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted { $0.0 < $1.0\
    \ }.sorted { $0.1 > $1.1 }", "    var result = [(Int, Int)]()\n    for (i, row)\
    \ in lst.enumerated() {\n        for (j, item) in row.enumerated() {\n       \
    \     if item == x {\n                result.append((i, j))\n            }\n \
    \       }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1\
    \ > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (row, row_list)\
    \ in lst.enumerated() {\n        for (column, value) in row_list.enumerated()\
    \ {\n            if value == x {\n                result.append((row, column))\n\
    \            }\n        }\n    }\n    return result.sorted(by: {\n        if $0.0\
    \ == $1.0 {\n            return $0.1 > $1.1\n        }\n        return $0.0 <\
    \ $1.0\n    })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (index, row) in lst.enumerated() {\n        for (index2, value) in row.enumerated()\
    \ {\n            if value == x {\n                result.append((index, index2))\n\
    \            }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { (a, b) -> Bool in\n        if a.0 == b.0 {\n           \
    \ return a.1 > b.1\n        }\n        return a.0 < b.0\n    })", "    var result:\
    \ [(Int, Int)] = []\n    for (row, row_list) in lst.enumerated() {\n        for\
    \ (column, value) in row_list.enumerated() {\n            if value == x {\n  \
    \              result.append((row, column))\n            }\n        }\n    }\n\
    \    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", " \
    \   var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n  \
    \      for (j, item) in row.enumerated() {\n            if item == x {\n     \
    \           result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted {\n        if $0.0 == $1.0 {\n            return $0.1 > $1.1\n\
    \        }\n        return $0.0 < $1.0\n    }", "    var result: [(Int, Int)]\
    \ = []\n    for (row, row_list) in lst.enumerated() {\n        for (col, elem)\
    \ in row_list.enumerated() {\n            if elem == x {\n                result.append((row,\
    \ col))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0\
    \ < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n\
    \    for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted(by: { (a, b) -> Bool in\n\
    \        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n        return\
    \ a.0 < b.0\n    })", "    var result: [(Int, Int)] = []\n    for (i, row) in\
    \ lst.enumerated() {\n        for (j, item) in row.enumerated() {\n          \
    \  if item == x {\n                result.append((i, j))\n            }\n    \
    \    }\n    }\n    return result.sorted { (a, b) -> Bool in\n        if a.0 ==\
    \ b.0 {\n            return a.1 > b.1\n        }\n        return a.0 < b.0\n \
    \   }", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted {\n        if $0.0 == $1.0 {\n            return $0.1 > $1.1\n\
    \        }\n        return $0.0 < $1.0\n    }", "    var result: [(Int, Int)]\
    \ = []\n    for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { (a, b) -> Bool in\n        if a.0 == b.0 {\n           \
    \ return a.1 > b.1\n        }\n        return a.0 < b.0\n    })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { (a, b)\
    \ -> Bool in\n        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n\
    \        return a.0 < b.0\n    })", "    var result: [(Int, Int)] = []\n    for\
    \ (row, row_lst) in lst.enumerated() {\n        for (col, val) in row_lst.enumerated()\
    \ {\n            if val == x {\n                result.append((row, col))\n  \
    \          }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (index, row)\
    \ in lst.enumerated() {\n        for (index2, value) in row.enumerated() {\n \
    \           if value == x {\n                result.append((index, index2))\n\
    \            }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (row, row_lst)\
    \ in lst.enumerated() {\n        for (col, num) in row_lst.enumerated() {\n  \
    \          if num == x {\n                result.append((row, col))\n        \
    \    }\n        }\n    }\n    return result.sorted(by: { (a, b) -> Bool in\n \
    \       if a.0 == b.0 {\n            return a.1 > b.1\n        }\n        return\
    \ a.0 < b.0\n    })", "    var result: [(Int, Int)] = []\n    for (i, row) in\
    \ lst.enumerated() {\n        for (j, item) in row.enumerated() {\n          \
    \  if item == x {\n                result.append((i, j))\n            }\n    \
    \    }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1\
    \ > $1.1 })", "    var result: [(Int, Int)] = []\n    for (row, rowArray) in lst.enumerated()\
    \ {\n        for (column, value) in rowArray.enumerated() {\n            if value\
    \ == x {\n                result.append((row, column))\n            }\n      \
    \  }\n    }\n    return result.sorted {\n        if $0.0 == $1.0 {\n         \
    \   return $0.1 > $1.1\n        }\n        return $0.0 < $1.0\n    }", "    var\
    \ result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for\
    \ (j, col) in row.enumerated() {\n            if col == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (row, row_list) in lst.enumerated() {\n        for (column, value) in\
    \ row_list.enumerated() {\n            if value == x {\n                result.append((row,\
    \ column))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0\
    \ < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n\
    \    for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (row, row_lst)\
    \ in lst.enumerated() {\n        for (col, item) in row_lst.enumerated() {\n \
    \           if item == x {\n                result.append((row, col))\n      \
    \      }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted { (a, b) -> Bool\
    \ in\n        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n     \
    \   return a.0 < b.0\n    }", "    var result: [(Int, Int)] = []\n    for (index,\
    \ array) in lst.enumerated() {\n        for (index2, value) in array.enumerated()\
    \ {\n            if value == x {\n                result.append((index, index2))\n\
    \            }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { (a, b) -> Bool in\n        if a.0 == b.0 {\n           \
    \ return a.1 > b.1\n        }\n        return a.0 < b.0\n    })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, col)\
    \ in row.enumerated() {\n            if col == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted {\n        if\
    \ $0.0 == $1.0 {\n            return $0.1 > $1.1\n        }\n        return $0.0\
    \ < $1.0\n    }", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted { (a, b) -> Bool in\n        if a.0 == b.0 {\n            return\
    \ a.1 > b.1\n        }\n        return a.0 < b.0\n    }", "    var result: [(Int,\
    \ Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item) in\
    \ row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted {\n        if $0.0 == $1.0\
    \ {\n            return $0.1 > $1.1\n        }\n        return $0.0 < $1.0\n \
    \   }", "    var result = [(Int, Int)]()\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (row, rowArray) in lst.enumerated() {\n        for\
    \ (col, value) in rowArray.enumerated() {\n            if value == x {\n     \
    \           result.append((row, col))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (row, row_lst) in lst.enumerated() {\n        for (col, item) in row_lst.enumerated()\
    \ {\n            if item == x {\n                result.append((row, col))\n \
    \           }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result = [(Int, Int)]()\n    for (row, rowArray)\
    \ in lst.enumerated() {\n        for (column, value) in rowArray.enumerated()\
    \ {\n            if value == x {\n                result.append((row, column))\n\
    \            }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (row, rowArray)\
    \ in lst.enumerated() {\n        for (column, element) in rowArray.enumerated()\
    \ {\n            if element == x {\n                result.append((row, column))\n\
    \            }\n        }\n    }\n    return result.sorted {\n        if $0.0\
    \ == $1.0 {\n            return $0.1 > $1.1\n        }\n        return $0.0 <\
    \ $1.0\n    }", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, value)\
    \ in row.enumerated() {\n            if value == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { (a, b)\
    \ -> Bool in\n        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n\
    \        return a.0 < b.0\n    })", "    var result: [(Int, Int)] = []\n    for\
    \ (row, rowArray) in lst.enumerated() {\n        for (column, value) in rowArray.enumerated()\
    \ {\n            if value == x {\n                result.append((row, column))\n\
    \            }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, col) in row.enumerated() {\n            if col == x {\n \
    \               result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { (a, b) -> Bool in\n        if a.0 == b.0 {\n           \
    \ return a.1 > b.1\n        }\n        return a.0 < b.0\n    })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (row, row_lst) in lst.enumerated() {\n        for (col, val) in row_lst.enumerated()\
    \ {\n            if val == x {\n                result.append((row, col))\n  \
    \          }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, value) in row.enumerated() {\n            if value == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (index, row) in lst.enumerated() {\n        for (index2,\
    \ item) in row.enumerated() {\n            if item == x {\n                result.append((index,\
    \ index2))\n            }\n        }\n    }\n    return result.sorted(by: { (a,\
    \ b) -> Bool in\n        if a.0 == b.0 {\n            return a.1 > b.1\n     \
    \   }\n        return a.0 < b.0\n    })", "    var result: [(Int, Int)] = []\n\
    \    for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { (a, b) -> Bool in\n        if a.0 == b.0 {\n           \
    \ return a.1 > b.1\n        }\n        return a.0 < b.0\n    })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, value)\
    \ in row.enumerated() {\n            if value == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted {\n        if $0.0 == $1.0\
    \ {\n            return $0.1 > $1.1\n        }\n        return $0.0 < $1.0\n \
    \   }", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, value) in row.enumerated() {\n            if value == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result\
    \ = [(Int, Int)]()\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    result.sort { (a, b) -> Bool in\n        if a.0\
    \ == b.0 {\n            return a.1 > b.1\n        }\n        return a.0 < b.0\n\
    \    }\n    return result", "    var result: [(Int, Int)] = []\n    for (i, row)\
    \ in lst.enumerated() {\n        for (j, item) in row.enumerated() {\n       \
    \     if item == x {\n                result.append((i, j))\n            }\n \
    \       }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1\
    \ > $1.1 })", "    var result: [(Int, Int)] = []\n    for (index, row) in lst.enumerated()\
    \ {\n        for (index2, value) in row.enumerated() {\n            if value ==\
    \ x {\n                result.append((index, index2))\n            }\n       \
    \ }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 >\
    \ $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted {\n        if $0.0 == $1.0\
    \ {\n            return $0.1 > $1.1\n        }\n        return $0.0 < $1.0\n \
    \   }", "    var result: [(Int, Int)] = []\n    for (row, row_list) in lst.enumerated()\
    \ {\n        for (col, item) in row_list.enumerated() {\n            if item ==\
    \ x {\n                result.append((row, col))\n            }\n        }\n \
    \   }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1\
    \ })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { (a, b) -> Bool in\n        if a.0 == b.0 {\n           \
    \ return a.1 > b.1\n        }\n        return a.0 < b.0\n    })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (row, row_lst) in lst.enumerated() {\n        for (column, value) in row_lst.enumerated()\
    \ {\n            if value == x {\n                result.append((row, column))\n\
    \            }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted {\n        if $0.0 == $1.0 {\n            return $0.1 > $1.1\n\
    \        }\n        return $0.0 < $1.0\n    }", "    var result: [(Int, Int)]\
    \ = []\n    for (i, row) in lst.enumerated() {\n        for (j, col) in row.enumerated()\
    \ {\n            if col == x {\n                result.append((i, j))\n      \
    \      }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, col) in row.enumerated() {\n            if col == x {\n \
    \               result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (row, row_lst) in lst.enumerated() {\n        for\
    \ (col, val) in row_lst.enumerated() {\n            if val == x {\n          \
    \      result.append((row, col))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, col) in row.enumerated()\
    \ {\n            if col == x {\n                result.append((i, j))\n      \
    \      }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result = [(Int, Int)]()\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (row, rowList) in lst.enumerated() {\n        for\
    \ (column, element) in rowList.enumerated() {\n            if element == x {\n\
    \                result.append((row, column))\n            }\n        }\n    }\n\
    \    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", " \
    \   var result: [(Int, Int)] = []\n    for (index, row) in lst.enumerated() {\n\
    \        for (index2, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((index, index2))\n            }\n        }\n  \
    \  }\n    return result.sorted { (a, b) -> Bool in\n        if a.0 == b.0 {\n\
    \            return a.1 > b.1\n        }\n        return a.0 < b.0\n    }", " \
    \   var result: [(Int, Int)] = []\n    for (row, row_lst) in lst.enumerated()\
    \ {\n        for (column, item) in row_lst.enumerated() {\n            if item\
    \ == x {\n                result.append((row, column))\n            }\n      \
    \  }\n    }\n    return result.sorted { $0.0 < $1.0 }.sorted { $0.1 > $1.1 }",
  "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n   \
    \     for (j, item) in row.enumerated() {\n            if item == x {\n      \
    \          result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { (a, b) -> Bool in\n        if a.0 == b.0 {\n           \
    \ return a.1 > b.1\n        }\n        return a.0 < b.0\n    })", "    var result:\
    \ [(Int, Int)] = []\n    for (index, row) in lst.enumerated() {\n        for (index2,\
    \ item) in row.enumerated() {\n            if item == x {\n                result.append((index,\
    \ index2))\n            }\n        }\n    }\n    return result.sorted { (a, b)\
    \ -> Bool in\n        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n\
    \        return a.0 < b.0\n    }", "    var result: [(Int, Int)] = []\n    for\
    \ (index, row) in lst.enumerated() {\n        for (index2, value) in row.enumerated()\
    \ {\n            if value == x {\n                result.append((index, index2))\n\
    \            }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted { (a, b) -> Bool in\n        if a.0 < b.0 {\n            return\
    \ true\n        } else if a.0 == b.0 {\n            return a.1 > b.1\n       \
    \ } else {\n            return false\n        }\n    }", "    var result: [(Int,\
    \ Int)] = []\n    for (row, row_list) in lst.enumerated() {\n        for (column,\
    \ value) in row_list.enumerated() {\n            if value == x {\n           \
    \     result.append((row, column))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { (a, b) -> Bool in\n        if a.0 == b.0 {\n           \
    \ return a.1 > b.1\n        }\n        return a.0 < b.0\n    })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, col)\
    \ in row.enumerated() {\n            if col == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted {\n        if\
    \ $0.0 == $1.0 {\n            return $0.1 > $1.1\n        }\n        return $0.0\
    \ < $1.0\n    }", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted { $0.0 < $1.0 }.sorted { $0.1 > $1.1 }", "    var result: [(Int,\
    \ Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, value) in\
    \ row.enumerated() {\n            if value == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: {\n     \
    \   if $0.0 == $1.0 {\n            return $0.1 > $1.1\n        }\n        return\
    \ $0.0 < $1.0\n    })", "    var result: [(Int, Int)] = []\n    for (i, row) in\
    \ lst.enumerated() {\n        for (j, item) in row.enumerated() {\n          \
    \  if item == x {\n                result.append((i, j))\n            }\n    \
    \    }\n    }\n    return result.sorted { $0.0 < $1.0 || ($0.0 == $1.0 && $0.1\
    \ > $1.1) }", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (index, row) in lst.enumerated() {\n        for (index2, value) in row.enumerated()\
    \ {\n            if value == x {\n                result.append((index, index2))\n\
    \            }\n        }\n    }\n    return result.sorted { (a, b) -> Bool in\n\
    \        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n        return\
    \ a.0 < b.0\n    }", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { (a, b) -> Bool in\n        if a.0 == b.0 {\n           \
    \ return a.1 > b.1\n        }\n        return a.0 < b.0\n    })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, col)\
    \ in row.enumerated() {\n            if col == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted { $0.0 < $1.0 }.sorted {\
    \ $0.1 > $1.1 }", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted { $0.0 < $1.0 }.sorted { $0.1 > $1.1 }", "    var result: [(Int,\
    \ Int)] = []\n    for (row, row_lst) in lst.enumerated() {\n        for (column,\
    \ value) in row_lst.enumerated() {\n            if value == x {\n            \
    \    result.append((row, column))\n            }\n        }\n    }\n    return\
    \ result.sorted {\n        if $0.0 == $1.0 {\n            return $0.1 > $1.1\n\
    \        }\n        return $0.0 < $1.0\n    }", "    var result = [(Int, Int)]()\n\
    \    for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted { $0.0 < $1.0 }.sorted {\
    \ $0.1 > $1.1 }", "    var result: [(Int, Int)] = []\n    for (row, row_lst) in\
    \ lst.enumerated() {\n        for (col, item) in row_lst.enumerated() {\n    \
    \        if item == x {\n                result.append((row, col))\n         \
    \   }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (row, row_lst)\
    \ in lst.enumerated() {\n        for (col, item) in row_lst.enumerated() {\n \
    \           if item == x {\n                result.append((row, col))\n      \
    \      }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, value) in row.enumerated() {\n            if value == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, col)\
    \ in row.enumerated() {\n            if col == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted {\n        if $0.0 == $1.0\
    \ {\n            return $0.1 > $1.1\n        }\n        return $0.0 < $1.0\n \
    \   }", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, col) in row.enumerated() {\n            if col == x {\n \
    \               result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, col) in row.enumerated()\
    \ {\n            if col == x {\n                result.append((i, j))\n      \
    \      }\n        }\n    }\n    return result.sorted(by: {\n        if $0.0 ==\
    \ $1.0 {\n            return $0.1 > $1.1\n        }\n        return $0.0 < $1.0\n\
    \    })", "    var result = [(Int, Int)]()\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted { $0.0 < $1.0 }.sorted {\
    \ $0.1 > $1.1 }", "    var result: [(Int, Int)] = []\n    for (row, row_list)\
    \ in lst.enumerated() {\n        for (col, item) in row_list.enumerated() {\n\
    \            if item == x {\n                result.append((row, col))\n     \
    \       }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (index, item)\
    \ in lst.enumerated() {\n        for (index2, item2) in item.enumerated() {\n\
    \            if item2 == x {\n                result.append((index, index2))\n\
    \            }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (row, row_lst) in lst.enumerated() {\n        for (col, val) in row_lst.enumerated()\
    \ {\n            if val == x {\n                result.append((row, col))\n  \
    \          }\n        }\n    }\n    return result.sorted(by: { (a, b) -> Bool\
    \ in\n        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n     \
    \   return a.0 < b.0\n    })", "    var result: [(Int, Int)] = []\n    for (i,\
    \ row) in lst.enumerated() {\n        for (j, value) in row.enumerated() {\n \
    \           if value == x {\n                result.append((i, j))\n         \
    \   }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (row, row_lst)\
    \ in lst.enumerated() {\n        for (col, val) in row_lst.enumerated() {\n  \
    \          if val == x {\n                result.append((row, col))\n        \
    \    }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (row, row_lst)\
    \ in lst.enumerated() {\n        for (column, value) in row_lst.enumerated() {\n\
    \            if value == x {\n                result.append((row, column))\n \
    \           }\n        }\n    }\n    return result.sorted { $0.0 < $1.0 }.sorted\
    \ { $0.1 > $1.1 }", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted {\n        if $0.0 == $1.0 {\n            return $0.1 > $1.1\n\
    \        }\n        return $0.0 < $1.0\n    }", "    var result: [(Int, Int)]\
    \ = []\n    for (row, row_list) in lst.enumerated() {\n        for (column, value)\
    \ in row_list.enumerated() {\n            if value == x {\n                result.append((row,\
    \ column))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0\
    \ < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n\
    \    for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted { (a, b) -> Bool in\n        if a.0 == b.0 {\n            return\
    \ a.1 > b.1\n        }\n        return a.0 < b.0\n    }", "    var result: [(Int,\
    \ Int)] = []\n    for (row, row_list) in lst.enumerated() {\n        for (column,\
    \ value) in row_list.enumerated() {\n            if value == x {\n           \
    \     result.append((row, column))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { (a, b)\
    \ -> Bool in\n        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n\
    \        return a.0 < b.0\n    })", "    var result: [(Int, Int)] = []\n    for\
    \ (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated() {\n\
    \            if item == x {\n                result.append((i, j))\n         \
    \   }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: {\n        if $0.0 == $1.0 {\n            return $0.1 > $1.1\n\
    \        }\n        return $0.0 < $1.0\n    })", "    var result: [(Int, Int)]\
    \ = []\n    for (row, row_lst) in lst.enumerated() {\n        for (col, val) in\
    \ row_lst.enumerated() {\n            if val == x {\n                result.append((row,\
    \ col))\n            }\n        }\n    }\n    return result.sorted(by: { (a, b)\
    \ -> Bool in\n        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n\
    \        return a.0 < b.0\n    })", "    var result = [(Int, Int)]()\n    for\
    \ (i, row) in lst.enumerated() {\n        for (j, elem) in row.enumerated() {\n\
    \            if elem == x {\n                result.append((i, j))\n         \
    \   }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (index, row)\
    \ in lst.enumerated() {\n        for (index2, value) in row.enumerated() {\n \
    \           if value == x {\n                result.append((index, index2))\n\
    \            }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (row, rowList) in lst.enumerated() {\n        for\
    \ (column, value) in rowList.enumerated() {\n            if value == x {\n   \
    \             result.append((row, column))\n            }\n        }\n    }\n\
    \    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", " \
    \   var result = [(Int, Int)]()\n    for (row, row_lst) in lst.enumerated() {\n\
    \        for (col, item) in row_lst.enumerated() {\n            if item == x {\n\
    \                result.append((row, col))\n            }\n        }\n    }\n\
    \    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", " \
    \   var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n  \
    \      for (j, item) in row.enumerated() {\n            if item == x {\n     \
    \           result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted { (a, b) -> Bool\
    \ in\n        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n     \
    \   return a.0 < b.0\n    }", "    var result: [(Int, Int)] = []\n    for (i,\
    \ row) in lst.enumerated() {\n        for (j, item) in row.enumerated() {\n  \
    \          if item == x {\n                result.append((i, j))\n           \
    \ }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (row, row_list)\
    \ in lst.enumerated() {\n        for (column, value) in row_list.enumerated()\
    \ {\n            if value == x {\n                result.append((row, column))\n\
    \            }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, col) in row.enumerated() {\n            if col == x {\n \
    \               result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, val)\
    \ in row.enumerated() {\n            if val == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted { $0.0 < $1.0\
    \ }.sorted { $0.1 > $1.1 }", "    var result: [(Int, Int)] = []\n    for (index,\
    \ row) in lst.enumerated() {\n        for (index2, value) in row.enumerated()\
    \ {\n            if value == x {\n                result.append((index, index2))\n\
    \            }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { (a, b) -> Bool in\n        if a.0 == b.0 {\n           \
    \ return a.1 > b.1\n        }\n        return a.0 < b.0\n    })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, col)\
    \ in row.enumerated() {\n            if col == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (row, row_lst) in lst.enumerated() {\n        for (col, item) in row_lst.enumerated()\
    \ {\n            if item == x {\n                result.append((row, col))\n \
    \           }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    return\
    \ lst.enumerated().flatMap { (row, cols) -> [(Int, Int)] in\n        cols.enumerated().filter\
    \ { $0.element == x }.map { (row, $0.offset) }\n    }.sorted { $0.0 < $1.0 ||\
    \ ($0.0 == $1.0 && $0.1 > $1.1) }", "    var result = [(Int, Int)]()\n    for\
    \ (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated() {\n\
    \            if item == x {\n                result.append((i, j))\n         \
    \   }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (row, row_lst)\
    \ in lst.enumerated() {\n        for (col, num) in row_lst.enumerated() {\n  \
    \          if num == x {\n                result.append((row, col))\n        \
    \    }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result = [(Int, Int)]()\n   \
    \ for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (row, row_lst) in lst.enumerated() {\n        for\
    \ (col, item) in row_lst.enumerated() {\n            if item == x {\n        \
    \        result.append((row, col))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { (a, b) -> Bool in\n        if a.0 == b.0 {\n           \
    \ return a.1 > b.1\n        }\n        return a.0 < b.0\n    })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted {\n        if\
    \ $0.0 == $1.0 {\n            return $0.1 > $1.1\n        }\n        return $0.0\
    \ < $1.0\n    }", "    var result: [(Int, Int)] = []\n    for (row, rowList) in\
    \ lst.enumerated() {\n        for (col, value) in rowList.enumerated() {\n   \
    \         if value == x {\n                result.append((row, col))\n       \
    \     }\n        }\n    }\n    return result.sorted(by: { (a, b) -> Bool in\n\
    \        if a.0 == b.0 {\n            return a.1 > b.1\n        }\n        return\
    \ a.0 < b.0\n    })", "    var result: [(Int, Int)] = []\n    for (i, row) in\
    \ lst.enumerated() {\n        for (j, item) in row.enumerated() {\n          \
    \  if item == x {\n                result.append((i, j))\n            }\n    \
    \    }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1\
    \ > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (row, row_lst) in lst.enumerated() {\n        for\
    \ (col, item) in row_lst.enumerated() {\n            if item == x {\n        \
    \        result.append((row, col))\n            }\n        }\n    }\n    return\
    \ result.sorted {\n        if $0.0 == $1.0 {\n            return $0.1 > $1.1\n\
    \        }\n        return $0.0 < $1.0\n    }", "    var result: [(Int, Int)]\
    \ = []\n    for (row, row_list) in lst.enumerated() {\n        for (col, item)\
    \ in row_list.enumerated() {\n            if item == x {\n                result.append((row,\
    \ col))\n            }\n        }\n    }\n    return result.sorted(by: { (t1,\
    \ t2) -> Bool in\n        if t1.0 == t2.0 {\n            return t1.1 > t2.1\n\
    \        }\n        return t1.0 < t2.0\n    })", "    var result: [(Int, Int)]\
    \ = []\n    for (i, row) in lst.enumerated() {\n        for (j, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((i, j))\n     \
    \       }\n        }\n    }\n    return result.sorted {\n        if $0.0 == $1.0\
    \ {\n            return $0.1 > $1.1\n        }\n        return $0.0 < $1.0\n \
    \   }", "    var result: [(Int, Int)] = []\n    for (row, row_lst) in lst.enumerated()\
    \ {\n        for (col, val) in row_lst.enumerated() {\n            if val == x\
    \ {\n                result.append((row, col))\n            }\n        }\n   \
    \ }\n    return result.sorted(by: { (a, b) -> Bool in\n        if a.0 == b.0 {\n\
    \            return a.1 > b.1\n        }\n        return a.0 < b.0\n    })", " \
    \   var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n  \
    \      for (j, item) in row.enumerated() {\n            if item == x {\n     \
    \           result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 })\n        .sorted(by: { $0.1 > $1.1 })", " \
    \   var result: [(Int, Int)] = []\n    for (index, row) in lst.enumerated() {\n\
    \        for (index2, element) in row.enumerated() {\n            if element ==\
    \ x {\n                result.append((index, index2))\n            }\n       \
    \ }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 >\
    \ $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (i, row) in lst.enumerated() {\n        for (j, item)\
    \ in row.enumerated() {\n            if item == x {\n                result.append((i,\
    \ j))\n            }\n        }\n    }\n    return result.sorted(by: { $0.0 <\
    \ $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n \
    \   for (row, row_list) in lst.enumerated() {\n        for (column, value) in\
    \ row_list.enumerated() {\n            if value == x {\n                result.append((row,\
    \ column))\n            }\n        }\n    }\n    return result.sorted {\n    \
    \    if $0.0 == $1.0 {\n            return $0.1 > $1.1\n        }\n        return\
    \ $0.0 < $1.0\n    }", "    var result: [(Int, Int)] = []\n    for (i, row) in\
    \ lst.enumerated() {\n        for (j, element) in row.enumerated() {\n       \
    \     if element == x {\n                result.append((i, j))\n            }\n\
    \        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by: {\
    \ $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (row, rowArray)\
    \ in lst.enumerated() {\n        for (column, value) in rowArray.enumerated()\
    \ {\n            if value == x {\n                result.append((row, column))\n\
    \            }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result: [(Int, Int)] = []\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted {\n        if $0.0 == $1.0 {\n            return $0.1 > $1.1\n\
    \        }\n        return $0.0 < $1.0\n    }", "    var result = [(Int, Int)]()\n\
    \    for (index, row) in lst.enumerated() {\n        for (index2, item) in row.enumerated()\
    \ {\n            if item == x {\n                result.append((index, index2))\n\
    \            }\n        }\n    }\n    return result.sorted(by: { $0.0 < $1.0 }).sorted(by:\
    \ { $0.1 > $1.1 })", "    var result = [(Int, Int)]()\n    for (i, row) in lst.enumerated()\
    \ {\n        for (j, item) in row.enumerated() {\n            if item == x {\n\
    \                result.append((i, j))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: { $0.0 < $1.0 }).sorted(by: { $0.1 > $1.1 })", "    var result:\
    \ [(Int, Int)] = []\n    for (row, row_lst) in lst.enumerated() {\n        for\
    \ (col, item) in row_lst.enumerated() {\n            if item == x {\n        \
    \        result.append((row, col))\n            }\n        }\n    }\n    return\
    \ result.sorted(by: {\n        if $0.0 == $1.0 {\n            return $0.1 > $1.1\n\
    \        }\n        return $0.0 < $1.0\n    })"]
stop_tokens:
- "\n}"

language: swift
name: HumanEval_146_specialFilter
results:
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb0u11ns1/tmpb0u11ns1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba008899c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba008590b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba008590988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba00858f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb0u11ns1                        0x000055f5dbe4e6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ba008a85460 __libc_start_main +
    245

    6    tmpb0u11ns1                        0x000055f5dbe4e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n   \
    \     $0 % 10 % 2 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpk9g8zfe1/tmpk9g8zfe1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0012737c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b001242eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b001242e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b001242d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk9g8zfe1                        0x00005652a1802674 <unavailable> + 5748

    5    libc.so.6                          0x00002b0012923460 __libc_start_main +
    245

    6    tmpk9g8zfe1                        0x00005652a1802129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0}).count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp4o9unam5.swift:9:39: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter({$0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0}).count\n                                   ~~ ^~~~~~~~~~\n/tmp/tmp4o9unam5.swift:9:67:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0}).count\n      \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0 % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpr__s9wwx/tmpr__s9wwx.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac865a28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac86571fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac86571f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac86571e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr__s9wwx                        0x0000560889019674 <unavailable> + 5748

    5    libc.so.6                          0x00002ac865c14460 __libc_start_main +
    245

    6    tmpr__s9wwx                        0x0000560889019129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpky63dyh0.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpky63dyh0.swift:10:49: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit\
    \ % 2 != 0 && $0.lastDigit % 2 != 0\n                                        \
    \     ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmprohjg9_0.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmprohjg9_0.swift:9:68:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n \
    \                                                               ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpii9gwesm/tmpii9gwesm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ec60c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ec5db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ec5db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ec5db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii9gwesm                        0x000055b0be39c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ec62ae460 __libc_start_main +
    245

    6    tmpii9gwesm                        0x000055b0be39c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0 % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpr__s9wwx/tmpr__s9wwx.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac865a28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac86571fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac86571f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac86571e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr__s9wwx                        0x0000560889019674 <unavailable> + 5748

    5    libc.so.6                          0x00002ac865c14460 __libc_start_main +
    245

    6    tmpr__s9wwx                        0x0000560889019129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpii9gwesm/tmpii9gwesm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ec60c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ec5db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ec5db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ec5db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii9gwesm                        0x000055b0be39c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ec62ae460 __libc_start_main +
    245

    6    tmpii9gwesm                        0x000055b0be39c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\
    \ (num) -> Bool in\n        let firstDigit = num / 10\n        let lastDigit =\
    \ num % 10\n        return num > 10 && firstDigit % 2 != 0 && lastDigit % 2 !=\
    \ 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6yogvtdi/tmp6yogvtdi.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae223845c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae22353cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae22353c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae22353b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6yogvtdi                        0x00005564f3b0f674 <unavailable> + 5748

    5    libc.so.6                          0x00002ae223a31460 __libc_start_main +
    245

    6    tmp6yogvtdi                        0x00005564f3b0f129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\
    \ (num) -> Bool in\n        return num > 10 && (num % 10) % 2 != 0 && (num / 10)\
    \ % 2 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmphni8ll92/tmphni8ll92.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac732ae8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac7327dfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac7327df988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac7327de7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphni8ll92                        0x000055bc865a8674 <unavailable> + 5748

    5    libc.so.6                          0x00002ac732cd4460 __libc_start_main +
    245

    6    tmphni8ll92                        0x000055bc865a8129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0.firstDigit % 2 != 0 &&\n        $0.lastDigit\
    \ % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2w57nnkg.swift:11:12: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0.firstDigit % 2 != 0 &&\n        ~~ ^~~~~~~~~~\n/tmp/tmp2w57nnkg.swift:12:12:\
    \ error: value of type 'Int' has no member 'lastDigit'\n        $0.lastDigit %\
    \ 2 != 0\n        ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0 % 2 != 0 && $0 / 10 % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmphrl07oms/tmphrl07oms.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad4c96b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad4c93aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad4c93aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad4c93a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphrl07oms                        0x000055df3dceb674 <unavailable> + 5748

    5    libc.so.6                          0x00002ad4c989f460 __libc_start_main +
    245

    6    tmphrl07oms                        0x000055df3dceb129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpz4ymibv4.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpz4ymibv4.swift:10:49: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit\
    \ % 2 != 0 && $0.lastDigit % 2 != 0\n                                        \
    \     ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa0jn1xdr/tmpa0jn1xdr.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7f3ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a7c31b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a7c31988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a7c307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa0jn1xdr                        0x0000561cec3ef6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ab0a8126460 __libc_start_main +
    245

    6    tmpa0jn1xdr                        0x0000561cec3ef169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpw6f0dazl/tmpw6f0dazl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d5546fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d55166b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d55166988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d551657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6f0dazl                        0x000055aba26d43d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b9d5565b460 __libc_start_main +
    245

    6    tmpw6f0dazl                        0x000055aba26d3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 % 10 != 0\n    }).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp16ng3ce2/tmp16ng3ce2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba02ca9dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba02c794b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba02c794988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba02c7937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp16ng3ce2                        0x00005631ed09c674 <unavailable> + 5748

    5    libc.so.6                          0x00002ba02cc89460 __libc_start_main +
    245

    6    tmp16ng3ce2                        0x00005631ed09c129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb0u11ns1/tmpb0u11ns1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba008899c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba008590b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba008590988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba00858f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb0u11ns1                        0x000055f5dbe4e6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ba008a85460 __libc_start_main +
    245

    6    tmpb0u11ns1                        0x000055f5dbe4e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmprohjg9_0.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmprohjg9_0.swift:9:68:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n \
    \                                                               ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 % 10 != 0\n    }).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp16ng3ce2/tmp16ng3ce2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba02ca9dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba02c794b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba02c794988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba02c7937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp16ng3ce2                        0x00005631ed09c674 <unavailable> + 5748

    5    libc.so.6                          0x00002ba02cc89460 __libc_start_main +
    245

    6    tmp16ng3ce2                        0x00005631ed09c129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0\n    }).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpjqaasuns.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpjqaasuns.swift:10:51: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit()\
    \ % 2 != 0 && $0.lastDigit() % 2 != 0\n                                      \
    \         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb0u11ns1/tmpb0u11ns1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba008899c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba008590b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba008590988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba00858f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb0u11ns1                        0x000055f5dbe4e6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ba008a85460 __libc_start_main +
    245

    6    tmpb0u11ns1                        0x000055f5dbe4e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0}).count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp4o9unam5.swift:9:39: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter({$0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0}).count\n                                   ~~ ^~~~~~~~~~\n/tmp/tmp4o9unam5.swift:9:67:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0}).count\n      \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa0jn1xdr/tmpa0jn1xdr.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7f3ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a7c31b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a7c31988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a7c307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa0jn1xdr                        0x0000561cec3ef6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ab0a8126460 __libc_start_main +
    245

    6    tmpa0jn1xdr                        0x0000561cec3ef169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit.isOdd && $0.lastDigit.isOdd }.count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbqqgy00f.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit.isOdd && $0.lastDigit.isOdd\
    \ }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpbqqgy00f.swift:9:63:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit.isOdd && $0.lastDigit.isOdd }.count\n           \
    \                                                ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0 % 2 != 0 && $0 / 10 % 2 != 0 && $0 % 10 % 2 != 0 }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6802llwj/tmp6802llwj.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d8a62dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d8a324b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d8a324988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d8a3237b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6802llwj                        0x000055e58d4e5674 <unavailable> + 5748

    5    libc.so.6                          0x00002b7d8a819460 __libc_start_main +
    245

    6    tmp6802llwj                        0x000055e58d4e5129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpii9gwesm/tmpii9gwesm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ec60c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ec5db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ec5db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ec5db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii9gwesm                        0x000055b0be39c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ec62ae460 __libc_start_main +
    245

    6    tmpii9gwesm                        0x000055b0be39c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0 % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpr__s9wwx/tmpr__s9wwx.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac865a28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac86571fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac86571f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac86571e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr__s9wwx                        0x0000560889019674 <unavailable> + 5748

    5    libc.so.6                          0x00002ac865c14460 __libc_start_main +
    245

    6    tmpr__s9wwx                        0x0000560889019129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpw6f0dazl/tmpw6f0dazl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d5546fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d55166b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d55166988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d551657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6f0dazl                        0x000055aba26d43d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b9d5565b460 __libc_start_main +
    245

    6    tmpw6f0dazl                        0x000055aba26d3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0 % 2 != 0 && $0 / 10 % 2 != 0 && $0 % 10 % 2 != 0 }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6802llwj/tmp6802llwj.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d8a62dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d8a324b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d8a324988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d8a3237b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6802llwj                        0x000055e58d4e5674 <unavailable> + 5748

    5    libc.so.6                          0x00002b7d8a819460 __libc_start_main +
    245

    6    tmp6802llwj                        0x000055e58d4e5129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 % 10 != 0 &&\n   \
    \     $0 / 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpvn75be1y/tmpvn75be1y.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae02e181c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae02de78b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae02de78988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae02de777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvn75be1y                        0x000055a16a520674 <unavailable> + 5748

    5    libc.so.6                          0x00002ae02e36d460 __libc_start_main +
    245

    6    tmpvn75be1y                        0x000055a16a520129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpky63dyh0.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpky63dyh0.swift:10:49: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit\
    \ % 2 != 0 && $0.lastDigit % 2 != 0\n                                        \
    \     ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa0jn1xdr/tmpa0jn1xdr.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7f3ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a7c31b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a7c31988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a7c307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa0jn1xdr                        0x0000561cec3ef6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ab0a8126460 __libc_start_main +
    245

    6    tmpa0jn1xdr                        0x0000561cec3ef169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n   \
    \     $0 % 10 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp1z1chbsf/tmp1z1chbsf.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b53bd6bcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b53bd3b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b53bd3b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b53bd3b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1z1chbsf                        0x00005563c6cfc674 <unavailable> + 5748

    5    libc.so.6                          0x00002b53bd8a8460 __libc_start_main +
    245

    6    tmp1z1chbsf                        0x00005563c6cfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\
    \ (num) -> Bool in\n        if num > 10 {\n            let firstDigit = num /\
    \ 10\n            let lastDigit = num % 10\n            return firstDigit % 2\
    \ != 0 && lastDigit % 2 != 0\n        }\n        return false\n    }).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp8722wviw/tmp8722wviw.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acaf4444c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acaf413bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acaf413b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acaf413a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8722wviw                        0x0000560db1590674 <unavailable> + 5748

    5    libc.so.6                          0x00002acaf4630460 __libc_start_main +
    245

    6    tmp8722wviw                        0x0000560db1590129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmprohjg9_0.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmprohjg9_0.swift:9:68:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n \
    \                                                               ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n   \
    \     $0 % 10 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp1z1chbsf/tmp1z1chbsf.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b53bd6bcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b53bd3b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b53bd3b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b53bd3b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1z1chbsf                        0x00005563c6cfc674 <unavailable> + 5748

    5    libc.so.6                          0x00002b53bd8a8460 __libc_start_main +
    245

    6    tmp1z1chbsf                        0x00005563c6cfc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpii9gwesm/tmpii9gwesm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ec60c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ec5db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ec5db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ec5db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii9gwesm                        0x000055b0be39c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ec62ae460 __libc_start_main +
    245

    6    tmpii9gwesm                        0x000055b0be39c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa0jn1xdr/tmpa0jn1xdr.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7f3ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a7c31b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a7c31988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a7c307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa0jn1xdr                        0x0000561cec3ef6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ab0a8126460 __libc_start_main +
    245

    6    tmpa0jn1xdr                        0x0000561cec3ef169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpky63dyh0.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpky63dyh0.swift:10:49: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit\
    \ % 2 != 0 && $0.lastDigit % 2 != 0\n                                        \
    \     ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0 % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpr__s9wwx/tmpr__s9wwx.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac865a28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac86571fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac86571f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac86571e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr__s9wwx                        0x0000560889019674 <unavailable> + 5748

    5    libc.so.6                          0x00002ac865c14460 __libc_start_main +
    245

    6    tmpr__s9wwx                        0x0000560889019129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 && $0 % 2 != 0 && $0 / 10 % 2 != 0 && $0 % 10 != 0\n    }).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp5wcidfra/tmp5wcidfra.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b71e51c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b71e4ebbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b71e4ebb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b71e4eba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5wcidfra                        0x000055f13884e674 <unavailable> + 5748

    5    libc.so.6                          0x00002b71e53b0460 __libc_start_main +
    245

    6    tmp5wcidfra                        0x000055f13884e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmprohjg9_0.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmprohjg9_0.swift:9:68:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n \
    \                                                               ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0}).count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp4o9unam5.swift:9:39: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter({$0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0}).count\n                                   ~~ ^~~~~~~~~~\n/tmp/tmp4o9unam5.swift:9:67:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0}).count\n      \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n   \
    \     $0 % 10 % 2 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpk9g8zfe1/tmpk9g8zfe1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0012737c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b001242eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b001242e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b001242d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk9g8zfe1                        0x00005652a1802674 <unavailable> + 5748

    5    libc.so.6                          0x00002b0012923460 __libc_start_main +
    245

    6    tmpk9g8zfe1                        0x00005652a1802129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpky63dyh0.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpky63dyh0.swift:10:49: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit\
    \ % 2 != 0 && $0.lastDigit % 2 != 0\n                                        \
    \     ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\
    \ $0 > 10 && $0 % 2 != 0 && $0 % 10 != 0 }).count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp7vlqsr4b/tmp7vlqsr4b.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60cf117c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60cee0eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60cee0e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60cee0d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7vlqsr4b                        0x0000562096164674 <unavailable> + 5748

    5    libc.so.6                          0x00002b60cf303460 __libc_start_main +
    245

    6    tmp7vlqsr4b                        0x0000562096164129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0 % 2 != 0 && $0 % 10 != 0 }.count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv41dj9yc/tmpv41dj9yc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3172f34c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3172c2bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3172c2b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3172c2a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv41dj9yc                        0x000055b00ede7674 <unavailable> + 5748

    5    libc.so.6                          0x00002b3173120460 __libc_start_main +
    245

    6    tmpv41dj9yc                        0x000055b00ede7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\
    \ $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }).count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpxzfe1h9z.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter({ $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }).count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpxzfe1h9z.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({\
    \ $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }).count\n      \
    \                                                        ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpii9gwesm/tmpii9gwesm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ec60c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ec5db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ec5db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ec5db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii9gwesm                        0x000055b0be39c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ec62ae460 __libc_start_main +
    245

    6    tmpii9gwesm                        0x000055b0be39c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpw6f0dazl/tmpw6f0dazl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d5546fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d55166b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d55166988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d551657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6f0dazl                        0x000055aba26d43d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b9d5565b460 __libc_start_main +
    245

    6    tmpw6f0dazl                        0x000055aba26d3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpw6f0dazl/tmpw6f0dazl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d5546fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d55166b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d55166988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d551657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6f0dazl                        0x000055aba26d43d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b9d5565b460 __libc_start_main +
    245

    6    tmpw6f0dazl                        0x000055aba26d3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 && $0 % 2 != 0 && $0 % 10 != 0\n    }).count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp4xe9r901/tmp4xe9r901.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6326e25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6326b1cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6326b1c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6326b1b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4xe9r901                        0x000055cc4ab6b674 <unavailable> + 5748

    5    libc.so.6                          0x00002b6327011460 __libc_start_main +
    245

    6    tmp4xe9r901                        0x000055cc4ab6b129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        var num = $0\n        return $0 > 10 && num % 2 != 0 && num / 10 % 2\
    \ != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpcxhsqg90/tmpcxhsqg90.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b59f0c92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b59f0989b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b59f0989988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b59f09887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcxhsqg90                        0x0000555da776d674 <unavailable> + 5748

    5    libc.so.6                          0x00002b59f0e7e460 __libc_start_main +
    245

    6    tmpcxhsqg90                        0x0000555da776d129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpw6f0dazl/tmpw6f0dazl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d5546fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d55166b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d55166988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d551657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6f0dazl                        0x000055aba26d43d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b9d5565b460 __libc_start_main +
    245

    6    tmpw6f0dazl                        0x000055aba26d3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpky63dyh0.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpky63dyh0.swift:10:49: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit\
    \ % 2 != 0 && $0.lastDigit % 2 != 0\n                                        \
    \     ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0 % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpr__s9wwx/tmpr__s9wwx.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac865a28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac86571fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac86571f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac86571e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr__s9wwx                        0x0000560889019674 <unavailable> + 5748

    5    libc.so.6                          0x00002ac865c14460 __libc_start_main +
    245

    6    tmpr__s9wwx                        0x0000560889019129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 % 10 != 0\n    }).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp16ng3ce2/tmp16ng3ce2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba02ca9dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba02c794b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba02c794988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba02c7937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp16ng3ce2                        0x00005631ed09c674 <unavailable> + 5748

    5    libc.so.6                          0x00002ba02cc89460 __libc_start_main +
    245

    6    tmp16ng3ce2                        0x00005631ed09c129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa0jn1xdr/tmpa0jn1xdr.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7f3ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a7c31b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a7c31988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a7c307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa0jn1xdr                        0x0000561cec3ef6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ab0a8126460 __libc_start_main +
    245

    6    tmpa0jn1xdr                        0x0000561cec3ef169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb0u11ns1/tmpb0u11ns1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba008899c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba008590b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba008590988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba00858f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb0u11ns1                        0x000055f5dbe4e6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ba008a85460 __libc_start_main +
    245

    6    tmpb0u11ns1                        0x000055f5dbe4e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa0jn1xdr/tmpa0jn1xdr.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7f3ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a7c31b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a7c31988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a7c307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa0jn1xdr                        0x0000561cec3ef6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ab0a8126460 __libc_start_main +
    245

    6    tmpa0jn1xdr                        0x0000561cec3ef169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 && $0 % 2 != 0 && $0 % 10 != 0\n    }).count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp4xe9r901/tmp4xe9r901.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6326e25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6326b1cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6326b1c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6326b1b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4xe9r901                        0x000055cc4ab6b674 <unavailable> + 5748

    5    libc.so.6                          0x00002b6327011460 __libc_start_main +
    245

    6    tmp4xe9r901                        0x000055cc4ab6b129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpky63dyh0.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpky63dyh0.swift:10:49: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit\
    \ % 2 != 0 && $0.lastDigit % 2 != 0\n                                        \
    \     ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpz4ymibv4.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpz4ymibv4.swift:10:49: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit\
    \ % 2 != 0 && $0.lastDigit % 2 != 0\n                                        \
    \     ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 && $0 % 2 != 0 && $0 / 10 % 2 != 0 && $0 % 10 != 0\n    }).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp5wcidfra/tmp5wcidfra.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b71e51c4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b71e4ebbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b71e4ebb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b71e4eba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5wcidfra                        0x000055f13884e674 <unavailable> + 5748

    5    libc.so.6                          0x00002b71e53b0460 __libc_start_main +
    245

    6    tmp5wcidfra                        0x000055f13884e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpii9gwesm/tmpii9gwesm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ec60c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ec5db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ec5db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ec5db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii9gwesm                        0x000055b0be39c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ec62ae460 __libc_start_main +
    245

    6    tmpii9gwesm                        0x000055b0be39c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpw6f0dazl/tmpw6f0dazl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d5546fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d55166b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d55166988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d551657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6f0dazl                        0x000055aba26d43d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b9d5565b460 __libc_start_main +
    245

    6    tmpw6f0dazl                        0x000055aba26d3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0 % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpr__s9wwx/tmpr__s9wwx.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac865a28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac86571fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac86571f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac86571e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr__s9wwx                        0x0000560889019674 <unavailable> + 5748

    5    libc.so.6                          0x00002ac865c14460 __libc_start_main +
    245

    6    tmpr__s9wwx                        0x0000560889019129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 % 10 != 0\n    }).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp16ng3ce2/tmp16ng3ce2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba02ca9dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba02c794b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba02c794988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba02c7937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp16ng3ce2                        0x00005631ed09c674 <unavailable> + 5748

    5    libc.so.6                          0x00002ba02cc89460 __libc_start_main +
    245

    6    tmp16ng3ce2                        0x00005631ed09c129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0}).count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp4o9unam5.swift:9:39: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter({$0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0}).count\n                                   ~~ ^~~~~~~~~~\n/tmp/tmp4o9unam5.swift:9:67:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0}).count\n      \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpky63dyh0.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpky63dyh0.swift:10:49: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit\
    \ % 2 != 0 && $0.lastDigit % 2 != 0\n                                        \
    \     ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb0u11ns1/tmpb0u11ns1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba008899c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba008590b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba008590988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba00858f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb0u11ns1                        0x000055f5dbe4e6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ba008a85460 __libc_start_main +
    245

    6    tmpb0u11ns1                        0x000055f5dbe4e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpw6f0dazl/tmpw6f0dazl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d5546fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d55166b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d55166988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d551657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6f0dazl                        0x000055aba26d43d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b9d5565b460 __libc_start_main +
    245

    6    tmpw6f0dazl                        0x000055aba26d3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpii9gwesm/tmpii9gwesm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ec60c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ec5db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ec5db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ec5db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii9gwesm                        0x000055b0be39c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ec62ae460 __libc_start_main +
    245

    6    tmpii9gwesm                        0x000055b0be39c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n   \
    \     $0 % 10 % 2 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpk9g8zfe1/tmpk9g8zfe1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0012737c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b001242eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b001242e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b001242d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk9g8zfe1                        0x00005652a1802674 <unavailable> + 5748

    5    libc.so.6                          0x00002b0012923460 __libc_start_main +
    245

    6    tmpk9g8zfe1                        0x00005652a1802129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpky63dyh0.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpky63dyh0.swift:10:49: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit\
    \ % 2 != 0 && $0.lastDigit % 2 != 0\n                                        \
    \     ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\
    \ $0 > 10 && isFirstAndLastDigitOdd($0) }).count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpbyp6dikt.swift:9:37: error: cannot find 'isFirstAndLastDigitOdd'\
    \ in scope\n    return nums.filter({ $0 > 10 && isFirstAndLastDigitOdd($0) }).count\n\
    \                                    ^~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpw6f0dazl/tmpw6f0dazl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d5546fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d55166b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d55166988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d551657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6f0dazl                        0x000055aba26d43d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b9d5565b460 __libc_start_main +
    245

    6    tmpw6f0dazl                        0x000055aba26d3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpii9gwesm/tmpii9gwesm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ec60c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ec5db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ec5db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ec5db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii9gwesm                        0x000055b0be39c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ec62ae460 __libc_start_main +
    245

    6    tmpii9gwesm                        0x000055b0be39c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpii9gwesm/tmpii9gwesm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ec60c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ec5db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ec5db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ec5db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii9gwesm                        0x000055b0be39c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ec62ae460 __libc_start_main +
    245

    6    tmpii9gwesm                        0x000055b0be39c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    let filtered =\
    \ nums.filter { $0 > 10 && $0 % 2 != 0 && $0 % 10 != 0 }\n    return filtered.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpqej5318l/tmpqej5318l.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b71b1f6ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b71b1c61b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b71b1c61988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b71b1c607b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqej5318l                        0x000055848e250674 <unavailable> + 5748

    5    libc.so.6                          0x00002b71b2156460 __libc_start_main +
    245

    6    tmpqej5318l                        0x000055848e250129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpii9gwesm/tmpii9gwesm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ec60c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ec5db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ec5db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ec5db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii9gwesm                        0x000055b0be39c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ec62ae460 __libc_start_main +
    245

    6    tmpii9gwesm                        0x000055b0be39c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb0u11ns1/tmpb0u11ns1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba008899c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba008590b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba008590988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba00858f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb0u11ns1                        0x000055f5dbe4e6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ba008a85460 __libc_start_main +
    245

    6    tmpb0u11ns1                        0x000055f5dbe4e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpw6f0dazl/tmpw6f0dazl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d5546fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d55166b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d55166988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d551657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6f0dazl                        0x000055aba26d43d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b9d5565b460 __libc_start_main +
    245

    6    tmpw6f0dazl                        0x000055aba26d3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa0jn1xdr/tmpa0jn1xdr.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7f3ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a7c31b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a7c31988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a7c307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa0jn1xdr                        0x0000561cec3ef6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ab0a8126460 __libc_start_main +
    245

    6    tmpa0jn1xdr                        0x0000561cec3ef169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpw6f0dazl/tmpw6f0dazl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d5546fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d55166b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d55166988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d551657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6f0dazl                        0x000055aba26d43d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b9d5565b460 __libc_start_main +
    245

    6    tmpw6f0dazl                        0x000055aba26d3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb0u11ns1/tmpb0u11ns1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba008899c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba008590b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba008590988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba00858f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb0u11ns1                        0x000055f5dbe4e6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ba008a85460 __libc_start_main +
    245

    6    tmpb0u11ns1                        0x000055f5dbe4e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb0u11ns1/tmpb0u11ns1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba008899c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba008590b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba008590988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba00858f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb0u11ns1                        0x000055f5dbe4e6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ba008a85460 __libc_start_main +
    245

    6    tmpb0u11ns1                        0x000055f5dbe4e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmprohjg9_0.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmprohjg9_0.swift:9:68:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n \
    \                                                               ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb0u11ns1/tmpb0u11ns1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba008899c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba008590b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba008590988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba00858f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb0u11ns1                        0x000055f5dbe4e6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ba008a85460 __libc_start_main +
    245

    6    tmpb0u11ns1                        0x000055f5dbe4e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpw6f0dazl/tmpw6f0dazl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d5546fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d55166b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d55166988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d551657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6f0dazl                        0x000055aba26d43d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b9d5565b460 __libc_start_main +
    245

    6    tmpw6f0dazl                        0x000055aba26d3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0}).count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmppvssj3vw.swift:9:39: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter({$0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0}).count\n                                   ~~ ^~~~~~~~~~\n/tmp/tmppvssj3vw.swift:9:65:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0}).count\n          \
    \                                                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb0u11ns1/tmpb0u11ns1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba008899c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba008590b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba008590988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba00858f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb0u11ns1                        0x000055f5dbe4e6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ba008a85460 __libc_start_main +
    245

    6    tmpb0u11ns1                        0x000055f5dbe4e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0}).count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmppvssj3vw.swift:9:39: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter({$0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0}).count\n                                   ~~ ^~~~~~~~~~\n/tmp/tmppvssj3vw.swift:9:65:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0}).count\n          \
    \                                                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa0jn1xdr/tmpa0jn1xdr.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7f3ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a7c31b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a7c31988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a7c307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa0jn1xdr                        0x0000561cec3ef6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ab0a8126460 __libc_start_main +
    245

    6    tmpa0jn1xdr                        0x0000561cec3ef169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpii9gwesm/tmpii9gwesm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ec60c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ec5db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ec5db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ec5db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii9gwesm                        0x000055b0be39c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ec62ae460 __libc_start_main +
    245

    6    tmpii9gwesm                        0x000055b0be39c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpw6f0dazl/tmpw6f0dazl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d5546fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d55166b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d55166988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d551657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6f0dazl                        0x000055aba26d43d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b9d5565b460 __libc_start_main +
    245

    6    tmpw6f0dazl                        0x000055aba26d3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0\n    }).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpjqaasuns.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpjqaasuns.swift:10:51: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit()\
    \ % 2 != 0 && $0.lastDigit() % 2 != 0\n                                      \
    \         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0\n\
    \    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2dbxyac0.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmp2dbxyac0.swift:10:51: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit()\
    \ % 2 != 0 && $0.lastDigit() % 2 != 0\n                                      \
    \         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa0jn1xdr/tmpa0jn1xdr.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7f3ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a7c31b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a7c31988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a7c307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa0jn1xdr                        0x0000561cec3ef6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ab0a8126460 __libc_start_main +
    245

    6    tmpa0jn1xdr                        0x0000561cec3ef169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\
    \ (num) -> Bool in\n        return num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit()\
    \ % 2 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmputxspnby.swift:10:32: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        return num > 10 && num.firstDigit() % 2 != 0 && num.lastDigit()\
    \ % 2 != 0\n                           ~~~ ^~~~~~~~~~\n/tmp/tmputxspnby.swift:10:61:\
    \ error: value of type 'Int' has no member 'lastDigit'\n        return num > 10\
    \ && num.firstDigit() % 2 != 0 && num.lastDigit() % 2 != 0\n                 \
    \                                       ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n   \
    \     $0 % 10 % 2 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpk9g8zfe1/tmpk9g8zfe1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0012737c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b001242eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b001242e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b001242d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk9g8zfe1                        0x00005652a1802674 <unavailable> + 5748

    5    libc.so.6                          0x00002b0012923460 __libc_start_main +
    245

    6    tmpk9g8zfe1                        0x00005652a1802129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n   \
    \     $0 % 10 % 2 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpk9g8zfe1/tmpk9g8zfe1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0012737c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b001242eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b001242e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b001242d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk9g8zfe1                        0x00005652a1802674 <unavailable> + 5748

    5    libc.so.6                          0x00002b0012923460 __libc_start_main +
    245

    6    tmpk9g8zfe1                        0x00005652a1802129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0 % 2 != 0 && $0 % 10 != 0 }.count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpv41dj9yc/tmpv41dj9yc.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3172f34c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3172c2bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3172c2b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3172c2a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv41dj9yc                        0x000055b00ede7674 <unavailable> + 5748

    5    libc.so.6                          0x00002b3173120460 __libc_start_main +
    245

    6    tmpv41dj9yc                        0x000055b00ede7129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    let filtered =\
    \ nums.filter { (num) -> Bool in\n        return num > 10 && num % 2 != 0 && num\
    \ / 10 % 2 != 0\n    }\n    return filtered.count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpov598w4e/tmpov598w4e.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5b76ea1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5b76b98b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5b76b98988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5b76b977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpov598w4e                        0x0000560d836f9674 <unavailable> + 5748

    5    libc.so.6                          0x00002b5b7708d460 __libc_start_main +
    245

    6    tmpov598w4e                        0x0000560d836f9129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820956
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpii9gwesm/tmpii9gwesm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ec60c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ec5db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ec5db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ec5db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii9gwesm                        0x000055b0be39c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ec62ae460 __libc_start_main +
    245

    6    tmpii9gwesm                        0x000055b0be39c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0}).count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmppvssj3vw.swift:9:39: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter({$0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0}).count\n                                   ~~ ^~~~~~~~~~\n/tmp/tmppvssj3vw.swift:9:65:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0}).count\n          \
    \                                                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0.firstDigit % 2 != 0 &&\n        $0.lastDigit\
    \ % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2w57nnkg.swift:11:12: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0.firstDigit % 2 != 0 &&\n        ~~ ^~~~~~~~~~\n/tmp/tmp2w57nnkg.swift:12:12:\
    \ error: value of type 'Int' has no member 'lastDigit'\n        $0.lastDigit %\
    \ 2 != 0\n        ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for i in nums {\n        if i > 10 && i % 2 != 0 && i % 10 != 0 {\n     \
    \       count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6oe9odf8/tmp6oe9odf8.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afea84f6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afea81edb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afea81ed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afea81ec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6oe9odf8                        0x000055a20f7666b4 <unavailable> + 5812

    5    libc.so.6                          0x00002afea86e2460 __libc_start_main +
    245

    6    tmp6oe9odf8                        0x000055a20f766169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820956
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmprohjg9_0.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmprohjg9_0.swift:9:68:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n \
    \                                                               ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmprohjg9_0.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit()\
    \ % 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmprohjg9_0.swift:9:68:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit() % 2 != 0 && $0.lastDigit() % 2 != 0 }.count\n \
    \                                                               ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0.firstDigit % 2 != 0 &&\n        $0.lastDigit\
    \ % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp2w57nnkg.swift:11:12: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0.firstDigit % 2 != 0 &&\n        ~~ ^~~~~~~~~~\n/tmp/tmp2w57nnkg.swift:12:12:\
    \ error: value of type 'Int' has no member 'lastDigit'\n        $0.lastDigit %\
    \ 2 != 0\n        ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n\
    \        $0 % 10 % 2 != 0\n    }.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp3779z_xe/tmp3779z_xe.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adece2edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adecdfe4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adecdfe4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adecdfe37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3779z_xe                        0x00005557675fd674 <unavailable> + 5748

    5    libc.so.6                          0x00002adece4d9460 __libc_start_main +
    245

    6    tmp3779z_xe                        0x00005557675fd129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa0jn1xdr/tmpa0jn1xdr.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7f3ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a7c31b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a7c31988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a7c307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa0jn1xdr                        0x0000561cec3ef6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ab0a8126460 __libc_start_main +
    245

    6    tmpa0jn1xdr                        0x0000561cec3ef169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n   \
    \     $0 % 10 % 2 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpk9g8zfe1/tmpk9g8zfe1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0012737c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b001242eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b001242e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b001242d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk9g8zfe1                        0x00005652a1802674 <unavailable> + 5748

    5    libc.so.6                          0x00002b0012923460 __libc_start_main +
    245

    6    tmpk9g8zfe1                        0x00005652a1802129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa0jn1xdr/tmpa0jn1xdr.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7f3ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a7c31b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a7c31988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a7c307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa0jn1xdr                        0x0000561cec3ef6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ab0a8126460 __libc_start_main +
    245

    6    tmpa0jn1xdr                        0x0000561cec3ef169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpw6f0dazl/tmpw6f0dazl.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9d5546fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9d55166b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9d55166988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9d551657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpw6f0dazl                        0x000055aba26d43d7 <unavailable> + 5079

    5    libc.so.6                          0x00002b9d5565b460 __libc_start_main +
    245

    6    tmpw6f0dazl                        0x000055aba26d3f69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 && num % 10 != 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpb0u11ns1/tmpb0u11ns1.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba008899c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba008590b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba008590988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba00858f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb0u11ns1                        0x000055f5dbe4e6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ba008a85460 __libc_start_main +
    245

    6    tmpb0u11ns1                        0x000055f5dbe4e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ {\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0\n    }.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpky63dyh0.swift:10:23: error: value of type 'Int' has no member\
    \ 'firstDigit'\n        $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0\n                   ~~ ^~~~~~~~~~\n/tmp/tmpky63dyh0.swift:10:49: error:\
    \ value of type 'Int' has no member 'lastDigit'\n        $0 > 10 && $0.firstDigit\
    \ % 2 != 0 && $0.lastDigit % 2 != 0\n                                        \
    \     ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 / 10 % 2 != 0 &&\n   \
    \     $0 % 10 % 2 != 0\n    }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpk9g8zfe1/tmpk9g8zfe1.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0012737c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b001242eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b001242e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b001242d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk9g8zfe1                        0x00005652a1802674 <unavailable> + 5748

    5    libc.so.6                          0x00002b0012923460 __libc_start_main +
    245

    6    tmpk9g8zfe1                        0x00005652a1802129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0}).count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmppvssj3vw.swift:9:39: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter({$0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2\
    \ != 0}).count\n                                   ~~ ^~~~~~~~~~\n/tmp/tmppvssj3vw.swift:9:65:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter({$0\
    \ > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0}).count\n          \
    \                                                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({\n\
    \        $0 > 10 &&\n        $0 % 2 != 0 &&\n        $0 % 10 != 0\n    }).count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp16ng3ce2/tmp16ng3ce2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba02ca9dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba02c794b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba02c794988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba02c7937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp16ng3ce2                        0x00005631ed09c674 <unavailable> + 5748

    5    libc.so.6                          0x00002ba02cc89460 __libc_start_main +
    245

    6    tmp16ng3ce2                        0x00005631ed09c129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num / 10 % 2 !=\
    \ 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpa0jn1xdr/tmpa0jn1xdr.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0a7f3ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0a7c31b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0a7c31988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0a7c307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa0jn1xdr                        0x0000561cec3ef6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ab0a8126460 __libc_start_main +
    245

    6    tmpa0jn1xdr                        0x0000561cec3ef169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    var count = 0\n\
    \    for num in nums {\n        if num > 10 && num % 2 != 0 && num % 10 != 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpii9gwesm/tmpii9gwesm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ec60c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ec5db9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ec5db9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ec5db87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpii9gwesm                        0x000055b0be39c6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ec62ae460 __libc_start_main +
    245

    6    tmpii9gwesm                        0x000055b0be39c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter({$0\
    \ > 10 && $0 % 2 != 0 && $0 % 10 != 0}).count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpr__s9wwx/tmpr__s9wwx.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac865a28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac86571fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac86571f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac86571e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr__s9wwx                        0x0000560889019674 <unavailable> + 5748

    5    libc.so.6                          0x00002ac865c14460 __libc_start_main +
    245

    6    tmpr__s9wwx                        0x0000560889019129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// specialFilter([15, -73, 14, -15]) => 1 \n/// specialFilter([33, -2, -3, 45,\
    \ 21, 109]) => 2\nfunc specialFilter(nums: [Int]) -> Int {\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpqo6slxhl.swift:9:40: error: value of type 'Int' has no member 'firstDigit'\n\
    \    return nums.filter { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit %\
    \ 2 != 0 }.count\n                                    ~~ ^~~~~~~~~~\n/tmp/tmpqo6slxhl.swift:9:66:\
    \ error: value of type 'Int' has no member 'lastDigit'\n    return nums.filter\
    \ { $0 > 10 && $0.firstDigit % 2 != 0 && $0.lastDigit % 2 != 0 }.count\n     \
    \                                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820955

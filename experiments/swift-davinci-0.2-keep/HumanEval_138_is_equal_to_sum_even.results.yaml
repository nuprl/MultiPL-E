language: swift
name: HumanEval_138_is_equal_to_sum_even
results:
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n < 8 {\n        return false\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n == 0 {\n        return true\n    }\n    return\
    \ is_equal_to_sum_even(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpvx4ax9fq/tmpvx4ax9fq.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6a1a16c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6a170db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6a170d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6a170c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvx4ax9fq                        0x00005600245ed243 <unavailable> + 4675

    5    libc.so.6                          0x00002ac6a1c02460 __libc_start_main +
    245

    6    tmpvx4ax9fq                        0x00005600245ecef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n < 8 {\n        return false\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp365knivy/tmp365knivy.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6ed5b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6ed2aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6ed2aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6ed2a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp365knivy                        0x000055840ef4941d <unavailable> + 5149

    5    libc.so.6                          0x00002ae6ed79f460 __libc_start_main +
    245

    6    tmp365knivy                        0x000055840ef48fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n == 0 {\n        return true\n    }\n    return\
    \ is_equal_to_sum_even(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpvx4ax9fq/tmpvx4ax9fq.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6a1a16c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6a170db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6a170d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6a170c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvx4ax9fq                        0x00005600245ed243 <unavailable> + 4675

    5    libc.so.6                          0x00002ac6a1c02460 __libc_start_main +
    245

    6    tmpvx4ax9fq                        0x00005600245ecef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp365knivy/tmp365knivy.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6ed5b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6ed2aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6ed2aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6ed2a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp365knivy                        0x000055840ef4941d <unavailable> + 5149

    5    libc.so.6                          0x00002ae6ed79f460 __libc_start_main +
    245

    6    tmp365knivy                        0x000055840ef48fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n == 0 {\n        return true\n    }\n    return\
    \ is_equal_to_sum_even(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpvx4ax9fq/tmpvx4ax9fq.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6a1a16c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6a170db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6a170d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6a170c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvx4ax9fq                        0x00005600245ed243 <unavailable> + 4675

    5    libc.so.6                          0x00002ac6a1c02460 __libc_start_main +
    245

    6    tmpvx4ax9fq                        0x00005600245ecef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    for i in 1...n {\n        if i % 2 ==\
    \ 0 {\n            sum += i\n            count += 1\n        }\n        if sum\
    \ == n && count == 4 {\n            result = true\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp2ch8w5by/tmp2ch8w5by.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b6f15bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b6ee52b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b6ee52988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b6ee517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ch8w5by                        0x00005573bcb8c41d <unavailable> + 5149

    5    libc.so.6                          0x00002b6b6f347460 __libc_start_main +
    245

    6    tmp2ch8w5by                        0x00005573bcb8bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    for i in 1...n {\n        if i % 2 ==\
    \ 0 {\n            sum += i\n            count += 1\n        }\n        if sum\
    \ == n && count == 4 {\n            result = true\n            break\n       \
    \ }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpv75_od7m/tmpv75_od7m.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5c6298c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5c5f8fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5c5f8f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5c5f8e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv75_od7m                        0x000056147aa1a41d <unavailable> + 5149

    5    libc.so.6                          0x00002ac5c6484460 __libc_start_main +
    245

    6    tmpv75_od7m                        0x000056147aa19fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var i = 2\n    var j = 2\n    var k = 2\n    var l = 2\n    while i <= n/4\
    \ {\n        j = 2\n        while j <= n/3 {\n            k = 2\n            while\
    \ k <= n/2 {\n                l = 2\n                while l <= n {\n        \
    \            if i + j + k + l == n {\n                        result = true\n\
    \                    }\n                    l += 2\n                }\n      \
    \          k += 2\n            }\n            j += 2\n        }\n        i +=\
    \ 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    for i in 1...n {\n        if i % 2 ==\
    \ 0 {\n            sum += i\n            count += 1\n        }\n        if sum\
    \ == n && count == 4 {\n            result = true\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp2ch8w5by/tmp2ch8w5by.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b6f15bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b6ee52b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b6ee52988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b6ee517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ch8w5by                        0x00005573bcb8c41d <unavailable> + 5149

    5    libc.so.6                          0x00002b6b6f347460 __libc_start_main +
    245

    6    tmp2ch8w5by                        0x00005573bcb8bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp365knivy/tmp365knivy.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6ed5b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6ed2aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6ed2aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6ed2a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp365knivy                        0x000055840ef4941d <unavailable> + 5149

    5    libc.so.6                          0x00002ae6ed79f460 __libc_start_main +
    245

    6    tmp365knivy                        0x000055840ef48fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    for i in 0...n {\n        if i % 2 ==\
    \ 0 {\n            sum += i\n            count += 1\n        }\n        if sum\
    \ == n && count == 4 {\n            result = true\n            break\n       \
    \ }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpqzmt7leb/tmpqzmt7leb.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adfcf3aac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adfcf0a1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adfcf0a1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adfcf0a07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqzmt7leb                        0x000055a6bf46941d <unavailable> + 5149

    5    libc.so.6                          0x00002adfcf596460 __libc_start_main +
    245

    6    tmpqzmt7leb                        0x000055a6bf468fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n == 0 {\n        return true\n    }\n    return\
    \ is_equal_to_sum_even(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpvx4ax9fq/tmpvx4ax9fq.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6a1a16c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6a170db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6a170d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6a170c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvx4ax9fq                        0x00005600245ed243 <unavailable> + 4675

    5    libc.so.6                          0x00002ac6a1c02460 __libc_start_main +
    245

    6    tmpvx4ax9fq                        0x00005600245ecef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    var sum = 0\n    var i = 2\n    while sum < n {\n\
    \        sum += i\n        i += 2\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp7rybn6fq/tmp7rybn6fq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3e490fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3e4606b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3e4606988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3e46057b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7rybn6fq                        0x000056453799a2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002ad3e4afb460 __libc_start_main +
    245

    6    tmp7rybn6fq                        0x0000564537999ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    var i = 2\n    while i <= n {\n     \
    \   if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            result = true\n            break\n\
    \        }\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmppi84gmv1/tmppi84gmv1.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b83a3cd9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b83a39d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b83a39d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b83a39cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppi84gmv1                        0x000055f1d82b732d <unavailable> + 4909

    5    libc.so.6                          0x00002b83a3ec5460 __libc_start_main +
    245

    6    tmppi84gmv1                        0x000055f1d82b6ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n == 0 {\n        return true\n    }\n    return\
    \ is_equal_to_sum_even(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpvx4ax9fq/tmpvx4ax9fq.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6a1a16c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6a170db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6a170d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6a170c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvx4ax9fq                        0x00005600245ed243 <unavailable> + 4675

    5    libc.so.6                          0x00002ac6a1c02460 __libc_start_main +
    245

    6    tmpvx4ax9fq                        0x00005600245ecef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    let evens = (0..<n).filter\
    \ { $0 % 2 == 0 }\n    return evens.contains(n)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpegf8pkz5/tmpegf8pkz5.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afdf4be5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afdf48dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afdf48dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afdf48db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpegf8pkz5                        0x00005613b25f64cd <unavailable> + 5325

    5    libc.so.6                          0x00002afdf4dd1460 __libc_start_main +
    245

    6    tmpegf8pkz5                        0x00005613b25f6099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n % 4 == 0 {\n        return true\n    }\n \
    \   return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpczv4kxxu/tmpczv4kxxu.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad59d7f9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad59d4f0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad59d4f0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad59d4ef7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpczv4kxxu                        0x0000555b0405e243 <unavailable> + 4675

    5    libc.so.6                          0x00002ad59d9e5460 __libc_start_main +
    245

    6    tmpczv4kxxu                        0x0000555b0405def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    // Your code here\n \
    \   return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpgcrd5q6g/tmpgcrd5q6g.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b293084cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2930543b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2930543988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29305427b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgcrd5q6g                        0x0000562dc227a29d <unavailable> + 4765

    5    libc.so.6                          0x00002b2930a38460 __libc_start_main +
    245

    6    tmpgcrd5q6g                        0x0000562dc2279e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp365knivy/tmp365knivy.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6ed5b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6ed2aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6ed2aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6ed2a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp365knivy                        0x000055840ef4941d <unavailable> + 5149

    5    libc.so.6                          0x00002ae6ed79f460 __libc_start_main +
    245

    6    tmp365knivy                        0x000055840ef48fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n == 0 {\n        return true\n    }\n    return\
    \ is_equal_to_sum_even(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpvx4ax9fq/tmpvx4ax9fq.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6a1a16c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6a170db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6a170d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6a170c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvx4ax9fq                        0x00005600245ed243 <unavailable> + 4675

    5    libc.so.6                          0x00002ac6a1c02460 __libc_start_main +
    245

    6    tmpvx4ax9fq                        0x00005600245ecef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    for i in 1...n {\n        if i % 2 ==\
    \ 0 {\n            sum += i\n            count += 1\n        }\n        if sum\
    \ == n && count == 4 {\n            result = true\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp2ch8w5by/tmp2ch8w5by.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b6f15bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b6ee52b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b6ee52988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b6ee517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ch8w5by                        0x00005573bcb8c41d <unavailable> + 5149

    5    libc.so.6                          0x00002b6b6f347460 __libc_start_main +
    245

    6    tmp2ch8w5by                        0x00005573bcb8bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    var sum = 0\n    var i = 2\n    while sum < n {\n\
    \        sum += i\n        i += 2\n    }\n    return sum == n\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp7rybn6fq/tmp7rybn6fq.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3e490fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad3e4606b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad3e4606988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3e46057b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7rybn6fq                        0x000056453799a2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002ad3e4afb460 __libc_start_main +
    245

    6    tmp7rybn6fq                        0x0000564537999ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp365knivy/tmp365knivy.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6ed5b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6ed2aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6ed2aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6ed2a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp365knivy                        0x000055840ef4941d <unavailable> + 5149

    5    libc.so.6                          0x00002ae6ed79f460 __libc_start_main +
    245

    6    tmp365knivy                        0x000055840ef48fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    for i in 1...n {\n        if i % 2 ==\
    \ 0 {\n            sum += i\n            count += 1\n        }\n        if sum\
    \ == n && count == 4 {\n            result = true\n            break\n       \
    \ }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpv75_od7m/tmpv75_od7m.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5c6298c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5c5f8fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5c5f8f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5c5f8e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv75_od7m                        0x000056147aa1a41d <unavailable> + 5149

    5    libc.so.6                          0x00002ac5c6484460 __libc_start_main +
    245

    6    tmpv75_od7m                        0x000056147aa19fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    for i in 0...n {\n        if i % 2 ==\
    \ 0 {\n            sum += i\n            count += 1\n        }\n        if sum\
    \ == n && count == 4 {\n            result = true\n            break\n       \
    \ }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpqzmt7leb/tmpqzmt7leb.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adfcf3aac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adfcf0a1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adfcf0a1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adfcf0a07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqzmt7leb                        0x000055a6bf46941d <unavailable> + 5149

    5    libc.so.6                          0x00002adfcf596460 __libc_start_main +
    245

    6    tmpqzmt7leb                        0x000055a6bf468fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    for i in 1...n {\n        if i % 2 ==\
    \ 0 {\n            sum += i\n            count += 1\n        }\n        if sum\
    \ == n && count == 4 {\n            result = true\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp2ch8w5by/tmp2ch8w5by.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b6f15bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b6ee52b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b6ee52988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b6ee517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ch8w5by                        0x00005573bcb8c41d <unavailable> + 5149

    5    libc.so.6                          0x00002b6b6f347460 __libc_start_main +
    245

    6    tmp2ch8w5by                        0x00005573bcb8bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    var i = 2\n    while i <= n {\n     \
    \   if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            result = true\n            break\n\
    \        }\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmppi84gmv1/tmppi84gmv1.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b83a3cd9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b83a39d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b83a39d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b83a39cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppi84gmv1                        0x000055f1d82b732d <unavailable> + 4909

    5    libc.so.6                          0x00002b83a3ec5460 __libc_start_main +
    245

    6    tmppi84gmv1                        0x000055f1d82b6ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    for i in 1...n {\n        if i % 2 ==\
    \ 0 {\n            sum += i\n            count += 1\n        }\n        if sum\
    \ == n && count == 4 {\n            result = true\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp2ch8w5by/tmp2ch8w5by.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b6f15bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b6ee52b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b6ee52988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b6ee517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ch8w5by                        0x00005573bcb8c41d <unavailable> + 5149

    5    libc.so.6                          0x00002b6b6f347460 __libc_start_main +
    245

    6    tmp2ch8w5by                        0x00005573bcb8bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n        }\n   \
    \ }\n    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpmo9ozp35/tmpmo9ozp35.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5698822c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5698519b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5698519988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b56985187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmo9ozp35                        0x000055bd976d341d <unavailable> + 5149

    5    libc.so.6                          0x00002b5698a0e460 __libc_start_main +
    245

    6    tmpmo9ozp35                        0x000055bd976d2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 2...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpdl69eoxk/tmpdl69eoxk.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b57f4ff0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b57f4ce7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b57f4ce7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b57f4ce67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdl69eoxk                        0x000055899a54c41d <unavailable> + 5149

    5    libc.so.6                          0x00002b57f51dc460 __libc_start_main +
    245

    6    tmpdl69eoxk                        0x000055899a54bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n == 0 {\n        return true\n    }\n    return\
    \ is_equal_to_sum_even(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpvx4ax9fq/tmpvx4ax9fq.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6a1a16c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6a170db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6a170d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6a170c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvx4ax9fq                        0x00005600245ed243 <unavailable> + 4675

    5    libc.so.6                          0x00002ac6a1c02460 __libc_start_main +
    245

    6    tmpvx4ax9fq                        0x00005600245ecef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return n % 2 == 0 &&\
    \ n % 4 != 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpamhusf0k/tmpamhusf0k.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81f5946c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81f563db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81f563d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81f563c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpamhusf0k                        0x00005596ed94b2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b81f5b32460 __libc_start_main +
    245

    6    tmpamhusf0k                        0x00005596ed94aef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n        }\n   \
    \ }\n    return sum == n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpmo9ozp35/tmpmo9ozp35.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5698822c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5698519b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5698519988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b56985187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmo9ozp35                        0x000055bd976d341d <unavailable> + 5149

    5    libc.so.6                          0x00002b5698a0e460 __libc_start_main +
    245

    6    tmpmo9ozp35                        0x000055bd976d2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n < 8 {\n        return false\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp365knivy/tmp365knivy.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6ed5b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6ed2aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6ed2aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6ed2a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp365knivy                        0x000055840ef4941d <unavailable> + 5149

    5    libc.so.6                          0x00002ae6ed79f460 __libc_start_main +
    245

    6    tmp365knivy                        0x000055840ef48fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    var sum = 0\n    for i in 1...n {\n        if i\
    \ % 2 == 0 {\n            sum += i\n        }\n        if sum == n {\n       \
    \     return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpdpzgc63a/tmpdpzgc63a.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac8a2a71c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac8a2768b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac8a2768988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac8a27677b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdpzgc63a                        0x00005596f3aed3a9 <unavailable> + 5033

    5    libc.so.6                          0x00002ac8a2c5d460 __libc_start_main +
    245

    6    tmpdpzgc63a                        0x00005596f3aecfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n == 0 {\n        return true\n    }\n    return\
    \ is_equal_to_sum_even(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpvx4ax9fq/tmpvx4ax9fq.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6a1a16c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6a170db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6a170d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6a170c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvx4ax9fq                        0x00005600245ed243 <unavailable> + 4675

    5    libc.so.6                          0x00002ac6a1c02460 __libc_start_main +
    245

    6    tmpvx4ax9fq                        0x00005600245ecef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum\
    \ += i\n            if sum == n {\n                result = true\n           \
    \     break\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpzfyytemn/tmpzfyytemn.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7af7f85c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7af7c7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7af7c7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7af7c7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzfyytemn                        0x000055808b7953a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b7af8171460 __libc_start_main +
    245

    6    tmpzfyytemn                        0x000055808b794fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 0...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpdbz3d3a0/tmpdbz3d3a0.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aae4127fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aae40f76b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aae40f76988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aae40f757b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdbz3d3a0                        0x00005615b870241d <unavailable> + 5149

    5    libc.so.6                          0x00002aae4146b460 __libc_start_main +
    245

    6    tmpdbz3d3a0                        0x00005615b8701fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp365knivy/tmp365knivy.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6ed5b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6ed2aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6ed2aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6ed2a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp365knivy                        0x000055840ef4941d <unavailable> + 5149

    5    libc.so.6                          0x00002ae6ed79f460 __libc_start_main +
    245

    6    tmp365knivy                        0x000055840ef48fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n == 0 {\n        return true\n    }\n    return\
    \ is_equal_to_sum_even(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpvx4ax9fq/tmpvx4ax9fq.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6a1a16c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6a170db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6a170d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6a170c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvx4ax9fq                        0x00005600245ed243 <unavailable> + 4675

    5    libc.so.6                          0x00002ac6a1c02460 __libc_start_main +
    245

    6    tmpvx4ax9fq                        0x00005600245ecef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    var i = 0\n    while i < n {\n      \
    \  if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            result = true\n            break\n\
    \        }\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpx4a0vehi/tmpx4a0vehi.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8cb6305c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8cb5ffcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8cb5ffc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8cb5ffb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx4a0vehi                        0x00005633f5fc232d <unavailable> + 4909

    5    libc.so.6                          0x00002b8cb64f1460 __libc_start_main +
    245

    6    tmpx4a0vehi                        0x00005633f5fc1ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n < 8 {\n        return false\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n == 0 {\n        return true\n    }\n    return\
    \ is_equal_to_sum_even(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpvx4ax9fq/tmpvx4ax9fq.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6a1a16c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6a170db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6a170d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6a170c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvx4ax9fq                        0x00005600245ed243 <unavailable> + 4675

    5    libc.so.6                          0x00002ac6a1c02460 __libc_start_main +
    245

    6    tmpvx4ax9fq                        0x00005600245ecef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum\
    \ += i\n            if sum == n {\n                result = true\n           \
    \     break\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpzfyytemn/tmpzfyytemn.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7af7f85c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7af7c7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7af7c7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7af7c7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzfyytemn                        0x000055808b7953a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b7af8171460 __libc_start_main +
    245

    6    tmpzfyytemn                        0x000055808b794fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    var i = 2\n    while i <= n {\n     \
    \   if i % 2 == 0 {\n            sum += i\n            count += 1\n        }\n\
    \        if sum == n && count == 4 {\n            result = true\n            break\n\
    \        }\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmppi84gmv1/tmppi84gmv1.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b83a3cd9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b83a39d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b83a39d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b83a39cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppi84gmv1                        0x000055f1d82b732d <unavailable> + 4909

    5    libc.so.6                          0x00002b83a3ec5460 __libc_start_main +
    245

    6    tmppi84gmv1                        0x000055f1d82b6ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n < 8 {\n        return false\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    for i in 1...n {\n        if i % 2 ==\
    \ 0 {\n            sum += i\n            count += 1\n        }\n        if sum\
    \ == n && count == 4 {\n            result = true\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmp2ch8w5by/tmp2ch8w5by.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6b6f15bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6b6ee52b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6b6ee52988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6b6ee517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ch8w5by                        0x00005573bcb8c41d <unavailable> + 5149

    5    libc.so.6                          0x00002b6b6f347460 __libc_start_main +
    245

    6    tmp2ch8w5by                        0x00005573bcb8bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n == 0 {\n        return true\n    }\n    return\
    \ is_equal_to_sum_even(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpvx4ax9fq/tmpvx4ax9fq.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6a1a16c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6a170db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6a170d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6a170c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvx4ax9fq                        0x00005600245ed243 <unavailable> + 4675

    5    libc.so.6                          0x00002ac6a1c02460 __libc_start_main +
    245

    6    tmpvx4ax9fq                        0x00005600245ecef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp365knivy/tmp365knivy.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6ed5b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6ed2aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6ed2aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6ed2a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp365knivy                        0x000055840ef4941d <unavailable> + 5149

    5    libc.so.6                          0x00002ae6ed79f460 __libc_start_main +
    245

    6    tmp365knivy                        0x000055840ef48fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 2...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpdl69eoxk/tmpdl69eoxk.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b57f4ff0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b57f4ce7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b57f4ce7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b57f4ce67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdl69eoxk                        0x000055899a54c41d <unavailable> + 5149

    5    libc.so.6                          0x00002b57f51dc460 __libc_start_main +
    245

    6    tmpdl69eoxk                        0x000055899a54bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in stride(from: 2, to: n, by: 2) {\n        sum += i\n\
    \        count += 1\n        if sum == n && count == 4 {\n            return true\n\
    \        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n: 6)\
    \ == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmplnv455wk/tmplnv455wk.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13bf685c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13bf37cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13bf37c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13bf37b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplnv455wk                        0x000056337bd284ad <unavailable> + 5293

    5    libc.so.6                          0x00002b13bf871460 __libc_start_main +
    245

    6    tmplnv455wk                        0x000056337bd28079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    var sum = 0\n    for i in 1...n {\n        if i\
    \ % 2 == 0 {\n            sum += i\n        }\n        if sum == n {\n       \
    \     return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpdpzgc63a/tmpdpzgc63a.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac8a2a71c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac8a2768b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac8a2768988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac8a27677b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdpzgc63a                        0x00005596f3aed3a9 <unavailable> + 5033

    5    libc.so.6                          0x00002ac8a2c5d460 __libc_start_main +
    245

    6    tmpdpzgc63a                        0x00005596f3aecfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum\
    \ += i\n            if sum == n {\n                result = true\n           \
    \     break\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpzfyytemn/tmpzfyytemn.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7af7f85c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7af7c7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7af7c7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7af7c7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzfyytemn                        0x000055808b7953a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b7af8171460 __libc_start_main +
    245

    6    tmpzfyytemn                        0x000055808b794fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    var count = 0\n    for i in 1...n {\n        if i % 2 ==\
    \ 0 {\n            sum += i\n            count += 1\n        }\n        if sum\
    \ == n && count == 4 {\n            result = true\n            break\n       \
    \ }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpv75_od7m/tmpv75_od7m.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac5c6298c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac5c5f8fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac5c5f8f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac5c5f8e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv75_od7m                        0x000056147aa1a41d <unavailable> + 5149

    5    libc.so.6                          0x00002ac5c6484460 __libc_start_main +
    245

    6    tmpv75_od7m                        0x000056147aa19fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp365knivy/tmp365knivy.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6ed5b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6ed2aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6ed2aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6ed2a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp365knivy                        0x000055840ef4941d <unavailable> + 5149

    5    libc.so.6                          0x00002ae6ed79f460 __libc_start_main +
    245

    6    tmp365knivy                        0x000055840ef48fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n < 8 {\n        return false\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp365knivy/tmp365knivy.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6ed5b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6ed2aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6ed2aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6ed2a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp365knivy                        0x000055840ef4941d <unavailable> + 5149

    5    libc.so.6                          0x00002ae6ed79f460 __libc_start_main +
    245

    6    tmp365knivy                        0x000055840ef48fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n == 4 {\n        return false\n    }\n    if\
    \ n == 6 {\n        return false\n    }\n    if n == 8 {\n        return true\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpg61yjy0x/tmpg61yjy0x.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b66f61d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b66f5ec8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b66f5ec8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66f5ec77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg61yjy0x                        0x0000559e987873a1 <unavailable> + 5025

    5    libc.so.6                          0x00002b66f63bd460 __libc_start_main +
    245

    6    tmpg61yjy0x                        0x0000559e98786ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return n % 2 == 0 &&\
    \ n % 4 != 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpamhusf0k/tmpamhusf0k.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b81f5946c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b81f563db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b81f563d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b81f563c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpamhusf0k                        0x00005596ed94b2b9 <unavailable> + 4793

    5    libc.so.6                          0x00002b81f5b32460 __libc_start_main +
    245

    6    tmpamhusf0k                        0x00005596ed94aef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp365knivy/tmp365knivy.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6ed5b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6ed2aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6ed2aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6ed2a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp365knivy                        0x000055840ef4941d <unavailable> + 5149

    5    libc.so.6                          0x00002ae6ed79f460 __libc_start_main +
    245

    6    tmp365knivy                        0x000055840ef48fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    var sum = 0\n    for i in 1...n {\n        if i\
    \ % 2 == 0 {\n            sum += i\n        }\n        if sum == n {\n       \
    \     return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpdpzgc63a/tmpdpzgc63a.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac8a2a71c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac8a2768b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac8a2768988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac8a27677b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdpzgc63a                        0x00005596f3aed3a9 <unavailable> + 5033

    5    libc.so.6                          0x00002ac8a2c5d460 __libc_start_main +
    245

    6    tmpdpzgc63a                        0x00005596f3aecfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var sum = 0\n    var\
    \ count = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum +=\
    \ i\n            count += 1\n        }\n        if sum == n && count == 4 {\n\
    \            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmp365knivy/tmp365knivy.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6ed5b3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6ed2aab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6ed2aa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6ed2a97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp365knivy                        0x000055840ef4941d <unavailable> + 5149

    5    libc.so.6                          0x00002ae6ed79f460 __libc_start_main +
    245

    6    tmp365knivy                        0x000055840ef48fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    var result = false\n\
    \    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum\
    \ += i\n            if sum == n {\n                result = true\n           \
    \     break\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpzfyytemn/tmpzfyytemn.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7af7f85c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7af7c7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7af7c7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7af7c7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzfyytemn                        0x000055808b7953a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b7af8171460 __libc_start_main +
    245

    6    tmpzfyytemn                        0x000055808b794fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: 0
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    if n < 8 {\n        return false\n    }\n    return\
    \ true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    if n % 2 != 0 {\n   \
    \     return false\n    }\n    var sum = 0\n    for i in 1...n/2 {\n        sum\
    \ += i\n        if sum == n {\n            return true\n        }\n    }\n   \
    \ return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(is_equal_to_sum_even(n:\
    \ 4) == false)\nassert(is_equal_to_sum_even(n: 6) == false)\nassert(is_equal_to_sum_even(n:\
    \ 8) == true)\nassert(is_equal_to_sum_even(n: 10) == true)\nassert(is_equal_to_sum_even(n:\
    \ 11) == false)\nassert(is_equal_to_sum_even(n: 12) == true)\nassert(is_equal_to_sum_even(n:\
    \ 13) == false)\nassert(is_equal_to_sum_even(n: 16) == true)"
  status: Exception
  stderr: 'tmpqur7a0ed/tmpqur7a0ed.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b906cd5dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b906ca54b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b906ca54988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b906ca537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqur7a0ed                        0x000056203fdaf3a9 <unavailable> + 5033

    5    libc.so.6                          0x00002b906cf49460 __libc_start_main +
    245

    6    tmpqur7a0ed                        0x000056203fdaefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659820474
- exit_code: -4
  program: "\n/// Evaluate whether the given number n can be written as the sum of\
    \ exactly 4 positive even numbers\n/// Example\n/// is_equal_to_sum_even(4) ==\
    \ False\n/// is_equal_to_sum_even(6) == False\n/// is_equal_to_sum_even(8) ==\
    \ True\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
    \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
    \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
    \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
    \ 16) == true)"
  status: Exception
  stderr: 'tmpk3rr9tet/tmpk3rr9tet.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b29e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b26d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b26d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b26d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk3rr9tet                        0x000055bd3667229d <unavailable> + 4765

    5    libc.so.6                          0x00002af9b2bcd460 __libc_start_main +
    245

    6    tmpk3rr9tet                        0x000055bd36671e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820474

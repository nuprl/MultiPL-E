name: HumanEval_98_count_upper
language: swift
prompt: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
  /// For example:\n/// count_upper('aBCdEf') returns 1\n/// count_upper('abcdefg')\
  \ returns 0\n/// count_upper('dBBE') returns 0\nfunc count_upper(s: String) -> Int\
  \ {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
  \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
  \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\")\
  \ == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
completions: ["    var count = 0\n    for (index, char) in s.enumerated() {\n    \
    \    if index % 2 == 0 && char.isUppercase && char.isVowel {\n            count\
    \ += 1\n        }\n    }\n    return count", '    return s.enumerated().filter
    { $0.offset % 2 == 0 && $0.element.isUppercase }.count', "    var count = 0\n\
    \    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 &&\
    \ c.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 &&\
    \ c.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    return s.enumerated().reduce(0) { (result, next) in\n\
    \        let (index, char) = next\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            return result + 1\n        }\n        return result\n    }",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && is_upper(c)\
    \ && is_vowel(c) {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", '    return s.enumerated().filter { $0.offset % 2 == 0 && $0.element.isUppercase
    }.count', "    var count = 0\n    for (index, char) in s.enumerated() {\n    \
    \    if index % 2 == 0 && char.isUppercase {\n            count += 1\n       \
    \ }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    let vowels = \"AEIOU\"\n    var count = 0\n\
    \    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", '    return s.enumerated().filter({ $0.offset
    % 2 == 0 && $0.element.isUppercase }).count', "    var count = 0\n    for (i,\
    \ c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n         \
    \   count += 1\n        }\n    }\n    return count", "    var count = 0\n    for\
    \ (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", '    return
    s.enumerated().filter { $0.offset % 2 == 0 && $0.element.isUppercase }.count',
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for (i, c) in s.characters.enumerated() {\n        if i % 2 == 0 && is_upper(c)\
    \ && is_vowel(c) {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 &&\
    \ c.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  '    return s.enumerated().filter { $0.offset % 2 == 0 && $0.element.isUppercase
    }.count', "    var count = 0\n    for (i, c) in s.enumerated() {\n        if i\
    \ % 2 == 0 && c.isUppercase {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for (i, c) in s.enumerated() {\n        if i\
    \ % 2 == 0 && c.isUppercase {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for (index, char) in s.enumerated() {\n    \
    \    if index % 2 == 0 && char.isUppercase {\n            count += 1\n       \
    \ }\n    }\n    return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase && \"AEIOU\".contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    let vowels = \"AEIOU\"\n    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && vowels.contains(c) {\n            count += 1\n \
    \       }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", '    return s.enumerated().filter({$0.0 % 2 == 0 && $0.1.isUppercase}).count',
  "    var count = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 &&\
    \ c.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.characters.enumerated()\
    \ {\n        if i % 2 == 0 && is_upper(c) && is_vowel(c) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for (index,\
    \ char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    let vowels\
    \ = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if i % 2 == 0 && c.isUppercase {\n            count += 1\n        }\n \
    \   }\n    return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  '    return 0', "    var count = 0\n    for (index, char) in s.enumerated() {\n\
    \        if index % 2 == 0 && char.isUppercase {\n            count += 1\n   \
    \     }\n    }\n    return count", "    var count = 0\n    for (index, char) in\
    \ s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n        \
    \    count += 1\n        }\n    }\n    return count", "    var count = 0\n   \
    \ for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if i % 2 == 0 && is_upper(c) && is_vowel(c) {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n     \
    \       count += 1\n        }\n    }\n    return count", "    let vowels = \"\
    AEIOU\"\n    var count = 0\n    for (index, char) in s.enumerated() {\n      \
    \  if index % 2 == 0 && vowels.contains(char) {\n            count += 1\n    \
    \    }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.characters.enumerated()\
    \ {\n        if i % 2 == 0 && is_upper(c) && is_vowel(c) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for (i, c)\
    \ in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n            count\
    \ += 1\n        }\n    }\n    return count", '    return s.enumerated().filter
    { $0.offset % 2 == 0 && $0.element.isUppercase }.count', "    var count = 0\n\
    \    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (i, c) in s.characters.enumerated() {\n        if i\
    \ % 2 == 0 && is_upper(c) && is_vowel(c) {\n            count += 1\n        }\n\
    \    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", '    return 0', "    var count = 0\n    for (i,\
    \ c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n         \
    \   count += 1\n        }\n    }\n    return count", "    var count = 0\n    for\
    \ (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    return\
    \ s.enumerated().reduce(0) { (result, element) in\n        return element.offset\
    \ % 2 == 0 && element.element.isUppercase ? result + 1 : result\n    }", "   \
    \ var count = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 &&\
    \ c.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 &&\
    \ c.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 &&\
    \ c.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && isUpper(char) {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for (index, char) in s.enumerated() {\n    \
    \    if index % 2 == 0 && char.isUppercase {\n            count += 1\n       \
    \ }\n    }\n    return count", '    return 0', "    var count = 0\n    for (index,\
    \ char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    return s.enumerated().reduce(0) { (count, pair) in\n        let (index, char)\
    \ = pair\n        return count + (index % 2 == 0 && char.isUppercase ? 1 : 0)\n\
    \    }", "    var count = 0\n    for (index, char) in s.enumerated() {\n     \
    \   if index % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n\
    \    }\n    return count", "    return s.enumerated().reduce(0) {\n        $0\
    \ + ($1.offset % 2 == 0 && $1.element.isUppercase ? 1 : 0)\n    }", "    var count\
    \ = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n     \
    \       count += 1\n        }\n    }\n    return count", '    return s.enumerated().filter
    { $0.offset % 2 == 0 && $0.element.isUppercase }.count', "    return s.enumerated().reduce(0)\
    \ { (acc, x) in\n        if x.offset % 2 == 0 && is_upper(s: x.element) {\n  \
    \          return acc + 1\n        }\n        return acc\n    }", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 &&\
    \ c.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (i, c) in s.characters.enumerated() {\n        if i\
    \ % 2 == 0 && c.isUppercase {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for (index, char) in s.enumerated() {\n    \
    \    if index % 2 == 0 && char.isUppercase {\n            count += 1\n       \
    \ }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    return s.enumerated().reduce(0) {\n     \
    \   $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 : 0)\n    }",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    let vowels = \"AEIOU\"\n    var count = 0\n    for (index,\
    \ char) in s.enumerated() {\n        if index % 2 == 0 && vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 &&\
    \ c.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    return s.enumerated().reduce(0) {\n        $0 + ($1.offset\
    \ % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 : 0)\n    }", "    var count\
    \ = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (i, c) in s.enumerated() {\n  \
    \      if i % 2 == 0 && c.isUppercase {\n            count += 1\n        }\n \
    \   }\n    return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.characters.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 &&\
    \ c.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", '    return s.enumerated().filter { $0.offset
    % 2 == 0 && $0.element.isUppercase }.count', "    var count = 0\n    for (index,\
    \ char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for (i, c) in s.characters.enumerated() {\n        if i % 2 == 0 && is_upper(c)\
    \ && is_vowel(c) {\n            count += 1\n        }\n    }\n    return count",
  "    return s.enumerated().reduce(0) { (result, c) in\n        if c.offset % 2 ==\
    \ 0 && c.element.isUppercase {\n            return result + 1\n        }\n   \
    \     return result\n    }", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    return s.enumerated().reduce(0) { (result, value) in\n        let (index, char)\
    \ = value\n        if index % 2 == 0 && char.isUppercase {\n            return\
    \ result + 1\n        }\n        return result\n    }", "    var count = 0\n \
    \   for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (index, char)\
    \ in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (index, char) in s.enumerated() {\n        if index % 2 == 0 &&\
    \ char.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 &&\
    \ c.isUppercase {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for (index, char) in s.enumerated() {\n        if index\
    \ % 2 == 0 && char.isUppercase {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for (index, char) in s.enumerated()\
    \ {\n        if index % 2 == 0 && char.isUppercase {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.enumerated()\
    \ {\n        if i % 2 == 0 && c.isUppercase {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for (i, c) in s.characters.enumerated()\
    \ {\n        if i % 2 == 0 && is_upper(c) && is_vowel(c) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    return s.enumerated().reduce(0)\
    \ {\n        $0 + ($1.offset % 2 == 0 && \"AEIOU\".contains($1.element) ? 1 :\
    \ 0)\n    }", "    let vowels = \"AEIOU\"\n    var count = 0\n    for (i, c) in\
    \ s.enumerated() {\n        if i % 2 == 0 && vowels.contains(c) {\n          \
    \  count += 1\n        }\n    }\n    return count", "    var count = 0\n    for\
    \ (index, char) in s.enumerated() {\n        if index % 2 == 0 && char.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for (i, c) in s.enumerated() {\n        if i % 2 == 0 && c.isUppercase\
    \ {\n            count += 1\n        }\n    }\n    return count"]
stop_tokens:
- "\n}"

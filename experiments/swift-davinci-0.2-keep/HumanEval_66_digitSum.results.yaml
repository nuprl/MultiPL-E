language: swift
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 0
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    let upper\
    \ = s.filter { $0.isUppercase }\n    return upper.reduce(0) { $0 + Int($1.asciiValue!)\
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s:\
    \ \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.filter { $0.isASCII && $0.isUppercase }.reduce(0) { $0 + Int($1.value)\
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s:\
    \ \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmp8bsphi3c.swift:13:55: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n    return s.unicodeScalars.filter { $0.isASCII &&\
    \ $0.isUppercase }.reduce(0) { $0 + Int($1.value) }\n                        \
    \                           ~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.utf8.reduce(0) { $0 + ($1 >= 65 && $1 <= 90 ? $1 : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmphv7t7rui.swift:13:60: error: result values in '? :' expression\
    \ have mismatching types 'String.UTF8View.Element' (aka 'UInt8') and 'Int'\n \
    \   return s.utf8.reduce(0) { $0 + ($1 >= 65 && $1 <= 90 ? $1 : 0) }\n       \
    \                                                    ^~\n                    \
    \                                       Int( )\n"
  stdout: ''
  timestamp: 1659824738
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter({ $0.isUppercase }).reduce(0, { $0 + Int($0.unicodeScalars.first!.value)\
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s:\
    \ \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmprahmr307.swift:13:51: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter({ $0.isUppercase }).reduce(0,\
    \ { $0 + Int($0.unicodeScalars.first!.value) })\n                            \
    \                      ^\n/tmp/tmprahmr307.swift:13:65: error: value of type 'Int'\
    \ has no member 'unicodeScalars'\n    return s.filter({ $0.isUppercase }).reduce(0,\
    \ { $0 + Int($0.unicodeScalars.first!.value) })\n                            \
    \                                 ~~ ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 0
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    let upper\
    \ = s.filter { $0.isUppercase }\n    return upper.reduce(0) { $0 + Int($1.asciiValue!)\
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s:\
    \ \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.filter { $0.isUppercase }.reduce(0) { $0 + Int($1.value) }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmploz9nirh.swift:13:41: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n    return s.unicodeScalars.filter { $0.isUppercase\
    \ }.reduce(0) { $0 + Int($1.value) }\n                                     ~~\
    \ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) {\n        $0 + ($1.isASCII && $1.isUppercase ? Int($1.value)\
    \ : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\")\
    \ == 0)\nassert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") ==\
    \ 67)\nassert(digitSum(s: \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\")\
    \ == 131)\nassert(digitSum(s: \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How\
    \ are yOu?\") == 151)\nassert(digitSum(s: \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpy7wufsjx.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) {\n                            \
    \      ^\n                                   into: \n/tmp/tmpy7wufsjx.swift:13:29:\
    \ error: cannot convert return expression of type '(Int, _) -> Int' to return\
    \ type 'Int'\n    return s.unicodeScalars.reduce(0) {\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824735
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.filter { $0.isUppercase }.reduce(0) { $0 + Int($1.value) }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmploz9nirh.swift:13:41: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n    return s.unicodeScalars.filter { $0.isUppercase\
    \ }.reduce(0) { $0 + Int($1.value) }\n                                     ~~\
    \ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 0
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    var sum\
    \ = 0\n    for char in s {\n        if char.isUppercase {\n            sum +=\
    \ Int(char.asciiValue!)\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 0
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1 >= \"A\" && $1 <= \"Z\" ? Int($1.unicodeScalars.first!.value)\
    \ : 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") ==\
    \ 0)\nassert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\n\
    assert(digitSum(s: \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\n\
    assert(digitSum(s: \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\"\
    ) == 151)\nassert(digitSum(s: \"You arE Very Smart\") == 327)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.filter { $0.isUppercase }.reduce(0) { $0 + Int($1.value) }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmploz9nirh.swift:13:41: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n    return s.unicodeScalars.filter { $0.isUppercase\
    \ }.reduce(0) { $0 + Int($1.value) }\n                                     ~~\
    \ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.filter { $0.isASCII && $0.isUppercase }.reduce(0) { $0 + Int($1.value)\
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s:\
    \ \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmp8bsphi3c.swift:13:55: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n    return s.unicodeScalars.filter { $0.isASCII &&\
    \ $0.isUppercase }.reduce(0) { $0 + Int($1.value) }\n                        \
    \                           ~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 0
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    var sum\
    \ = 0\n    for char in s {\n        if char.isUppercase {\n            sum +=\
    \ Int(char.asciiValue!)\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 0
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    var sum\
    \ = 0\n    for c in s.unicodeScalars {\n        if c.value >= 65 && c.value <=\
    \ 90 {\n            sum += Int(c.value)\n        }\n    }\n    return sum\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) {\n        $1.isUppercase ? $0 + $1.asciiValue! : $0\n    }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpwg77o816.swift:14:44: error: cannot convert value of type 'UInt8'\
    \ to expected argument type 'Int'\n        $1.isUppercase ? $0 + $1.asciiValue!\
    \ : $0\n                                           ^\n                       \
    \       Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) {\n        $0 + ($1.isASCII && $1.isUppercase ? Int($1.value)\
    \ : 0)\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\")\
    \ == 0)\nassert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") ==\
    \ 67)\nassert(digitSum(s: \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\")\
    \ == 131)\nassert(digitSum(s: \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How\
    \ are yOu?\") == 151)\nassert(digitSum(s: \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpy7wufsjx.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) {\n                            \
    \      ^\n                                   into: \n/tmp/tmpy7wufsjx.swift:13:29:\
    \ error: cannot convert return expression of type '(Int, _) -> Int' to return\
    \ type 'Int'\n    return s.unicodeScalars.reduce(0) {\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824735
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.filter { $0.isUppercase }.reduce(0) { $0 + Int($1.value) }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmploz9nirh.swift:13:41: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n    return s.unicodeScalars.filter { $0.isUppercase\
    \ }.reduce(0) { $0 + Int($1.value) }\n                                     ~~\
    \ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 0
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    var sum\
    \ = 0\n    for char in s {\n        if char.isUppercase {\n            sum +=\
    \ Int(char.asciiValue!)\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.filter { $0.isUppercase }.reduce(0) { $0 + Int($1.value) }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmploz9nirh.swift:13:41: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n    return s.unicodeScalars.filter { $0.isUppercase\
    \ }.reduce(0) { $0 + Int($1.value) }\n                                     ~~\
    \ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.filter { $0.isASCII && $0.isUppercase }.reduce(0) { $0 + Int($1.value)\
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s:\
    \ \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmp8bsphi3c.swift:13:55: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n    return s.unicodeScalars.filter { $0.isASCII &&\
    \ $0.isUppercase }.reduce(0) { $0 + Int($1.value) }\n                        \
    \                           ~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 0
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.compactMap { $0.isUppercase ? Int($0.asciiValue!) : nil }.reduce(0, +)\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + $1.asciiValue! }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmp82qq6mde.swift:13:40: error: cannot convert return expression of\
    \ type 'UInt8' to return type 'Int'\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + $1.asciiValue! }\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \           Int(                                                         )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.filter { $0.isASCII && $0.isUppercase }.reduce(0) { $0 + Int($1.value)\
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s:\
    \ \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmp8bsphi3c.swift:13:55: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n    return s.unicodeScalars.filter { $0.isASCII &&\
    \ $0.isUppercase }.reduce(0) { $0 + Int($1.value) }\n                        \
    \                           ~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.filter { $0.isASCII && $0.isUppercase }.reduce(0) { $0 + Int($1.value)\
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s:\
    \ \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmp8bsphi3c.swift:13:55: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n    return s.unicodeScalars.filter { $0.isASCII &&\
    \ $0.isUppercase }.reduce(0) { $0 + Int($1.value) }\n                        \
    \                           ~~ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 0
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1 >= \"A\" && $1 <= \"Z\" ? Int($1.asciiValue!) : 0) }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.filter { $0.isUppercase }.reduce(0) { $0 + Int($1.value) }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmploz9nirh.swift:13:41: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n    return s.unicodeScalars.filter { $0.isUppercase\
    \ }.reduce(0) { $0 + Int($1.value) }\n                                     ~~\
    \ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.filter { $0.isUppercase }.reduce(0) { $0 + Int($1.value) }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmploz9nirh.swift:13:41: error: value of type 'Unicode.Scalar' has\
    \ no member 'isUppercase'\n    return s.unicodeScalars.filter { $0.isUppercase\
    \ }.reduce(0) { $0 + Int($1.value) }\n                                     ~~\
    \ ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.reduce(0) { $0 + ($1.isUppercase ? $1.asciiValue! : 0) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"abAB\")\
    \ == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpzre_28i0.swift:13:62: error: result values in '? :' expression\
    \ have mismatching types 'UInt8' and 'Int'\n    return s.reduce(0) { $0 + ($1.isUppercase\
    \ ? $1.asciiValue! : 0) }\n                                                ~~~~~~~~~~~~~^\n\
    \                                                Int(          )\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase ? $1.value :\
    \ 0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(digitSum(s: \"\") == 0)\n\
    assert(digitSum(s: \"abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s:\
    \ \"helloE\") == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s:\
    \ \"aAaaaXa\") == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s:\
    \ \"You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpbtmhz7od.swift:13:35: error: missing argument label 'into:' in\
    \ call\n    return s.unicodeScalars.reduce(0) { $0 + ($1.isASCII && $1.isUppercase\
    \ ? $1.value : 0) }\n                                  ^\n                   \
    \                into: \n/tmp/tmpbtmhz7od.swift:13:29: error: cannot convert return\
    \ expression of type '(Int, _) -> Int' to return type 'Int'\n    return s.unicodeScalars.reduce(0)\
    \ { $0 + ($1.isASCII && $1.isUppercase ? $1.value : 0) }\n           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734
- exit_code: 1
  program: "\n/// Task\n/// Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n/// ASCII codes.\n/// Examples:\n///\
    \ digitSum(\"\") => 0\n/// digitSum(\"abAB\") => 131\n/// digitSum(\"abcCd\")\
    \ => 67\n/// digitSum(\"helloE\") => 69\n/// digitSum(\"woArBld\") => 131\n///\
    \ digitSum(\"aAaaaXa\") => 153\nfunc digitSum(s: String) -> Int {\n    return\
    \ s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!) }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digitSum(s: \"\") == 0)\nassert(digitSum(s: \"\
    abAB\") == 131)\nassert(digitSum(s: \"abcCd\") == 67)\nassert(digitSum(s: \"helloE\"\
    ) == 69)\nassert(digitSum(s: \"woArBld\") == 131)\nassert(digitSum(s: \"aAaaaXa\"\
    ) == 153)\nassert(digitSum(s: \" How are yOu?\") == 151)\nassert(digitSum(s: \"\
    You arE Very Smart\") == 327)"
  status: SyntaxError
  stderr: "/tmp/tmpfjecv3gi.swift:13:50: error: contextual closure type '(Int, String.Element)\
    \ throws -> Int' (aka '(Int, Character) throws -> Int') expects 2 arguments, but\
    \ 1 was used in closure body\n    return s.filter { $0.isUppercase }.reduce(0)\
    \ { $0 + Int($0.asciiValue!) }\n                                             \
    \    ^\n/tmp/tmpfjecv3gi.swift:13:64: error: value of type 'Int' has no member\
    \ 'asciiValue'\n    return s.filter { $0.isUppercase }.reduce(0) { $0 + Int($0.asciiValue!)\
    \ }\n                                                            ~~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824734

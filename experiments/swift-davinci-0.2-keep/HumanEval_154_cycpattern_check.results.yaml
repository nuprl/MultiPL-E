language: swift
name: HumanEval_154_cycpattern_check
results:
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    guard a.count >= b.count else { return false }\n    let b = Array(b)\n\
    \    for i in 0..<b.count {\n        let rotated = b[i..<b.count] + b[0..<i]\n\
    \        if a.contains(String(rotated)) {\n            return true\n        }\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b303222ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3031f21561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b3031f21286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b3031f2113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b3031f20bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b303207be40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b303208085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b3031f4d920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b3031c08b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b3031c07b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b3031c08ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b3031bee42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b3031bec840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b3031bece70 StringProtocol.contains(_:)
    + 64

    14   tmpnbhtv16p                        0x00005587117ad2e8 <unavailable> + 8936

    15   tmpnbhtv16p                        0x00005587117ac865 <unavailable> + 6245

    16   libc.so.6                          0x00002b3032416460 __libc_start_main +
    245

    17   tmpnbhtv16p                        0x00005587117ac539 <unavailable> + 5433

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    if a.count < b.count {\n\
    \        return false\n    }\n    for i in 0..<a.count {\n        var j = 0\n\
    \        while j < b.count && a[(i + j) % a.count] == b[j] {\n            j +=\
    \ 1\n        }\n        if j == b.count {\n            return true\n        }\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmp3p6ff1d6/tmp3p6ff1d6.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4b5d2d7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4b5cfceb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4b5cfce988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4b5cfcd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3p6ff1d6                        0x000055b6837cd975 <unavailable> + 6517

    5    libc.so.6                          0x00002b4b5d4c3460 __libc_start_main +
    245

    6    tmp3p6ff1d6                        0x000055b6837cd2d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count { return false }\n    var c = b\n    for _ in 0..<b.count\
    \ {\n        if a.contains(c) { return true }\n        c = c.dropFirst() + c.prefix(1)\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmpnwk8llwt.swift:14:27: error: cannot assign value of type 'String.SubSequence'\
    \ (aka 'Substring') to type 'String'\n        c = c.dropFirst() + c.prefix(1)\n\
    \            ~~~~~~~~~~~~~~^~~~~~~~~~~~~\n            String(                \
    \    )\n"
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var a = a\n    var b = b\n    if b.count > a.count {\n        return\
    \ false\n    }\n    for _ in 0..<a.count {\n        if a.contains(b) {\n     \
    \       return true\n        }\n        a.append(a.removeFirst())\n    }\n   \
    \ return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b8aa9a6bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8aa9762561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b8aa9762286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b8aa976213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b8aa9761bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b8aa98bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b8aa98c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b8aa978e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b8aa9449b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b8aa9448b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b8aa9449ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b8aa942f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b8aa942d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b8aa942de70 StringProtocol.contains(_:)
    + 64

    14   tmpr9w1khnu                        0x000055f61c475e4e <unavailable> + 7758

    15   tmpr9w1khnu                        0x000055f61c4755c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b8aa9c57460 __libc_start_main +
    245

    17   tmpr9w1khnu                        0x000055f61c475299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpip0ct_b1/tmpip0ct_b1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e3c290c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e3bf87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e3bf87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e3bf867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpip0ct_b1                        0x000056241b01e721 <unavailable> + 5921

    5    libc.so.6                          0x00002b5e3c47c460 __libc_start_main +
    245

    6    tmpip0ct_b1                        0x000056241b01e299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var b_rot = b\n    for _\
    \ in 0..<b.count {\n        if a.contains(where: { $0 == b_rot[0] }) {\n     \
    \       var i = a.firstIndex(of: b_rot[0])!\n            var j = 0\n         \
    \   while j < b.count {\n                if a[i] != b_rot[j] {\n             \
    \       break\n                }\n                i = (i + 1) % a.count\n    \
    \            j += 1\n            }\n            if j == b.count {\n          \
    \      return true\n            }\n        }\n        b_rot.append(b_rot.removeFirst())\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmptar5xnjx/tmptar5xnjx.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4b90213c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4b8ff0ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4b8ff0a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4b8ff097b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptar5xnjx                        0x000055a324ab48e5 <unavailable> + 6373

    5    libc.so.6                          0x00002b4b903ff460 __libc_start_main +
    245

    6    tmptar5xnjx                        0x000055a324ab4539 <unavailable> + 5433

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count == b.count {\n        return a == b\n    }\n    let bCount\
    \ = b.count\n    let bIndex = b.index(b.startIndex, offsetBy: bCount)\n    let\
    \ bSub = b[..<bIndex]\n    let bSubString = String(bSub)\n    let bSubCount =\
    \ bSubString.count\n    let bSubIndex = bSubString.index(bSubString.startIndex,\
    \ offsetBy: bSubCount)\n    let bSubSub = bSubString[..<bSubIndex]\n    let bSubSubString\
    \ = String(bSubSub)\n    let bSubSubCount = bSubSubString.count\n    let bSubSubIndex\
    \ = bSubSubString.index(bSubSubString.startIndex, offsetBy: bSubSubCount)\n  \
    \  let bSubSubSub = bSubSubString[..<bSubSubIndex]\n    let bSubSubSubString =\
    \ String(bSubSubSub)\n    let bSubSubSubCount = bSubSubSubString.count\n    let\
    \ bSubSubSubIndex = bSubSubSubString.index(bSubSubSubString.startIndex, offsetBy:\
    \ bSubSubSubCount)\n    let bSubSubSubSub = bSubSubSubString[..<bSubSubSubIndex]\n\
    \    let bSubSubSubSubString = String(bSubSubSubSub)\n    let bSubSubSubSubCount\
    \ = bSubSubSubSubString.count\n    let bSubSubSubSubIndex = bSubSubSubSubString.index(bSubSubSubSubString.startIndex,\
    \ offsetBy: bSubSubSubSubCount)\n    let bSubSubSubSubSub = bSubSubSubSubString[..<bSubSubSubSubIndex]\n\
    \    let bSubSubSubSubSubString = String(bSubSubSubSubSub)\n    let bSubSubSubSubSubCount\
    \ = bSubSubSubSubSubString.count\n    let bSubSubSubSubSubIndex = bSubSubSubSubSubString.index(bSubSubSubSubSubString.startIndex,\
    \ offsetBy: bSubSubSubSubSubCount)\n    let bSubSubSubSubSubSub = bSubSubSubSubSubString[..<bSubSubSubSubSubIndex\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmp1fc7o35j.swift:36:1: error: expected ']' in expression list\n}\n\
    ^\n/tmp/tmp1fc7o35j.swift:35:53: note: to match this opening '['\n    let bSubSubSubSubSubSub\
    \ = bSubSubSubSubSubString[..<bSubSubSubSubSubIndex\n                        \
    \                            ^\n/tmp/tmp1fc7o35j.swift:35:9: warning: initialization\
    \ of immutable value 'bSubSubSubSubSubSub' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let bSubSubSubSubSubSub = bSubSubSubSubSubString[..<bSubSubSubSubSubIndex\n\
    \    ~~~~^~~~~~~~~~~~~~~~~~~\n    _\n"
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var a = a\n    var b = b\n    if a.count < b.count {\n        return\
    \ false\n    }\n    if a.count == b.count {\n        return a == b\n    }\n  \
    \  var i = 0\n    while i < a.count {\n        if a.hasPrefix(b) {\n         \
    \   return true\n        }\n        a.append(a.removeFirst())\n        i += 1\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpzhl650t7/tmpzhl650t7.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b5fb37c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b5f82eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b5f82e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b5f82d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzhl650t7                        0x00005584f623d7b5 <unavailable> + 6069

    5    libc.so.6                          0x00002b0b5fd23460 __libc_start_main +
    245

    6    tmpzhl650t7                        0x00005584f623d119 <unavailable> + 4377

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    for i in 0..<a.count\
    \ {\n        if a[i] == b[0] {\n            var j = 1\n            while j < b.count\
    \ {\n                if a[(i + j) % a.count] != b[j] {\n                    break\n\
    \                }\n                j += 1\n            }\n            if j ==\
    \ b.count {\n                return true\n            }\n        }\n    }\n  \
    \  return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmpvdk8_1fo.swift:14:12: error: 'subscript(_:)' is unavailable: cannot\
    \ subscript String with an Int, use a String.Index instead.\n        if a[i] ==\
    \ b[0] {\n           ^~~~\nSwift.String:3:12: note: 'subscript(_:)' has been explicitly\
    \ marked unavailable here\n    public subscript(i: Int) -> Character { get }\n\
    \           ^\n/tmp/tmpvdk8_1fo.swift:14:20: error: 'subscript(_:)' is unavailable:\
    \ cannot subscript String with an Int, use a String.Index instead.\n        if\
    \ a[i] == b[0] {\n                   ^~~~\nSwift.String:3:12: note: 'subscript(_:)'\
    \ has been explicitly marked unavailable here\n    public subscript(i: Int) ->\
    \ Character { get }\n           ^\n/tmp/tmpvdk8_1fo.swift:17:20: error: 'subscript(_:)'\
    \ is unavailable: cannot subscript String with an Int, use a String.Index instead.\n\
    \                if a[(i + j) % a.count] != b[j] {\n                   ^~~~~~~~~~~~~~~~~~~~\n\
    Swift.String:3:12: note: 'subscript(_:)' has been explicitly marked unavailable\
    \ here\n    public subscript(i: Int) -> Character { get }\n           ^\n/tmp/tmpvdk8_1fo.swift:17:44:\
    \ error: 'subscript(_:)' is unavailable: cannot subscript String with an Int,\
    \ use a String.Index instead.\n                if a[(i + j) % a.count] != b[j]\
    \ {\n                                           ^~~~\nSwift.String:3:12: note:\
    \ 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript(i:\
    \ Int) -> Character { get }\n           ^\n"
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    // your code here\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpic7q7011/tmpic7q7011.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aacb6889c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aacb6580b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aacb6580988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aacb657f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpic7q7011                        0x0000556b9761a371 <unavailable> + 4977

    5    libc.so.6                          0x00002aacb6a75460 __libc_start_main +
    245

    6    tmpic7q7011                        0x0000556b97619ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 0
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let b_len = b.count\n   \
    \ for i in 0..<b_len {\n        let b_rot = b[i..<b_len] + b[0..<i]\n        if\
    \ a.contains(b_rot) {\n            return true\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count { return false }\n    var b = b\n    for _ in 0..<b.count\
    \ {\n        if a.contains(b) { return true }\n        b.append(b.removeFirst())\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpp_e5xrdd/tmpp_e5xrdd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad722edbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad722bd2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad722bd2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad722bd17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp_e5xrdd                        0x0000564a8677c721 <unavailable> + 5921

    5    libc.so.6                          0x00002ad7230c7460 __libc_start_main +
    245

    6    tmpp_e5xrdd                        0x0000564a8677c299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count == b.count {\n        return a == b\n    }\n    let a = Array(a)\n\
    \    let b = Array(b)\n    var i = 0\n    while i < a.count {\n        var j =\
    \ 0\n        while j < b.count {\n            if a[(i + j) % a.count] != b[j]\
    \ {\n                break\n            }\n            j += 1\n        }\n   \
    \     if j == b.count {\n            return true\n        }\n        i += 1\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmp6wtsronb/tmp6wtsronb.swift:48: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b38ba398c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b38ba08fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b38ba08f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b38ba08e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6wtsronb                        0x00005604b159c8e5 <unavailable> + 6373

    5    libc.so.6                          0x00002b38ba584460 __libc_start_main +
    245

    6    tmp6wtsronb                        0x00005604b159c249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpip0ct_b1/tmpip0ct_b1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e3c290c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e3bf87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e3bf87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e3bf867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpip0ct_b1                        0x000056241b01e721 <unavailable> + 5921

    5    libc.so.6                          0x00002b5e3c47c460 __libc_start_main +
    245

    6    tmpip0ct_b1                        0x000056241b01e299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 0
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var b_rotated = b\n    for\
    \ _ in 0..<b.count {\n        if a.contains(b_rotated) {\n            return true\n\
    \        }\n        b_rotated.append(b_rotated.removeFirst())\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a: \"\
    xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"ell\"\
    ) == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a:\
    \ \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\"\
    ) == false)\nassert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let b_len = b.count\n   \
    \ var b_index = 0\n    for i in 0..<a.count {\n        if a[i] == b[b_index] {\n\
    \            b_index += 1\n            if b_index == b_len {\n               \
    \ return true\n            }\n        } else {\n            b_index = 0\n    \
    \    }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt008s7dd/tmpt008s7dd.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b26f2ca4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b26f299bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b26f299b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b26f299a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt008s7dd                        0x000055b4fac93935 <unavailable> + 6453

    5    libc.so.6                          0x00002b26f2e90460 __libc_start_main +
    245

    6    tmpt008s7dd                        0x000055b4fac93299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var i = 0\n    while i <\
    \ a.count {\n        if a[i] == b[0] {\n            var j = 1\n            while\
    \ j < b.count {\n                if a[(i + j) % a.count] != b[j] {\n         \
    \           break\n                }\n                j += 1\n            }\n\
    \            if j == b.count {\n                return true\n            }\n \
    \       }\n        i += 1\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpb72g4wad/tmpb72g4wad.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3fffc04c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3fff8fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3fff8fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3fff8fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb72g4wad                        0x0000564822249835 <unavailable> + 6197

    5    libc.so.6                          0x00002b3fffdf0460 __libc_start_main +
    245

    6    tmpb72g4wad                        0x0000564822249199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    if a.count < b.count { return\
    \ false }\n    for i in 0..<a.count {\n        if a[i] == b[0] {\n           \
    \ var j = 1\n            while j < b.count {\n                if a[(i + j) % a.count]\
    \ != b[j] {\n                    break\n                }\n                j +=\
    \ 1\n            }\n            if j == b.count {\n                return true\n\
    \            }\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpqk75h505/tmpqk75h505.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b677eddec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b677ead5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b677ead5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b677ead47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqk75h505                        0x000055d920f3d935 <unavailable> + 6453

    5    libc.so.6                          0x00002b677efca460 __libc_start_main +
    245

    6    tmpqk75h505                        0x000055d920f3d299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var a = a\n    var b = b\n    if a.count < b.count {\n        return\
    \ false\n    }\n    for _ in 0..<a.count {\n        if a.contains(b) {\n     \
    \       return true\n        }\n        a.append(a.removeFirst())\n    }\n   \
    \ return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b2fe5f26c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2fe5c1d561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2fe5c1d286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2fe5c1d13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2fe5c1cbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b2fe5d77e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b2fe5d7c85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b2fe5c49920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b2fe5904b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b2fe5903b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b2fe5904ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b2fe58ea42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b2fe58e8840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b2fe58e8e70 StringProtocol.contains(_:)
    + 64

    14   tmpxkna_s2q                        0x000056100d69de5c <unavailable> + 7772

    15   tmpxkna_s2q                        0x000056100d69d5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b2fe6112460 __libc_start_main +
    245

    17   tmpxkna_s2q                        0x000056100d69d299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 0
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let b_len = b.count\n   \
    \ for i in 0..<b_len {\n        let new_b = b[i..<b_len] + b[0..<i]\n        if\
    \ a.contains(new_b) {\n            return true\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    guard a.count >= b.count else { return false }\n    var b = b\n    for\
    \ _ in 0..<b.count {\n        if a.contains(b) { return true }\n        b.append(b.removeFirst())\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b0c3f06ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0c3ed65561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b0c3ed65286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b0c3ed6513c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b0c3ed64bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b0c3eebfe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b0c3eec485c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b0c3ed91920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b0c3ea4cb82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b0c3ea4bb2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b0c3ea4cced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b0c3ea3242d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b0c3ea30840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b0c3ea30e70 StringProtocol.contains(_:)
    + 64

    14   tmpubtg2jmh                        0x0000559012d4dd8e <unavailable> + 7566

    15   tmpubtg2jmh                        0x0000559012d4d5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b0c3f25a460 __libc_start_main +
    245

    17   tmpubtg2jmh                        0x0000559012d4d299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    let b = b +\
    \ b\n    return b.contains(a)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmp84due2nb/tmp84due2nb.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a62ad4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a627cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a627cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a627ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp84due2nb                        0x0000560d9737c501 <unavailable> + 5377

    5    libc.so.6                          0x00002b4a62cc0460 __libc_start_main +
    245

    6    tmp84due2nb                        0x0000560d9737c079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 0
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var b1 = b\n    for _ in\
    \ 0..<b.count {\n        if a.contains(b1) {\n            return true\n      \
    \  }\n        b1.append(b1.removeFirst())\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824900
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var b = b\n    for _ in 0..<b.count\
    \ {\n        if a.contains(b) {\n            return true\n        }\n        b.append(b.removeFirst())\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmpu97tzhi_.swift:12:9: error: invalid redeclaration of 'b'\n    var\
    \ b = b\n        ^\n/tmp/tmpu97tzhi_.swift:11:9: note: 'b' previously declared\
    \ here\n    let b = Array(b)\n        ^\n"
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var i = 0\n    while i <\
    \ a.count {\n        if a[i] == b[0] {\n            var j = 0\n            while\
    \ j < b.count {\n                if a[(i + j) % a.count] != b[j] {\n         \
    \           break\n                }\n                j += 1\n            }\n\
    \            if j == b.count {\n                return true\n            }\n \
    \       }\n        i += 1\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpbe89jzal/tmpbe89jzal.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1cc75cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1cc72c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1cc72c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1cc72c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbe89jzal                        0x000055c51df64835 <unavailable> + 6197

    5    libc.so.6                          0x00002b1cc77b6460 __libc_start_main +
    245

    6    tmpbe89jzal                        0x000055c51df64199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let b_len = b.count\n   \
    \ for i in 0..<a.count {\n        if a[i] == b[0] {\n            var j = 1\n \
    \           while j < b_len && a[(i + j) % a.count] == b[j] {\n              \
    \  j += 1\n            }\n            if j == b_len {\n                return\
    \ true\n            }\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmp2r9g566k/tmp2r9g566k.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47d5e3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47d5b34b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47d5b34988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47d5b337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2r9g566k                        0x000055e39b002975 <unavailable> + 6517

    5    libc.so.6                          0x00002b47d6029460 __libc_start_main +
    245

    6    tmp2r9g566k                        0x000055e39b0022d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let len = b.count\n    var\
    \ i = 0\n    while i < len {\n        if a.contains(b[i]) {\n            return\
    \ true\n        }\n        i += 1\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmp_a2wa2mg/tmp_a2wa2mg.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0a26d6bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0a26a62b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0a26a62988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0a26a617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_a2wa2mg                        0x000055b8f2c41505 <unavailable> + 5381

    5    libc.so.6                          0x00002b0a26f57460 __libc_start_main +
    245

    6    tmp_a2wa2mg                        0x000055b8f2c41159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    let b = b +\
    \ b\n    return b.contains(a)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmp84due2nb/tmp84due2nb.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a62ad4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a627cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a627cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a627ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp84due2nb                        0x0000560d9737c501 <unavailable> + 5377

    5    libc.so.6                          0x00002b4a62cc0460 __libc_start_main +
    245

    6    tmp84due2nb                        0x0000560d9737c079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    let a = Array(a)\n\
    \    let b = Array(b)\n    for i in 0..<a.count {\n        if a[i] == b[0] {\n\
    \            var j = 1\n            while j < b.count {\n                if a[(i\
    \ + j) % a.count] != b[j] {\n                    break\n                }\n  \
    \              j += 1\n            }\n            if j == b.count {\n        \
    \        return true\n            }\n        }\n    }\n    return false\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpj8b63rvz/tmpj8b63rvz.swift:48: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b883999dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8839694b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8839694988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b88396937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj8b63rvz                        0x0000561f35e1d975 <unavailable> + 6517

    5    libc.so.6                          0x00002b8839b89460 __libc_start_main +
    245

    6    tmpj8b63rvz                        0x0000561f35e1d2d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    let b = b +\
    \ b\n    return b.contains(a)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmp84due2nb/tmp84due2nb.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a62ad4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a627cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a627cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a627ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp84due2nb                        0x0000560d9737c501 <unavailable> + 5377

    5    libc.so.6                          0x00002b4a62cc0460 __libc_start_main +
    245

    6    tmp84due2nb                        0x0000560d9737c079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.insert(b.removeFirst(), at: b.endIndex)\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a: \"\
    xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"ell\"\
    ) == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a:\
    \ \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\"\
    ) == false)\nassert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002ad2a2229c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad2a1f20561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ad2a1f20286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ad2a1f2013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ad2a1f1fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002ad2a207ae40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002ad2a207f85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002ad2a1f4c920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002ad2a1c07b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002ad2a1c06b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002ad2a1c07ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002ad2a1bed42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002ad2a1beb840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002ad2a1bebe70 StringProtocol.contains(_:)
    + 64

    14   tmpc33_5neo                        0x00005622f6306def <unavailable> + 7663

    15   tmpc33_5neo                        0x00005622f6306625 <unavailable> + 5669

    16   libc.so.6                          0x00002ad2a2415460 __libc_start_main +
    245

    17   tmpc33_5neo                        0x00005622f63062f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var bb = b\n    for _ in\
    \ 0..<b.count {\n        if a.contains(where: { $0 == bb[0] }) {\n           \
    \ if a.indices.contains(where: { $0 + b.count <= a.count && a[$0..<$0+b.count]\
    \ == bb }) {\n                return true\n            }\n        }\n        bb.append(bb.removeFirst())\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmpvzl3fcsx.swift:15:93: error: cannot convert value of type '[String.Element]'\
    \ (aka 'Array<Character>') to expected argument type 'ArraySlice<String.Element>'\
    \ (aka 'ArraySlice<Character>')\n            if a.indices.contains(where: { $0\
    \ + b.count <= a.count && a[$0..<$0+b.count] == bb }) {\n                    \
    \                                                                        ^\n"
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let b_len = b.count\n   \
    \ var b_index = 0\n    var a_index = 0\n    while a_index < a.count {\n      \
    \  if a[a_index] == b[b_index] {\n            b_index += 1\n            if b_index\
    \ == b_len {\n                return true\n            }\n        } else {\n \
    \           b_index = 0\n        }\n        a_index += 1\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmp9ecppfgg/tmp9ecppfgg.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8ffc829c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ffc520b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ffc520988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ffc51f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9ecppfgg                        0x00005557cda1a7a5 <unavailable> + 6053

    5    libc.so.6                          0x00002b8ffca15460 __libc_start_main +
    245

    6    tmp9ecppfgg                        0x00005557cda1a109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var b_index = 0\n    for\
    \ i in 0..<a.count {\n        if a[i] == b[b_index] {\n            b_index +=\
    \ 1\n            if b_index == b.count {\n                return true\n      \
    \      }\n        } else {\n            b_index = 0\n        }\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a: \"\
    xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"ell\"\
    ) == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a:\
    \ \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\"\
    ) == false)\nassert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpppyveuop/tmpppyveuop.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8463f74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8463c6bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8463c6b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8463c6a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpppyveuop                        0x000055d5e5166935 <unavailable> + 6453

    5    libc.so.6                          0x00002b8464160460 __libc_start_main +
    245

    6    tmpppyveuop                        0x000055d5e5166299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = a.lowercased()\n    let b = b.lowercased()\n    if a.count <\
    \ b.count {\n        return false\n    }\n    let bb = b + b\n    return bb.contains(a)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b9594ffcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9594cf3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b9594cf3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b9594cf313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b9594cf2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b9594e4de40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b9594e5285c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b9594d1f920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b95949dab82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b95949d9b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b95949daced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b95949c042d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b95949be840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b95949bee70 StringProtocol.contains(_:)
    + 64

    14   tmpbw93yd3v                        0x000055df99affb15 <unavailable> + 6933

    15   tmpbw93yd3v                        0x000055df99aff3f5 <unavailable> + 5109

    16   libc.so.6                          0x00002b95951e8460 __libc_start_main +
    245

    17   tmpbw93yd3v                        0x000055df99aff0c9 <unavailable> + 4297

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var bb = b\n    for _ in\
    \ 0..<b.count {\n        if String(a).contains(String(bb)) {\n            return\
    \ true\n        }\n        bb.append(bb.removeFirst())\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002ac0fb3c8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac0fb0bf561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ac0fb0bf286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ac0fb0bf13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ac0fb0bebb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002ac0fb219e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002ac0fb21e85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002ac0fb0eb920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002ac0fada6b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002ac0fada5b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002ac0fada6ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002ac0fad8c42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002ac0fad8a840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002ac0fad8ae70 StringProtocol.contains(_:)
    + 64

    14   tmpvc3x50yg                        0x00005597f47ef011 <unavailable> + 8209

    15   tmpvc3x50yg                        0x00005597f47ee765 <unavailable> + 5989

    16   libc.so.6                          0x00002ac0fb5b4460 __libc_start_main +
    245

    17   tmpvc3x50yg                        0x00005597f47ee439 <unavailable> + 5177

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var i = 0\n    while i <\
    \ a.count {\n        var j = 0\n        while j < b.count {\n            if a[i]\
    \ == b[j] {\n                var k = i\n                var l = j\n          \
    \      while k < a.count && l < b.count {\n                    if a[k] != b[l]\
    \ {\n                        break\n                    }\n                  \
    \  k += 1\n                    l += 1\n                }\n                if l\
    \ == b.count {\n                    return true\n                }\n         \
    \       k = 0\n                while k < i && l < b.count {\n                \
    \    if a[k] != b[l] {\n                        break\n                    }\n\
    \                    k += 1\n                    l += 1\n                }\n \
    \               if l == b.count {\n                    return true\n         \
    \       }\n            }\n            j += 1\n        }\n        i += 1\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmp_4okpyr5/tmp_4okpyr5.swift:61: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72d5db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72d5ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72d5ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72d5aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_4okpyr5                        0x000055f39f0de505 <unavailable> + 5381

    5    libc.so.6                          0x00002b72d5fa5460 __libc_start_main +
    245

    6    tmp_4okpyr5                        0x000055f39f0de159 <unavailable> + 4441

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        let first = b.removeFirst()\n        b.append(first)\n   \
    \ }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b01d664bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b01d6342561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b01d6342286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b01d634213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b01d6341bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b01d649ce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b01d64a185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b01d636e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b01d6029b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b01d6028b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b01d6029ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b01d600f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b01d600d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b01d600de70 StringProtocol.contains(_:)
    + 64

    14   tmp9d9f7az_                        0x000055c4f174bda2 <unavailable> + 7586

    15   tmp9d9f7az_                        0x000055c4f174b5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b01d6837460 __libc_start_main +
    245

    17   tmp9d9f7az_                        0x000055c4f174b299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var a = a\n    var b = b\n    if a.count < b.count {\n        return\
    \ false\n    }\n    if a.count == b.count {\n        return a == b\n    }\n  \
    \  for _ in 0..<a.count {\n        if a.hasPrefix(b) {\n            return true\n\
    \        }\n        a.append(a.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpqr0r_9m6/tmpqr0r_9m6.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c92e7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c8fdeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c8fde988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c8fdd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqr0r_9m6                        0x0000562305e7a935 <unavailable> + 6453

    5    libc.so.6                          0x00002af2c94d3460 __libc_start_main +
    245

    6    tmpqr0r_9m6                        0x0000562305e7a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var i = 0\n    while i <\
    \ a.count {\n        if a[i] == b[0] {\n            var j = 0\n            while\
    \ j < b.count {\n                if a[(i + j) % a.count] != b[j] {\n         \
    \           break\n                }\n                j += 1\n            }\n\
    \            if j == b.count {\n                return true\n            }\n \
    \       }\n        i += 1\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpbe89jzal/tmpbe89jzal.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1cc75cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1cc72c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1cc72c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1cc72c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbe89jzal                        0x000055c51df64835 <unavailable> + 6197

    5    libc.so.6                          0x00002b1cc77b6460 __libc_start_main +
    245

    6    tmpbe89jzal                        0x000055c51df64199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    if a.count < b.count { return\
    \ false }\n    for i in 0..<a.count {\n        if a[i] == b[0] {\n           \
    \ var j = 1\n            while j < b.count && a[(i + j) % a.count] == b[j] {\n\
    \                j += 1\n            }\n            if j == b.count { return true\
    \ }\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpcu0_pa3q/tmpcu0_pa3q.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0605f84c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0605c7bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0605c7b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0605c7a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcu0_pa3q                        0x00005589af0fc975 <unavailable> + 6517

    5    libc.so.6                          0x00002b0606170460 __libc_start_main +
    245

    6    tmpcu0_pa3q                        0x00005589af0fc2d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    for i in 0..<a.count {\n\
    \        var match = true\n        for j in 0..<b.count {\n            if a[(i\
    \ + j) % a.count] != b[j] {\n                match = false\n                break\n\
    \            }\n        }\n        if match {\n            return true\n     \
    \   }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmprvjnspvh/tmprvjnspvh.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b82e6552c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b82e6249b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b82e6249988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b82e62487b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprvjnspvh                        0x000055ac0a43c935 <unavailable> + 6453

    5    libc.so.6                          0x00002b82e673e460 __libc_start_main +
    245

    6    tmprvjnspvh                        0x000055ac0a43c299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var a = a\n    var b = b\n    if a.count < b.count {\n        return\
    \ false\n    }\n    for _ in 0..<a.count {\n        if a.contains(b) {\n     \
    \       return true\n        }\n        a.append(a.removeFirst())\n    }\n   \
    \ return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b2fe5f26c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2fe5c1d561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2fe5c1d286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2fe5c1d13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2fe5c1cbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b2fe5d77e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b2fe5d7c85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b2fe5c49920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b2fe5904b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b2fe5903b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b2fe5904ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b2fe58ea42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b2fe58e8840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b2fe58e8e70 StringProtocol.contains(_:)
    + 64

    14   tmpxkna_s2q                        0x000056100d69de5c <unavailable> + 7772

    15   tmpxkna_s2q                        0x000056100d69d5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b2fe6112460 __libc_start_main +
    245

    17   tmpxkna_s2q                        0x000056100d69d299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    let a = Array(a)\n\
    \    let b = Array(b)\n    var i = 0\n    while i < a.count {\n        var j =\
    \ 0\n        while j < b.count {\n            if a[i] == b[j] {\n            \
    \    var k = i\n                var l = j\n                while k < a.count &&\
    \ l < b.count && a[k] == b[l] {\n                    k += 1\n                \
    \    l += 1\n                }\n                if l == b.count {\n          \
    \          return true\n                }\n                if k == a.count {\n\
    \                    k = 0\n                }\n                while k < i &&\
    \ l < b.count && a[k] == b[l] {\n                    k += 1\n                \
    \    l += 1\n                }\n                if l == b.count {\n          \
    \          return true\n                }\n            }\n            j += 1\n\
    \        }\n        i += 1\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmp8sgdt8re/tmp8sgdt8re.swift:60: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c26680c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c26377b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c26377988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c263767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8sgdt8re                        0x000055f68e05b555 <unavailable> + 5461

    5    libc.so.6                          0x00002b3c2686c460 __libc_start_main +
    245

    6    tmp8sgdt8re                        0x000055f68e05b1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.contains(b) {\n        return true\n    }\n    var b = b\n    for\
    \ _ in 0..<b.count {\n        b.append(b.removeFirst())\n        if a.contains(b)\
    \ {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002abd9ddc8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd9dabf561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002abd9dabf286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002abd9dabf13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002abd9dabebb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002abd9dc19e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002abd9dc1e85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002abd9daeb920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002abd9d7a8b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002abd9d7a7b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002abd9d7a8ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002abd9d78e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002abd9d78c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002abd9d78ce70 StringProtocol.contains(_:)
    + 64

    14   tmpk0ph99k8                        0x000055dcd5795c2a <unavailable> + 7210

    15   tmpk0ph99k8                        0x000055dcd57955c5 <unavailable> + 5573

    16   libc.so.6                          0x00002abd9dfb4460 __libc_start_main +
    245

    17   tmpk0ph99k8                        0x000055dcd5795299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var a = a\n    var b = b\n    if a.count != b.count {\n        return\
    \ false\n    }\n    for _ in 0..<a.count {\n        if a.contains(b) {\n     \
    \       return true\n        }\n        a.append(a.removeFirst())\n    }\n   \
    \ return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpnyxtydv9/tmpnyxtydv9.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae3dec07c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae3de8feb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae3de8fe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae3de8fd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnyxtydv9                        0x000055aca443f721 <unavailable> + 5921

    5    libc.so.6                          0x00002ae3dedf3460 __libc_start_main +
    245

    6    tmpnyxtydv9                        0x000055aca443f299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpip0ct_b1/tmpip0ct_b1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e3c290c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e3bf87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e3bf87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e3bf867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpip0ct_b1                        0x000056241b01e721 <unavailable> + 5921

    5    libc.so.6                          0x00002b5e3c47c460 __libc_start_main +
    245

    6    tmpip0ct_b1                        0x000056241b01e299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var b_rotated = b\n    for\
    \ _ in 0..<b.count {\n        if a.contains(where: { $0 == b_rotated[0] }) {\n\
    \            if a.contains(where: { $0 == b_rotated[1] }) {\n                var\
    \ i = 0\n                var j = 0\n                while i < a.count && j < b_rotated.count\
    \ {\n                    if a[i] == b_rotated[j] {\n                        i\
    \ += 1\n                        j += 1\n                    } else {\n       \
    \                 i += 1\n                    }\n                }\n         \
    \       if j == b_rotated.count {\n                    return true\n         \
    \       }\n            }\n        }\n        b_rotated.rotate(by: 1)\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmp5etztp9n.swift:31:19: error: value of type '[String.Element]' (aka\
    \ 'Array<Character>') has no member 'rotate'\n        b_rotated.rotate(by: 1)\n\
    \        ~~~~~~~~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var b_rotated = b\n    for\
    \ _ in 0..<b.count {\n        if a.contains(where: { $0 == b_rotated[0] }) {\n\
    \            let index = a.firstIndex(of: b_rotated[0])!\n            var i =\
    \ 0\n            while i < b_rotated.count {\n                if a[index + i]\
    \ != b_rotated[i] {\n                    break\n                }\n          \
    \      i += 1\n            }\n            if i == b_rotated.count {\n        \
    \        return true\n            }\n        }\n        b_rotated.append(b_rotated.removeFirst())\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b85b0ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b85805561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b7b85805286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b7b8580513c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b7b85804bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b7b856050a3 <unavailable> + 188579

    6    tmpaz_0l899                        0x000055e8764db2f9 <unavailable> + 8953

    7    tmpaz_0l899                        0x000055e8764da865 <unavailable> + 6245

    8    libc.so.6                          0x00002b7b85cfa460 __libc_start_main +
    245

    9    tmpaz_0l899                        0x000055e8764da539 <unavailable> + 5433

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = a.lowercased()\n    let b = b.lowercased()\n    let b_count =\
    \ b.count\n    let b_index = b.index(b.startIndex, offsetBy: b_count - 1)\n  \
    \  let b_last = String(b[b_index])\n    let b_first = String(b.first!)\n    let\
    \ b_without_last = String(b[b.startIndex..<b_index])\n    let b_without_first\
    \ = String(b[b.index(b.startIndex, offsetBy: 1)..<b.endIndex])\n    let b_rotated\
    \ = b_last + b_without_last\n    let b_rotated_2 = b_first + b_without_first\n\
    \    if a.contains(b) || a.contains(b_rotated) || a.contains(b_rotated_2) {\n\
    \        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b877adb7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b877aaae561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b877aaae286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b877aaae13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b877aaadbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b877ac08e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b877ac0d85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b877aada920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b877a795b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b877a794b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b877a795ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b877a77b42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b877a779840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b877a779e70 StringProtocol.contains(_:)
    + 64

    14   tmpavcfyf6f                        0x0000565138f6c329 <unavailable> + 9001

    15   tmpavcfyf6f                        0x0000565138f6b785 <unavailable> + 6021

    16   libc.so.6                          0x00002b877afa3460 __libc_start_main +
    245

    17   tmpavcfyf6f                        0x0000565138f6b459 <unavailable> + 5209

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if b.count > a.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b8c6c31ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8c6c015561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b8c6c015286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b8c6c01513c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b8c6c014bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b8c6c16fe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b8c6c17485c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b8c6c041920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b8c6bcfcb82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b8c6bcfbb2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b8c6bcfcced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b8c6bce242d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b8c6bce0840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b8c6bce0e70 StringProtocol.contains(_:)
    + 64

    14   tmp22vb9z5n                        0x000055d497f6fd8c <unavailable> + 7564

    15   tmp22vb9z5n                        0x000055d497f6f5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b8c6c50a460 __libc_start_main +
    245

    17   tmp22vb9z5n                        0x000055d497f6f299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    guard a.count >= b.count else {\n        return false\n    }\n    let\
    \ a = Array(a)\n    let b = Array(b)\n    var b = b\n    for _ in 0..<b.count\
    \ {\n        if a.contains(b) {\n            return true\n        }\n        b.append(b.removeFirst())\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmphrutrgy_.swift:15:9: error: invalid redeclaration of 'b'\n    var\
    \ b = b\n        ^\n/tmp/tmphrutrgy_.swift:14:9: note: 'b' previously declared\
    \ here\n    let b = Array(b)\n        ^\n"
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    let a = Array(a)\n\
    \    let b = Array(b)\n    var c = b\n    for _ in 0..<a.count {\n        if String(c)\
    \ == String(a) {\n            return true\n        }\n        let first = c.removeFirst()\n\
    \        c.append(first)\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmp4hb0ck_k/tmp4hb0ck_k.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b052dbe1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b052d8d8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b052d8d8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b052d8d77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4hb0ck_k                        0x0000564579d958c1 <unavailable> + 6337

    5    libc.so.6                          0x00002b052ddcd460 __libc_start_main +
    245

    6    tmp4hb0ck_k                        0x0000564579d95439 <unavailable> + 5177

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let a_len = a.count\n   \
    \ let b_len = b.count\n    if a_len < b_len {\n        return false\n    }\n \
    \   var b_index = 0\n    for i in 0..<a_len {\n        if a[i] == b[b_index] {\n\
    \            var a_index = i\n            while a_index < a_len && b_index < b_len\
    \ && a[a_index] == b[b_index] {\n                a_index += 1\n              \
    \  b_index += 1\n            }\n            if b_index == b_len {\n          \
    \      return true\n            }\n            b_index = 0\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpij58vwem/tmpij58vwem.swift:50: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b450f6b1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b450f3a8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b450f3a8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b450f3a77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpij58vwem                        0x000055ce9aa60975 <unavailable> + 6517

    5    libc.so.6                          0x00002b450f89d460 __libc_start_main +
    245

    6    tmpij58vwem                        0x000055ce9aa602d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var a = a\n    var b = b\n    if a.count < b.count {\n        return\
    \ false\n    }\n    if a.count == b.count {\n        if a == b {\n           \
    \ return true\n        }\n        return false\n    }\n    if a.contains(b) {\n\
    \        return true\n    }\n    for _ in 0..<a.count {\n        a.append(a.removeFirst())\n\
    \        if a.contains(b) {\n            return true\n        }\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a: \"\
    xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"ell\"\
    ) == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a:\
    \ \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\"\
    ) == false)\nassert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b08a73bcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08a70b3561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b08a70b3286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b08a70b313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b08a70b2bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b08a720de40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b08a721285c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b08a70df920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b08a6d9ab82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b08a6d99b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b08a6d9aced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b08a6d8042d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b08a6d7e840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b08a6d7ee70 StringProtocol.contains(_:)
    + 64

    14   tmp_6i00uug                        0x000055b00d349f5f <unavailable> + 8031

    15   tmp_6i00uug                        0x000055b00d349615 <unavailable> + 5653

    16   libc.so.6                          0x00002b08a75a8460 __libc_start_main +
    245

    17   tmp_6i00uug                        0x000055b00d3492e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    if a.count ==\
    \ b.count {\n        return a == b\n    }\n    var b = b\n    for _ in 0..<a.count\
    \ {\n        if a.contains(b) {\n            return true\n        }\n        b.append(b.removeFirst())\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b67e6592c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b67e6289561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b67e6289286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b67e628913c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b67e6288bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b67e63e3e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b67e63e885c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b67e62b5920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b67e5f70b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b67e5f6fb2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b67e5f70ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b67e5f5642d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b67e5f54840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b67e5f54e70 StringProtocol.contains(_:)
    + 64

    14   tmp4k4xg8mp                        0x000056232e7cfe3d <unavailable> + 7741

    15   tmp4k4xg8mp                        0x000056232e7cf615 <unavailable> + 5653

    16   libc.so.6                          0x00002b67e677e460 __libc_start_main +
    245

    17   tmp4k4xg8mp                        0x000056232e7cf2e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.contains(b) {\n        return true\n    }\n    var b = b\n    for\
    \ _ in 0..<b.count {\n        b.insert(b.removeFirst(), at: b.endIndex)\n    \
    \    if a.contains(b) {\n            return true\n        }\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a: \"\
    xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"ell\"\
    ) == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a:\
    \ \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\"\
    ) == false)\nassert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002ab802f04c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab802bfb561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ab802bfb286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ab802bfb13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ab802bfabb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002ab802d55e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002ab802d5a85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002ab802c27920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002ab8028e2b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002ab8028e1b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002ab8028e2ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002ab8028c842d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002ab8028c6840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002ab8028c6e70 StringProtocol.contains(_:)
    + 64

    14   tmps8pxysc1                        0x0000559ed3aa0c8a <unavailable> + 7306

    15   tmps8pxysc1                        0x0000559ed3aa0625 <unavailable> + 5669

    16   libc.so.6                          0x00002ab8030f0460 __libc_start_main +
    245

    17   tmps8pxysc1                        0x0000559ed3aa02f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var i = 0\n    var j = 0\n\
    \    while i < a.count {\n        if a[i] == b[j] {\n            i += 1\n    \
    \        j += 1\n            if j == b.count {\n                return true\n\
    \            }\n        } else {\n            i += 1\n        }\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a: \"\
    xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"ell\"\
    ) == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a:\
    \ \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\"\
    ) == false)\nassert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpto6ezrsm/tmpto6ezrsm.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6738a8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6738784b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6738784988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b67387837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpto6ezrsm                        0x000055be4397a4b5 <unavailable> + 5301

    5    libc.so.6                          0x00002b6738c79460 __libc_start_main +
    245

    6    tmpto6ezrsm                        0x000055be4397a109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    if a.count < b.count {\n\
    \        return false\n    }\n    var b_index = 0\n    for i in 0..<a.count {\n\
    \        if a[i] == b[b_index] {\n            b_index += 1\n            if b_index\
    \ == b.count {\n                return true\n            }\n        } else {\n\
    \            b_index = 0\n        }\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmp05wkaxw2/tmp05wkaxw2.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b386f973c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b386f66ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b386f66a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b386f6697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp05wkaxw2                        0x000055c62a352935 <unavailable> + 6453

    5    libc.so.6                          0x00002b386fb5f460 __libc_start_main +
    245

    6    tmp05wkaxw2                        0x000055c62a352299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpip0ct_b1/tmpip0ct_b1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e3c290c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e3bf87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e3bf87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e3bf867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpip0ct_b1                        0x000056241b01e721 <unavailable> + 5921

    5    libc.so.6                          0x00002b5e3c47c460 __libc_start_main +
    245

    6    tmpip0ct_b1                        0x000056241b01e299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var str = a\n    for _ in 0..<a.count {\n        if str.contains(b) {\n\
    \            return true\n        }\n        str = str.substring(from: str.index(after:\
    \ str.startIndex)) + str.substring(to: str.index(before: str.endIndex))\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmpzihi2ooq.swift:15:19: error: value of type 'String' has no member\
    \ 'substring'\n        str = str.substring(from: str.index(after: str.startIndex))\
    \ + str.substring(to: str.index(before: str.endIndex))\n              ~~~ ^~~~~~~~~\n\
    /tmp/tmpzihi2ooq.swift:15:75: error: value of type 'String' has no member 'substring'\n\
    \        str = str.substring(from: str.index(after: str.startIndex)) + str.substring(to:\
    \ str.index(before: str.endIndex))\n                                         \
    \                             ~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824901
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var b_rotated = b\n    for\
    \ _ in 0..<b.count {\n        if a.contains(where: { $0 == b_rotated[0] }) {\n\
    \            if a.indices.contains(where: { a[$0] == b_rotated[0] }) {\n     \
    \           let index = a.indices.first(where: { a[$0] == b_rotated[0] })!\n \
    \               if a[index..<a.count] == b_rotated[0..<b_rotated.count] {\n  \
    \                  return true\n                }\n            }\n        }\n\
    \        b_rotated.rotate(by: 1)\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmpux3a4k07.swift:22:19: error: value of type '[String.Element]' (aka\
    \ 'Array<Character>') has no member 'rotate'\n        b_rotated.rotate(by: 1)\n\
    \        ~~~~~~~~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpip0ct_b1/tmpip0ct_b1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e3c290c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e3bf87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e3bf87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e3bf867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpip0ct_b1                        0x000056241b01e721 <unavailable> + 5921

    5    libc.so.6                          0x00002b5e3c47c460 __libc_start_main +
    245

    6    tmpip0ct_b1                        0x000056241b01e299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var b_rotated = b\n    for\
    \ _ in 0..<b.count {\n        if a.contains(where: { $0 == b_rotated[0] }) {\n\
    \            var i = 0\n            while i < b_rotated.count {\n            \
    \    if a[i] != b_rotated[i] {\n                    break\n                }\n\
    \                i += 1\n            }\n            if i == b_rotated.count {\n\
    \                return true\n            }\n        }\n        b_rotated.rotate(by:\
    \ 1)\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmpy2k5lw6v.swift:26:19: error: value of type '[String.Element]' (aka\
    \ 'Array<Character>') has no member 'rotate'\n        b_rotated.rotate(by: 1)\n\
    \        ~~~~~~~~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    var a = a\n    if a.count < b.count {\n        return\
    \ false\n    }\n    for _ in 0..<b.count {\n        if a.contains(b) {\n     \
    \       return true\n        }\n        let first = b.removeFirst()\n        b.append(first)\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b1827db7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1827aae561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b1827aae286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b1827aae13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b1827aadbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b1827c08e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b1827c0d85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b1827ada920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b1827795b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b1827794b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b1827795ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b182777b42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b1827779840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b1827779e70 StringProtocol.contains(_:)
    + 64

    14   tmpc1jh8epo                        0x000056475a58ee61 <unavailable> + 7777

    15   tmpc1jh8epo                        0x000056475a58e5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b1827fa3460 __libc_start_main +
    245

    17   tmpc1jh8epo                        0x000056475a58e299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if b.count > a.count {\n        return false\n    }\n    let a = Array(a)\n\
    \    let b = Array(b)\n    for i in 0..<a.count {\n        if a[i] == b[0] {\n\
    \            var j = 1\n            while j < b.count && a[(i + j) % a.count]\
    \ == b[j] {\n                j += 1\n            }\n            if j == b.count\
    \ {\n                return true\n            }\n        }\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a: \"\
    xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"ell\"\
    ) == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a:\
    \ \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\"\
    ) == false)\nassert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmp89cgyz2v/tmp89cgyz2v.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aba7713fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aba76e36b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aba76e36988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aba76e357b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp89cgyz2v                        0x00005606faa1f9c5 <unavailable> + 6597

    5    libc.so.6                          0x00002aba7732b460 __libc_start_main +
    245

    6    tmp89cgyz2v                        0x00005606faa1f329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let b_length = b.count\n\
    \    let a_length = a.count\n    var i = 0\n    var j = 0\n    while i < a_length\
    \ {\n        if a[i] == b[j] {\n            i += 1\n            j += 1\n     \
    \       if j == b_length {\n                return true\n            }\n     \
    \   } else {\n            i = i - j + 1\n            j = 0\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpeef_d0s3/tmpeef_d0s3.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade75280c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade74f77b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade74f77988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade74f767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeef_d0s3                        0x000055e5b944b7a5 <unavailable> + 6053

    5    libc.so.6                          0x00002ade7546c460 __libc_start_main +
    245

    6    tmpeef_d0s3                        0x000055e5b944b109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.insert(b.removeFirst(), at: b.endIndex)\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a: \"\
    xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"ell\"\
    ) == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a:\
    \ \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\"\
    ) == false)\nassert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002ad2a2229c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad2a1f20561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ad2a1f20286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ad2a1f2013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ad2a1f1fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002ad2a207ae40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002ad2a207f85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002ad2a1f4c920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002ad2a1c07b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002ad2a1c06b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002ad2a1c07ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002ad2a1bed42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002ad2a1beb840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002ad2a1bebe70 StringProtocol.contains(_:)
    + 64

    14   tmpc33_5neo                        0x00005622f6306def <unavailable> + 7663

    15   tmpc33_5neo                        0x00005622f6306625 <unavailable> + 5669

    16   libc.so.6                          0x00002ad2a2415460 __libc_start_main +
    245

    17   tmpc33_5neo                        0x00005622f63062f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    let b = b +\
    \ b\n    return b.contains(a)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002ae24a59fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae24a296561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae24a296286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae24a29613c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae24a295bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002ae24a3f0e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002ae24a3f585c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002ae24a2c2920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002ae249f7db82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002ae249f7cb2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002ae249f7dced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002ae249f6342d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002ae249f61840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002ae249f61e70 StringProtocol.contains(_:)
    + 64

    14   tmpma70pobe                        0x000056112ce3da1a <unavailable> + 6682

    15   tmpma70pobe                        0x000056112ce3d3a5 <unavailable> + 5029

    16   libc.so.6                          0x00002ae24a78b460 __libc_start_main +
    245

    17   tmpma70pobe                        0x000056112ce3d079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    let a = Array(a)\n\
    \    let b = Array(b)\n    var i = 0\n    while i < a.count {\n        var j =\
    \ 0\n        while j < b.count {\n            if a[i] == b[j] {\n            \
    \    var k = 0\n                while k < b.count {\n                    if a[(i\
    \ + k) % a.count] != b[(j + k) % b.count] {\n                        break\n \
    \                   }\n                    k += 1\n                }\n       \
    \         if k == b.count {\n                    return true\n               \
    \ }\n            }\n            j += 1\n        }\n        i += 1\n    }\n   \
    \ return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmphw5raryp/tmphw5raryp.swift:51: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adbb3438c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adbb312fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adbb312f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adbb312e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphw5raryp                        0x000055b167a2c595 <unavailable> + 5525

    5    libc.so.6                          0x00002adbb3624460 __libc_start_main +
    245

    6    tmphw5raryp                        0x000055b167a2c1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var result = false\n    let a = Array(a)\n    let b = Array(b)\n    for\
    \ i in 0..<a.count {\n        var j = 0\n        while j < b.count && a[(i + j)\
    \ % a.count] == b[j] {\n            j += 1\n        }\n        if j == b.count\
    \ {\n            result = true\n            break\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpzaozgl19/tmpzaozgl19.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2ffef1dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2ffec14b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2ffec14988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2ffec137b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzaozgl19                        0x0000557b871a6975 <unavailable> + 6517

    5    libc.so.6                          0x00002b2fff109460 __libc_start_main +
    245

    6    tmpzaozgl19                        0x0000557b871a62d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpip0ct_b1/tmpip0ct_b1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e3c290c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e3bf87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e3bf87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e3bf867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpip0ct_b1                        0x000056241b01e721 <unavailable> + 5921

    5    libc.so.6                          0x00002b5e3c47c460 __libc_start_main +
    245

    6    tmpip0ct_b1                        0x000056241b01e299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var i = 0\n    while i <\
    \ a.count {\n        if a[i] == b[0] {\n            var j = 0\n            while\
    \ j < b.count {\n                if a[(i + j) % a.count] != b[j] {\n         \
    \           break\n                }\n                j += 1\n            }\n\
    \            if j == b.count {\n                return true\n            }\n \
    \       }\n        i += 1\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpbe89jzal/tmpbe89jzal.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1cc75cac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1cc72c1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1cc72c1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1cc72c07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbe89jzal                        0x000055c51df64835 <unavailable> + 6197

    5    libc.so.6                          0x00002b1cc77b6460 __libc_start_main +
    245

    6    tmpbe89jzal                        0x000055c51df64199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var b_rot = b\n    for _\
    \ in 0..<b.count {\n        if a.contains(where: { $0 == b_rot[0] }) {\n     \
    \       if a.indices.contains(where: { a[$0] == b_rot[0] }) {\n              \
    \  var i = a.firstIndex(of: b_rot[0])!\n                var j = 0\n          \
    \      while j < b_rot.count {\n                    if a[i] != b_rot[j] {\n  \
    \                      break\n                    }\n                    i = (i\
    \ + 1) % a.count\n                    j += 1\n                }\n            \
    \    if j == b_rot.count {\n                    return true\n                }\n\
    \            }\n        }\n        b_rot.append(b_rot.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpo59fzi7i/tmpo59fzi7i.swift:48: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba3b4fb5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba3b4cacb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba3b4cac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba3b4cab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo59fzi7i                        0x000056262b7a0a35 <unavailable> + 6709

    5    libc.so.6                          0x00002ba3b51a1460 __libc_start_main +
    245

    6    tmpo59fzi7i                        0x000056262b7a0689 <unavailable> + 5769

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    var a = a\n\
    \    var b = b\n    for _ in 0..<a.count {\n        if a.contains(b) {\n     \
    \       return true\n        }\n        let first = a.removeFirst()\n        a.append(first)\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt1a28ulw/tmpt1a28ulw.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab067c5dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab067954b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab067954988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0679537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt1a28ulw                        0x000055d7e04a5721 <unavailable> + 5921

    5    libc.so.6                          0x00002ab067e49460 __libc_start_main +
    245

    6    tmpt1a28ulw                        0x000055d7e04a5299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.contains(b) {\n        return true\n    }\n    let b = Array(b)\n\
    \    for i in 0..<b.count {\n        let c = b[i]\n        let s = b[i..<b.count]\
    \ + b[0..<i]\n        if a.contains(String(s)) {\n            return true\n  \
    \      }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b9642c67c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b964295e561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b964295e286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b964295e13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b964295dbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b9642ab8e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b9642abd85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b964298a920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b9642645b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b9642644b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b9642645ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b964262b42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b9642629840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b9642629e70 StringProtocol.contains(_:)
    + 64

    14   tmpqcbso07s                        0x000056221626af03 <unavailable> + 7939

    15   tmpqcbso07s                        0x000056221626a865 <unavailable> + 6245

    16   libc.so.6                          0x00002b9642e53460 __libc_start_main +
    245

    17   tmpqcbso07s                        0x000056221626a539 <unavailable> + 5433

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.contains(b) {\n        return true\n    }\n    var b = b\n    for\
    \ _ in 0..<b.count {\n        b.append(b.removeFirst())\n        if a.contains(b)\
    \ {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002abd9ddc8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd9dabf561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002abd9dabf286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002abd9dabf13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002abd9dabebb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002abd9dc19e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002abd9dc1e85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002abd9daeb920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002abd9d7a8b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002abd9d7a7b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002abd9d7a8ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002abd9d78e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002abd9d78c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002abd9d78ce70 StringProtocol.contains(_:)
    + 64

    14   tmpk0ph99k8                        0x000055dcd5795c2a <unavailable> + 7210

    15   tmpk0ph99k8                        0x000055dcd57955c5 <unavailable> + 5573

    16   libc.so.6                          0x00002abd9dfb4460 __libc_start_main +
    245

    17   tmpk0ph99k8                        0x000055dcd5795299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    if a.count < b.count {\n\
    \        return false\n    }\n    var i = 0\n    while i < a.count {\n       \
    \ if a[i] == b[0] {\n            var j = 1\n            while j < b.count {\n\
    \                if a[(i + j) % a.count] != b[j] {\n                    break\n\
    \                }\n                j += 1\n            }\n            if j ==\
    \ b.count {\n                return true\n            }\n        }\n        i\
    \ += 1\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt1u_8xgv/tmpt1u_8xgv.swift:50: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b16c36bcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b16c33b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b16c33b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b16c33b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt1u_8xgv                        0x0000559ad8ca3835 <unavailable> + 6197

    5    libc.so.6                          0x00002b16c38a8460 __libc_start_main +
    245

    6    tmpt1u_8xgv                        0x0000559ad8ca3199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpip0ct_b1/tmpip0ct_b1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e3c290c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e3bf87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e3bf87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e3bf867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpip0ct_b1                        0x000056241b01e721 <unavailable> + 5921

    5    libc.so.6                          0x00002b5e3c47c460 __libc_start_main +
    245

    6    tmpip0ct_b1                        0x000056241b01e299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    guard a.count >= b.count else { return false }\n    for i in 0..<a.count\
    \ {\n        let startIndex = a.index(a.startIndex, offsetBy: i)\n        let\
    \ endIndex = a.index(a.startIndex, offsetBy: i + b.count)\n        let range =\
    \ startIndex..<endIndex\n        let substring = String(a[range])\n        if\
    \ substring == b {\n            return true\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:153: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b03f772fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b03f7426561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b03f7426286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b03f742613c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b03f7425bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b03f7559b0d <unavailable> + 2693901

    6    tmpa_qm0k__                        0x0000559656fc7e10 <unavailable> + 7696

    7    tmpa_qm0k__                        0x0000559656fc75b5 <unavailable> + 5557

    8    libc.so.6                          0x00002b03f791b460 __libc_start_main +
    245

    9    tmpa_qm0k__                        0x0000559656fc7289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    if a.count < b.count {\n\
    \        return false\n    }\n    let b_count = b.count\n    var b_index = 0\n\
    \    for i in 0..<a.count {\n        if a[i] == b[b_index] {\n            var\
    \ j = i\n            while j < a.count && b_index < b_count && a[j] == b[b_index]\
    \ {\n                j += 1\n                b_index += 1\n            }\n   \
    \         if b_index == b_count {\n                return true\n            }\n\
    \            if j == a.count {\n                j = 0\n            }\n       \
    \     while j < i && b_index < b_count && a[j] == b[b_index] {\n             \
    \   j += 1\n                b_index += 1\n            }\n            if b_index\
    \ == b_count {\n                return true\n            }\n            b_index\
    \ = 0\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpmlmc1j8y/tmpmlmc1j8y.swift:59: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acc2f7a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acc2f497b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acc2f497988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acc2f4967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmlmc1j8y                        0x000055c4a2316975 <unavailable> + 6517

    5    libc.so.6                          0x00002acc2f98c460 __libc_start_main +
    245

    6    tmpmlmc1j8y                        0x000055c4a23162d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    let a = Array(a)\n\
    \    let b = Array(b)\n    var i = 0\n    while i < a.count {\n        var j =\
    \ 0\n        while j < b.count {\n            if a[i] == b[j] {\n            \
    \    var k = 0\n                while k < b.count {\n                    if a[(i\
    \ + k) % a.count] != b[(j + k) % b.count] {\n                        break\n \
    \                   }\n                    k += 1\n                }\n       \
    \         if k == b.count {\n                    return true\n               \
    \ }\n            }\n            j += 1\n        }\n        i += 1\n    }\n   \
    \ return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmphw5raryp/tmphw5raryp.swift:51: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adbb3438c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adbb312fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adbb312f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adbb312e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphw5raryp                        0x000055b167a2c595 <unavailable> + 5525

    5    libc.so.6                          0x00002adbb3624460 __libc_start_main +
    245

    6    tmphw5raryp                        0x000055b167a2c1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let b_len = b.count\n   \
    \ let a_len = a.count\n    var i = 0\n    while i < a_len {\n        if a[i] ==\
    \ b[0] {\n            var j = 0\n            while j < b_len {\n             \
    \   if a[(i + j) % a_len] != b[j] {\n                    break\n             \
    \   }\n                j += 1\n            }\n            if j == b_len {\n  \
    \              return true\n            }\n        }\n        i += 1\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmphn34ga5j/tmphn34ga5j.swift:49: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac271d1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac271a11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac271a11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac271a107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphn34ga5j                        0x000055b153efd835 <unavailable> + 6197

    5    libc.so.6                          0x00002ac271f06460 __libc_start_main +
    245

    6    tmphn34ga5j                        0x000055b153efd199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = a.lowercased()\n    let b = b.lowercased()\n    if a.contains(b)\
    \ {\n        return true\n    }\n    let b = b.dropFirst() + b.prefix(1)\n   \
    \ if a.contains(String(b)) {\n        return true\n    }\n    return false\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmp44dbl25p.swift:15:9: error: invalid redeclaration of 'b'\n    let\
    \ b = b.dropFirst() + b.prefix(1)\n        ^\n/tmp/tmp44dbl25p.swift:11:9: note:\
    \ 'b' previously declared here\n    let b = b.lowercased()\n        ^\n"
  stdout: ''
  timestamp: 1659824901
- exit_code: 0
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let bCount = b.count\n  \
    \  for i in 0..<bCount {\n        let b1 = b[i..<bCount]\n        let b2 = b[0..<i]\n\
    \        let b3 = b1 + b2\n        if a.contains(b3) {\n            return true\n\
    \        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var i = 0\n    while i <\
    \ a.count {\n        if a[i] == b[0] {\n            var j = 1\n            while\
    \ j < b.count {\n                if a[(i + j) % a.count] != b[j] {\n         \
    \           break\n                }\n                j += 1\n            }\n\
    \            if j == b.count {\n                return true\n            }\n \
    \       }\n        i += 1\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpb72g4wad/tmpb72g4wad.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3fffc04c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3fff8fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3fff8fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3fff8fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb72g4wad                        0x0000564822249835 <unavailable> + 6197

    5    libc.so.6                          0x00002b3fffdf0460 __libc_start_main +
    245

    6    tmpb72g4wad                        0x0000564822249199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpip0ct_b1/tmpip0ct_b1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e3c290c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e3bf87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e3bf87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e3bf867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpip0ct_b1                        0x000056241b01e721 <unavailable> + 5921

    5    libc.so.6                          0x00002b5e3c47c460 __libc_start_main +
    245

    6    tmpip0ct_b1                        0x000056241b01e299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    var b_rot = b\n    for _\
    \ in 0..<b.count {\n        if a.contains(where: { $0 == b_rot[0] }) {\n     \
    \       var i = 0\n            var j = 0\n            while i < a.count && j <\
    \ b_rot.count {\n                if a[i] == b_rot[j] {\n                    i\
    \ += 1\n                    j += 1\n                } else {\n               \
    \     i += 1\n                }\n            }\n            if j == b_rot.count\
    \ {\n                return true\n            }\n        }\n        b_rot.append(b_rot.removeFirst())\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpmdpo6gm1/tmpmdpo6gm1.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b92d86a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b92d8397b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b92d8397988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b92d83967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmdpo6gm1                        0x00005604d4cfd7f5 <unavailable> + 6133

    5    libc.so.6                          0x00002b92d888c460 __libc_start_main +
    245

    6    tmpmdpo6gm1                        0x00005604d4cfd449 <unavailable> + 5193

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    let b = b +\
    \ b\n    return b.contains(a)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002ae24a59fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae24a296561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae24a296286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae24a29613c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae24a295bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002ae24a3f0e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002ae24a3f585c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002ae24a2c2920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002ae249f7db82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002ae249f7cb2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002ae249f7dced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002ae249f6342d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002ae249f61840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002ae249f61e70 StringProtocol.contains(_:)
    + 64

    14   tmpma70pobe                        0x000056112ce3da1a <unavailable> + 6682

    15   tmpma70pobe                        0x000056112ce3d3a5 <unavailable> + 5029

    16   libc.so.6                          0x00002ae24a78b460 __libc_start_main +
    245

    17   tmpma70pobe                        0x000056112ce3d079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpip0ct_b1/tmpip0ct_b1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e3c290c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e3bf87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e3bf87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e3bf867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpip0ct_b1                        0x000056241b01e721 <unavailable> + 5921

    5    libc.so.6                          0x00002b5e3c47c460 __libc_start_main +
    245

    6    tmpip0ct_b1                        0x000056241b01e299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpt0t0lc6t/tmpt0t0lc6t.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaee1a25c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaee171cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaee171c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaee171b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt0t0lc6t                        0x0000560d26698371 <unavailable> + 4977

    5    libc.so.6                          0x00002aaee1c11460 __libc_start_main +
    245

    6    tmpt0t0lc6t                        0x0000560d26697ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpip0ct_b1/tmpip0ct_b1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e3c290c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e3bf87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e3bf87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e3bf867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpip0ct_b1                        0x000056241b01e721 <unavailable> + 5921

    5    libc.so.6                          0x00002b5e3c47c460 __libc_start_main +
    245

    6    tmpip0ct_b1                        0x000056241b01e299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var count = 0\n    var temp = b\n    while count < b.count {\n      \
    \  if a.contains(temp) {\n            return true\n        }\n        temp = String(temp.dropFirst())\
    \ + String(temp.first!)\n        count += 1\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002afb3e809c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb3e500561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002afb3e500286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002afb3e50013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002afb3e4ffbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002afb3e65ae40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002afb3e65f85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002afb3e52c920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002afb3e1e7b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002afb3e1e6b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002afb3e1e7ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002afb3e1cd42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002afb3e1cb840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002afb3e1cbe70 StringProtocol.contains(_:)
    + 64

    14   tmpdddcjr6w                        0x000055651e2fecb0 <unavailable> + 7344

    15   tmpdddcjr6w                        0x000055651e2fe5d5 <unavailable> + 5589

    16   libc.so.6                          0x00002afb3e9f5460 __libc_start_main +
    245

    17   tmpdddcjr6w                        0x000055651e2fe2a9 <unavailable> + 4777

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    let a = Array(a)\n\
    \    let b = Array(b)\n    var b = b\n    for _ in 0..<b.count {\n        if String(a)\
    \ == String(b) {\n            return true\n        }\n        let first = b.removeFirst()\n\
    \        b.append(first)\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmppi2xkx0q.swift:15:9: error: invalid redeclaration of 'b'\n    var\
    \ b = b\n        ^\n/tmp/tmppi2xkx0q.swift:14:9: note: 'b' previously declared\
    \ here\n    let b = Array(b)\n        ^\n"
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    let b = b +\
    \ b\n    return b.contains(a)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmp84due2nb/tmp84due2nb.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a62ad4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a627cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a627cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a627ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp84due2nb                        0x0000560d9737c501 <unavailable> + 5377

    5    libc.so.6                          0x00002b4a62cc0460 __libc_start_main +
    245

    6    tmp84due2nb                        0x0000560d9737c079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let len = b.count\n    for\
    \ i in 0..<len {\n        if a.contains(b[i]) {\n            var j = i + 1\n \
    \           var k = 1\n            while j < len {\n                if b[j] !=\
    \ a[k] {\n                    break\n                }\n                j += 1\n\
    \                k += 1\n            }\n            if j == len {\n          \
    \      return true\n            }\n        }\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpbfkj71au/tmpbfkj71au.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c59110c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c58e07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c58e07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c58e067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbfkj71au                        0x0000559ba74fe6d5 <unavailable> + 5845

    5    libc.so.6                          0x00002b2c592fc460 __libc_start_main +
    245

    6    tmpbfkj71au                        0x0000559ba74fe329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmpip0ct_b1/tmpip0ct_b1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e3c290c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e3bf87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e3bf87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e3bf867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpip0ct_b1                        0x000056241b01e721 <unavailable> + 5921

    5    libc.so.6                          0x00002b5e3c47c460 __libc_start_main +
    245

    6    tmpip0ct_b1                        0x000056241b01e299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 0
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let b_length = b.count\n\
    \    for i in 0..<b_length {\n        let new_b = b[i..<b_length] + b[0..<i]\n\
    \        if a.contains(new_b) {\n            return true\n        }\n    }\n \
    \   return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let b_len = b.count\n   \
    \ let a_len = a.count\n    if b_len > a_len {\n        return false\n    }\n \
    \   for i in 0..<b_len {\n        var j = 0\n        while j < b_len {\n     \
    \       if a[i+j] != b[j] {\n                break\n            }\n          \
    \  j += 1\n        }\n        if j == b_len {\n            return true\n     \
    \   }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpwz_4uv6n/tmpwz_4uv6n.swift:48: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeefb293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeefaf8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeefaf8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeefaf897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwz_4uv6n                        0x00005620be6f8935 <unavailable> + 6453

    5    libc.so.6                          0x00002aeefb47f460 __libc_start_main +
    245

    6    tmpwz_4uv6n                        0x00005620be6f8299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.contains(b) {\n        return true\n    }\n    var b = b\n    for\
    \ _ in 0..<b.count {\n        b.append(b.removeFirst())\n        if a.contains(b)\
    \ {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002abd9ddc8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd9dabf561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002abd9dabf286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002abd9dabf13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002abd9dabebb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002abd9dc19e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002abd9dc1e85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002abd9daeb920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002abd9d7a8b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002abd9d7a7b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002abd9d7a8ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002abd9d78e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002abd9d78c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002abd9d78ce70 StringProtocol.contains(_:)
    + 64

    14   tmpk0ph99k8                        0x000055dcd5795c2a <unavailable> + 7210

    15   tmpk0ph99k8                        0x000055dcd57955c5 <unavailable> + 5573

    16   libc.so.6                          0x00002abd9dfb4460 __libc_start_main +
    245

    17   tmpk0ph99k8                        0x000055dcd5795299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let aCount = a.count\n  \
    \  let bCount = b.count\n    if aCount < bCount {\n        return false\n    }\n\
    \    for i in 0..<aCount {\n        var j = 0\n        while j < bCount && a[(i\
    \ + j) % aCount] == b[j] {\n            j += 1\n        }\n        if j == bCount\
    \ {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'tmp7q6j8o15/tmp7q6j8o15.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d562acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d55fa3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d55fa3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d55fa27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7q6j8o15                        0x000056311fb28975 <unavailable> + 6517

    5    libc.so.6                          0x00002b3d56498460 __libc_start_main +
    245

    6    tmp7q6j8o15                        0x000056311fb282d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = a.lowercased()\n    let b = b.lowercased()\n    if a.count <\
    \ b.count {\n        return false\n    }\n    var b = b\n    for _ in 0..<b.count\
    \ {\n        if a.contains(b) {\n            return true\n        }\n        b\
    \ = b.last! + b.dropLast()\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a:\
    \ \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b:\
    \ \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\n\
    assert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a:\
    \ \"winemtt\", b: \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmpx3fmvf_a.swift:15:9: error: invalid redeclaration of 'b'\n    var\
    \ b = b\n        ^\n/tmp/tmpx3fmvf_a.swift:11:9: note: 'b' previously declared\
    \ here\n    let b = b.lowercased()\n        ^\n"
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    let b = b +\
    \ b\n    return b.contains(a)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002ae24a59fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae24a296561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae24a296286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae24a29613c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae24a295bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002ae24a3f0e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002ae24a3f585c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002ae24a2c2920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002ae249f7db82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002ae249f7cb2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002ae249f7dced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002ae249f6342d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002ae249f61840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002ae249f61e70 StringProtocol.contains(_:)
    + 64

    14   tmpma70pobe                        0x000056112ce3da1a <unavailable> + 6682

    15   tmpma70pobe                        0x000056112ce3d3a5 <unavailable> + 5029

    16   libc.so.6                          0x00002ae24a78b460 __libc_start_main +
    245

    17   tmpma70pobe                        0x000056112ce3d079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let len = b.count\n    var\
    \ i = 0\n    while i < len {\n        if a.contains(b[i]) {\n            var j\
    \ = i\n            var k = 0\n            while j < len {\n                if\
    \ a[k] != b[j] {\n                    break\n                }\n             \
    \   j += 1\n                k += 1\n            }\n            if j == len {\n\
    \                return true\n            }\n        }\n        i += 1\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpfh6h9t47/tmpfh6h9t47.swift:48: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acc87d78c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acc87a6fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acc87a6f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acc87a6e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfh6h9t47                        0x00005602e19aa631 <unavailable> + 5681

    5    libc.so.6                          0x00002acc87f64460 __libc_start_main +
    245

    6    tmpfh6h9t47                        0x00005602e19aa1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    let a = Array(a)\n\
    \    let b = Array(b)\n    var i = 0\n    while i < a.count {\n        if a[i]\
    \ == b[0] {\n            var j = 1\n            while j < b.count {\n        \
    \        if a[(i + j) % a.count] != b[j] {\n                    break\n      \
    \          }\n                j += 1\n            }\n            if j == b.count\
    \ {\n                return true\n            }\n        }\n        i += 1\n \
    \   }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmpn6_aljp7/tmpn6_aljp7.swift:48: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afbb24cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afbb21c2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afbb21c2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afbb21c17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpn6_aljp7                        0x000055b22e933671 <unavailable> + 5745

    5    libc.so.6                          0x00002afbb26b7460 __libc_start_main +
    245

    6    tmpn6_aljp7                        0x000055b22e9331e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.insert(b.removeFirst(), at: b.endIndex)\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a: \"\
    xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"ell\"\
    ) == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a:\
    \ \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\"\
    ) == false)\nassert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002ad2a2229c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad2a1f20561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ad2a1f20286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ad2a1f2013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ad2a1f1fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002ad2a207ae40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002ad2a207f85c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002ad2a1f4c920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002ad2a1c07b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002ad2a1c06b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002ad2a1c07ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002ad2a1bed42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002ad2a1beb840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002ad2a1bebe70 StringProtocol.contains(_:)
    + 64

    14   tmpc33_5neo                        0x00005622f6306def <unavailable> + 7663

    15   tmpc33_5neo                        0x00005622f6306625 <unavailable> + 5669

    16   libc.so.6                          0x00002ad2a2415460 __libc_start_main +
    245

    17   tmpc33_5neo                        0x00005622f63062f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    if a.count < b.count {\n\
    \        return false\n    }\n    var b = b\n    for _ in 0..<b.count {\n    \
    \    if a.contains(b) {\n            return true\n        }\n        b.append(b.removeFirst())\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmpps261__1.swift:15:9: error: invalid redeclaration of 'b'\n    var\
    \ b = b\n        ^\n/tmp/tmpps261__1.swift:11:9: note: 'b' previously declared\
    \ here\n    let b = Array(b)\n        ^\n"
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    var b = b\n\
    \    for _ in 0..<b.count {\n        if a.contains(b) {\n            return true\n\
    \        }\n        b.append(b.removeFirst())\n    }\n    return false\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b60d226bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60d1f62561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b60d1f62286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b60d1f6213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b60d1f61bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b60d20bce40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b60d20c185c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b60d1f8e920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b60d1c49b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b60d1c48b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b60d1c49ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b60d1c2f42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b60d1c2d840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b60d1c2de70 StringProtocol.contains(_:)
    + 64

    14   tmpmgtj6yji                        0x000055a23c343d8f <unavailable> + 7567

    15   tmpmgtj6yji                        0x000055a23c3435c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b60d2457460 __libc_start_main +
    245

    17   tmpmgtj6yji                        0x000055a23c343299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    let b = b +\
    \ b\n    return b.contains(a)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002ae24a59fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae24a296561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae24a296286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae24a29613c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae24a295bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002ae24a3f0e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002ae24a3f585c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002ae24a2c2920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002ae249f7db82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002ae249f7cb2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002ae249f7dced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002ae249f6342d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002ae249f61840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002ae249f61e70 StringProtocol.contains(_:)
    + 64

    14   tmpma70pobe                        0x000056112ce3da1a <unavailable> + 6682

    15   tmpma70pobe                        0x000056112ce3d3a5 <unavailable> + 5029

    16   libc.so.6                          0x00002ae24a78b460 __libc_start_main +
    245

    17   tmpma70pobe                        0x000056112ce3d079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count != b.count {\n        return false\n    }\n    let b = b +\
    \ b\n    return b.contains(a)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'tmp84due2nb/tmp84due2nb.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4a62ad4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4a627cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4a627cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4a627ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp84due2nb                        0x0000560d9737c501 <unavailable> + 5377

    5    libc.so.6                          0x00002b4a62cc0460 __libc_start_main +
    245

    6    tmp84due2nb                        0x0000560d9737c079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    if a.count < b.count {\n        return false\n    }\n    let b = b +\
    \ b\n    return b.contains(a)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002ae24a59fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae24a296561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae24a296286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae24a29613c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae24a295bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002ae24a3f0e40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002ae24a3f585c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002ae24a2c2920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002ae249f7db82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002ae249f7cb2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002ae249f7dced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002ae249f6342d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002ae249f61840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002ae249f61e70 StringProtocol.contains(_:)
    + 64

    14   tmpma70pobe                        0x000056112ce3da1a <unavailable> + 6682

    15   tmpma70pobe                        0x000056112ce3d3a5 <unavailable> + 5029

    16   libc.so.6                          0x00002ae24a78b460 __libc_start_main +
    245

    17   tmpma70pobe                        0x000056112ce3d079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1659824901
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: -4
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    var b = b\n    for _ in 0..<b.count {\n        if a.contains(b) {\n \
    \           return true\n        }\n        b.append(b.removeFirst())\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(cycpattern_check(a:\
    \ \"xyzw\", b: \"xyw\") == false)\nassert(cycpattern_check(a: \"yello\", b: \"\
    ell\") == true)\nassert(cycpattern_check(a: \"whattup\", b: \"ptut\") == false)\n\
    assert(cycpattern_check(a: \"efef\", b: \"fee\") == true)\nassert(cycpattern_check(a:\
    \ \"abab\", b: \"aabb\") == false)\nassert(cycpattern_check(a: \"winemtt\", b:\
    \ \"tinem\") == true)"
  status: Exception
  stderr: 'Swift/Substring.swift:316: Fatal error: String index is out of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b683428ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6833f81561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6833f81286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6833f8113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6833f80bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b68340dbe40 Substring.index(_:offsetBy:)
    + 880

    6    libswiftCore.so                    0x00002b68340e085c <unavailable> + 2873436

    7    libswiftCore.so                    0x00002b6833fad920 Collection.formIndex(_:offsetBy:)
    + 116

    8    libswift_StringProcessing.so       0x00002b6833c68b82 <unavailable> + 285570

    9    libswift_StringProcessing.so       0x00002b6833c67b2f <unavailable> + 281391

    10   libswift_StringProcessing.so       0x00002b6833c68ced <unavailable> + 285933

    11   libswift_StringProcessing.so       0x00002b6833c4e42d <unavailable> + 177197

    12   libswift_StringProcessing.so       0x00002b6833c4c840 BidirectionalCollection<>.firstRange<A>(of:)
    + 1517

    13   libswift_StringProcessing.so       0x00002b6833c4ce70 StringProtocol.contains(_:)
    + 64

    14   tmp0f5t9ija                        0x0000563fc716ad4d <unavailable> + 7501

    15   tmp0f5t9ija                        0x0000563fc716a5c5 <unavailable> + 5573

    16   libc.so.6                          0x00002b6834476460 __libc_start_main +
    245

    17   tmp0f5t9ija                        0x0000563fc716a299 <unavailable> + 4761

    '
  stdout: ''
  timestamp: 1659824900
- exit_code: 1
  program: "\n/// You are given 2 words. You need to return True if the second word\
    \ or any of its rotations is a substring in the first word\n/// cycpattern_check(\"\
    abcd\",\"abd\") => False\n/// cycpattern_check(\"hello\",\"ell\") => True\n///\
    \ cycpattern_check(\"whassup\",\"psus\") => False\n/// cycpattern_check(\"abab\"\
    ,\"baa\") => True\n/// cycpattern_check(\"efef\",\"eeff\") => False\n/// cycpattern_check(\"\
    himenss\",\"simen\") => True\nfunc cycpattern_check(a: String, b: String) -> Bool\
    \ {\n    let a = Array(a)\n    let b = Array(b)\n    let b_length = b.count\n\
    \    let a_length = a.count\n    var b_index = 0\n    var a_index = 0\n    var\
    \ b_index_start = 0\n    var a_index_start = 0\n    var b_index_end = b_length\
    \ - 1\n    var a_index_end = a_length - 1\n    var b_index_start_found = false\n\
    \    var a_index_start_found = false\n    var b_index_end_found = false\n    var\
    \ a_index_end_found = false\n    var b_index_start_found_index = 0\n    var a_index_start_found_index\
    \ = 0\n    var b_index_end_found_index = 0\n    var a_index_end_found_index =\
    \ 0\n    var b_index_start_found_index_start = 0\n    var a_index_start_found_index_start\
    \ = 0\n    var b_index_end_found_index_start = 0\n    var a_index_end_found_index_start\
    \ = 0\n    var b_index_start_found_index_end = 0\n    var a_index_start_found_index_end\
    \ = 0\n    var b_index_end_found_index_end = 0\n    var a_index_end_found_index_end\
    \ = 0\n    var b_index_start_found_index_start_found = false\n    var a_index_start_found_index_start_found\
    \ = false\n    var b_index_end_found_index_start_found = false\n    var a_index_end_found_index_start_found\
    \ = false\n    var b_index_start_found_index_end_found = false\n    var a_index_start_found_index_end_found\
    \ = false\n    var b_index_end_found_index_end_found = false\n    var a_index_end_found_index_end_found\
    \ = false\n    var b_index_start_found_index_start_found_index = 0\n    var a_index_start_found_index_start\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(cycpattern_check(a: \"xyzw\", b: \"xyw\") == false)\n\
    assert(cycpattern_check(a: \"yello\", b: \"ell\") == true)\nassert(cycpattern_check(a:\
    \ \"whattup\", b: \"ptut\") == false)\nassert(cycpattern_check(a: \"efef\", b:\
    \ \"fee\") == true)\nassert(cycpattern_check(a: \"abab\", b: \"aabb\") == false)\n\
    assert(cycpattern_check(a: \"winemtt\", b: \"tinem\") == true)"
  status: SyntaxError
  stderr: "/tmp/tmp7bg9f1nq.swift:45:9: error: type annotation missing in pattern\n\
    \    var a_index_start_found_index_start\n        ^\n"
  stdout: ''
  timestamp: 1659824901

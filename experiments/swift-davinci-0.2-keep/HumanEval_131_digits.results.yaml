language: swift
name: HumanEval_131_digits
results:
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    let n = String(n)\n    for char in n {\n        if let num\
    \ = Int(String(char)) {\n            if num % 2 != 0 {\n                result\
    \ *= num\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpsmsy007o/tmpsmsy007o.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b137c0afc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b137bda6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b137bda6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b137bda57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsmsy007o                        0x00005618c02867b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b137c29b460 __libc_start_main +
    245

    6    tmpsmsy007o                        0x00005618c0286179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for digit in String(n) {\n        if let digit = Int(String(digit))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmptvk1dwks/tmptvk1dwks.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e13243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e12f3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e12f3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e12f397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptvk1dwks                        0x0000560e42ebe7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b8e1342f460 __libc_start_main +
    245

    6    tmptvk1dwks                        0x0000560e42ebe179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var number = n\n    while number > 0 {\n        let digit\
    \ = number % 10\n        if digit % 2 != 0 {\n            result *= digit\n  \
    \      }\n        number /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpokc6hkw1/tmpokc6hkw1.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc48540c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc48237b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc48237988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc482367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpokc6hkw1                        0x000055afb486e539 <unavailable> + 5433

    5    libc.so.6                          0x00002abc4872c460 __libc_start_main +
    245

    6    tmpokc6hkw1                        0x000055afb486def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if let num = Int(String(i))\
    \ {\n            if num % 2 != 0 {\n                result *= num\n          \
    \  }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmps8a3kqja/tmps8a3kqja.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b696d1dec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b696ced5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b696ced5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b696ced47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps8a3kqja                        0x000055b79f9237b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b696d3ca460 __libc_start_main +
    245

    6    tmps8a3kqja                        0x000055b79f923179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let number = Int(String(char))\
    \ {\n            if number % 2 != 0 {\n                result *= number\n    \
    \        }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp14zm0yz5/tmp14zm0yz5.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5a46f8cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5a46c83b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5a46c83988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5a46c827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp14zm0yz5                        0x0000559a1b0f47b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5a47178460 __libc_start_main +
    245

    6    tmp14zm0yz5                        0x0000559a1b0f4179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var number = n\n    while number > 0 {\n        let digit\
    \ = number % 10\n        if digit % 2 != 0 {\n            result *= digit\n  \
    \      }\n        number /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpokc6hkw1/tmpokc6hkw1.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc48540c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc48237b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc48237988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc482367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpokc6hkw1                        0x000055afb486e539 <unavailable> + 5433

    5    libc.so.6                          0x00002abc4872c460 __libc_start_main +
    245

    6    tmpokc6hkw1                        0x000055afb486def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let number = Int(String(char))\
    \ {\n            if number % 2 != 0 {\n                result *= number\n    \
    \        }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp14zm0yz5/tmp14zm0yz5.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5a46f8cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5a46c83b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5a46c83988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5a46c827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp14zm0yz5                        0x0000559a1b0f47b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5a47178460 __libc_start_main +
    245

    6    tmp14zm0yz5                        0x0000559a1b0f4179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if Int(String(i))! % 2 !=\
    \ 0 {\n            result *= Int(String(i))!\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpf8unz58v/tmpf8unz58v.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d61241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d60f38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d60f38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d60f377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf8unz58v                        0x00005574200227b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b1d6142d460 __libc_start_main +
    245

    6    tmpf8unz58v                        0x0000557420022179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.description.filter { $0.isOdd }.reduce(1) { $0 * Int($1.description)!\
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: SyntaxError
  stderr: "/tmp/tmptxgf62rb.swift:9:38: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isOdd'\n    return n.description.filter { $0.isOdd\
    \ }.reduce(1) { $0 * Int($1.description)! }\n                                \
    \  ~~ ^~~~~\n"
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.description.characters.filter { Int(String($0))! % 2 != 0 }.reduce(1)\
    \ { $0 * Int(String($1))! }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(digits(n:\
    \ 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n:\
    \ 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpcgsof7f7.swift:9:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    return n.description.characters.filter { Int(String($0))!\
    \ % 2 != 0 }.reduce(1) { $0 * Int(String($1))! }\n                         ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for digit in String(n) {\n        if let number = Int(String(digit))\
    \ {\n            if number % 2 != 0 {\n                result *= number\n    \
    \        }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpt4wd38rf/tmpt4wd38rf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd4dc4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd4abbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd4abb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd4aba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt4wd38rf                        0x000055d2cf8237b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b6dd4fb0460 __libc_start_main +
    245

    6    tmpt4wd38rf                        0x000055d2cf823179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for digit in String(n) {\n        if let digit = Int(String(digit))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmptvk1dwks/tmptvk1dwks.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e13243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e12f3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e12f3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e12f397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptvk1dwks                        0x0000560e42ebe7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b8e1342f460 __libc_start_main +
    245

    6    tmptvk1dwks                        0x0000560e42ebe179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let digit = Int(String(char))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpd42u63re/tmpd42u63re.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf4fa5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf4f752b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf4f752988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf4f7517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd42u63re                        0x000056406818b7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002acf4fc47460 __libc_start_main +
    245

    6    tmpd42u63re                        0x000056406818b179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if let number = Int(String(i))\
    \ {\n            if number % 2 != 0 {\n                result *= number\n    \
    \        }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmposh9h811/tmposh9h811.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b24439c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b24130b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b24130988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b2412f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmposh9h811                        0x000056439ea757b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b0b24625460 __libc_start_main +
    245

    6    tmposh9h811                        0x000056439ea75179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return String(n).characters.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : Int(String($1))!)\
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: SyntaxError
  stderr: "/tmp/tmpk_sqbnf1.swift:9:12: error: the compiler is unable to type-check\
    \ this expression in reasonable time; try breaking up the expression into distinct\
    \ sub-expressions\n    return String(n).characters.reduce(1) { $0 * ($1 % 2 ==\
    \ 0 ? 1 : Int(String($1))!) }\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820818
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let num = Int(String(char))\
    \ {\n            if num % 2 != 0 {\n                result *= num\n          \
    \  }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjea8ltic/tmpjea8ltic.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5761e85c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5761b7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5761b7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5761b7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjea8ltic                        0x000055660034f7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5762071460 __libc_start_main +
    245

    6    tmpjea8ltic                        0x000055660034f179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if Int(String(i))! % 2 !=\
    \ 0 {\n            result *= Int(String(i))!\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpf8unz58v/tmpf8unz58v.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d61241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d60f38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d60f38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d60f377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf8unz58v                        0x00005574200227b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b1d6142d460 __libc_start_main +
    245

    6    tmpf8unz58v                        0x0000557420022179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if Int(String(i))! % 2 !=\
    \ 0 {\n            result *= Int(String(i))!\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpf8unz58v/tmpf8unz58v.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d61241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d60f38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d60f38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d60f377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf8unz58v                        0x00005574200227b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b1d6142d460 __libc_start_main +
    245

    6    tmpf8unz58v                        0x0000557420022179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if i.wholeNumberValue! % 2\
    \ != 0 {\n            result *= i.wholeNumberValue!\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpqv4u9h8z/tmpqv4u9h8z.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b67036ffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b67033f6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b67033f6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b67033f57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqv4u9h8z                        0x000055c2dba70719 <unavailable> + 5913

    5    libc.so.6                          0x00002b67038eb460 __libc_start_main +
    245

    6    tmpqv4u9h8z                        0x000055c2dba700d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if i.wholeNumberValue! % 2\
    \ != 0 {\n            result *= i.wholeNumberValue!\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpqv4u9h8z/tmpqv4u9h8z.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b67036ffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b67033f6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b67033f6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b67033f57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqv4u9h8z                        0x000055c2dba70719 <unavailable> + 5913

    5    libc.so.6                          0x00002b67038eb460 __libc_start_main +
    245

    6    tmpqv4u9h8z                        0x000055c2dba700d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if Int(String(i))! % 2 !=\
    \ 0 {\n            result *= Int(String(i))!\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpf8unz58v/tmpf8unz58v.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d61241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d60f38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d60f38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d60f377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf8unz58v                        0x00005574200227b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b1d6142d460 __libc_start_main +
    245

    6    tmpf8unz58v                        0x0000557420022179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for digit in String(n) {\n        if let digit = Int(String(digit))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmptvk1dwks/tmptvk1dwks.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e13243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e12f3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e12f3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e12f397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptvk1dwks                        0x0000560e42ebe7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b8e1342f460 __libc_start_main +
    245

    6    tmptvk1dwks                        0x0000560e42ebe179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for digit in String(n) {\n        if let digit = Int(String(digit))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmptvk1dwks/tmptvk1dwks.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e13243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e12f3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e12f3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e12f397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptvk1dwks                        0x0000560e42ebe7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b8e1342f460 __libc_start_main +
    245

    6    tmptvk1dwks                        0x0000560e42ebe179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for digit in String(n) {\n        if let digit = Int(String(digit))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmptvk1dwks/tmptvk1dwks.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e13243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e12f3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e12f3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e12f397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptvk1dwks                        0x0000560e42ebe7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b8e1342f460 __libc_start_main +
    245

    6    tmptvk1dwks                        0x0000560e42ebe179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if Int(String(i))! % 2 !=\
    \ 0 {\n            result *= Int(String(i))!\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpf8unz58v/tmpf8unz58v.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d61241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d60f38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d60f38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d60f377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf8unz58v                        0x00005574200227b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b1d6142d460 __libc_start_main +
    245

    6    tmpf8unz58v                        0x0000557420022179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let num = Int(String(char))\
    \ {\n            if num % 2 != 0 {\n                result *= num\n          \
    \  }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjea8ltic/tmpjea8ltic.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5761e85c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5761b7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5761b7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5761b7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjea8ltic                        0x000055660034f7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5762071460 __libc_start_main +
    245

    6    tmpjea8ltic                        0x000055660034f179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for digit in String(n) {\n        if let number = Int(String(digit))\
    \ {\n            if number % 2 != 0 {\n                result *= number\n    \
    \        }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpt4wd38rf/tmpt4wd38rf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd4dc4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd4abbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd4abb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd4aba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt4wd38rf                        0x000055d2cf8237b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b6dd4fb0460 __libc_start_main +
    245

    6    tmpt4wd38rf                        0x000055d2cf823179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let num = Int(String(char))\
    \ {\n            if num % 2 != 0 {\n                result *= num\n          \
    \  }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjea8ltic/tmpjea8ltic.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5761e85c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5761b7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5761b7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5761b7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjea8ltic                        0x000055660034f7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5762071460 __libc_start_main +
    245

    6    tmpjea8ltic                        0x000055660034f179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for digit in String(n) {\n        if let digit = Int(String(digit))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmptvk1dwks/tmptvk1dwks.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e13243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e12f3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e12f3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e12f397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptvk1dwks                        0x0000560e42ebe7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b8e1342f460 __libc_start_main +
    245

    6    tmptvk1dwks                        0x0000560e42ebe179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let number = Int(String(char))\
    \ {\n            if number % 2 != 0 {\n                result *= number\n    \
    \        }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp14zm0yz5/tmp14zm0yz5.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5a46f8cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5a46c83b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5a46c83988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5a46c827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp14zm0yz5                        0x0000559a1b0f47b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5a47178460 __libc_start_main +
    245

    6    tmp14zm0yz5                        0x0000559a1b0f4179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ let digits = String(n).characters.map { Int(String($0))! }\n    return digits.filter\
    \ { $0 % 2 != 0 }.reduce(1, combine: *)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpmu114_06.swift:9:28: error: 'characters' is unavailable: Please\
    \ use String directly\n    let digits = String(n).characters.map { Int(String($0))!\
    \ }\n                           ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n/tmp/tmpmu114_06.swift:10:48: error: extraneous argument label\
    \ 'combine:' in call\n    return digits.filter { $0 % 2 != 0 }.reduce(1, combine:\
    \ *)\n                                               ^   ~~~~~~~~~\n         \
    \                                          \n"
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let number = Int(String(char))\
    \ {\n            if number % 2 != 0 {\n                result *= number\n    \
    \        }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp14zm0yz5/tmp14zm0yz5.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5a46f8cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5a46c83b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5a46c83988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5a46c827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp14zm0yz5                        0x0000559a1b0f47b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5a47178460 __libc_start_main +
    245

    6    tmp14zm0yz5                        0x0000559a1b0f4179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return String(n).characters.reduce(1) {\n        $1.isOdd ? $0 * Int(String($1))!\
    \ : $0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpanjsshcc.swift:10:12: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isOdd'\n        $1.isOdd ? $0 * Int(String($1))!\
    \ : $0\n        ~~ ^~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if Int(String(i))! % 2 !=\
    \ 0 {\n            result *= Int(String(i))!\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpf8unz58v/tmpf8unz58v.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d61241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d60f38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d60f38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d60f377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf8unz58v                        0x00005574200227b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b1d6142d460 __libc_start_main +
    245

    6    tmpf8unz58v                        0x0000557420022179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let number = Int(String(char))\
    \ {\n            if number % 2 != 0 {\n                result *= number\n    \
    \        }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp14zm0yz5/tmp14zm0yz5.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5a46f8cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5a46c83b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5a46c83988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5a46c827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp14zm0yz5                        0x0000559a1b0f47b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5a47178460 __libc_start_main +
    245

    6    tmp14zm0yz5                        0x0000559a1b0f4179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let num = Int(String(char))\
    \ {\n            if num % 2 != 0 {\n                result *= num\n          \
    \  }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjea8ltic/tmpjea8ltic.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5761e85c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5761b7cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5761b7c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5761b7b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjea8ltic                        0x000055660034f7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5762071460 __libc_start_main +
    245

    6    tmpjea8ltic                        0x000055660034f179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let digit = Int(String(c))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp1f8l7xax/tmp1f8l7xax.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7da7992c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7da7689b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7da7689988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7da76887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1f8l7xax                        0x000056414331f7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b7da7b7e460 __libc_start_main +
    245

    6    tmp1f8l7xax                        0x000056414331f179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if Int(String(i))! % 2 !=\
    \ 0 {\n            result *= Int(String(i))!\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpf8unz58v/tmpf8unz58v.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d61241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d60f38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d60f38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d60f377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf8unz58v                        0x00005574200227b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b1d6142d460 __libc_start_main +
    245

    6    tmpf8unz58v                        0x0000557420022179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for digit in String(n) {\n        if let digit = Int(String(digit))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmptvk1dwks/tmptvk1dwks.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e13243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e12f3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e12f3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e12f397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptvk1dwks                        0x0000560e42ebe7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b8e1342f460 __libc_start_main +
    245

    6    tmptvk1dwks                        0x0000560e42ebe179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let digit = Int(String(c))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp1f8l7xax/tmp1f8l7xax.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7da7992c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7da7689b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7da7689988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7da76887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1f8l7xax                        0x000056414331f7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b7da7b7e460 __libc_start_main +
    245

    6    tmp1f8l7xax                        0x000056414331f179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.description.filter { $0.isOdd }.reduce(1) { $0 * Int($1.description)!\
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: SyntaxError
  stderr: "/tmp/tmptxgf62rb.swift:9:38: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isOdd'\n    return n.description.filter { $0.isOdd\
    \ }.reduce(1) { $0 * Int($1.description)! }\n                                \
    \  ~~ ^~~~~\n"
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let number = Int(String(char))\
    \ {\n            if number % 2 != 0 {\n                result *= number\n    \
    \        }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp14zm0yz5/tmp14zm0yz5.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5a46f8cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5a46c83b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5a46c83988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5a46c827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp14zm0yz5                        0x0000559a1b0f47b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5a47178460 __libc_start_main +
    245

    6    tmp14zm0yz5                        0x0000559a1b0f4179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var product = 1\n    for digit in String(n) {\n        if let digit = Int(String(digit))\
    \ {\n            if digit % 2 != 0 {\n                product *= digit\n     \
    \       }\n        }\n    }\n    return product\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp2hhol6_m/tmp2hhol6_m.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0d4271ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0d42411b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0d42411988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0d424107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2hhol6_m                        0x000055761c2f77b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b0d42906460 __libc_start_main +
    245

    6    tmp2hhol6_m                        0x000055761c2f7179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in \"\\(n)\".characters {\n        if let number\
    \ = Int(\"\\(char)\") {\n            if number % 2 != 0 {\n                result\
    \ *= number\n            }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpaatlfd2l.swift:10:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in \"\\(n)\".characters {\n              \
    \         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift\
    \ 5.0\n    public var characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ let digits = String(n).characters.map { Int(String($0))! }\n    return digits.filter\
    \ { $0 % 2 != 0 }.reduce(1, combine: *)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpmu114_06.swift:9:28: error: 'characters' is unavailable: Please\
    \ use String directly\n    let digits = String(n).characters.map { Int(String($0))!\
    \ }\n                           ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n/tmp/tmpmu114_06.swift:10:48: error: extraneous argument label\
    \ 'combine:' in call\n    return digits.filter { $0 % 2 != 0 }.reduce(1, combine:\
    \ *)\n                                               ^   ~~~~~~~~~\n         \
    \                                          \n"
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if Int(String(i))! % 2 !=\
    \ 0 {\n            result *= Int(String(i))!\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpf8unz58v/tmpf8unz58v.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d61241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d60f38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d60f38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d60f377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf8unz58v                        0x00005574200227b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b1d6142d460 __libc_start_main +
    245

    6    tmpf8unz58v                        0x0000557420022179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var number = n\n    while number > 0 {\n        let digit\
    \ = number % 10\n        if digit % 2 != 0 {\n            result *= digit\n  \
    \      }\n        number /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpokc6hkw1/tmpokc6hkw1.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc48540c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc48237b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc48237988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc482367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpokc6hkw1                        0x000055afb486e539 <unavailable> + 5433

    5    libc.so.6                          0x00002abc4872c460 __libc_start_main +
    245

    6    tmpokc6hkw1                        0x000055afb486def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var number = n\n    while number > 0 {\n        let digit\
    \ = number % 10\n        if digit % 2 != 0 {\n            result *= digit\n  \
    \      }\n        number /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpokc6hkw1/tmpokc6hkw1.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc48540c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc48237b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc48237988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc482367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpokc6hkw1                        0x000055afb486e539 <unavailable> + 5433

    5    libc.so.6                          0x00002abc4872c460 __libc_start_main +
    245

    6    tmpokc6hkw1                        0x000055afb486def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if Int(String(i))! % 2 !=\
    \ 0 {\n            result *= Int(String(i))!\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpf8unz58v/tmpf8unz58v.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d61241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d60f38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d60f38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d60f377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf8unz58v                        0x00005574200227b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b1d6142d460 __libc_start_main +
    245

    6    tmpf8unz58v                        0x0000557420022179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.description.filter { $0.isOdd }.reduce(1) { $0 * $1.intValue }\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpx71emxv2.swift:9:38: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isOdd'\n    return n.description.filter { $0.isOdd\
    \ }.reduce(1) { $0 * $1.intValue }\n                                  ~~ ^~~~~\n\
    /tmp/tmpx71emxv2.swift:9:52: error: missing argument label 'into:' in call\n \
    \   return n.description.filter { $0.isOdd }.reduce(1) { $0 * $1.intValue }\n\
    \                                                   ^\n                      \
    \                              into: \n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for digit in String(n) {\n        if let digit = Int(String(digit))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmptvk1dwks/tmptvk1dwks.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e13243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e12f3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e12f3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e12f397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptvk1dwks                        0x0000560e42ebe7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b8e1342f460 __libc_start_main +
    245

    6    tmptvk1dwks                        0x0000560e42ebe179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for digit in String(n) {\n        if let number = Int(String(digit))\
    \ {\n            if number % 2 != 0 {\n                result *= number\n    \
    \        }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpt4wd38rf/tmpt4wd38rf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6dd4dc4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6dd4abbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6dd4abb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6dd4aba7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt4wd38rf                        0x000055d2cf8237b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b6dd4fb0460 __libc_start_main +
    245

    6    tmpt4wd38rf                        0x000055d2cf823179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var number = n\n    while number > 0 {\n        let digit\
    \ = number % 10\n        if digit % 2 != 0 {\n            result *= digit\n  \
    \      }\n        number /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpokc6hkw1/tmpokc6hkw1.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc48540c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc48237b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc48237988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc482367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpokc6hkw1                        0x000055afb486e539 <unavailable> + 5433

    5    libc.so.6                          0x00002abc4872c460 __libc_start_main +
    245

    6    tmpokc6hkw1                        0x000055afb486def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let num = Int(String(c))\
    \ {\n            if num % 2 != 0 {\n                result *= num\n          \
    \  }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpcdp25uhh/tmpcdp25uhh.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e977b2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e974a9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e974a9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e974a87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcdp25uhh                        0x0000564d499557b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5e9799e460 __libc_start_main +
    245

    6    tmpcdp25uhh                        0x0000564d49955179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ let digits = String(n).characters.map { Int(String($0))! }\n    return digits.filter\
    \ { $0 % 2 != 0 }.reduce(1, combine: *)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpmu114_06.swift:9:28: error: 'characters' is unavailable: Please\
    \ use String directly\n    let digits = String(n).characters.map { Int(String($0))!\
    \ }\n                           ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n/tmp/tmpmu114_06.swift:10:48: error: extraneous argument label\
    \ 'combine:' in call\n    return digits.filter { $0 % 2 != 0 }.reduce(1, combine:\
    \ *)\n                                               ^   ~~~~~~~~~\n         \
    \                                          \n"
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let num = Int(String(c))\
    \ {\n            if num % 2 != 0 {\n                result *= num\n          \
    \  }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpcdp25uhh/tmpcdp25uhh.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e977b2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e974a9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e974a9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e974a87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcdp25uhh                        0x0000564d499557b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5e9799e460 __libc_start_main +
    245

    6    tmpcdp25uhh                        0x0000564d49955179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let digit = Int(String(char))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpd42u63re/tmpd42u63re.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf4fa5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf4f752b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf4f752988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf4f7517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd42u63re                        0x000056406818b7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002acf4fc47460 __libc_start_main +
    245

    6    tmpd42u63re                        0x000056406818b179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let number = Int(String(char))\
    \ {\n            if number % 2 != 0 {\n                result *= number\n    \
    \        }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp14zm0yz5/tmp14zm0yz5.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5a46f8cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5a46c83b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5a46c83988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5a46c827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp14zm0yz5                        0x0000559a1b0f47b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5a47178460 __libc_start_main +
    245

    6    tmp14zm0yz5                        0x0000559a1b0f4179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let number = Int(String(char))\
    \ {\n            if number % 2 != 0 {\n                result *= number\n    \
    \        }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp14zm0yz5/tmp14zm0yz5.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5a46f8cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5a46c83b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5a46c83988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5a46c827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp14zm0yz5                        0x0000559a1b0f47b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5a47178460 __libc_start_main +
    245

    6    tmp14zm0yz5                        0x0000559a1b0f4179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if Int(String(i))! % 2 !=\
    \ 0 {\n            result *= Int(String(i))!\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpf8unz58v/tmpf8unz58v.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d61241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d60f38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d60f38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d60f377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf8unz58v                        0x00005574200227b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b1d6142d460 __libc_start_main +
    245

    6    tmpf8unz58v                        0x0000557420022179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.description.filter { $0.isOdd }.reduce(1) { $0 * Int($1.description)!\
    \ }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n:\
    \ 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
    \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
    \ 0)"
  status: SyntaxError
  stderr: "/tmp/tmptxgf62rb.swift:9:38: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isOdd'\n    return n.description.filter { $0.isOdd\
    \ }.reduce(1) { $0 * Int($1.description)! }\n                                \
    \  ~~ ^~~~~\n"
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if Int(String(i))! % 2 !=\
    \ 0 {\n            result *= Int(String(i))!\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpf8unz58v/tmpf8unz58v.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d61241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d60f38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d60f38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d60f377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf8unz58v                        0x00005574200227b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b1d6142d460 __libc_start_main +
    245

    6    tmpf8unz58v                        0x0000557420022179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for digit in String(n) {\n        if let digit = Int(String(digit))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmptvk1dwks/tmptvk1dwks.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e13243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e12f3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e12f3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e12f397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptvk1dwks                        0x0000560e42ebe7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b8e1342f460 __libc_start_main +
    245

    6    tmptvk1dwks                        0x0000560e42ebe179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for digit in String(n) {\n        if let digit = Int(String(digit))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmptvk1dwks/tmptvk1dwks.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e13243c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e12f3ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e12f3a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e12f397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptvk1dwks                        0x0000560e42ebe7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b8e1342f460 __libc_start_main +
    245

    6    tmptvk1dwks                        0x0000560e42ebe179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for i in String(n) {\n        if Int(String(i))! % 2 !=\
    \ 0 {\n            result *= Int(String(i))!\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\n\
    assert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765)\
    \ == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpf8unz58v/tmpf8unz58v.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d61241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d60f38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d60f38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d60f377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf8unz58v                        0x00005574200227b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b1d6142d460 __libc_start_main +
    245

    6    tmpf8unz58v                        0x0000557420022179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let num = Int(String(c))\
    \ {\n            if num % 2 != 0 {\n                result *= num\n          \
    \  }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpcdp25uhh/tmpcdp25uhh.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5e977b2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5e974a9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5e974a9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5e974a87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcdp25uhh                        0x0000564d499557b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b5e9799e460 __libc_start_main +
    245

    6    tmpcdp25uhh                        0x0000564d49955179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for char in String(n) {\n        if let digit = Int(String(char))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpd42u63re/tmpd42u63re.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf4fa5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf4f752b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf4f752988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf4f7517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd42u63re                        0x000056406818b7b9 <unavailable> + 6073

    5    libc.so.6                          0x00002acf4fc47460 __libc_start_main +
    245

    6    tmpd42u63re                        0x000056406818b179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpu8ybo997.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.reduce(1) { $0 * ($1 % 2 == 0 ? 1 : $1) }\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ let digits = String(n).characters.map { Int(String($0))! }\n    return digits.filter\
    \ { $0 % 2 != 0 }.reduce(1, combine: *)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpmu114_06.swift:9:28: error: 'characters' is unavailable: Please\
    \ use String directly\n    let digits = String(n).characters.map { Int(String($0))!\
    \ }\n                           ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n/tmp/tmpmu114_06.swift:10:48: error: extraneous argument label\
    \ 'combine:' in call\n    return digits.filter { $0 % 2 != 0 }.reduce(1, combine:\
    \ *)\n                                               ^   ~~~~~~~~~\n         \
    \                                          \n"
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmplcnyaqu9.swift:9:14: error: value of type 'Int' has no member 'digits'\n\
    \    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)\n           ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659820530
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpjmfen9ge/tmpjmfen9ge.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40064c5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40061bcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40061bc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40061bb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjmfen9ge                        0x0000558283bbd539 <unavailable> + 5433

    5    libc.so.6                          0x00002b40066b1460 __libc_start_main +
    245

    6    tmpjmfen9ge                        0x0000558283bbcef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: 1
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ let digits = String(n).characters.map { Int(String($0))! }\n    return digits.filter\
    \ { $0 % 2 != 0 }.reduce(1, combine: *)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpmu114_06.swift:9:28: error: 'characters' is unavailable: Please\
    \ use String directly\n    let digits = String(n).characters.map { Int(String($0))!\
    \ }\n                           ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n/tmp/tmpmu114_06.swift:10:48: error: extraneous argument label\
    \ 'combine:' in call\n    return digits.filter { $0 % 2 != 0 }.reduce(1, combine:\
    \ *)\n                                               ^   ~~~~~~~~~\n         \
    \                                          \n"
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    var number = n\n    while number > 0 {\n        let digit\
    \ = number % 10\n        if digit % 2 != 0 {\n            result *= digit\n  \
    \      }\n        number /= 10\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n:\
    \ 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\n\
    assert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpokc6hkw1/tmpokc6hkw1.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abc48540c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abc48237b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abc48237988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abc482367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpokc6hkw1                        0x000055afb486e539 <unavailable> + 5433

    5    libc.so.6                          0x00002abc4872c460 __libc_start_main +
    245

    6    tmpokc6hkw1                        0x000055afb486def9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(digits(n: 5) == 5)\n\
    assert(digits(n: 54) == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014)\
    \ == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n: 5576543) == 2625)\n\
    assert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmp240psq4a/tmp240psq4a.swift:25: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b555fa65c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b555f75cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b555f75c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b555f75b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp240psq4a                        0x000055de050181b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b555fc51460 __libc_start_main +
    245

    6    tmp240psq4a                        0x000055de05017e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659820529
- exit_code: -4
  program: "\n/// Given a positive integer n, return the product of the odd digits.\n\
    /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n\
    /// digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n   \
    \ var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(digits(n: 5) == 5)\nassert(digits(n: 54) == 5)\nassert(digits(n: 120) ==\
    \ 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n: 98765) == 315)\nassert(digits(n:\
    \ 5576543) == 2625)\nassert(digits(n: 2468) == 0)"
  status: Exception
  stderr: 'tmpxp4l66qz/tmpxp4l66qz.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b89c54b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b89c51abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b89c51ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b89c51aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxp4l66qz                        0x0000562bb38547b9 <unavailable> + 6073

    5    libc.so.6                          0x00002b89c56a0460 __libc_start_main +
    245

    6    tmpxp4l66qz                        0x0000562bb3854179 <unavailable> + 4473

    '
  stdout: ''
  timestamp: 1659820529

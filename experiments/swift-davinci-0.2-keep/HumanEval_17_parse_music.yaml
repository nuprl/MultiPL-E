name: HumanEval_17_parse_music
language: swift
prompt: "\n/// Input to this function is a string representing musical notes in a\
  \ special ASCII format.\n/// Your task is to parse this string and return list of\
  \ integers corresponding to how many beats does each\n/// not last.\n/// Here is\
  \ a legend:\n/// 'o' - whole note, lasts four beats\n/// 'o|' - half note, lasts\
  \ two beats\n/// '.|' - quater note, lasts one beat\n/// >>> parse_music('o o| .|\
  \ o| o| .| .| .| .| o o')\n/// [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\nfunc parse_music(music_string:\
  \ String) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(parse_music(music_string: \"\") == [] as\
  \ [Int])\nassert(parse_music(music_string: \"o o o o\") == [4, 4, 4, 4])\nassert(parse_music(music_string:\
  \ \".| .| .| .|\") == [1, 1, 1, 1])\nassert(parse_music(music_string: \"o| o| .|\
  \ .| o o o o\") == [2, 2, 1, 1, 4, 4, 4, 4])\nassert(parse_music(music_string: \"\
  o| .| o| .| o o| o o|\") == [2, 1, 2, 1, 4, 2, 4, 2])"
completions: ["    var result = [Int]()\n    let music_string_array = music_string.components(separatedBy:\
    \ \" \")\n    for music_string in music_string_array {\n        switch music_string\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    let music_string_array = music_string.components(separatedBy:\
    \ \" \")\n    for music_string in music_string_array {\n        if music_string\
    \ == \"o\" {\n            result.append(4)\n        } else if music_string ==\
    \ \"o|\" {\n            result.append(2)\n        } else if music_string == \"\
    .|\" {\n            result.append(1)\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var music = music_string.components(separatedBy:\
    \ \" \")\n    for note in music {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    let notes = music_string.components(separatedBy: \" \")\n    var\
    \ result = [Int]()\n    for note in notes {\n        switch note {\n        case\
    \ \"o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    var beats = [Int]()\n    for\
    \ character in music_string {\n        switch character {\n        case \"o\"\
    :\n            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", "    var result = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var result: [Int] = []\n    for char in music_string {\n        switch char\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   let notes = music_string.components(separatedBy: \" \")\n    var result =\
    \ [Int]()\n    for note in notes {\n        switch note {\n        case \"o\"\
    :\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result: [Int] = []\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    var music_string = music_string\n    while music_string.characters.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else {\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", '    return
    []', "    var beats = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            beats.append(0)\n        }\n    }\n    return beats",
  "    let music_string = music_string.replacingOccurrences(of: \" \", with: \"\"\
    )\n    let notes = music_string.components(separatedBy: \"|\")\n    var result\
    \ = [Int]()\n    for note in notes {\n        if note == \"o\" {\n           \
    \ result.append(4)\n        } else if note == \"o\" {\n            result.append(2)\n\
    \        } else if note == \".|\" {\n            result.append(1)\n        }\n\
    \    }\n    return result", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    var result = [Int]()\n    var index = 0\n    while index\
    \ < music_string.count {\n        let char = music_string[music_string.index(music_string.startIndex,\
    \ offsetBy: index)]\n        if char == \"o\" {\n            result.append(4)\n\
    \            index += 1\n        } else if char == \".\" {\n            result.append(1)\n\
    \            index += 2\n        } else {\n            result.append(2)\n    \
    \        index += 2\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var music = music_string.components(separatedBy: \" \")\n    for note in\
    \ music {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    let music_string_array\
    \ = music_string.components(separatedBy: \" \")\n    for item in music_string_array\
    \ {\n        if item == \"o\" {\n            result.append(4)\n        } else\
    \ if item == \"o|\" {\n            result.append(2)\n        } else if item ==\
    \ \".|\" {\n            result.append(1)\n        }\n    }\n    return result",
  "    var result: [Int] = []\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    for char in music_string {\n        if char == \"\
    o\" {\n            result.append(4)\n        } else if char == \"|\" {\n     \
    \       result[result.count - 1] = result[result.count - 1] / 2\n        }\n \
    \   }\n    return result", "    let beats = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for beat in beats {\n        if beat ==\
    \ \"o\" {\n            result.append(4)\n        } else if beat == \"o|\" {\n\
    \            result.append(2)\n        } else if beat == \".|\" {\n          \
    \  result.append(1)\n        }\n    }\n    return result", "    let music_string\
    \ = music_string.replacingOccurrences(of: \" \", with: \"\")\n    var result =\
    \ [Int]()\n    for char in music_string {\n        if char == \"o\" {\n      \
    \      result.append(4)\n        } else if char == \"|\" {\n            result[result.count\
    \ - 1] /= 2\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    var music_string = music_string\n    while music_string.count > 0 {\n   \
    \     if music_string.hasPrefix(\"o\") {\n            beats.append(4)\n      \
    \      music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            beats.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            beats.append(1)\n\
    \            music_string.removeFirst(2)\n        }\n    }\n    return beats",
  "    let beats = [\n        \"o\": 4,\n        \"o|\": 2,\n        \".|\": 1\n \
    \   ]\n    return music_string.components(separatedBy: \" \").map { beats[$0]!\
    \ }", "    var beats = [Int]()\n    let music = music_string.components(separatedBy:\
    \ \" \")\n    for note in music {\n        switch note {\n        case \"o\":\n\
    \            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     print(\"Invalid note\")\n        }\n    }\n    return beats", "    var result\
    \ = [Int]()\n    var music = music_string.components(separatedBy: \" \")\n   \
    \ for note in music {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    var music_string = music_string\n    while music_string.characters.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else {\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     switch note {\n        case \"o\":\n            result.append(4)\n     \
    \   case \"o|\":\n            result.append(2)\n        case \".|\":\n       \
    \     result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    for char in music_string {\n\
    \        switch char {\n        case \"o\":\n            result.append(4)\n  \
    \      case \"|\":\n            result.append(2)\n        case \".\":\n      \
    \      result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    let notes = music_string.split(separator: \" \")\n \
    \   var beats = [Int]()\n    for note in notes {\n        switch note {\n    \
    \    case \"o\":\n            beats.append(4)\n        case \"o|\":\n        \
    \    beats.append(2)\n        case \".|\":\n            beats.append(1)\n    \
    \    default:\n            break\n        }\n    }\n    return beats", "    var\
    \ result = [Int]()\n    let notes = music_string.components(separatedBy: \" \"\
    )\n    for note in notes {\n        switch note {\n        case \"o\":\n     \
    \       result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            print(\"Invalid note\")\n        }\n    }\n   \
    \ return beats", "    var result = [Int]()\n    var music_string = music_string\n\
    \    while music_string.count > 0 {\n        if music_string.hasPrefix(\"o\")\
    \ {\n            result.append(4)\n            music_string.removeFirst()\n  \
    \      } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o|\" {\n \
    \           beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    var result = [Int]()\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     switch note {\n        case \"o\":\n            result.append(4)\n     \
    \   case \"o|\":\n            result.append(2)\n        case \".|\":\n       \
    \     result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    var result = [Int]()\n    var i = 0\n    while i < music_string.count\
    \ {\n        let index = music_string.index(music_string.startIndex, offsetBy:\
    \ i)\n        let char = music_string[index]\n        if char == \"o\" {\n   \
    \         result.append(4)\n            i += 1\n        } else if char == \".\"\
    \ {\n            result.append(1)\n            i += 2\n        }\n    }\n    return\
    \ result", "    let notes = music_string.components(separatedBy: \" \")\n    var\
    \ beats = [Int]()\n    for note in notes {\n        switch note {\n        case\
    \ \"o\":\n            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   let notes = music_string.components(separatedBy: \" \")\n    var result: [Int]\
    \ = []\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    let notes = music_string.components(separatedBy: \" \")\n    var\
    \ beats = [Int]()\n    for note in notes {\n        if note == \"o\" {\n     \
    \       beats.append(4)\n        } else if note == \"o|\" {\n            beats.append(2)\n\
    \        } else if note == \".|\" {\n            beats.append(1)\n        }\n\
    \    }\n    return beats", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    let music_array = music_string.components(separatedBy:\
    \ \"|\")\n    var result = [Int]()\n    for i in music_array {\n        if i ==\
    \ \"o\" {\n            result.append(4)\n        } else if i == \"o\" {\n    \
    \        result.append(2)\n        } else if i == \".|\" {\n            result.append(1)\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o|\" {\n \
    \           beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    var result = [Int]()\n    var music_string\
    \ = music_string\n    while music_string.characters.count > 0 {\n        if music_string.hasPrefix(\"\
    o\") {\n            result.append(4)\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else {\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        }\n    }\n    return result", "    let notes = music_string.split(separator:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            print(\"Invalid note\")\n        }\n    }\n   \
    \ return beats", "    let notes = music_string.split(separator: \" \")\n    var\
    \ beats = [Int]()\n    for note in notes {\n        switch note {\n        case\
    \ \"o\":\n            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            beats.append(0)\n        }\n    }\n    return beats",
  "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var music_string = music_string\n    while !music_string.isEmpty {\n    \
    \    if music_string.hasPrefix(\"o\") {\n            result.append(4)\n      \
    \      music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        }\n    }\n    return result",
  "    let beats = [\n        \"o\": 4,\n        \"o|\": 2,\n        \".|\": 1\n \
    \   ]\n    var result = [Int]()\n    for note in music_string.components(separatedBy:\
    \ \" \") {\n        result.append(beats[note]!)\n    }\n    return result", " \
    \   let music_string = music_string.replacingOccurrences(of: \" \", with: \"\"\
    )\n    let music_array = music_string.components(separatedBy: \"|\")\n    var\
    \ result = [Int]()\n    for note in music_array {\n        switch note {\n   \
    \     case \"o\":\n            result.append(4)\n        case \"o\":\n       \
    \     result.append(2)\n        case \".\":\n            result.append(1)\n  \
    \      default:\n            break\n        }\n    }\n    return result", "  \
    \  var result: [Int] = []\n    var music_string = music_string\n    while music_string.characters.count\
    \ > 0 {\n        let first_char = music_string.characters.first!\n        switch\
    \ first_char {\n        case \"o\":\n            result.append(4)\n          \
    \  music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        case \".\":\n            result.append(1)\n            music_string =\
    \ music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n   \
    \     default:\n            result.append(2)\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(3))\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    var music_array\
    \ = music_string.components(separatedBy: \" \")\n    for i in 0..<music_array.count\
    \ {\n        if music_array[i] == \"o\" {\n            result.append(4)\n    \
    \    } else if music_array[i] == \"o|\" {\n            result.append(2)\n    \
    \    } else if music_array[i] == \".|\" {\n            result.append(1)\n    \
    \    }\n    }\n    return result", "    var result: [Int] = []\n    let music_string_array\
    \ = music_string.components(separatedBy: \" \")\n    for note in music_string_array\
    \ {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            print(\"Error: unknown\
    \ note\")\n        }\n    }\n    return result", "    let music = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in music {\n        switch note\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   let notes = music_string.components(separatedBy: \" \")\n    var result =\
    \ [Int]()\n    for note in notes {\n        switch note {\n        case \"o\"\
    :\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            beats.append(4)\n\
    \        case \"o|\":\n            beats.append(2)\n        case \".|\":\n   \
    \         beats.append(1)\n        default:\n            break\n        }\n  \
    \  }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    return notes.map {\n        switch $0 {\n        case \"o\":\n \
    \           return 4\n        case \"o|\":\n            return 2\n        case\
    \ \".|\":\n            return 1\n        default:\n            return 0\n    \
    \    }\n    }", "    let notes = music_string.components(separatedBy: \" \")\n\
    \    var beats = [Int]()\n    for note in notes {\n        switch note {\n   \
    \     case \"o\":\n            beats.append(4)\n        case \"o|\":\n       \
    \     beats.append(2)\n        case \".|\":\n            beats.append(1)\n   \
    \     default:\n            print(\"Invalid note\")\n        }\n    }\n    return\
    \ beats", "    var result: [Int] = []\n    var music_string = music_string\n \
    \   while music_string.count > 0 {\n        if music_string.hasPrefix(\"o\") {\n\
    \            result.append(4)\n            music_string.removeFirst()\n      \
    \  } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o|\" {\n \
    \           beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    var result: [Int] = []\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     if note == \"o\" {\n            result.append(4)\n        } else if note\
    \ == \"o|\" {\n            result.append(2)\n        } else if note == \".|\"\
    \ {\n            result.append(1)\n        }\n    }\n    return result", "   \
    \ var result = [Int]()\n    let notes = music_string.components(separatedBy: \"\
    \ \")\n    for note in notes {\n        switch note {\n        case \"o\":\n \
    \           result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      result.append(0)\n        }\n    }\n    return result", "    var beats\
    \ = [Int]()\n    let notes = music_string.components(separatedBy: \" \")\n   \
    \ for note in notes {\n        switch note {\n        case \"o\":\n          \
    \  beats.append(4)\n        case \"o|\":\n            beats.append(2)\n      \
    \  case \".|\":\n            beats.append(1)\n        default:\n            break\n\
    \        }\n    }\n    return beats", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    var result: [Int] = []\n    var i = 0\n    while i <\
    \ music_string.count {\n        let char = music_string[i]\n        if char ==\
    \ \"o\" {\n            result.append(4)\n            i += 1\n        } else if\
    \ char == \".\" {\n            result.append(1)\n            i += 2\n        }\n\
    \    }\n    return result", "    var result: [Int] = []\n    var music_string\
    \ = music_string\n    while !music_string.isEmpty {\n        if music_string.hasPrefix(\"\
    o\") {\n            result.append(4)\n            music_string.removeFirst()\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var music_string\
    \ = music_string\n    while music_string.count > 0 {\n        if music_string.hasPrefix(\"\
    o\") {\n            result.append(4)\n            music_string.removeFirst()\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     switch note {\n        case \"o\":\n            result.append(4)\n     \
    \   case \"o|\":\n            result.append(2)\n        case \".|\":\n       \
    \     result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var beats: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", "    var result: [Int] = []\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            beats.append(0)\n        }\n    }\n    return beats",
  "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result: [Int] = []\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    let music_array = music_string.components(separatedBy:\
    \ \" \")\n    for music in music_array {\n        if music == \"o\" {\n      \
    \      result.append(4)\n        } else if music == \"o|\" {\n            result.append(2)\n\
    \        } else if music == \".|\" {\n            result.append(1)\n        }\n\
    \    }\n    return result", "    var result: [Int] = []\n    var music_array =\
    \ music_string.components(separatedBy: \" \")\n    for note in music_array {\n\
    \        if note == \"o\" {\n            result.append(4)\n        } else if note\
    \ == \"o|\" {\n            result.append(2)\n        } else if note == \".|\"\
    \ {\n            result.append(1)\n        }\n    }\n    return result", "   \
    \ let music_string = music_string.replacingOccurrences(of: \" \", with: \"\")\n\
    \    var beats = [Int]()\n    var beat = 0\n    for char in music_string {\n \
    \       if char == \"o\" {\n            beat = 4\n        } else if char == \"\
    |\" {\n            beat -= 1\n        }\n        beats.append(beat)\n    }\n \
    \   return beats", '    return []', "    var beats = [Int]()\n    var music_array\
    \ = music_string.components(separatedBy: \" \")\n    for note in music_array {\n\
    \        switch note {\n        case \"o\":\n            beats.append(4)\n   \
    \     case \"o|\":\n            beats.append(2)\n        case \".|\":\n      \
    \      beats.append(1)\n        default:\n            print(\"Invalid note\")\n\
    \        }\n    }\n    return beats", "    var result: [Int] = []\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     switch note {\n        case \"o\":\n            result.append(4)\n     \
    \   case \"o|\":\n            result.append(2)\n        case \".|\":\n       \
    \     result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    var result: [Int] = []\n    var index = 0\n    while\
    \ index < music_string.count {\n        let char = music_string[index]\n     \
    \   if char == \"o\" {\n            if index + 1 < music_string.count && music_string[index\
    \ + 1] == \"|\" {\n                result.append(2)\n                index +=\
    \ 2\n            } else {\n                result.append(4)\n                index\
    \ += 1\n            }\n        } else if char == \".\" {\n            result.append(1)\n\
    \            index += 2\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    for char in music_string {\n        switch char {\n        case\
    \ \"o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            beats.append(0)\n        }\n    }\n    return beats",
  "    var result: [Int] = []\n    for char in music_string {\n        switch char\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        }\n    }\n    return result",
  "    let notes = music_string.components(separatedBy: \" \")\n    var result = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     result.append(4)\n        case \"o|\":\n            result.append(2)\n \
    \       case \".|\":\n            result.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   let music_string_array = music_string.components(separatedBy: \" \")\n   \
    \ var result_array = [Int]()\n    for item in music_string_array {\n        if\
    \ item == \"o\" {\n            result_array.append(4)\n        } else if item\
    \ == \"o|\" {\n            result_array.append(2)\n        } else if item == \"\
    .|\" {\n            result_array.append(1)\n        }\n    }\n    return result_array",
  "    let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   let notes = music_string.components(separatedBy: \" \")\n    var result =\
    \ [Int]()\n    for note in notes {\n        switch note {\n        case \"o\"\
    :\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result: [Int] = []\n\
    \    var music_array = music_string.components(separatedBy: \" \")\n    for note\
    \ in music_array {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            print(\"Invalid note\"\
    )\n        }\n    }\n    return result", "    var result = [Int]()\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     switch note {\n        case \"o\":\n            result.append(4)\n     \
    \   case \"o|\":\n            result.append(2)\n        case \".|\":\n       \
    \     result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    return music_string.split(separator: \" \").map {\n\
    \        switch $0 {\n        case \"o\":\n            return 4\n        case\
    \ \"o|\":\n            return 2\n        case \".|\":\n            return 1\n\
    \        default:\n            return 0\n        }\n    }", "    var result =\
    \ [Int]()\n    var music = music_string.components(separatedBy: \" \")\n    for\
    \ note in music {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   let music_string_array = music_string.components(separatedBy: \" \")\n   \
    \ var result = [Int]()\n    for note in music_string_array {\n        switch note\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   let music_string = music_string.replacingOccurrences(of: \" \", with: \"\"\
    )\n    var result: [Int] = []\n    var i = 0\n    while i < music_string.count\
    \ {\n        let index = music_string.index(music_string.startIndex, offsetBy:\
    \ i)\n        switch music_string[index] {\n        case \"o\":\n            result.append(4)\n\
    \            i += 1\n        case \"o|\":\n            result.append(2)\n    \
    \        i += 2\n        case \".|\":\n            result.append(1)\n        \
    \    i += 2\n        default:\n            break\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var music_string = music_string\n    while music_string.count > 0 {\n   \
    \     if music_string.hasPrefix(\"o\") {\n            result.append(4)\n     \
    \       music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        }\n    }\n    return result",
  "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            print(\"Invalid note\")\n        }\n    }\n   \
    \ return beats", "    var result = [Int]()\n    for char in music_string {\n \
    \       switch char {\n        case \"o\":\n            result.append(4)\n   \
    \     case \"|\":\n            result.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o|\" {\n \
    \           beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result: [Int] = []\n    let notes = music_string.characters.split(separator:\
    \ \" \").map(String.init)\n    for note in notes {\n        if note == \"o\" {\n\
    \            result.append(4)\n        } else if note == \"o|\" {\n          \
    \  result.append(2)\n        } else if note == \".|\" {\n            result.append(1)\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result: [Int] = []\n    for note in music_string.split(separator: \" \"\
    ) {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            result.append(4)\n        } else if note == \"o|\" {\n\
    \            result.append(2)\n        } else if note == \".|\" {\n          \
    \  result.append(1)\n        }\n    }\n    return result", '    return []', " \
    \   let music_string = music_string.replacingOccurrences(of: \" \", with: \"\"\
    )\n    let music_array = music_string.components(separatedBy: \"|\")\n    var\
    \ result = [Int]()\n    for note in music_array {\n        switch note {\n   \
    \     case \"o\":\n            result.append(4)\n        case \"o\":\n       \
    \     result.append(2)\n        case \".\":\n            result.append(1)\n  \
    \      default:\n            break\n        }\n    }\n    return result", "  \
    \  var result = [Int]()\n    var notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    let music_string_array = music_string.components(separatedBy:\
    \ \" \")\n    for music_string in music_string_array {\n        switch music_string\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            beats.append(4)\n\
    \        case \"o|\":\n            beats.append(2)\n        case \".|\":\n   \
    \         beats.append(1)\n        default:\n            break\n        }\n  \
    \  }\n    return beats", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   let notes = music_string.split(separator: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    let note_to_beat = [\n   \
    \     \"o\": 4,\n        \"o|\": 2,\n        \".|\": 1\n    ]\n    var result\
    \ = [Int]()\n    var notes = music_string.components(separatedBy: \" \")\n   \
    \ for note in notes {\n        if let beat = note_to_beat[note] {\n          \
    \  result.append(beat)\n        }\n    }\n    return result", "    var result:\
    \ [Int] = []\n    let notes = music_string.components(separatedBy: \" \")\n  \
    \  for note in notes {\n        switch note {\n        case \"o\":\n         \
    \   result.append(4)\n        case \"o|\":\n            result.append(2)\n   \
    \     case \".|\":\n            result.append(1)\n        default:\n         \
    \   break\n        }\n    }\n    return result", "    var result = [Int]()\n \
    \   let notes = music_string.components(separatedBy: \" \")\n    for note in notes\
    \ {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    // TODO: Implement this\
    \ function\n    return []", "    var result = [Int]()\n    var music_string =\
    \ music_string\n    while music_string.count > 0 {\n        if music_string.hasPrefix(\"\
    o\") {\n            result.append(4)\n            music_string.removeFirst()\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     switch note {\n        case \"o\":\n            result.append(4)\n     \
    \   case \"o|\":\n            result.append(2)\n        case \".|\":\n       \
    \     result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    let notes = music_string.components(separatedBy: \"\
    \ \")\n    var beats = [Int]()\n    for note in notes {\n        switch note {\n\
    \        case \"o\":\n            beats.append(4)\n        case \"o|\":\n    \
    \        beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result: [Int] = []\n    let music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    var result: [Int] = []\n    var index = 0\n    while\
    \ index < music_string.count {\n        let char = music_string[music_string.index(music_string.startIndex,\
    \ offsetBy: index)]\n        switch char {\n        case \"o\":\n            if\
    \ index + 1 < music_string.count && music_string[music_string.index(music_string.startIndex,\
    \ offsetBy: index + 1)] == \"|\" {\n                result.append(2)\n       \
    \         index += 1\n            } else {\n                result.append(4)\n\
    \            }\n        case \".\":\n            result.append(1)\n        default:\n\
    \            break\n        }\n        index += 1\n    }\n    return result",
  "    var result = [Int]()\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        }\n    }\n    return result",
  "    let beats = [4, 2, 1]\n    var result = [Int]()\n    var i = 0\n    while i\
    \ < music_string.count {\n        let char = music_string[i]\n        if char\
    \ == \"o\" {\n            result.append(beats[0])\n            i += 1\n      \
    \  } else if char == \".\" {\n            result.append(beats[2])\n          \
    \  i += 3\n        } else {\n            result.append(beats[1])\n           \
    \ i += 2\n        }\n    }\n    return result", "    var beats: [Int] = []\n \
    \   var music = music_string.components(separatedBy: \" \")\n    for note in music\
    \ {\n        if note == \"o\" {\n            beats.append(4)\n        } else if\
    \ note == \"o|\" {\n            beats.append(2)\n        } else if note == \"\
    .|\" {\n            beats.append(1)\n        }\n    }\n    return beats", "  \
    \  let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    var result = [Int]()\n   \
    \ let notes = music_string.components(separatedBy: \" \")\n    for note in notes\
    \ {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    let beats = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for beat in beats {\n        if beat ==\
    \ \"o\" {\n            result.append(4)\n        } else if beat == \"o|\" {\n\
    \            result.append(2)\n        } else if beat == \".|\" {\n          \
    \  result.append(1)\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    for char in music_string {\n        switch char\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", '    return
    []', "    let notes = music_string.components(separatedBy: \" \")\n    var beats\
    \ = [Int]()\n    for note in notes {\n        switch note {\n        case \"o\"\
    :\n            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", "    var result = [Int]()\n\
    \    var music_string = music_string\n    while music_string.count > 0 {\n   \
    \     if music_string.hasPrefix(\"o\") {\n            result.append(4)\n     \
    \       music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        }\n    }\n    return result",
  "    let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  print(\"Unknown note: \\(note)\")\n        }\n    }\n    return beats", " \
    \   let notes = music_string.split(separator: \" \")\n    var result = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     result.append(4)\n        case \"o|\":\n            result.append(2)\n \
    \       case \".|\":\n            result.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            print(\"Invalid note\"\
    )\n        }\n    }\n    return result", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    var result = [Int]()\n    var i = 0\n    while i < music_string.count\
    \ {\n        let index = music_string.index(music_string.startIndex, offsetBy:\
    \ i)\n        let char = music_string[index]\n        if char == \"o\" {\n   \
    \         result.append(4)\n            i += 1\n        } else if char == \".\"\
    \ {\n            result.append(1)\n            i += 2\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var music_string = music_string\n  \
    \  while music_string.count > 0 {\n        if music_string.hasPrefix(\"o\") {\n\
    \            result.append(4)\n            music_string.removeFirst()\n      \
    \  } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result: [Int] = []\n    let music_string_array = music_string.components(separatedBy:\
    \ \" \")\n    for music_string in music_string_array {\n        if music_string\
    \ == \"o\" {\n            result.append(4)\n        } else if music_string ==\
    \ \"o|\" {\n            result.append(2)\n        } else if music_string == \"\
    .|\" {\n            result.append(1)\n        }\n    }\n    return result", " \
    \   let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        if note == \"o\" {\n            beats.append(4)\n\
    \        } else if note == \"o|\" {\n            beats.append(2)\n        } else\
    \ if note == \".|\" {\n            beats.append(1)\n        }\n    }\n    return\
    \ beats", "    let music_string = music_string.replacingOccurrences(of: \" \"\
    , with: \"\")\n    var result: [Int] = []\n    var i = 0\n    while i < music_string.count\
    \ {\n        let char = music_string[i]\n        if char == \"o\" {\n        \
    \    if i + 1 < music_string.count && music_string[i + 1] == \"|\" {\n       \
    \         result.append(2)\n                i += 2\n            } else {\n   \
    \             result.append(4)\n                i += 1\n            }\n      \
    \  } else if char == \".\" {\n            result.append(1)\n            i += 2\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     switch note {\n        case \"o\":\n            result.append(4)\n     \
    \   case \"o|\":\n            result.append(2)\n        case \".|\":\n       \
    \     result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    let notes = music_string.components(separatedBy: \"\
    \ \")\n    var result = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var result: [Int] = []\n    let music = music_string.components(separatedBy:\
    \ \" \")\n    for note in music {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      print(\"Unknown note\")\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    let notes = music_string.components(separatedBy: \" \"\
    )\n    for note in notes {\n        switch note {\n        case \"o\":\n     \
    \       result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        if note == \"o\" {\n            beats.append(4)\n        }\
    \ else if note == \"o|\" {\n            beats.append(2)\n        } else if note\
    \ == \".|\" {\n            beats.append(1)\n        }\n    }\n    return beats",
  "    var result: [Int] = []\n    var music_string = music_string\n    while music_string.characters.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(2))\n\
    \        } else {\n            music_string = music_string.substringFromIndex(music_string.startIndex.advancedBy(1))\n\
    \        }\n    }\n    return result", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    var beats = [Int]()\n    var beat = 0\n    for char\
    \ in music_string {\n        switch char {\n        case \"o\":\n            beat\
    \ = 4\n        case \"|\":\n            beats.append(beat)\n            beat =\
    \ 0\n        case \".\":\n            beat = 1\n        default:\n           \
    \ break\n        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    var current_note = \"\"\n    for char in music_string\
    \ {\n        if char == \" \" {\n            if current_note == \"o\" {\n    \
    \            result.append(4)\n            } else if current_note == \"o|\" {\n\
    \                result.append(2)\n            } else if current_note == \".|\"\
    \ {\n                result.append(1)\n            }\n            current_note\
    \ = \"\"\n        } else {\n            current_note += String(char)\n       \
    \ }\n    }\n    return result", '    return [Int]()', "    var result = [Int]()\n\
    \    let music_array = music_string.components(separatedBy: \" \")\n    for note\
    \ in music_array {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result: [Int] = []\n    for char in music_string {\n     \
    \   switch char {\n        case \"o\":\n            result.append(4)\n       \
    \ case \"o|\":\n            result.append(2)\n        case \".|\":\n         \
    \   result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    var result: [Int] = []\n    var i = 0\n    while i <\
    \ music_string.count {\n        let char = music_string[i]\n        if char ==\
    \ \"o\" {\n            if i + 1 < music_string.count && music_string[i + 1] ==\
    \ \"|\" {\n                result.append(2)\n                i += 2\n        \
    \    } else {\n                result.append(4)\n                i += 1\n    \
    \        }\n        } else if char == \".\" {\n            result.append(1)\n\
    \            i += 2\n        }\n    }\n    return result", "    var result: [Int]\
    \ = []\n    var music_array = music_string.split(separator: \" \")\n    for i\
    \ in 0..<music_array.count {\n        switch music_array[i] {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var music_string = music_string\n    while music_string.count > 0 {\n   \
    \     if music_string.hasPrefix(\"o\") {\n            result.append(4)\n     \
    \       music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        }\n    }\n    return result",
  "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   let notes = music_string.components(separatedBy: \" \")\n    var result =\
    \ [Int]()\n    for note in notes {\n        switch note {\n        case \"o\"\
    :\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    let notes = music_string.characters.split(separator:\
    \ \" \").map(String.init)\n    var beats = [Int]()\n    for note in notes {\n\
    \        switch note {\n        case \"o\":\n            beats.append(4)\n   \
    \     case \"o|\":\n            beats.append(2)\n        case \".|\":\n      \
    \      beats.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return beats", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    let music_string = music_string.replacingOccurrences(of:\
    \ \"o|\", with: \"1\")\n    let music_string = music_string.replacingOccurrences(of:\
    \ \".|\", with: \"0\")\n    let music_string = music_string.replacingOccurrences(of:\
    \ \"o\", with: \"4\")\n    var result = [Int]()\n    for char in music_string\
    \ {\n        result.append(Int(String(char))!)\n    }\n    return result", " \
    \   var result = [Int]()\n    var music = music_string.components(separatedBy:\
    \ \" \")\n    for note in music {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var beats = [Int]()\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            beats.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            beats.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            beats.append(1)\n\
    \            music_string.removeFirst(2)\n        }\n    }\n    return beats",
  "    let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    var result = [Int]()\n   \
    \ var music_string = music_string\n    while music_string.count > 0 {\n      \
    \  let first_char = music_string.removeFirst()\n        if first_char == \"o\"\
    \ {\n            if music_string.removeFirst() == \"|\" {\n                result.append(2)\n\
    \            } else {\n                result.append(4)\n            }\n     \
    \   } else {\n            result.append(1)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        }\n    }\n    return result",
  "    let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    var result = [Int]()\n   \
    \ let notes = music_string.components(separatedBy: \" \")\n    for note in notes\
    \ {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    let music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var music_array = music_string.components(separatedBy: \" \")\n    for i\
    \ in 0..<music_array.count {\n        switch music_array[i] {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      print(\"Error\")\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    let music_string_array = music_string.components(separatedBy:\
    \ \" \")\n    for i in music_string_array {\n        switch i {\n        case\
    \ \"o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      print(\"Error\")\n        }\n    }\n    return result"]
stop_tokens:
- "\n}"

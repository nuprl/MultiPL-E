language: swift
name: HumanEval_97_multiply
results:
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = abs(a)\n\
    \    let b = abs(b)\n    return (a % 10) * (b % 10)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b:\
    \ 28) == 72)\nassert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14,\
    \ b: -15) == 20)\nassert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17,\
    \ b: 27) == 49)\nassert(multiply(a: 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0)\
    \ == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a % 10\n\
    \    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\n\
    assert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\n\
    assert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpvxvq5thp/tmpvxvq5thp.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60e4604c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60e42fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60e42fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60e42fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvxvq5thp                        0x000055c0992843cf <unavailable> + 5071

    5    libc.so.6                          0x00002b60e47f0460 __libc_start_main +
    245

    6    tmpvxvq5thp                        0x000055c099283ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a % 10\n\
    \    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\n\
    assert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\n\
    assert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpvxvq5thp/tmpvxvq5thp.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60e4604c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60e42fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60e42fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60e42fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvxvq5thp                        0x000055c0992843cf <unavailable> + 5071

    5    libc.so.6                          0x00002b60e47f0460 __libc_start_main +
    245

    6    tmpvxvq5thp                        0x000055c099283ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    let a = a % 10\n\
    \    let b = b % 10\n    return a * b\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(multiply(a: 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\n\
    assert(multiply(a: 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\n\
    assert(multiply(a: 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpvxvq5thp/tmpvxvq5thp.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60e4604c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60e42fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60e42fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60e42fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvxvq5thp                        0x000055c0992843cf <unavailable> + 5071

    5    libc.so.6                          0x00002b60e47f0460 __libc_start_main +
    245

    6    tmpvxvq5thp                        0x000055c099283ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934
- exit_code: 0
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return abs(a\
    \ % 10) * abs(b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(multiply(a:\
    \ 148, b: 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a:\
    \ 2020, b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a:\
    \ 76, b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a:\
    \ 0, b: 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824934
- exit_code: -4
  program: "\n/// Complete the function that takes two integers and returns \n///\
    \ the product of their unit digits.\n/// Assume the input is always valid.\n///\
    \ Examples:\n/// multiply(148, 412) should return 16.\n/// multiply(19, 28) should\
    \ return 72.\n/// multiply(2020, 1851) should return 0.\n/// multiply(14,-15)\
    \ should return 20.\nfunc multiply(a: Int, b: Int) -> Int {\n    return (a % 10)\
    \ * (b % 10)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(multiply(a: 148, b:\
    \ 412) == 16)\nassert(multiply(a: 19, b: 28) == 72)\nassert(multiply(a: 2020,\
    \ b: 1851) == 0)\nassert(multiply(a: 14, b: -15) == 20)\nassert(multiply(a: 76,\
    \ b: 67) == 42)\nassert(multiply(a: 17, b: 27) == 49)\nassert(multiply(a: 0, b:\
    \ 1) == 0)\nassert(multiply(a: 0, b: 0) == 0)"
  status: Exception
  stderr: 'tmpolrzl6vj/tmpolrzl6vj.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b3be93c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b3bb8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b3bb8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b3bb897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpolrzl6vj                        0x000055efb420d3cf <unavailable> + 5071

    5    libc.so.6                          0x00002b7b3c07f460 __libc_start_main +
    245

    6    tmpolrzl6vj                        0x000055efb420cef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824934

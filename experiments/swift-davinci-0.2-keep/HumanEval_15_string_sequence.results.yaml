language: swift
name: HumanEval_15_string_sequence
results:
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += String(i)\n        if i != n {\n         \
    \   s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map(String.init).joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return Array(0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += String(i)\n        if i != n {\n         \
    \   s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += String(i)\n        if i != n {\n         \
    \   s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \" \\(i)\"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpc89d26u6/tmpc89d26u6.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0d9a4ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0d9a1e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0d9a1e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0d9a1e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc89d26u6                        0x00005648c5dba722 <unavailable> + 5922

    5    libc.so.6                          0x00002b0d9a6d7460 __libc_start_main +
    245

    6    tmpc89d26u6                        0x00005648c5dba389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += String(i)\n        if i != n {\n         \
    \   s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return Array(0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map(String.init).joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return Array(0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return Array(0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += String(i)\n        if i != n {\n         \
    \   s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += String(i)\n        if i != n {\n         \
    \   s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += String(i)\n        if i != n {\n         \
    \   s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += String(i)\n        if i != n {\n         \
    \   s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map(String.init).joined(separator:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    return (0...n).map\
    \ { String($0) }.joined(separator: \" \")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += String(i)\n        if i != n {\n         \
    \   s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += String(i) + \" \"\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(string_sequence(n:\
    \ 0) == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmprwkcv4ed/tmprwkcv4ed.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7a8207bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7a81d72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7a81d72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7a81d717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprwkcv4ed                        0x000055dab7a535d2 <unavailable> + 5586

    5    libc.so.6                          0x00002b7a82267460 __libc_start_main +
    245

    6    tmprwkcv4ed                        0x000055dab7a53239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: 0
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += String(i)\n        if i != n {\n         \
    \   s += \" \"\n        }\n    }\n    return s\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n: 3) ==\
    \ \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var s = \"\"\n\
    \    for i in 0...n {\n        s += \"\\(i) \"\n    }\n    return s\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(string_sequence(n: 0) == \"0\")\nassert(string_sequence(n:\
    \ 3) == \"0 1 2 3\")\nassert(string_sequence(n: 10) == \"0 1 2 3 4 5 6 7 8 9 10\"\
    )"
  status: Exception
  stderr: 'tmp_zozep8p/tmp_zozep8p.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b08ec573c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b08ec26ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b08ec26a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b08ec2697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_zozep8p                        0x00005605c2139722 <unavailable> + 5922

    5    libc.so.6                          0x00002b08ec75f460 __libc_start_main +
    245

    6    tmp_zozep8p                        0x00005605c2139389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468
- exit_code: -4
  program: "\n/// Return a string containing space-delimited numbers starting from\
    \ 0 upto n inclusive.\n/// >>> string_sequence(0)\n/// '0'\n/// >>> string_sequence(5)\n\
    /// '0 1 2 3 4 5'\nfunc string_sequence(n: Int) -> String {\n    var result =\
    \ \"\"\n    for i in 0...n {\n        result += \"\\(i) \"\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(string_sequence(n: 0)\
    \ == \"0\")\nassert(string_sequence(n: 3) == \"0 1 2 3\")\nassert(string_sequence(n:\
    \ 10) == \"0 1 2 3 4 5 6 7 8 9 10\")"
  status: Exception
  stderr: 'tmpbrzc14ow/tmpbrzc14ow.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad30c6e9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad30c3e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad30c3e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad30c3df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbrzc14ow                        0x0000565424ca7722 <unavailable> + 5922

    5    libc.so.6                          0x00002ad30c8d5460 __libc_start_main +
    245

    6    tmpbrzc14ow                        0x0000565424ca7389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824468

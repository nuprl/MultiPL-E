language: swift
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 2 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp0vqs_rkp.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmp0vqs_rkp.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 2 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpca7vsmnf.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpca7vsmnf.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n: n - 1) + fib(n: n - 2)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 2 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpca7vsmnf.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpca7vsmnf.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n: n - 1) + fib(n: n - 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824409
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n: n - 1) + fib(n: n - 2)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n: n - 1) + fib(n: n - 2)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n: n - 1) + fib(n: n - 2)\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 2 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp0vqs_rkp.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmp0vqs_rkp.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 2 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpca7vsmnf.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpca7vsmnf.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 2 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpca7vsmnf.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpca7vsmnf.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 2 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp0vqs_rkp.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmp0vqs_rkp.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    var a = 0\n    var b = 1\n    for _ in 1..<n\
    \ {\n        let c = a + b\n        a = b\n        b = c\n    }\n    return b\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 2 {\n        return 1\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp0vqs_rkp.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmp0vqs_rkp.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 2 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpca7vsmnf.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpca7vsmnf.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n: n - 1) + fib(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824409
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n: n - 1) + fib(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n: n - 1) + fib(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 2 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpca7vsmnf.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpca7vsmnf.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 2 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpca7vsmnf.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpca7vsmnf.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 2 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpca7vsmnf.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpca7vsmnf.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n: n - 1) + fib(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 0
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n: n - 1) + fib(n: n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 2 {\n        return 1\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpca7vsmnf.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpca7vsmnf.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return 1\n    }\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpe5ljk8d9.swift:16:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpe5ljk8d9.swift:16:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    } else {\n        return fib(n - 1) + fib(n - 2)\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n:\
    \ 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12)\
    \ == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpnpr6mait.swift:13:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpnpr6mait.swift:13:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n <=\
    \ 1 {\n        return n\n    }\n    return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphz1gd63s.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmphz1gd63s.swift:13:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824409
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(10)\n/// 55\n/// >>>\
    \ fib(1)\n/// 1\n/// >>> fib(8)\n/// 21\nfunc fib(n: Int) -> Int {\n    if n ==\
    \ 0 {\n        return 0\n    } else if n == 1 {\n        return 1\n    } else\
    \ {\n        return fib(n - 1) + fib(n - 2)\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpycs7r6nz.swift:15:20: error: missing argument label 'n:' in call\n\
    \        return fib(n - 1) + fib(n - 2)\n                   ^\n              \
    \     n: \n/tmp/tmpycs7r6nz.swift:15:33: error: missing argument label 'n:' in\
    \ call\n        return fib(n - 1) + fib(n - 2)\n                             \
    \   ^\n                                n: \n"
  stdout: ''
  timestamp: 1659824409

name: HumanEval_51_remove_vowels
language: swift
prompt: "\n/// remove_vowels is a function that takes string and returns string without\
  \ vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
  /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
  /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
  \ -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
  \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
  ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
  \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
  \ \"ybcd\") == \"ybcd\")"
completions: ["    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })", "    var result = \"\"\n    for char in text {\n\
    \        if !is_vowel(char) {\n            result.append(char)\n        }\n  \
    \  }\n    return result", "    let vowels: Set<Character> = [\"a\", \"e\", \"\
    i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })", "    var result = \"\"\n    for char in text {\n\
    \        if !is_vowel(char) {\n            result.append(char)\n        }\n  \
    \  }\n    return result", "    let vowels: Set<Character> = [\"a\", \"e\", \"\
    i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })", "    let vowels: Set<Character> = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })", "    let vowels: [Character] = [\"a\", \"e\", \"\
    i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n\
    \    for char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for char in\
    \ text {\n        if !is_vowel(char) {\n            result.append(char)\n    \
    \    }\n    }\n    return result", "    var result = \"\"\n    for char in text\
    \ {\n        if !is_vowel(char) {\n            result.append(char)\n        }\n\
    \    }\n    return result", "    let vowels: Set<Character> = [\"a\", \"e\", \"\
    i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })", "    var result = \"\"\n    for char in text {\n\
    \        if !is_vowel(char) {\n            result.append(char)\n        }\n  \
    \  }\n    return result", "    let vowels = \"aeiouAEIOU\"\n    var result = \"\
    \"\n    for char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result", "    let vowels = \"aeiou\"\n    var result\
    \ = \"\"\n    for char in text {\n        if !vowels.contains(char) {\n      \
    \      result.append(char)\n        }\n    }\n    return result", "    var result\
    \ = \"\"\n    for char in text {\n        if !is_vowel(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    for char in\
    \ text {\n        if !char.isVowel {\n            result.append(char)\n      \
    \  }\n    }\n    return result", "    var result = \"\"\n    for char in text\
    \ {\n        if !is_vowel(char) {\n            result.append(char)\n        }\n\
    \    }\n    return result", '    return text.filter { !$0.isVowel }', "    let\
    \ vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"\
    I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text {\n        if\
    \ !vowels.contains(char) {\n            result.append(char)\n        }\n    }\n\
    \    return result", "    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })", "    let vowels: Set<Character> = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })"]
stop_tokens:
- "\n}"

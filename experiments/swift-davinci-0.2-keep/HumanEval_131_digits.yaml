name: HumanEval_131_digits
language: swift
prompt: "\n/// Given a positive integer n, return the product of the odd digits.\n\
  /// Return 0 if all digits are even.\n/// For example:\n/// digits(1)  == 1\n///\
  \ digits(4)  == 0\n/// digits(235) == 15\nfunc digits(n: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(digits(n: 5) == 5)\nassert(digits(n: 54)\
  \ == 5)\nassert(digits(n: 120) == 1)\nassert(digits(n: 5014) == 5)\nassert(digits(n:\
  \ 98765) == 315)\nassert(digits(n: 5576543) == 2625)\nassert(digits(n: 2468) ==\
  \ 0)"
completions: ['    return n.digits.filter { $0 % 2 != 0 }.reduce(1, *)', '    return
    0', "    var result = 1\n    for c in String(n) {\n        if let i = Int(String(c))\
    \ {\n            if i % 2 != 0 {\n                result *= i\n            }\n\
    \        }\n    }\n    return result", '    return n.digits.filter { $0 % 2 !=
    0 }.reduce(1, *)', "    var result = 1\n    let n = String(n)\n    for char in\
    \ n {\n        if let num = Int(String(char)) {\n            if num % 2 != 0 {\n\
    \                result *= num\n            }\n        }\n    }\n    return result",
  "    var result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n\
    \        if digit % 2 != 0 {\n            result *= digit\n        }\n       \
    \ n /= 10\n    }\n    return result", '    return 0', '    return n.digits.filter
    { $0 % 2 != 0 }.reduce(1, *)', "    var result = 1\n    for c in String(n) {\n\
    \        if let i = Int(String(c)) {\n            if i % 2 != 0 {\n          \
    \      result *= i\n            }\n        }\n    }\n    return result", "   \
    \ var result = 1\n    for digit in String(n) {\n        if let digit = Int(String(digit))\
    \ {\n            if digit % 2 != 0 {\n                result *= digit\n      \
    \      }\n        }\n    }\n    return result", '    return n.digits.filter {
    $0 % 2 != 0 }.reduce(1, *)', "    var result = 1\n    for c in String(n) {\n \
    \       if let i = Int(String(c)) {\n            if i % 2 != 0 {\n           \
    \     result *= i\n            }\n        }\n    }\n    return result", "    var\
    \ result = 1\n    var number = n\n    while number > 0 {\n        let digit =\
    \ number % 10\n        if digit % 2 != 0 {\n            result *= digit\n    \
    \    }\n        number /= 10\n    }\n    return result", "    var result = 1\n\
    \    for i in String(n) {\n        if let num = Int(String(i)) {\n           \
    \ if num % 2 != 0 {\n                result *= num\n            }\n        }\n\
    \    }\n    return result", "    var result = 1\n    for char in String(n) {\n\
    \        if let number = Int(String(char)) {\n            if number % 2 != 0 {\n\
    \                result *= number\n            }\n        }\n    }\n    return\
    \ result", "    var result = 1\n    var number = n\n    while number > 0 {\n \
    \       let digit = number % 10\n        if digit % 2 != 0 {\n            result\
    \ *= digit\n        }\n        number /= 10\n    }\n    return result", "    var\
    \ result = 1\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n \
    \       if digit % 2 != 0 {\n            result *= digit\n        }\n        n\
    \ /= 10\n    }\n    return result", "    var result = 1\n    var n = n\n    while\
    \ n > 0 {\n        let digit = n % 10\n        if digit % 2 != 0 {\n         \
    \   result *= digit\n        }\n        n /= 10\n    }\n    return result", '    return
    0', '    return 0']
stop_tokens:
- "\n}"

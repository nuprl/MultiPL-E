name: HumanEval_111_histogram
language: swift
prompt: "\n/// Given a string representing a space separated lowercase letters, return\
  \ a dictionary\n/// of the letter with the most repetition and containing the corresponding\
  \ count.\n/// If several letters have the same occurrence, return all of them.\n\
  /// Example:\n/// histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}\n/// histogram('a\
  \ b b a') == {'a': 2, 'b': 2}\n/// histogram('a b c a b') == {'a': 2, 'b': 2}\n\
  /// histogram('b b b b a') == {'b': 4}\n/// histogram('') == {}\nfunc histogram(test:\
  \ String) -> [String : Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(histogram(test: \"a b b a\") == [\"a\" :\
  \ 2, \"b\" : 2])\nassert(histogram(test: \"a b c a b\") == [\"a\" : 2, \"b\" : 2])\n\
  assert(histogram(test: \"a b c d g\") == [\"a\" : 1, \"b\" : 1, \"c\" : 1, \"d\"\
  \ : 1, \"g\" : 1])\nassert(histogram(test: \"r t g\") == [\"r\" : 1, \"t\" : 1,\
  \ \"g\" : 1])\nassert(histogram(test: \"b b b b a\") == [\"b\" : 4])\nassert(histogram(test:\
  \ \"r t g\") == [\"r\" : 1, \"t\" : 1, \"g\" : 1])\nassert(histogram(test: \"\"\
  ) == [:] as [String : Int])\nassert(histogram(test: \"a\") == [\"a\" : 1])"
completions: ["    var dict = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = dict[letter] {\n  \
    \          dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var result = [String : Int]()\n\
    \    let letters = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ letters {\n        if let count = result[letter] {\n            result[letter]\
    \ = count + 1\n        } else {\n            result[letter] = 1\n        }\n \
    \   }\n    return result", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for element in array {\n        if let count = dict[element] {\n  \
    \          dict[element] = count + 1\n        } else {\n            dict[element]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let arr = test.characters.split{$0 == \" \"}.map(String.init)\n    for str\
    \ in arr {\n        if let count = dict[str] {\n            dict[str] = count\
    \ + 1\n        } else {\n            dict[str] = 1\n        }\n    }\n    return\
    \ dict", "    var result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for i in array {\n\
    \        if let count = dict[i] {\n            dict[i] = count + 1\n        }\
    \ else {\n            dict[i] = 1\n        }\n    }\n    return dict", "    var\
    \ result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for item in array\
    \ {\n        if let count = dict[item] {\n            dict[item] = count + 1\n\
    \        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    var result = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if result[item] == nil {\n           \
    \ result[item] = 1\n        } else {\n            result[item]! += 1\n       \
    \ }\n    }\n    return result", "    var dict = [String : Int]()\n    let letters\
    \ = test.componentsSeparatedByString(\" \")\n    for letter in letters {\n   \
    \     if dict[letter] == nil {\n            dict[letter] = 1\n        } else {\n\
    \            dict[letter]! += 1\n        }\n    }\n    return dict", "    var\
    \ result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let arr = test.componentsSeparatedByString(\" \")\n    for item in arr {\n\
    \        if let count = dict[item] {\n            dict[item] = count + 1\n   \
    \     } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = dict[letter] {\n  \
    \          dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    var max = 0\n    var maxKeys = [String]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if let val = dict[i] {\n            dict[i]\
    \ = val + 1\n        } else {\n            dict[i] = 1\n        }\n        if\
    \ dict[i] > max {\n            max = dict[i]!\n            maxKeys = [i]\n   \
    \     } else if dict[i] == max {\n            maxKeys.append(i)\n        }\n \
    \   }\n    var result = [String : Int]()\n    for i in maxKeys {\n        result[i]\
    \ = max\n    }\n    return result", "    var histogram = [String : Int]()\n  \
    \  let letters = test.componentsSeparatedByString(\" \")\n    for letter in letters\
    \ {\n        if let count = histogram[letter] {\n            histogram[letter]\
    \ = count + 1\n        } else {\n            histogram[letter] = 1\n        }\n\
    \    }\n    return histogram", "    var result = [String : Int]()\n    let letters\
    \ = test.componentsSeparatedByString(\" \")\n    for letter in letters {\n   \
    \     if let count = result[letter] {\n            result[letter] = count + 1\n\
    \        } else {\n            result[letter] = 1\n        }\n    }\n    return\
    \ result", "    var histogram = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if histogram[letter] == nil {\n  \
    \          histogram[letter] = 1\n        } else {\n            histogram[letter]!\
    \ += 1\n        }\n    }\n    return histogram", "    var result = [String : Int]()\n\
    \    let letters = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ letters {\n        if let count = result[letter] {\n            result[letter]\
    \ = count + 1\n        } else {\n            result[letter] = 1\n        }\n \
    \   }\n    return result", "    var result = [String : Int]()\n    let letters\
    \ = test.characters.split{$0 == \" \"}.map(String.init)\n    for letter in letters\
    \ {\n        if let count = result[letter] {\n            result[letter] = count\
    \ + 1\n        } else {\n            result[letter] = 1\n        }\n    }\n  \
    \  return result", "    var histogram = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = histogram[letter] {\n\
    \            histogram[letter] = count + 1\n        } else {\n            histogram[letter]\
    \ = 1\n        }\n    }\n    return histogram", "    var dict = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for item in array\
    \ {\n        if let count = dict[item] {\n            dict[item] = count + 1\n\
    \        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    return test.characters.reduce([String : Int]()) { (var dict, char) in\n   \
    \     let key = String(char)\n        if let count = dict[key] {\n           \
    \ dict[key] = count + 1\n        } else {\n            dict[key] = 1\n       \
    \ }\n        return dict\n    }", "    var result = [String : Int]()\n    let\
    \ array = test.componentsSeparatedByString(\" \")\n    for item in array {\n \
    \       if let count = result[item] {\n            result[item] = count + 1\n\
    \        } else {\n            result[item] = 1\n        }\n    }\n    return\
    \ result", "    var result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var result = [String : Int]()\n\
    \    let testArray = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ testArray {\n        if let count = result[letter] {\n            result[letter]\
    \ = count + 1\n        } else {\n            result[letter] = 1\n        }\n \
    \   }\n    return result", "    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    var histogram = [String : Int]()\n    for letter in letters {\n   \
    \     if let count = histogram[letter] {\n            histogram[letter] = count\
    \ + 1\n        } else {\n            histogram[letter] = 1\n        }\n    }\n\
    \    return histogram", "    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    var histogram = [String : Int]()\n    for letter in letters {\n   \
    \     if let count = histogram[letter] {\n            histogram[letter] = count\
    \ + 1\n        } else {\n            histogram[letter] = 1\n        }\n    }\n\
    \    return histogram", "    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    var dict = [String : Int]()\n    for letter in letters {\n        if\
    \ let count = dict[letter] {\n            dict[letter] = count + 1\n        }\
    \ else {\n            dict[letter] = 1\n        }\n    }\n    return dict", " \
    \   var histogram = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = histogram[letter] {\n\
    \            histogram[letter] = count + 1\n        } else {\n            histogram[letter]\
    \ = 1\n        }\n    }\n    return histogram", "    var dict = [String : Int]()\n\
    \    let arr = test.componentsSeparatedByString(\" \")\n    for i in arr {\n \
    \       if let count = dict[i] {\n            dict[i] = count + 1\n        } else\
    \ {\n            dict[i] = 1\n        }\n    }\n    return dict", "    var result\
    \ = [String : Int]()\n    let testArray = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in testArray {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var result = [String : Int]()\n\
    \    let letters = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ letters {\n        if let count = result[letter] {\n            result[letter]\
    \ = count + 1\n        } else {\n            result[letter] = 1\n        }\n \
    \   }\n    return result", "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var result = [String : Int]()\n\
    \    let words = test.componentsSeparatedByString(\" \")\n    for word in words\
    \ {\n        if let count = result[word] {\n            result[word] = count +\
    \ 1\n        } else {\n            result[word] = 1\n        }\n    }\n    return\
    \ result", "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var histogram = [String : Int]()\n    for letter in test.characters\
    \ {\n        let letterString = String(letter)\n        if let count = histogram[letterString]\
    \ {\n            histogram[letterString] = count + 1\n        } else {\n     \
    \       histogram[letterString] = 1\n        }\n    }\n    return histogram",
  "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var result = [String : Int]()\n    let\
    \ letters = test.characters.split(\" \").map(String.init)\n    for letter in letters\
    \ {\n        if let count = result[letter] {\n            result[letter] = count\
    \ + 1\n        } else {\n            result[letter] = 1\n        }\n    }\n  \
    \  return result", "    var result: [String : Int] = [:]\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var result = [String : Int]()\n\
    \    let letters = test.characters.split(\" \").map(String.init)\n    for letter\
    \ in letters {\n        if result[letter] == nil {\n            result[letter]\
    \ = 1\n        } else {\n            result[letter]! += 1\n        }\n    }\n\
    \    return result", "    var result = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in array {\n        if let count = result[letter] {\n  \
    \          result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for item in array\
    \ {\n        if let count = dict[item] {\n            dict[item] = count + 1\n\
    \        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for i in array {\n        if dict[i] == nil {\n            dict[i]\
    \ = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for item in arr {\n        if dict[item] == nil {\n            dict[item]\
    \ = 1\n        } else {\n            dict[item] = dict[item]! + 1\n        }\n\
    \    }\n    return dict", "    var dict = [String : Int]()\n    let letters =\
    \ test.componentsSeparatedByString(\" \")\n    for letter in letters {\n     \
    \   if let count = dict[letter] {\n            dict[letter] = count + 1\n    \
    \    } else {\n            dict[letter] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var result: [String : Int] = [:]\n    var maxCount = 0\n\
    \    let letters = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ letters {\n        if let count = result[letter] {\n            result[letter]\
    \ = count + 1\n            if count + 1 > maxCount {\n                maxCount\
    \ = count + 1\n            }\n        } else {\n            result[letter] = 1\n\
    \            if 1 > maxCount {\n                maxCount = 1\n            }\n\
    \        }\n    }\n    return result.filter { $0.1 == maxCount }", "    var result\
    \ = [String : Int]()\n    let letters = test.componentsSeparatedByString(\" \"\
    )\n    for letter in letters {\n        if let count = result[letter] {\n    \
    \        result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for item in array\
    \ {\n        if let count = dict[item] {\n            dict[item] = count + 1\n\
    \        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    var result = [String : Int]()\n    var letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if result[letter] == nil {\n     \
    \       result[letter] = 1\n        } else {\n            result[letter]! += 1\n\
    \        }\n    }\n    return result", "    var result = [String : Int]()\n  \
    \  let letters = test.componentsSeparatedByString(\" \")\n    for letter in letters\
    \ {\n        if let count = result[letter] {\n            result[letter] = count\
    \ + 1\n        } else {\n            result[letter] = 1\n        }\n    }\n  \
    \  return result", "    var dict = [String : Int]()\n    var max = 0\n    for\
    \ letter in test.componentsSeparatedByString(\" \") {\n        if let count =\
    \ dict[letter] {\n            dict[letter] = count + 1\n        } else {\n   \
    \         dict[letter] = 1\n        }\n        if dict[letter] > max {\n     \
    \       max = dict[letter]!\n        }\n    }\n    var result = [String : Int]()\n\
    \    for (key, value) in dict {\n        if value == max {\n            result[key]\
    \ = value\n        }\n    }\n    return result", "    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    var histogram = [String : Int]()\n    for letter in letters {\n   \
    \     if let count = histogram[letter] {\n            histogram[letter] = count\
    \ + 1\n        } else {\n            histogram[letter] = 1\n        }\n    }\n\
    \    return histogram", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var result = [String : Int]()\n    var\
    \ letters = test.componentsSeparatedByString(\" \")\n    for letter in letters\
    \ {\n        if let count = result[letter] {\n            result[letter] = count\
    \ + 1\n        } else {\n            result[letter] = 1\n        }\n    }\n  \
    \  return result", "    let letters = test.componentsSeparatedByString(\" \")\n\
    \    var dict = [String : Int]()\n    for letter in letters {\n        if let\
    \ count = dict[letter] {\n            dict[letter] = count + 1\n        } else\
    \ {\n            dict[letter] = 1\n        }\n    }\n    return dict", "    var\
    \ dict = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = dict[letter] {\n  \
    \          dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for item in array\
    \ {\n        if let count = dict[item] {\n            dict[item] = count + 1\n\
    \        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for i in array {\n        if dict[i] == nil {\n            dict[i]\
    \ = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var dict = [String : Int]()\n    let array\
    \ = test.componentsSeparatedByString(\" \")\n    for element in array {\n    \
    \    if let count = dict[element] {\n            dict[element] = count + 1\n \
    \       } else {\n            dict[element] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for i in array {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for element in array {\n        if let count = dict[element] {\n  \
    \          dict[element] = count + 1\n        } else {\n            dict[element]\
    \ = 1\n        }\n    }\n    return dict", "    var result = [String : Int]()\n\
    \    let letters = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ letters {\n        if let count = result[letter] {\n            result[letter]\
    \ = count + 1\n        } else {\n            result[letter] = 1\n        }\n \
    \   }\n    return result", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var result = [String : Int]()\n    let\
    \ letters = test.componentsSeparatedByString(\" \")\n    for letter in letters\
    \ {\n        if let count = result[letter] {\n            result[letter] = count\
    \ + 1\n        } else {\n            result[letter] = 1\n        }\n    }\n  \
    \  return result", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for i in array {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    let letters = test.characters.split{$0 == \" \"}.map(String.init)\n\
    \    var histogram = [String : Int]()\n    for letter in letters {\n        if\
    \ let count = histogram[letter] {\n            histogram[letter] = count + 1\n\
    \        } else {\n            histogram[letter] = 1\n        }\n    }\n    return\
    \ histogram", "    var result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for i in array {\n\
    \        if let count = dict[i] {\n            dict[i] = count + 1\n        }\
    \ else {\n            dict[i] = 1\n        }\n    }\n    return dict", "    var\
    \ result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if result[letter] == nil {\n     \
    \       result[letter] = 1\n        } else {\n            result[letter]! += 1\n\
    \        }\n    }\n    return result", "    var dict: [String : Int] = [:]\n \
    \   let arr = test.componentsSeparatedByString(\" \")\n    for i in arr {\n  \
    \      if let count = dict[i] {\n            dict[i] = count + 1\n        } else\
    \ {\n            dict[i] = 1\n        }\n    }\n    return dict", "    var dict\
    \ = [String : Int]()\n    let array = test.componentsSeparatedByString(\" \")\n\
    \    for i in array {\n        if let count = dict[i] {\n            dict[i] =\
    \ count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n   \
    \ return dict", "    var dict = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = dict[letter] {\n  \
    \          dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let arr = test.componentsSeparatedByString(\" \")\n    for i in arr {\n \
    \       if dict[i] == nil {\n            dict[i] = 1\n        } else {\n     \
    \       dict[i] = dict[i]! + 1\n        }\n    }\n    return dict", "    var result\
    \ = [String : Int]()\n    let letters = test.componentsSeparatedByString(\" \"\
    )\n    for letter in letters {\n        if let count = result[letter] {\n    \
    \        result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for item in array\
    \ {\n        if let count = dict[item] {\n            dict[item] = count + 1\n\
    \        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in array {\n        if let count = dict[letter] {\n    \
    \        dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var result = [String : Int]()\n\
    \    let letters = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ letters {\n        if result[letter] == nil {\n            result[letter] =\
    \ 1\n        } else {\n            result[letter]! += 1\n        }\n    }\n  \
    \  return result", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var dict = [String : Int]()\n    let arr\
    \ = test.componentsSeparatedByString(\" \")\n    for item in arr {\n        if\
    \ let count = dict[item] {\n            dict[item] = count + 1\n        } else\
    \ {\n            dict[item] = 1\n        }\n    }\n    return dict", "    var\
    \ dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for str in array {\n        if let count = dict[str] {\n          \
    \  dict[str] = count + 1\n        } else {\n            dict[str] = 1\n      \
    \  }\n    }\n    return dict", "    var dict = [String : Int]()\n    let arr =\
    \ test.componentsSeparatedByString(\" \")\n    for i in arr {\n        if dict[i]\
    \ == nil {\n            dict[i] = 1\n        } else {\n            dict[i] = dict[i]!\
    \ + 1\n        }\n    }\n    return dict", "    var result = [String : Int]()\n\
    \    let letters = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ letters {\n        if result[letter] == nil {\n            result[letter] =\
    \ 1\n        } else {\n            result[letter]! += 1\n        }\n    }\n  \
    \  return result", "    var dict = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if dict[letter] == nil {\n       \
    \     dict[letter] = 1\n        } else {\n            dict[letter]! += 1\n   \
    \     }\n    }\n    return dict", "    var dict = [String : Int]()\n    let letters\
    \ = test.componentsSeparatedByString(\" \")\n    for letter in letters {\n   \
    \     if let count = dict[letter] {\n            dict[letter] = count + 1\n  \
    \      } else {\n            dict[letter] = 1\n        }\n    }\n    return dict",
  "    var result = [String : Int]()\n    let words = test.componentsSeparatedByString(\"\
    \ \")\n    for word in words {\n        if let count = result[word] {\n      \
    \      result[word] = count + 1\n        } else {\n            result[word] =\
    \ 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for i in array {\n\
    \        if dict[i] == nil {\n            dict[i] = 1\n        } else {\n    \
    \        dict[i] = dict[i]! + 1\n        }\n    }\n    return dict", "    var\
    \ result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if result[letter] == nil {\n     \
    \       result[letter] = 1\n        } else {\n            result[letter]! += 1\n\
    \        }\n    }\n    return result", "    var result = [String : Int]()\n  \
    \  let letters = test.characters.split(\" \").map(String.init)\n    for letter\
    \ in letters {\n        if let count = result[letter] {\n            result[letter]\
    \ = count + 1\n        } else {\n            result[letter] = 1\n        }\n \
    \   }\n    return result", "    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    var counts = [String : Int]()\n    for letter in letters {\n      \
    \  if counts[letter] == nil {\n            counts[letter] = 1\n        } else\
    \ {\n            counts[letter]! += 1\n        }\n    }\n    return counts", " \
    \   var dict: [String : Int] = [:]\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = dict[letter] {\n  \
    \          dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let letters = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ letters {\n        if let count = dict[letter] {\n            dict[letter] =\
    \ count + 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n\
    \    return dict", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for i in array {\n        if dict[i] == nil {\n            dict[i]\
    \ = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    let letters = test.componentsSeparatedByString(\" \")\n\
    \    var histogram = [String : Int]()\n    for letter in letters {\n        if\
    \ let count = histogram[letter] {\n            histogram[letter] = count + 1\n\
    \        } else {\n            histogram[letter] = 1\n        }\n    }\n    return\
    \ histogram", "    let words = test.componentsSeparatedByString(\" \")\n    var\
    \ dict = [String : Int]()\n    for word in words {\n        if let count = dict[word]\
    \ {\n            dict[word] = count + 1\n        } else {\n            dict[word]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for item in array\
    \ {\n        if let count = dict[item] {\n            dict[item] = count + 1\n\
    \        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var dict = [String : Int]()\n    let array\
    \ = test.componentsSeparatedByString(\" \")\n    for item in array {\n       \
    \ if let count = dict[item] {\n            dict[item] = count + 1\n        } else\
    \ {\n            dict[item] = 1\n        }\n    }\n    return dict", "    var\
    \ result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var histogram = [String : Int]()\n\
    \    let words = test.componentsSeparatedByString(\" \")\n    for word in words\
    \ {\n        if let count = histogram[word] {\n            histogram[word] = count\
    \ + 1\n        } else {\n            histogram[word] = 1\n        }\n    }\n \
    \   return histogram", "    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    var histogram = [String : Int]()\n    for letter in letters {\n   \
    \     if let count = histogram[letter] {\n            histogram[letter] = count\
    \ + 1\n        } else {\n            histogram[letter] = 1\n        }\n    }\n\
    \    return histogram", "    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    var histo = [String : Int]()\n    for letter in letters {\n       \
    \ if let count = histo[letter] {\n            histo[letter] = count + 1\n    \
    \    } else {\n            histo[letter] = 1\n        }\n    }\n    return histo",
  "    var result = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if result[item] == nil {\n           \
    \ result[item] = 1\n        } else {\n            result[item]! += 1\n       \
    \ }\n    }\n    return result", "    var result = [String : Int]()\n    let letters\
    \ = test.characters.split{$0 == \" \"}.map(String.init)\n    for letter in letters\
    \ {\n        if result[letter] == nil {\n            result[letter] = 1\n    \
    \    } else {\n            result[letter]! += 1\n        }\n    }\n    return\
    \ result", "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var dict = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = dict[letter] {\n  \
    \          dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var result = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for item in array\
    \ {\n        if let count = result[item] {\n            result[item] = count +\
    \ 1\n        } else {\n            result[item] = 1\n        }\n    }\n    return\
    \ result", "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for i in array {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var result = [String : Int]()\n    var maxCount = 0\n \
    \   var maxLetter = \"\"\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n        if result[letter] > maxCount {\n            maxCount\
    \ = result[letter]!\n            maxLetter = letter\n        }\n    }\n    return\
    \ result", "    let letters = test.componentsSeparatedByString(\" \")\n    var\
    \ histogram = [String : Int]()\n    for letter in letters {\n        if let count\
    \ = histogram[letter] {\n            histogram[letter] = count + 1\n        }\
    \ else {\n            histogram[letter] = 1\n        }\n    }\n    return histogram",
  "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in array {\n        if let count = dict[letter] {\n    \
    \        dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    let letters = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ letters {\n        if let count = dict[letter] {\n            dict[letter] =\
    \ count + 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n\
    \    return dict", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var dict = [String : Int]()\n    let arr\
    \ = test.componentsSeparatedByString(\" \")\n    for i in arr {\n        if let\
    \ count = dict[i] {\n            dict[i] = count + 1\n        } else {\n     \
    \       dict[i] = 1\n        }\n    }\n    return dict", "    var dict = [String\
    \ : Int]()\n    let array = test.componentsSeparatedByString(\" \")\n    for letter\
    \ in array {\n        if let count = dict[letter] {\n            dict[letter]\
    \ = count + 1\n        } else {\n            dict[letter] = 1\n        }\n   \
    \ }\n    return dict", "    var histogram = [String : Int]()\n    let letters\
    \ = test.componentsSeparatedByString(\" \")\n    for letter in letters {\n   \
    \     if let count = histogram[letter] {\n            histogram[letter] = count\
    \ + 1\n        } else {\n            histogram[letter] = 1\n        }\n    }\n\
    \    return histogram", "    var result = [String : Int]()\n    let letters =\
    \ test.componentsSeparatedByString(\" \")\n    for letter in letters {\n     \
    \   if let count = result[letter] {\n            result[letter] = count + 1\n\
    \        } else {\n            result[letter] = 1\n        }\n    }\n    return\
    \ result", "    var dict = [String : Int]()\n    for c in test.characters {\n\
    \        if let count = dict[String(c)] {\n            dict[String(c)] = count\
    \ + 1\n        } else {\n            dict[String(c)] = 1\n        }\n    }\n \
    \   return dict", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var result = [String : Int]()\n    let\
    \ letters = test.componentsSeparatedByString(\" \")\n    for letter in letters\
    \ {\n        if let count = result[letter] {\n            result[letter] = count\
    \ + 1\n        } else {\n            result[letter] = 1\n        }\n    }\n  \
    \  return result", "    let letters = test.componentsSeparatedByString(\" \")\n\
    \    var histogram = [String : Int]()\n    for letter in letters {\n        if\
    \ let count = histogram[letter] {\n            histogram[letter] = count + 1\n\
    \        } else {\n            histogram[letter] = 1\n        }\n    }\n    return\
    \ histogram", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in array {\n        if let count = dict[letter] {\n    \
    \        dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var dict = [String : Int]()\n\
    \    var max = 0\n    for letter in test.characters {\n        let str = String(letter)\n\
    \        if let count = dict[str] {\n            dict[str] = count + 1\n     \
    \       if count + 1 > max {\n                max = count + 1\n            }\n\
    \        } else {\n            dict[str] = 1\n            if 1 > max {\n     \
    \           max = 1\n            }\n        }\n    }\n    var result = [String\
    \ : Int]()\n    for (key, value) in dict {\n        if value == max {\n      \
    \      result[key] = value\n        }\n    }\n    return result", "    var result\
    \ = [String : Int]()\n    let letters = test.componentsSeparatedByString(\" \"\
    )\n    for letter in letters {\n        if let count = result[letter] {\n    \
    \        result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var result = [String : Int]()\n\
    \    let letters = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ letters {\n        if result[letter] == nil {\n            result[letter] =\
    \ 1\n        } else {\n            result[letter]! += 1\n        }\n    }\n  \
    \  return result", "    var result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var result = [String : Int]()\n\
    \    let letters = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ letters {\n        if let count = result[letter] {\n            result[letter]\
    \ = count + 1\n        } else {\n            result[letter] = 1\n        }\n \
    \   }\n    return result", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for i in array {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] =\
    \ 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    var histogram = [String : Int]()\n    let words = test.componentsSeparatedByString(\"\
    \ \")\n    for word in words {\n        if let count = histogram[word] {\n   \
    \         histogram[word] = count + 1\n        } else {\n            histogram[word]\
    \ = 1\n        }\n    }\n    return histogram", "    var result = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for item in array\
    \ {\n        if let count = result[item] {\n            result[item] = count +\
    \ 1\n        } else {\n            result[item] = 1\n        }\n    }\n    return\
    \ result", "    var result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for i in array {\n\
    \        if let count = dict[i] {\n            dict[i] = count + 1\n        }\
    \ else {\n            dict[i] = 1\n        }\n    }\n    return dict", "    var\
    \ dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var result = [String : Int]()\n    let\
    \ array = test.componentsSeparatedByString(\" \")\n    for letter in array {\n\
    \        if let count = result[letter] {\n            result[letter] = count +\
    \ 1\n        } else {\n            result[letter] = 1\n        }\n    }\n    return\
    \ result", "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    let letters = test.componentsSeparatedByString(\" \")\n\
    \    var dict = [String : Int]()\n    for letter in letters {\n        if let\
    \ count = dict[letter] {\n            dict[letter] = count + 1\n        } else\
    \ {\n            dict[letter] = 1\n        }\n    }\n    return dict", "    var\
    \ result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for item in array\
    \ {\n        if let count = dict[item] {\n            dict[item] = count + 1\n\
    \        } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for i in array {\n        if dict[i] == nil {\n            dict[i]\
    \ = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    var result: [String : Int] = [:]\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for i in array {\n\
    \        if let count = dict[i] {\n            dict[i] = count + 1\n        }\
    \ else {\n            dict[i] = 1\n        }\n    }\n    return dict", "    var\
    \ dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var dict = [String : Int]()\n    let arr\
    \ = test.componentsSeparatedByString(\" \")\n    for i in arr {\n        if let\
    \ count = dict[i] {\n            dict[i] = count + 1\n        } else {\n     \
    \       dict[i] = 1\n        }\n    }\n    return dict", "    var result = [String\
    \ : Int]()\n    let letters = test.componentsSeparatedByString(\" \")\n    for\
    \ letter in letters {\n        if let count = result[letter] {\n            result[letter]\
    \ = count + 1\n        } else {\n            result[letter] = 1\n        }\n \
    \   }\n    return result", "    var dict = [String : Int]()\n    let words = test.componentsSeparatedByString(\"\
    \ \")\n    for word in words {\n        if let count = dict[word] {\n        \
    \    dict[word] = count + 1\n        } else {\n            dict[word] = 1\n  \
    \      }\n    }\n    return dict", "    var dict = [String : Int]()\n    let arr\
    \ = test.componentsSeparatedByString(\" \")\n    for item in arr {\n        if\
    \ let count = dict[item] {\n            dict[item] = count + 1\n        } else\
    \ {\n            dict[item] = 1\n        }\n    }\n    return dict", "    var\
    \ dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for i in array {\n        if dict[i] == nil {\n            dict[i]\
    \ = 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    let letters = test.componentsSeparatedByString(\" \")\n\
    \    var dict = [String : Int]()\n    for letter in letters {\n        if let\
    \ count = dict[letter] {\n            dict[letter] = count + 1\n        } else\
    \ {\n            dict[letter] = 1\n        }\n    }\n    return dict", "    var\
    \ histogram = [String : Int]()\n    let words = test.componentsSeparatedByString(\"\
    \ \")\n    for word in words {\n        if let count = histogram[word] {\n   \
    \         histogram[word] = count + 1\n        } else {\n            histogram[word]\
    \ = 1\n        }\n    }\n    return histogram", "    var dict = [String : Int]()\n\
    \    let letters = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ letters {\n        if let count = dict[letter] {\n            dict[letter] =\
    \ count + 1\n        } else {\n            dict[letter] = 1\n        }\n    }\n\
    \    return dict", "    var result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let arr = test.componentsSeparatedByString(\" \")\n    for item in arr {\n\
    \        if let count = dict[item] {\n            dict[item] = count + 1\n   \
    \     } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var result = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if result[item] == nil {\n           \
    \ result[item] = 1\n        } else {\n            result[item]! += 1\n       \
    \ }\n    }\n    return result", "    var result = [String : Int]()\n    let letters\
    \ = test.componentsSeparatedByString(\" \")\n    for letter in letters {\n   \
    \     if let count = result[letter] {\n            result[letter] = count + 1\n\
    \        } else {\n            result[letter] = 1\n        }\n    }\n    return\
    \ result", "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] =\
    \ 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    let letters = test.componentsSeparatedByString(\" \")\n\
    \    var histogram = [String : Int]()\n    for letter in letters {\n        if\
    \ let count = histogram[letter] {\n            histogram[letter] = count + 1\n\
    \        } else {\n            histogram[letter] = 1\n        }\n    }\n    return\
    \ histogram", "    var result = [String : Int]()\n    var maxCount = 0\n    var\
    \ maxLetter = \"\"\n    for letter in test.characters {\n        if let count\
    \ = result[String(letter)] {\n            result[String(letter)] = count + 1\n\
    \            if count + 1 > maxCount {\n                maxCount = count + 1\n\
    \                maxLetter = String(letter)\n            }\n        } else {\n\
    \            result[String(letter)] = 1\n        }\n    }\n    return result",
  "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for item in arr {\n        if let count = dict[item] {\n          \
    \  dict[item] = count + 1\n        } else {\n            dict[item] = 1\n    \
    \    }\n    }\n    return dict", "    var result = [String : Int]()\n    let letters\
    \ = test.componentsSeparatedByString(\" \")\n    for letter in letters {\n   \
    \     if result[letter] == nil {\n            result[letter] = 1\n        } else\
    \ {\n            result[letter]! += 1\n        }\n    }\n    return result", " \
    \   var result = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = result[letter] {\n\
    \            result[letter] = count + 1\n        } else {\n            result[letter]\
    \ = 1\n        }\n    }\n    return result", "    var dict = [String : Int]()\n\
    \    let arr = test.componentsSeparatedByString(\" \")\n    for item in arr {\n\
    \        if let value = dict[item] {\n            dict[item] = value + 1\n   \
    \     } else {\n            dict[item] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if dict[item] == nil {\n            dict[item]\
    \ = 1\n        } else {\n            dict[item]! += 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var dict = [String : Int]()\n    let array\
    \ = test.componentsSeparatedByString(\" \")\n    for i in array {\n        if\
    \ let count = dict[i] {\n            dict[i] = count + 1\n        } else {\n \
    \           dict[i] = 1\n        }\n    }\n    return dict", "    var dict = [String\
    \ : Int]()\n    let arr = test.componentsSeparatedByString(\" \")\n    for i in\
    \ arr {\n        if let count = dict[i] {\n            dict[i] = count + 1\n \
    \       } else {\n            dict[i] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for i in array {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    var result = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if result[item] == nil {\n           \
    \ result[item] = 1\n        } else {\n            result[item]! += 1\n       \
    \ }\n    }\n    return result", "    var result = [String : Int]()\n    let letters\
    \ = test.componentsSeparatedByString(\" \")\n    for letter in letters {\n   \
    \     if let count = result[letter] {\n            result[letter] = count + 1\n\
    \        } else {\n            result[letter] = 1\n        }\n    }\n    return\
    \ result", "    var dict = [String : Int]()\n    for char in test.characters {\n\
    \        if let count = dict[String(char)] {\n            dict[String(char)] =\
    \ count + 1\n        } else {\n            dict[String(char)] = 1\n        }\n\
    \    }\n    return dict", "    let array = test.componentsSeparatedByString(\"\
    \ \")\n    var dict = [String : Int]()\n    for item in array {\n        if let\
    \ count = dict[item] {\n            dict[item] = count + 1\n        } else {\n\
    \            dict[item] = 1\n        }\n    }\n    return dict", "    var dict\
    \ = [String : Int]()\n    let array = test.componentsSeparatedByString(\" \")\n\
    \    for str in array {\n        if let count = dict[str] {\n            dict[str]\
    \ = count + 1\n        } else {\n            dict[str] = 1\n        }\n    }\n\
    \    return dict", "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if let count = dict[i] {\n            dict[i]\
    \ = count + 1\n        } else {\n            dict[i] = 1\n        }\n    }\n \
    \   return dict", "    let letters = test.componentsSeparatedByString(\" \")\n\
    \    var histogram = [String : Int]()\n    for letter in letters {\n        if\
    \ let count = histogram[letter] {\n            histogram[letter] = count + 1\n\
    \        } else {\n            histogram[letter] = 1\n        }\n    }\n    return\
    \ histogram", "    var dict = [String : Int]()\n    let letters = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in letters {\n        if let count = dict[letter] {\n  \
    \          dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var result = [String : Int]()\n\
    \    let letters = test.componentsSeparatedByString(\" \")\n    for letter in\
    \ letters {\n        if let count = result[letter] {\n            result[letter]\
    \ = count + 1\n        } else {\n            result[letter] = 1\n        }\n \
    \   }\n    return result", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var histogram = [String : Int]()\n   \
    \ let letters = test.componentsSeparatedByString(\" \")\n    for letter in letters\
    \ {\n        if let count = histogram[letter] {\n            histogram[letter]\
    \ = count + 1\n        } else {\n            histogram[letter] = 1\n        }\n\
    \    }\n    return histogram", "    var dict = [String : Int]()\n    let array\
    \ = test.componentsSeparatedByString(\" \")\n    for i in array {\n        if\
    \ dict[i] == nil {\n            dict[i] = 1\n        } else {\n            dict[i]\
    \ = dict[i]! + 1\n        }\n    }\n    return dict", "    var result = [String\
    \ : Int]()\n    let letters = test.componentsSeparatedByString(\" \")\n    for\
    \ letter in letters {\n        if let count = result[letter] {\n            result[letter]\
    \ = count + 1\n        } else {\n            result[letter] = 1\n        }\n \
    \   }\n    return result", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var dict = [String : Int]()\n    let array\
    \ = test.componentsSeparatedByString(\" \")\n    for item in array {\n       \
    \ if let count = dict[item] {\n            dict[item] = count + 1\n        } else\
    \ {\n            dict[item] = 1\n        }\n    }\n    return dict", "    var\
    \ dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for letter in array {\n        if let count = dict[letter] {\n    \
    \        dict[letter] = count + 1\n        } else {\n            dict[letter]\
    \ = 1\n        }\n    }\n    return dict", "    var result = [String : Int]()\n\
    \    var letters = [String]()\n    var count = [Int]()\n    var letter = \"\"\n\
    \    var max = 0\n    var maxCount = 0\n    var index = 0\n    var indexMax =\
    \ 0\n    for i in test.characters {\n        if i != \" \" {\n            letter\
    \ += String(i)\n        } else {\n            letters.append(letter)\n       \
    \     letter = \"\"\n        }\n    }\n    letters.append(letter)\n    for i in\
    \ letters {\n        count.append(letters.filter{$0 == i}.count)\n    }\n    for\
    \ i in count {\n        if i > max {\n            max = i\n        }\n    }\n\
    \    for i in count {\n        if i == max {\n            maxCount += 1\n    \
    \    }\n    }\n    for i in 0..<maxCount {\n        for j in 0..<count.count {\n\
    \            if count[j] == max {\n                indexMax = j\n            \
    \    break\n            }\n        }\n        result[letters[indexMax]] = count[indexMax]\n\
    \        count[indexMax] = 0\n    }\n    return result", "    var dict = [String\
    \ : Int]()\n    let array = test.componentsSeparatedByString(\" \")\n    for item\
    \ in array {\n        if let count = dict[item] {\n            dict[item] = count\
    \ + 1\n        } else {\n            dict[item] = 1\n        }\n    }\n    return\
    \ dict", "    var dict = [String : Int]()\n    let array = test.componentsSeparatedByString(\"\
    \ \")\n    for item in array {\n        if let count = dict[item] {\n        \
    \    dict[item] = count + 1\n        } else {\n            dict[item] = 1\n  \
    \      }\n    }\n    return dict", "    var histogram = [String : Int]()\n   \
    \ let letters = test.componentsSeparatedByString(\" \")\n    for letter in letters\
    \ {\n        if let count = histogram[letter] {\n            histogram[letter]\
    \ = count + 1\n        } else {\n            histogram[letter] = 1\n        }\n\
    \    }\n    return histogram", "    var dict = [String : Int]()\n    let array\
    \ = test.componentsSeparatedByString(\" \")\n    for letter in array {\n     \
    \   if let count = dict[letter] {\n            dict[letter] = count + 1\n    \
    \    } else {\n            dict[letter] = 1\n        }\n    }\n    return dict",
  "    var dict = [String : Int]()\n    let arr = test.componentsSeparatedByString(\"\
    \ \")\n    for i in arr {\n        if dict[i] == nil {\n            dict[i] =\
    \ 1\n        } else {\n            dict[i] = dict[i]! + 1\n        }\n    }\n\
    \    return dict", "    var result = [String : Int]()\n    let words = test.componentsSeparatedByString(\"\
    \ \")\n    for word in words {\n        if let count = result[word] {\n      \
    \      result[word] = count + 1\n        } else {\n            result[word] =\
    \ 1\n        }\n    }\n    return result", "    var result = [String : Int]()\n\
    \    let array = test.componentsSeparatedByString(\" \")\n    for letter in array\
    \ {\n        if let count = result[letter] {\n            result[letter] = count\
    \ + 1\n        } else {\n            result[letter] = 1\n        }\n    }\n  \
    \  return result", "    let letters = test.componentsSeparatedByString(\" \")\n\
    \    var histogram = [String : Int]()\n    for letter in letters {\n        if\
    \ let count = histogram[letter] {\n            histogram[letter] = count + 1\n\
    \        } else {\n            histogram[letter] = 1\n        }\n    }\n    return\
    \ histogram"]
stop_tokens:
- "\n}"

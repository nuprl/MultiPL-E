name: HumanEval_105_by_length
language: swift
prompt: "\n/// Given an array of integers, sort the integers that are between 1 and\
  \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
  \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
  , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// arr = [2, 1, 1,\
  \ 4, 5, 8, 2, 3]   \n/// -> sort arr -> [1, 1, 2, 2, 3, 4, 5, 8] \n/// -> reverse\
  \ arr -> [8, 5, 4, 3, 2, 2, 1, 1]\n/// return [\"Eight\", \"Five\", \"Four\", \"\
  Three\", \"Two\", \"Two\", \"One\", \"One\"]\n/// If the array is empty, return\
  \ an empty array:\n/// arr = []\n/// return []\n/// If the array has any strange\
  \ number ignore it:\n/// arr = [1, -1 , 55] \n/// -> sort arr -> [-1, 1, 55]\n///\
  \ -> reverse arr -> [55, 1, -1]\n/// return = ['One']\nfunc by_length(arr: [Int])\
  \ -> [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(by_length(arr: [2, 1, 1, 4, 5, 8, 2, 3])\
  \ == [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"\
  ])\nassert(by_length(arr: [] as [Int]) == [] as [String])\nassert(by_length(arr:\
  \ [1, -1, 55]) == [\"One\"])\nassert(by_length(arr: [1, -1, 3, 2]) == [\"Three\"\
  , \"Two\", \"One\"])\nassert(by_length(arr: [9, 4, 8]) == [\"Nine\", \"Eight\",\
  \ \"Four\"])"
completions: ["    var result = [String]()\n    let sortedArr = arr.sorted()\n   \
    \ let reversedArr = sortedArr.reversed()\n    for num in reversedArr {\n     \
    \   switch num {\n        case 1:\n            result.append(\"One\")\n      \
    \  case 2:\n            result.append(\"Two\")\n        case 3:\n            result.append(\"\
    Three\")\n        case 4:\n            result.append(\"Four\")\n        case 5:\n\
    \            result.append(\"Five\")\n        case 6:\n            result.append(\"\
    Six\")\n        case 7:\n            result.append(\"Seven\")\n        case 8:\n\
    \            result.append(\"Eight\")\n        case 9:\n            result.append(\"\
    Nine\")\n        default:\n            break\n        }\n    }\n    return result",
  "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n    let reversed =\
    \ sorted.reversed()\n    let mapped = reversed.map { String($0) }\n    return\
    \ mapped", "    var result = [String]()\n    let sortedArr = arr.sorted()\n  \
    \  let reversedArr = sortedArr.reversed()\n    for num in reversedArr {\n    \
    \    switch num {\n        case 1:\n            result.append(\"One\")\n     \
    \   case 2:\n            result.append(\"Two\")\n        case 3:\n           \
    \ result.append(\"Three\")\n        case 4:\n            result.append(\"Four\"\
    )\n        case 5:\n            result.append(\"Five\")\n        case 6:\n   \
    \         result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    return result", "    let sorted = arr.filter { $0 >= 1\
    \ && $0 <= 9 }.sorted()\n    let reversed = sorted.reversed()\n    let mapped\
    \ = reversed.map { String($0) }\n    return mapped", "    var result = [String]()\n\
    \    var sorted = arr.filter({$0 >= 1 && $0 <= 9}).sorted()\n    sorted.reverse()\n\
    \    for i in sorted {\n        switch i {\n        case 1:\n            result.append(\"\
    One\")\n        case 2:\n            result.append(\"Two\")\n        case 3:\n\
    \            result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    return result", "    var result = [String]()\n    for i\
    \ in arr {\n        if i == 1 {\n            result.append(\"One\")\n        }\
    \ else if i == 2 {\n            result.append(\"Two\")\n        } else if i ==\
    \ 3 {\n            result.append(\"Three\")\n        } else if i == 4 {\n    \
    \        result.append(\"Four\")\n        } else if i == 5 {\n            result.append(\"\
    Five\")\n        } else if i == 6 {\n            result.append(\"Six\")\n    \
    \    } else if i == 7 {\n            result.append(\"Seven\")\n        } else\
    \ if i == 8 {\n            result.append(\"Eight\")\n        } else if i == 9\
    \ {\n            result.append(\"Nine\")\n        }\n    }\n    return result",
  "    let sorted = arr.filter({ $0 >= 1 && $0 <= 9 }).sorted()\n    let reversed\
    \ = sorted.reversed()\n    return reversed.map({ String($0) })", "    var result:\
    \ [String] = []\n    var sortedArr = arr.filter{$0 > 0 && $0 < 10}.sorted()\n\
    \    sortedArr.reverse()\n    for i in sortedArr {\n        switch i {\n     \
    \   case 1:\n            result.append(\"One\")\n        case 2:\n           \
    \ result.append(\"Two\")\n        case 3:\n            result.append(\"Three\"\
    )\n        case 4:\n            result.append(\"Four\")\n        case 5:\n   \
    \         result.append(\"Five\")\n        case 6:\n            result.append(\"\
    Six\")\n        case 7:\n            result.append(\"Seven\")\n        case 8:\n\
    \            result.append(\"Eight\")\n        case 9:\n            result.append(\"\
    Nine\")\n        default:\n            break\n        }\n    }\n    return result",
  "    var result: [String] = []\n    var sortedArr = arr.filter { $0 >= 1 && $0 <=\
    \ 9 }.sorted()\n    sortedArr.reverse()\n    for num in sortedArr {\n        switch\
    \ num {\n        case 1:\n            result.append(\"One\")\n        case 2:\n\
    \            result.append(\"Two\")\n        case 3:\n            result.append(\"\
    Three\")\n        case 4:\n            result.append(\"Four\")\n        case 5:\n\
    \            result.append(\"Five\")\n        case 6:\n            result.append(\"\
    Six\")\n        case 7:\n            result.append(\"Seven\")\n        case 8:\n\
    \            result.append(\"Eight\")\n        case 9:\n            result.append(\"\
    Nine\")\n        default:\n            break\n        }\n    }\n    return result",
  "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n    let reversed =\
    \ sorted.reversed()\n    return reversed.map {\n        switch $0 {\n        case\
    \ 1: return \"One\"\n        case 2: return \"Two\"\n        case 3: return \"\
    Three\"\n        case 4: return \"Four\"\n        case 5: return \"Five\"\n  \
    \      case 6: return \"Six\"\n        case 7: return \"Seven\"\n        case\
    \ 8: return \"Eight\"\n        case 9: return \"Nine\"\n        default: return\
    \ \"\"\n        }\n    }", "    let sorted = arr.filter({ $0 >= 1 && $0 <= 9 }).sorted()\n\
    \    let reversed = sorted.reversed()\n    let mapped = reversed.map({ String($0)\
    \ })\n    return mapped", "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n\
    \    let reversed = sorted.reversed()\n    let stringArray = reversed.map { String($0)\
    \ }\n    let result = stringArray.map {\n        switch $0 {\n        case \"\
    1\":\n            return \"One\"\n        case \"2\":\n            return \"Two\"\
    \n        case \"3\":\n            return \"Three\"\n        case \"4\":\n   \
    \         return \"Four\"\n        case \"5\":\n            return \"Five\"\n\
    \        case \"6\":\n            return \"Six\"\n        case \"7\":\n      \
    \      return \"Seven\"\n        case \"8\":\n            return \"Eight\"\n \
    \       case \"9\":\n            return \"Nine\"\n        default:\n         \
    \   return \"\"\n        }\n    }\n    return result", "    var result = [String]()\n\
    \    let sorted = arr.sorted()\n    let reversed = sorted.reversed()\n    for\
    \ i in reversed {\n        switch i {\n        case 1:\n            result.append(\"\
    One\")\n        case 2:\n            result.append(\"Two\")\n        case 3:\n\
    \            result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    return result", "    let sorted = arr.filter { $0 >= 1\
    \ && $0 <= 9 }.sorted()\n    let reversed = sorted.reversed()\n    let result\
    \ = reversed.map { String($0) }\n    return result", "    var result = [String]()\n\
    \    let sorted = arr.sorted(by: <)\n    let reversed = sorted.reversed()\n  \
    \  for i in reversed {\n        switch i {\n        case 1:\n            result.append(\"\
    One\")\n        case 2:\n            result.append(\"Two\")\n        case 3:\n\
    \            result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    return result", "    var result = [String]()\n    let sorted\
    \ = arr.sorted()\n    let reversed = sorted.reversed()\n    for i in reversed\
    \ {\n        switch i {\n        case 1:\n            result.append(\"One\")\n\
    \        case 2:\n            result.append(\"Two\")\n        case 3:\n      \
    \      result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    return result", "    var result = [String]()\n    var sorted\
    \ = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n    sorted.reverse()\n    for\
    \ num in sorted {\n        switch num {\n        case 1:\n            result.append(\"\
    One\")\n        case 2:\n            result.append(\"Two\")\n        case 3:\n\
    \            result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    return result", "    let sorted = arr.filter { $0 > 0 &&\
    \ $0 < 10 }.sorted()\n    let reversed = sorted.reversed()\n    let result = reversed.map\
    \ { String($0) }\n    return result", "    var result = [String]()\n    let sorted\
    \ = arr.sorted()\n    let reversed = sorted.reversed()\n    for i in reversed\
    \ {\n        switch i {\n        case 1:\n            result.append(\"One\")\n\
    \        case 2:\n            result.append(\"Two\")\n        case 3:\n      \
    \      result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    return result", '    return []']
stop_tokens:
- "\n}"

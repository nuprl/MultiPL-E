language: swift
name: HumanEval_84_solve
results:
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n\
    \        sum += n % 2\n        binary = String(n % 2) + binary\n        n /= 2\n\
    \    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplwv7_esw/tmplwv7_esw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af4e1d22c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af4e1a19b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af4e1a19988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af4e1a187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplwv7_esw                        0x000055ee81e79493 <unavailable> + 5267

    5    libc.so.6                          0x00002af4e1f0e460 __libc_start_main +
    245

    6    tmplwv7_esw                        0x000055ee81e790f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplio85hez/tmplio85hez.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f4a090c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f49d87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f49d87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f49d867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplio85hez                        0x0000564add2e0493 <unavailable> + 5267

    5    libc.so.6                          0x00002b1f4a27c460 __libc_start_main +
    245

    6    tmplio85hez                        0x0000564add2e00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n\
    \        let remainder = n % 2\n        sum += remainder\n        binary = String(remainder)\
    \ + binary\n        n /= 2\n    }\n    return String(sum)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpaxf1gfle/tmpaxf1gfle.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c2fa70c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c2f767b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c2f767988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c2f7667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaxf1gfle                        0x00005574bce66493 <unavailable> + 5267

    5    libc.so.6                          0x00002b2c2fc5c460 __libc_start_main +
    245

    6    tmpaxf1gfle                        0x00005574bce660f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary +=\
    \ String(n % 2)\n        n /= 2\n    }\n    return String(binary.reversed())\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpuq7_tlz8/tmpuq7_tlz8.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3810667c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b381035eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b381035e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b381035d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuq7_tlz8                        0x0000559d9788b673 <unavailable> + 5747

    5    libc.so.6                          0x00002b3810853460 __libc_start_main +
    245

    6    tmpuq7_tlz8                        0x0000559d9788b2d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplio85hez/tmplio85hez.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f4a090c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f49d87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f49d87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f49d867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplio85hez                        0x0000564add2e0493 <unavailable> + 5267

    5    libc.so.6                          0x00002b1f4a27c460 __libc_start_main +
    245

    6    tmplio85hez                        0x0000564add2e00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var n = N\n    var result = \"\"\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmcrv6ujq/tmpmcrv6ujq.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf36752c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf36449b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf36449988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf364487b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmcrv6ujq                        0x000055f9c29a4493 <unavailable> + 5267

    5    libc.so.6                          0x00002adf3693e460 __libc_start_main +
    245

    6    tmpmcrv6ujq                        0x000055f9c29a40f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = String(N, radix: 2)\n    var sum = 0\n    for char in binary\
    \ {\n        sum += Int(String(char))!\n    }\n    return String(sum)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpaftzbybz/tmpaftzbybz.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac420e3ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac420b35b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac420b35988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac420b347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaftzbybz                        0x0000564ea6b06693 <unavailable> + 5779

    5    libc.so.6                          0x00002ac42102a460 __libc_start_main +
    245

    6    tmpaftzbybz                        0x0000564ea6b062f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplio85hez/tmplio85hez.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f4a090c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f49d87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f49d87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f49d867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplio85hez                        0x0000564add2e0493 <unavailable> + 5267

    5    libc.so.6                          0x00002b1f4a27c460 __libc_start_main +
    245

    6    tmplio85hez                        0x0000564add2e00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ \"\\(n % 2)\" + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp2e1sdlcz/tmp2e1sdlcz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b37b5bfcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b37b58f3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b37b58f3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b37b58f27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2e1sdlcz                        0x000055bf6ce74623 <unavailable> + 5667

    5    libc.so.6                          0x00002b37b5de8460 __libc_start_main +
    245

    6    tmp2e1sdlcz                        0x000055bf6ce74289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n        result =\
    \ \"\\(N % 2)\" + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp622qhtlm/tmp622qhtlm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85a7bdcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85a78d3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85a78d3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85a78d27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp622qhtlm                        0x000055de9b128623 <unavailable> + 5667

    5    libc.so.6                          0x00002b85a7dc8460 __libc_start_main +
    245

    6    tmp622qhtlm                        0x000055de9b128289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwdsrgfv_/tmpwdsrgfv_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31655d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31652cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31652cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31652ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwdsrgfv_                        0x000055bbca5e7493 <unavailable> + 5267

    5    libc.so.6                          0x00002b31657c0460 __libc_start_main +
    245

    6    tmpwdsrgfv_                        0x000055bbca5e70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   binary = String(number % 2) + binary\n        number /= 2\n    }\n    return\
    \ binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp83jpfzkv/tmp83jpfzkv.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b842e80bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b842e502b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b842e502988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b842e5017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83jpfzkv                        0x0000557736f54493 <unavailable> + 5267

    5    libc.so.6                          0x00002b842e9f7460 __libc_start_main +
    245

    6    tmp83jpfzkv                        0x0000557736f540f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpih7po82l/tmpih7po82l.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ff3747c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ff343eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ff343e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ff343d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpih7po82l                        0x000055c13504d383 <unavailable> + 4995

    5    libc.so.6                          0x00002b7ff3933460 __libc_start_main +
    245

    6    tmpih7po82l                        0x000055c13504cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var n = N\n    var result = \"\"\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpmcrv6ujq/tmpmcrv6ujq.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adf36752c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf36449b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adf36449988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adf364487b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmcrv6ujq                        0x000055f9c29a4493 <unavailable> + 5267

    5    libc.so.6                          0x00002adf3693e460 __libc_start_main +
    245

    6    tmpmcrv6ujq                        0x000055f9c29a40f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplio85hez/tmplio85hez.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f4a090c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f49d87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f49d87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f49d867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplio85hez                        0x0000564add2e0493 <unavailable> + 5267

    5    libc.so.6                          0x00002b1f4a27c460 __libc_start_main +
    245

    6    tmplio85hez                        0x0000564add2e00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ \"\\(n & 1)\" + result\n        n >>= 1\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpo0ew516u/tmpo0ew516u.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0bb6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0bb6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0bb6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0bb6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo0ew516u                        0x000055a6b0b61593 <unavailable> + 5523

    5    libc.so.6                          0x00002b0bb6fa5460 __libc_start_main +
    245

    6    tmpo0ew516u                        0x000055a6b0b611f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplio85hez/tmplio85hez.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f4a090c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f49d87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f49d87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f49d867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplio85hez                        0x0000564add2e0493 <unavailable> + 5267

    5    libc.so.6                          0x00002b1f4a27c460 __libc_start_main +
    245

    6    tmplio85hez                        0x0000564add2e00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ \"\\(n % 2)\" + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp2e1sdlcz/tmp2e1sdlcz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b37b5bfcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b37b58f3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b37b58f3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b37b58f27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2e1sdlcz                        0x000055bf6ce74623 <unavailable> + 5667

    5    libc.so.6                          0x00002b37b5de8460 __libc_start_main +
    245

    6    tmp2e1sdlcz                        0x000055bf6ce74289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ \"\\(n % 2)\" + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp2e1sdlcz/tmp2e1sdlcz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b37b5bfcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b37b58f3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b37b58f3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b37b58f27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2e1sdlcz                        0x000055bf6ce74623 <unavailable> + 5667

    5    libc.so.6                          0x00002b37b5de8460 __libc_start_main +
    245

    6    tmp2e1sdlcz                        0x000055bf6ce74289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binaryString = \"\"\n    var number = N\n    while number > 0 {\n\
    \        binaryString = String(number % 2) + binaryString\n        number /= 2\n\
    \    }\n    return binaryString\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmps0d1p0gd/tmps0d1p0gd.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab338c15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab33890cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab33890c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab33890b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps0d1p0gd                        0x0000557bfbf03493 <unavailable> + 5267

    5    libc.so.6                          0x00002ab338e01460 __libc_start_main +
    245

    6    tmps0d1p0gd                        0x0000557bfbf030f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplio85hez/tmplio85hez.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f4a090c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f49d87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f49d87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f49d867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplio85hez                        0x0000564add2e0493 <unavailable> + 5267

    5    libc.so.6                          0x00002b1f4a27c460 __libc_start_main +
    245

    6    tmplio85hez                        0x0000564add2e00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var num = N\n    while num > 0 {\n        binary\
    \ = String(num % 2) + binary\n        num /= 2\n    }\n    return binary\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpgzhfpnky/tmpgzhfpnky.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afd0d8dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afd0d5d6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afd0d5d6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afd0d5d57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgzhfpnky                        0x00005589541fe493 <unavailable> + 5267

    5    libc.so.6                          0x00002afd0dacb460 __libc_start_main +
    245

    6    tmpgzhfpnky                        0x00005589541fe0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var N = N\n    while N > 0 {\n\
    \        sum += N % 2\n        binary = String(N % 2) + binary\n        N /= 2\n\
    \    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp2g2zqzqv/tmp2g2zqzqv.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b30d2526c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b30d221db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b30d221d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b30d221c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2g2zqzqv                        0x00005606e5567493 <unavailable> + 5267

    5    libc.so.6                          0x00002b30d2712460 __libc_start_main +
    245

    6    tmp2g2zqzqv                        0x00005606e55670f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n\
    \        let remainder = n % 2\n        sum += remainder\n        binary = String(remainder)\
    \ + binary\n        n /= 2\n    }\n    return \"\\(sum)\"\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpkqd4a5tf/tmpkqd4a5tf.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5d93f4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5d90ebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5d90eb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5d90ea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkqd4a5tf                        0x00005568399356f3 <unavailable> + 5875

    5    libc.so.6                          0x00002af5d95e0460 __libc_start_main +
    245

    6    tmpkqd4a5tf                        0x0000556839935359 <unavailable> + 4953

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwdsrgfv_/tmpwdsrgfv_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31655d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31652cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31652cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31652ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwdsrgfv_                        0x000055bbca5e7493 <unavailable> + 5267

    5    libc.so.6                          0x00002b31657c0460 __libc_start_main +
    245

    6    tmpwdsrgfv_                        0x000055bbca5e70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwdsrgfv_/tmpwdsrgfv_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31655d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31652cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31652cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31652ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwdsrgfv_                        0x000055bbca5e7493 <unavailable> + 5267

    5    libc.so.6                          0x00002b31657c0460 __libc_start_main +
    245

    6    tmpwdsrgfv_                        0x000055bbca5e70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplio85hez/tmplio85hez.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f4a090c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f49d87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f49d87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f49d867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplio85hez                        0x0000564add2e0493 <unavailable> + 5267

    5    libc.so.6                          0x00002b1f4a27c460 __libc_start_main +
    245

    6    tmplio85hez                        0x0000564add2e00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n\
    \        sum += n % 2\n        binary = String(n % 2) + binary\n        n /= 2\n\
    \    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplwv7_esw/tmplwv7_esw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af4e1d22c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af4e1a19b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af4e1a19988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af4e1a187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplwv7_esw                        0x000055ee81e79493 <unavailable> + 5267

    5    libc.so.6                          0x00002af4e1f0e460 __libc_start_main +
    245

    6    tmplwv7_esw                        0x000055ee81e790f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n\
    \        sum += n % 2\n        binary = String(n % 2) + binary\n        n /= 2\n\
    \    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplwv7_esw/tmplwv7_esw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af4e1d22c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af4e1a19b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af4e1a19988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af4e1a187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplwv7_esw                        0x000055ee81e79493 <unavailable> + 5267

    5    libc.so.6                          0x00002af4e1f0e460 __libc_start_main +
    245

    6    tmplwv7_esw                        0x000055ee81e790f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ \"\\(n % 2)\" + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxvz539bm/tmpxvz539bm.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34e34c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34e31b9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34e31b9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34e31b87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxvz539bm                        0x0000563aa82b8623 <unavailable> + 5667

    5    libc.so.6                          0x00002b34e36ae460 __libc_start_main +
    245

    6    tmpxvz539bm                        0x0000563aa82b8289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwdsrgfv_/tmpwdsrgfv_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31655d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31652cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31652cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31652ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwdsrgfv_                        0x000055bbca5e7493 <unavailable> + 5267

    5    libc.so.6                          0x00002b31657c0460 __libc_start_main +
    245

    6    tmpwdsrgfv_                        0x000055bbca5e70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = 0\n    var binary = \"\"\n    var n = N\n    while n > 0\
    \ {\n        result += n % 2\n        n /= 2\n    }\n    return String(result)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp12tejah6/tmp12tejah6.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc140ccc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc13dc3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc13dc3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc13dc27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp12tejah6                        0x0000563e35adf433 <unavailable> + 5171

    5    libc.so.6                          0x00002afc142b8460 __libc_start_main +
    245

    6    tmp12tejah6                        0x0000563e35adf099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n\
    \        let remainder = n % 2\n        sum += remainder\n        binary = String(remainder)\
    \ + binary\n        n /= 2\n    }\n    return String(sum)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpaxf1gfle/tmpaxf1gfle.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2c2fa70c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2c2f767b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2c2f767988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2c2f7667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaxf1gfle                        0x00005574bce66493 <unavailable> + 5267

    5    libc.so.6                          0x00002b2c2fc5c460 __libc_start_main +
    245

    6    tmpaxf1gfle                        0x00005574bce660f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwdsrgfv_/tmpwdsrgfv_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31655d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31652cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31652cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31652ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwdsrgfv_                        0x000055bbca5e7493 <unavailable> + 5267

    5    libc.so.6                          0x00002b31657c0460 __libc_start_main +
    245

    6    tmpwdsrgfv_                        0x000055bbca5e70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    return String(N, radix: 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpih7po82l/tmpih7po82l.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ff3747c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ff343eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ff343e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ff343d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpih7po82l                        0x000055c13504d383 <unavailable> + 4995

    5    libc.so.6                          0x00002b7ff3933460 __libc_start_main +
    245

    6    tmpih7po82l                        0x000055c13504cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n\
    \        sum += n % 2\n        binary = \"\\(n % 2)\" + binary\n        n /= 2\n\
    \    }\n    return \"\\(sum)\"\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp_aoomomv/tmp_aoomomv.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aed540e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aed53dd8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aed53dd8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aed53dd77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_aoomomv                        0x00005584490db623 <unavailable> + 5667

    5    libc.so.6                          0x00002aed542cd460 __libc_start_main +
    245

    6    tmp_aoomomv                        0x00005584490db289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n        result =\
    \ \"\\(N % 2)\" + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxcxmeqhd/tmpxcxmeqhd.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b013a4fec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b013a1f5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b013a1f5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b013a1f47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxcxmeqhd                        0x00005575977a4623 <unavailable> + 5667

    5    libc.so.6                          0x00002b013a6ea460 __libc_start_main +
    245

    6    tmpxcxmeqhd                        0x00005575977a4289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    return String(N, radix: 2).characters.reduce(0) { $0 + Int(String($1))!\
    \ }.description\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmpocp8az31.swift:13:32: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(N, radix: 2).characters.reduce(0) { $0\
    \ + Int(String($1))! }.description\n                               ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ \"\\(n % 2)\" + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp2e1sdlcz/tmp2e1sdlcz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b37b5bfcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b37b58f3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b37b58f3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b37b58f27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2e1sdlcz                        0x000055bf6ce74623 <unavailable> + 5667

    5    libc.so.6                          0x00002b37b5de8460 __libc_start_main +
    245

    6    tmp2e1sdlcz                        0x000055bf6ce74289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwdsrgfv_/tmpwdsrgfv_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31655d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31652cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31652cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31652ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwdsrgfv_                        0x000055bbca5e7493 <unavailable> + 5267

    5    libc.so.6                          0x00002b31657c0460 __libc_start_main +
    245

    6    tmpwdsrgfv_                        0x000055bbca5e70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ \"\\(n % 2)\" + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp2e1sdlcz/tmp2e1sdlcz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b37b5bfcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b37b58f3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b37b58f3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b37b58f27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2e1sdlcz                        0x000055bf6ce74623 <unavailable> + 5667

    5    libc.so.6                          0x00002b37b5de8460 __libc_start_main +
    245

    6    tmp2e1sdlcz                        0x000055bf6ce74289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = 0\n    var N = N\n    while N > 0 {\n        result += N\
    \ % 2\n        N /= 2\n    }\n    return String(result)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpuwecj2es/tmpuwecj2es.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7c1a88c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7c177fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7c177f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7c177e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuwecj2es                        0x000055ed08a18433 <unavailable> + 5171

    5    libc.so.6                          0x00002ba7c1c74460 __libc_start_main +
    245

    6    tmpuwecj2es                        0x000055ed08a18099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013881
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var N = N\n    while N > 0 {\n        sum += N % 2\n\
    \        N /= 2\n    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpp0uhp5s1/tmpp0uhp5s1.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd4a677c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd4a36eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd4a36e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd4a36d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpp0uhp5s1                        0x000055fd973b6433 <unavailable> + 5171

    5    libc.so.6                          0x00002acd4a863460 __libc_start_main +
    245

    6    tmpp0uhp5s1                        0x000055fd973b6099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013881
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n\
    \        let digit = n % 2\n        sum += digit\n        binary = \"\\(digit)\"\
    \ + binary\n        n /= 2\n    }\n    return \"\\(sum)\"\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpuwa5to73/tmpuwa5to73.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b66877e4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b66874dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b66874db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66874da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuwa5to73                        0x000055b26b02c623 <unavailable> + 5667

    5    libc.so.6                          0x00002b66879d0460 __libc_start_main +
    245

    6    tmpuwa5to73                        0x000055b26b02c289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013881
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var N = N\n    while N > 0 {\n\
    \        let remainder = N % 2\n        sum += remainder\n        binary = \"\\\
    (remainder)\\(binary)\"\n        N /= 2\n    }\n    return \"\\(sum)\"\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpartcodff/tmpartcodff.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6458488c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b645817fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b645817f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b645817e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpartcodff                        0x0000558bb0415753 <unavailable> + 5971

    5    libc.so.6                          0x00002b6458674460 __libc_start_main +
    245

    6    tmpartcodff                        0x0000558bb04153b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1660013881
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n        result =\
    \ \"\\(N % 2)\" + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxcxmeqhd/tmpxcxmeqhd.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b013a4fec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b013a1f5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b013a1f5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b013a1f47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxcxmeqhd                        0x00005575977a4623 <unavailable> + 5667

    5    libc.so.6                          0x00002b013a6ea460 __libc_start_main +
    245

    6    tmpxcxmeqhd                        0x00005575977a4289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var N = N\n    while N > 0 {\n\
    \        sum += N % 2\n        binary = String(N % 2) + binary\n        N /= 2\n\
    \    }\n    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpihe7njc_/tmpihe7njc_.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba5e36ecc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba5e33e3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba5e33e3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba5e33e27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpihe7njc_                        0x000056417d60d493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba5e38d8460 __libc_start_main +
    245

    6    tmpihe7njc_                        0x000056417d60d0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013881
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   binary = String(number % 2) + binary\n        number /= 2\n    }\n    return\
    \ binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp83jpfzkv/tmp83jpfzkv.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b842e80bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b842e502b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b842e502988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b842e5017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83jpfzkv                        0x0000557736f54493 <unavailable> + 5267

    5    libc.so.6                          0x00002b842e9f7460 __libc_start_main +
    245

    6    tmp83jpfzkv                        0x0000557736f540f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n\
    \        sum += n % 2\n        binary = String(n % 2) + binary\n        n /= 2\n\
    \    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplwv7_esw/tmplwv7_esw.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af4e1d22c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af4e1a19b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af4e1a19988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af4e1a187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplwv7_esw                        0x000055ee81e79493 <unavailable> + 5267

    5    libc.so.6                          0x00002af4e1f0e460 __libc_start_main +
    245

    6    tmplwv7_esw                        0x000055ee81e790f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    return String(N, radix: 2).characters.reduce(0) { $0 + Int(String($1))!\
    \ }.description\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) ==\
    \ \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\n\
    assert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmpocp8az31.swift:13:32: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(N, radix: 2).characters.reduce(0) { $0\
    \ + Int(String($1))! }.description\n                               ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var N = N\n    while N > 0 {\n\
    \        sum += N % 2\n        binary = String(N % 2) + binary\n        N /= 2\n\
    \    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp2g2zqzqv/tmp2g2zqzqv.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b30d2526c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b30d221db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b30d221d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b30d221c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2g2zqzqv                        0x00005606e5567493 <unavailable> + 5267

    5    libc.so.6                          0x00002b30d2712460 __libc_start_main +
    245

    6    tmp2g2zqzqv                        0x00005606e55670f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var N = N\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplio85hez/tmplio85hez.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f4a090c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f49d87b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f49d87988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f49d867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplio85hez                        0x0000564add2e0493 <unavailable> + 5267

    5    libc.so.6                          0x00002b1f4a27c460 __libc_start_main +
    245

    6    tmplio85hez                        0x0000564add2e00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   binary = String(number % 2) + binary\n        number /= 2\n    }\n    return\
    \ binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp83jpfzkv/tmp83jpfzkv.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b842e80bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b842e502b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b842e502988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b842e5017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83jpfzkv                        0x0000557736f54493 <unavailable> + 5267

    5    libc.so.6                          0x00002b842e9f7460 __libc_start_main +
    245

    6    tmp83jpfzkv                        0x0000557736f540f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var N = N\n    var result = \"\"\n    while N > 0 {\n        result =\
    \ String(N % 2) + result\n        N /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpwdsrgfv_/tmpwdsrgfv_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31655d4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31652cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31652cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31652ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwdsrgfv_                        0x000055bbca5e7493 <unavailable> + 5267

    5    libc.so.6                          0x00002b31657c0460 __libc_start_main +
    245

    6    tmpwdsrgfv_                        0x000055bbca5e70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = 0\n    var n = N\n    while n > 0 {\n        result += n\
    \ % 2\n        n /= 2\n    }\n    return String(result)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\"\
    )\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N:\
    \ 963) == \"10010\")"
  status: Exception
  stderr: 'tmpgw65ksl8/tmpgw65ksl8.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0624b7ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0624871b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0624871988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06248707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgw65ksl8                        0x000056370df3f433 <unavailable> + 5171

    5    libc.so.6                          0x00002b0624d66460 __libc_start_main +
    245

    6    tmpgw65ksl8                        0x000056370df3f099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013881
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = \"\\(number % 2)\" + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpzz737t6i/tmpzz737t6i.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9ac822bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9ac7f22b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9ac7f22988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9ac7f217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzz737t6i                        0x0000559ec1e60623 <unavailable> + 5667

    5    libc.so.6                          0x00002b9ac8417460 __libc_start_main +
    245

    6    tmpzz737t6i                        0x0000559ec1e60289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013881
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ \"\\(n % 2)\" + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp2e1sdlcz/tmp2e1sdlcz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b37b5bfcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b37b58f3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b37b58f3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b37b58f27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2e1sdlcz                        0x000055bf6ce74623 <unavailable> + 5667

    5    libc.so.6                          0x00002b37b5de8460 __libc_start_main +
    245

    6    tmp2e1sdlcz                        0x000055bf6ce74289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var n = N\n    while n > 0 {\n        sum += n % 2\n\
    \        n /= 2\n    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmp9ki08t6t/tmp9ki08t6t.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b525d56fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b525d266b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b525d266988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b525d2657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9ki08t6t                        0x000055676a74f433 <unavailable> + 5171

    5    libc.so.6                          0x00002b525d75b460 __libc_start_main +
    245

    6    tmp9ki08t6t                        0x000055676a74f099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013881
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binaryNumber = \"\"\n    var number = N\n    while number > 0 {\n\
    \        binaryNumber = String(number % 2) + binaryNumber\n        number /= 2\n\
    \    }\n    return binaryNumber\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpoidbxbcz/tmpoidbxbcz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7d97c76c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7d9796db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7d9796d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7d9796c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoidbxbcz                        0x0000559545ee0493 <unavailable> + 5267

    5    libc.so.6                          0x00002b7d97e62460 __libc_start_main +
    245

    6    tmpoidbxbcz                        0x0000559545ee00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013881
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    return String(N, radix: 2).reduce(0, {$0 + Int(String($1))!})\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmpcsc6005f.swift:13:32: error: cannot convert return expression of\
    \ type 'Int' to return type 'String'\n    return String(N, radix: 2).reduce(0,\
    \ {$0 + Int(String($1))!})\n           ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013881
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var n = N\n    while n > 0 {\n        sum += n % 2\n\
    \        n /= 2\n    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmp9ki08t6t/tmp9ki08t6t.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b525d56fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b525d266b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b525d266988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b525d2657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9ki08t6t                        0x000055676a74f433 <unavailable> + 5171

    5    libc.so.6                          0x00002b525d75b460 __libc_start_main +
    245

    6    tmp9ki08t6t                        0x000055676a74f099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013881
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binaryString = \"\"\n    var number = N\n    while number > 0 {\n\
    \        binaryString = String(number % 2) + binaryString\n        number /= 2\n\
    \    }\n    return binaryString\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmps0d1p0gd/tmps0d1p0gd.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab338c15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab33890cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab33890c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab33890b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps0d1p0gd                        0x0000557bfbf03493 <unavailable> + 5267

    5    libc.so.6                          0x00002ab338e01460 __libc_start_main +
    245

    6    tmps0d1p0gd                        0x0000557bfbf030f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var binary = \"\"\n    var n = N\n    while n > 0 {\n        binary =\
    \ String(n % 2) + binary\n        n /= 2\n    }\n    return binary\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulmvy2hj/tmpulmvy2hj.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba140e30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba140b27b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba140b27988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba140b267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulmvy2hj                        0x000055fd81258493 <unavailable> + 5267

    5    libc.so.6                          0x00002ba14101c460 __libc_start_main +
    245

    6    tmpulmvy2hj                        0x000055fd812580f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ \"\\(n % 2)\" + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp2e1sdlcz/tmp2e1sdlcz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b37b5bfcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b37b58f3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b37b58f3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b37b58f27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2e1sdlcz                        0x000055bf6ce74623 <unavailable> + 5667

    5    libc.so.6                          0x00002b37b5de8460 __libc_start_main +
    245

    6    tmp2e1sdlcz                        0x000055bf6ce74289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: 1
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var bin = String(N, radix: 2)\n    var sum = 0\n    for c in bin.characters\
    \ {\n        sum += Int(String(c))!\n    }\n    return String(sum)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: SyntaxError
  stderr: "/tmp/tmp2t8nk5o5.swift:15:18: error: 'characters' is unavailable: Please\
    \ use String directly\n    for c in bin.characters {\n                 ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n/tmp/tmp2t8nk5o5.swift:13:9:\
    \ warning: variable 'bin' was never mutated; consider changing to 'let' constant\n\
    \    var bin = String(N, radix: 2)\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var n = N\n    while n > 0 {\n        sum += n % 2\n\
    \        n /= 2\n    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmp9ki08t6t/tmp9ki08t6t.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b525d56fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b525d266b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b525d266988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b525d2657b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9ki08t6t                        0x000055676a74f433 <unavailable> + 5171

    5    libc.so.6                          0x00002b525d75b460 __libc_start_main +
    245

    6    tmp9ki08t6t                        0x000055676a74f099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1660013881
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var sum = 0\n    var binary = \"\"\n    var N = N\n    while N > 0 {\n\
    \        sum += N % 2\n        binary = String(N % 2) + binary\n        N /= 2\n\
    \    }\n    return String(sum)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp2g2zqzqv/tmp2g2zqzqv.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b30d2526c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b30d221db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b30d221d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b30d221c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2g2zqzqv                        0x00005606e5567493 <unavailable> + 5267

    5    libc.so.6                          0x00002b30d2712460 __libc_start_main +
    245

    6    tmp2g2zqzqv                        0x00005606e55670f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var n = N\n    while n > 0 {\n        result =\
    \ String(n % 2) + result\n        n /= 2\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp4zx5_nqi/tmp4zx5_nqi.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13cb591c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13cb288b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13cb288988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13cb2877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4zx5_nqi                        0x000055aa37e52493 <unavailable> + 5267

    5    libc.so.6                          0x00002b13cb77d460 __libc_start_main +
    245

    6    tmp4zx5_nqi                        0x000055aa37e520f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// For N = 1000, the sum of digits will be 1 the output\
    \ should be \"1\".\n/// For N = 150, the sum of digits will be 6 the output should\
    \ be \"110\".\n/// For N = 147, the sum of digits will be 12 the output should\
    \ be \"1100\".\n/// Variables:\n/// @N integer\n/// Constraints: 0 \u2264 N \u2264\
    \ 10000.\n/// Output:\n/// a string of binary number\nfunc solve(N: Int) -> String\
    \ {\n    var result = \"\"\n    var number = N\n    while number > 0 {\n     \
    \   result = String(number % 2) + result\n        number /= 2\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(solve(N: 1000) == \"\
    1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N:\
    \ 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpr0va0h9e/tmpr0va0h9e.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b40a7e03c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b40a7afab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b40a7afa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b40a7af97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr0va0h9e                        0x0000562572bb3493 <unavailable> + 5267

    5    libc.so.6                          0x00002b40a7fef460 __libc_start_main +
    245

    6    tmpr0va0h9e                        0x0000562572bb30f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013880

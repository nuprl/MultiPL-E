name: HumanEval_19_sort_numbers
language: swift
prompt: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
  \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest to\
  \ largest\n/// >>> sort_numbers('three one five')\n/// 'one three five'\nfunc sort_numbers(numbers:\
  \ String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
  \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\") ==\
  \ \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven nine\
  \ eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
  \ \"six five four three two one zero\") == \"zero one two three four five six\")"
completions: ["    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ {\n        let a = Int(String(number_to_int($0)))!\n        let b = Int(String(number_to_int($1)))!\n\
    \        return a < b\n    }\n    return sorted.joined(separator: \" \")", " \
    \   let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"]\n    let numbers = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = numbers.sorted { (lhs, rhs) -> Bool in\n        return\
    \ numberals.index(of: lhs)! < numberals.index(of: rhs)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numeral_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let nums = numbers.components(separatedBy: \" \")\n    let sorted_nums\
    \ = nums.sorted { (num1, num2) -> Bool in\n        return numeral_map[num1]! <\
    \ numeral_map[num2]!\n    }\n    return sorted_nums.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sortedNums\
    \ = nums.sorted { (a, b) -> Bool in\n        return a.count < b.count\n    }\n\
    \    return sortedNums.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numeral_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numeral_list = numbers.components(separatedBy: \" \")\n    let sorted_numbers\
    \ = numeral_list.sorted { (a, b) -> Bool in\n        return numeral_map[a]! <\
    \ numeral_map[b]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\"\
    : 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let\
    \ numbers_array = numbers.components(separatedBy: \" \")\n    let sorted_numbers\
    \ = numbers_array.sorted { (a, b) -> Bool in\n        return number_map[a]! <\
    \ number_map[b]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return a.count < b.count\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num: a) < num_to_int(num:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        return s1\
    \ < s2\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers = numbers.split(separator: \" \")\n    let sorted_numbers\
    \ = numbers.sorted { (a, b) -> Bool in\n        return number_map[String(a)]!\
    \ < number_map[String(b)]!\n    }\n    return sorted_numbers.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.components(separatedBy:\
    \ \" \").sorted { (a, b) -> Bool in\n        return numberals.index(of: a)! <\
    \ numberals.index(of: b)!\n    }\n    return sorted.joined(separator: \" \")",
  "    let numbers_array = numbers.components(separatedBy: \" \")\n    let sorted_numbers\
    \ = numbers_array.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted_numbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num: a) < num_to_int(num:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let numbers = numbers.split(separator:\
    \ \" \")\n    let sortedNumbers = numbers.sorted { (first, second) -> Bool in\n\
    \        return first < second\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let nums_sorted\
    \ = nums.sorted { (s1, s2) -> Bool in\n        let num1 = Int(s1) ?? 0\n     \
    \   let num2 = Int(s2) ?? 0\n        return num1 < num2\n    }\n    return nums_sorted.joined(separator:\
    \ \" \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers_array = numbers.components(separatedBy: \" \")\n    let\
    \ sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n        return number_map[a]!\
    \ < number_map[b]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let numbers = numbers.components(separatedBy: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (first, second) -> Bool in\n        return first < second\n\
    \    }\n    return sortedNumbers.joined(separator: \" \")", "    var nums = numbers.components(separatedBy:\
    \ \" \")\n    nums.sort { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return nums.joined(separator: \" \"\
    )", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3,\
    \ \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\":\
    \ 9]\n    let number_list = numbers.split(separator: \" \")\n    let sorted_list\
    \ = number_list.sorted { (a, b) -> Bool in\n        return number_map[String(a)]!\
    \ < number_map[String(b)]!\n    }\n    return sorted_list.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ {\n        let num1 = Int(word_to_num($0))\n        let num2 = Int(word_to_num($1))\n\
    \        return num1 < num2\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num: a) < num_to_int(num:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let numbers = numbers.split(separator:\
    \ \" \")\n    let sorted = numbers.sorted {\n        switch $0 {\n        case\
    \ \"zero\":\n            return true\n        case \"one\":\n            return\
    \ $1 != \"zero\"\n        case \"two\":\n            return $1 != \"zero\" &&\
    \ $1 != \"one\"\n        case \"three\":\n            return $1 != \"zero\" &&\
    \ $1 != \"one\" && $1 != \"two\"\n        case \"four\":\n            return $1\
    \ != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\"\n        case\
    \ \"five\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\"\n        case \"six\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\"\n        case \"seven\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \ && $1 != \"five\" && $1 != \"six\"\n        case \"eight\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\"\n        case\
    \ \"nine\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1\
    \ != \"seven\" && $1 != \"eight\"\n        default:\n            return false\n\
    \        }\n    }\n    return sorted.joined(separator: \" \")", "    let numeral_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_numbers = numbers_array.sorted\
    \ { (numeral1, numeral2) -> Bool in\n        return numeral_map[numeral1]! < numeral_map[numeral2]!\n\
    \    }\n    return sorted_numbers.joined(separator: \" \")", "    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let nums = numbers.split(separator: \" \")\n    let\
    \ sorted = nums.sorted { (lhs, rhs) -> Bool in\n        return numberals.firstIndex(of:\
    \ String(lhs))! < numberals.firstIndex(of: String(rhs))!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num: a) < num_to_int(num:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let numbers = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNumbers = numbers.sorted { (a, b) -> Bool in\n       \
    \ return number_to_int(number: a) < number_to_int(number: b)\n    }\n    return\
    \ sortedNumbers.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted {\n        return num_to_int($0) < num_to_int($1)\n\
    \    }\n    return sorted.joined(separator: \" \")", "    let numbers = numbers.split(separator:\
    \ \" \")\n    let sorted = numbers.sorted {\n        let a = Int(number_to_digit($0))!\n\
    \        let b = Int(number_to_digit($1))!\n        return a < b\n    }\n    return\
    \ sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let numeral_map = [\"zero\"\
    : 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\":\
    \ 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numeral_array = numbers.split(separator:\
    \ \" \")\n    let numeral_values = numeral_array.map({ numeral_map[String($0)]!\
    \ })\n    let sorted_values = numeral_values.sorted()\n    let sorted_numerals\
    \ = sorted_values.map({ numeral_map.first(where: { $0.value == $1 })!.key })\n\
    \    return sorted_numerals.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ String(a)) < number_to_int(number: String(b))\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numeral_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numeral_array = numbers.components(separatedBy: \" \")\n    let\
    \ numeral_int_array = numeral_array.map { numeral_map[$0]! }\n    let sorted_numeral_int_array\
    \ = numeral_int_array.sorted()\n    let sorted_numeral_array = sorted_numeral_int_array.map\
    \ { numeral_map.first(where: { $0.value == $1 })!.key }\n    return sorted_numeral_array.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num: a) < num_to_int(num:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let numberals =\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.split(separator: \" \").sorted\
    \ { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of: String($1))!\
    \ }\n    return sorted.joined(separator: \" \")", "    let number_map = [\"zero\"\
    : 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\":\
    \ 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let number_array = numbers.components(separatedBy:\
    \ \" \")\n    let sorted_numbers = number_array.sorted { (a, b) -> Bool in\n \
    \       return number_map[a]! < number_map[b]!\n    }\n    return sorted_numbers.joined(separator:\
    \ \" \")", "    let numberMap = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers = numbers.split(separator: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (lhs, rhs) -> Bool in\n        return numberMap[String(lhs)]!\
    \ < numberMap[String(rhs)]!\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num: a) < num_to_int(num:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.components(separatedBy: \" \")\n    let nums_sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n\
    \    return nums_sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted(by: {\n        let a = Int(number_to_numeral($0))\n\
    \        let b = Int(number_to_numeral($1))\n        return a! < b!\n    })\n\
    \    return sorted.joined(separator: \" \")", "    let number_map = [\"zero\"\
    : 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\":\
    \ 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array = numbers.components(separatedBy:\
    \ \" \")\n    let sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n\
    \        return number_map[a]! < number_map[b]!\n    }\n    return sorted_numbers.joined(separator:\
    \ \" \")", "    let numbers = numbers.split(separator: \" \")\n    let sorted\
    \ = numbers.sorted(by: {\n        let a = Int(number_to_int($0))!\n        let\
    \ b = Int(number_to_int($1))!\n        return a < b\n    })\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted {\n        return num_to_int($0) < num_to_int($1)\n    }\n   \
    \ return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted {\n        switch $0 {\n        case \"\
    zero\":\n            return true\n        case \"one\":\n            return $1\
    \ != \"zero\"\n        case \"two\":\n            return $1 != \"zero\" && $1\
    \ != \"one\"\n        case \"three\":\n            return $1 != \"zero\" && $1\
    \ != \"one\" && $1 != \"two\"\n        case \"four\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\"\n        case\
    \ \"five\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\"\n        case \"six\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\"\n        case \"seven\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \ && $1 != \"five\" && $1 != \"six\"\n        case \"eight\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\"\n        case\
    \ \"nine\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1\
    \ != \"seven\" && $1 != \"eight\"\n        default:\n            return false\n\
    \        }\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return num_to_int(a) < num_to_int(b)\n    }\n    return\
    \ sorted.joined(separator: \" \")", "    let nums = numbers.split(separator: \"\
    \ \")\n    let nums_sorted = nums.sorted { (a, b) -> Bool in\n        let a_num\
    \ = num_to_int(num: String(a))\n        let b_num = num_to_int(num: String(b))\n\
    \        return a_num < b_num\n    }\n    return nums_sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted {\n        switch $0 {\n        case \"zero\":\n            return\
    \ true\n        case \"one\":\n            return $1 != \"zero\"\n        case\
    \ \"two\":\n            return $1 != \"zero\" && $1 != \"one\"\n        case \"\
    three\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\n\
    \        case \"four\":\n            return $1 != \"zero\" && $1 != \"one\" &&\
    \ $1 != \"two\" && $1 != \"three\"\n        case \"five\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\"\n        case \"six\":\n            return $1 != \"zero\" && $1 !=\
    \ \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\"\
    \n        case \"seven\":\n            return $1 != \"zero\" && $1 != \"one\"\
    \ && $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1\
    \ != \"six\"\n        case \"eight\":\n            return $1 != \"zero\" && $1\
    \ != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"\
    five\" && $1 != \"six\" && $1 != \"seven\"\n        case \"nine\":\n         \
    \   return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\"\
    \ && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\" && $1\
    \ != \"eight\"\n        default:\n            return false\n        }\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numbers = numbers.split(separator: \" \")\n    let sorted = numbers.sorted\
    \ { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted(by: { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    })\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted(by: {\n        return Int($0)! < Int($1)!\n    })\n    return\
    \ sorted.joined(separator: \" \")", "    let numeral_map = [\"zero\": 0, \"one\"\
    : 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\"\
    : 7, \"eight\": 8, \"nine\": 9]\n    let numeral_array = numbers.components(separatedBy:\
    \ \" \")\n    let numeral_ints = numeral_array.map { numeral_map[$0]! }\n    let\
    \ sorted_ints = numeral_ints.sorted()\n    let sorted_numerals = sorted_ints.map\
    \ { numeral_map.first(where: { $0.value == $1 })!.key }\n    return sorted_numerals.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ {\n        let a = Int(numbers_to_digits[String($0)]!)\n        let b = Int(numbers_to_digits[String($1)]!)\n\
    \        return a < b\n    }\n    return sorted.joined(separator: \" \")", " \
    \   let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ {\n        return num_to_int($0) < num_to_int($1)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted(by: {\n        switch $0 {\n        case \"zero\":\n         \
    \   return true\n        case \"one\":\n            return $1 != \"zero\"\n  \
    \      case \"two\":\n            return $1 != \"zero\" && $1 != \"one\"\n   \
    \     case \"three\":\n            return $1 != \"zero\" && $1 != \"one\" && $1\
    \ != \"two\"\n        case \"four\":\n            return $1 != \"zero\" && $1\
    \ != \"one\" && $1 != \"two\" && $1 != \"three\"\n        case \"five\":\n   \
    \         return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"\
    three\" && $1 != \"four\"\n        case \"six\":\n            return $1 != \"\
    zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \ && $1 != \"five\"\n        case \"seven\":\n            return $1 != \"zero\"\
    \ && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1\
    \ != \"five\" && $1 != \"six\"\n        case \"eight\":\n            return $1\
    \ != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"\
    four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\"\n        case \"\
    nine\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" &&\
    \ $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1 !=\
    \ \"seven\" && $1 != \"eight\"\n        default:\n            return false\n \
    \       }\n    })\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let number_list\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_numbers = number_list.sorted\
    \ { (a, b) -> Bool in\n        return number_map[a]! < number_map[b]!\n    }\n\
    \    return sorted_numbers.joined(separator: \" \")", "    let number_map = [\"\
    zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"\
    six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let number_list = numbers.components(separatedBy:\
    \ \" \")\n    let sorted_list = number_list.sorted { (a, b) -> Bool in\n     \
    \   return number_map[a]! < number_map[b]!\n    }\n    return sorted_list.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let numbersArray = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNumbers = numbersArray.sorted { (a, b) -> Bool in\n  \
    \      return numberals.index(of: a)! < numberals.index(of: b)!\n    }\n    return\
    \ sortedNumbers.joined(separator: \" \")", "    let numeral_map = [\"zero\": 0,\
    \ \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\": 6,\
    \ \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numeral_array = numbers.components(separatedBy:\
    \ \" \")\n    let sorted_numbers = numeral_array.sorted { (numeral1, numeral2)\
    \ -> Bool in\n        return numeral_map[numeral1]! < numeral_map[numeral2]!\n\
    \    }\n    return sorted_numbers.joined(separator: \" \")", "    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let number_array\
    \ = numbers.components(separatedBy: \" \")\n    var number_int_array = [Int]()\n\
    \    for number in number_array {\n        number_int_array.append(number_map[number]!)\n\
    \    }\n    number_int_array.sort()\n    var sorted_number_array = [String]()\n\
    \    for number in number_int_array {\n        for (key, value) in number_map\
    \ {\n            if value == number {\n                sorted_number_array.append(key)\n\
    \            }\n        }\n    }\n    return sorted_number_array.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numberals.index(of:\
    \ a)! < numberals.index(of: b)!\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return num_to_int(a) < num_to_int(b)\n    }\n    return\
    \ sorted.joined(separator: \" \")", "    let nums = numbers.split(separator: \"\
    \ \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        return s1 <\
    \ s2\n    }\n    return sorted.joined(separator: \" \")", "    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let number_array\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_numbers = number_array.sorted\
    \ { (a, b) -> Bool in\n        return number_map[a]! < number_map[b]!\n    }\n\
    \    return sorted_numbers.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numbers = numbers.components(separatedBy: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (a, b) -> Bool in\n        return number_to_int(number: a)\
    \ < number_to_int(number: b)\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted(by: { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n  \
    \  })\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    var nums_int = [Int]()\n\
    \    for num in nums {\n        switch num {\n        case \"zero\":\n       \
    \     nums_int.append(0)\n        case \"one\":\n            nums_int.append(1)\n\
    \        case \"two\":\n            nums_int.append(2)\n        case \"three\"\
    :\n            nums_int.append(3)\n        case \"four\":\n            nums_int.append(4)\n\
    \        case \"five\":\n            nums_int.append(5)\n        case \"six\"\
    :\n            nums_int.append(6)\n        case \"seven\":\n            nums_int.append(7)\n\
    \        case \"eight\":\n            nums_int.append(8)\n        case \"nine\"\
    :\n            nums_int.append(9)\n        default:\n            print(\"Invalid\
    \ input\")\n        }\n    }\n    nums_int.sort()\n    var nums_str = [String]()\n\
    \    for num in nums_int {\n        switch num {\n        case 0:\n          \
    \  nums_str.append(\"zero\")\n        case 1:\n            nums_str.append(\"\
    one\")\n        case 2:\n            nums_str.append(\"two\")\n        case 3:\n\
    \            nums_str.append(\"three\")\n        case 4:\n            nums_str.append(\"\
    four\")\n        case 5:\n            nums_str.append(\"five\")\n        case\
    \ 6:\n            nums_str.append(\"six\")\n        case 7:\n            nums_str.append(\"\
    seven\")\n        case 8:\n            nums_str.append(\"eight\")\n        case\
    \ 9:\n            nums_str.append(\"nine\")\n        default:\n            print(\"\
    Invalid input\")\n        }\n    }\n    return nums_str.joined(separator: \" \"\
    )", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) ->\
    \ Bool in\n        let aNum = numeral_to_number(numeral: String(a))\n        let\
    \ bNum = numeral_to_number(numeral: String(b))\n        return aNum < bNum\n \
    \   }\n    return sorted.joined(separator: \" \")", "    let number_map = [\"\
    zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"\
    six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array = numbers.components(separatedBy:\
    \ \" \")\n    let sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n\
    \        return number_map[a]! < number_map[b]!\n    }\n    return sorted_numbers.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let nums_sorted\
    \ = nums.sorted(by: {\n        let num1 = Int(number_to_numeral[String($0)]!)\n\
    \        let num2 = Int(number_to_numeral[String($1)]!)\n        return num1 <\
    \ num2\n    })\n    return nums_sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numeral_to_number = [\n        \"zero\": 0,\n        \"one\"\
    : 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n     \
    \   \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\"\
    : 8,\n        \"nine\": 9\n    ]\n    let number_to_numeral = [\n        0: \"\
    zero\",\n        1: \"one\",\n        2: \"two\",\n        3: \"three\",\n   \
    \     4: \"four\",\n        5: \"five\",\n        6: \"six\",\n        7: \"seven\"\
    ,\n        8: \"eight\",\n        9: \"nine\"\n    ]\n    let numeral_array =\
    \ numbers.components(separatedBy: \" \")\n    let number_array = numeral_array.map\
    \ { numeral_to_number[$0]! }\n    let sorted_number_array = number_array.sorted()\n\
    \    let sorted_numeral_array = sorted_number_array.map { number_to_numeral[$0]!\
    \ }\n    return sorted_numeral_array.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let nums_int = nums.map { Int(word_to_numeral($0))!\
    \ }\n    let sorted_nums = nums_int.sorted()\n    let sorted_nums_str = sorted_nums.map\
    \ { numeral_to_word($0) }\n    return sorted_nums_str.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let nums_int = nums.map\
    \ { number_to_int($0) }\n    let sorted_nums = nums_int.sorted()\n    let sorted_nums_str\
    \ = sorted_nums.map { int_to_number($0) }\n    return sorted_nums_str.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").sorted { (lhs, rhs) -> Bool in\n        numberals.firstIndex(of: String(lhs))!\
    \ < numberals.firstIndex(of: String(rhs))!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return a.count < b.count\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let number_map = [\"zero\"\
    : 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\":\
    \ 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array = numbers.components(separatedBy:\
    \ \" \")\n    let sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n\
    \        return number_map[a]! < number_map[b]!\n    }\n    return sorted_numbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return a.count < b.count\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let number_map = [\"zero\"\
    : 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\":\
    \ 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let sorted_numbers = numbers.split(separator:\
    \ \" \").map { String($0) }.sorted { number_map[$0]! < number_map[$1]! }\n   \
    \ return sorted_numbers.joined(separator: \" \")", "    let number_map = [\n \
    \       \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    ]\n    let numbers_array\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_numbers = numbers_array.sorted\
    \ { (a, b) -> Bool in\n        return number_map[a]! < number_map[b]!\n    }\n\
    \    return sorted_numbers.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a <\
    \ b\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let nums_sorted = nums.sorted(by: {\n        let num_a = Int(number_to_numeral(number:\
    \ String($0))!)\n        let num_b = Int(number_to_numeral(number: String($1))!)\n\
    \        return num_a < num_b\n    })\n    return nums_sorted.joined(separator:\
    \ \" \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let number_list = numbers.components(separatedBy: \" \")\n    let sorted_list\
    \ = number_list.sorted { (a, b) -> Bool in\n        return number_map[a]! < number_map[b]!\n\
    \    }\n    return sorted_list.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numeral_map = [\n        \"zero\": 0,\n        \"one\": 1,\n\
    \        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"\
    five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n\
    \        \"nine\": 9\n    ]\n    let nums = numbers.components(separatedBy: \"\
    \ \")\n    let sorted_nums = nums.sorted {\n        numeral_map[$0]! < numeral_map[$1]!\n\
    \    }\n    return sorted_nums.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral:\
    \ a) < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted {\n        switch $0 {\n        case \"zero\":\n            return\
    \ true\n        case \"one\":\n            return $1 != \"zero\"\n        case\
    \ \"two\":\n            return $1 != \"zero\" && $1 != \"one\"\n        case \"\
    three\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\n\
    \        case \"four\":\n            return $1 != \"zero\" && $1 != \"one\" &&\
    \ $1 != \"two\" && $1 != \"three\"\n        case \"five\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\"\n        case \"six\":\n            return $1 != \"zero\" && $1 !=\
    \ \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\"\
    \n        case \"seven\":\n            return $1 != \"zero\" && $1 != \"one\"\
    \ && $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1\
    \ != \"six\"\n        case \"eight\":\n            return $1 != \"zero\" && $1\
    \ != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"\
    five\" && $1 != \"six\" && $1 != \"seven\"\n        case \"nine\":\n         \
    \   return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\"\
    \ && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\" && $1\
    \ != \"eight\"\n        default:\n            return false\n        }\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted {\n        return num_to_int($0) < num_to_int($1)\n\
    \    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let nums_sorted = nums.sorted { (a, b) -> Bool in\n        return\
    \ nums_to_int[a]! < nums_to_int[b]!\n    }\n    return nums_sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (s1, s2) -> Bool in\n        return number_to_int(number: s1)\
    \ < number_to_int(number: s2)\n    }\n    return sorted.joined(separator: \" \"\
    )", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let nums_sorted = nums.sorted { (lhs, rhs) -> Bool in\n        return\
    \ lhs < rhs\n    }\n    return nums_sorted.joined(separator: \" \")", "    let\
    \ numeral_map: [String: Int] = [\n        \"zero\": 0,\n        \"one\": 1,\n\
    \        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"\
    five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n\
    \        \"nine\": 9\n    ]\n    let nums = numbers.split(separator: \" \").map\
    \ { String($0) }\n    let sorted_nums = nums.sorted { numeral_map[$0]! < numeral_map[$1]!\
    \ }\n    return sorted_nums.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num: a) < num_to_int(num:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(a)\
    \ < num_to_int(b)\n    }\n    return sorted.joined(separator: \" \")", "    let\
    \ nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ {\n        return num_to_int($0) < num_to_int($1)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return num_to_int(num: String(a)) < num_to_int(num:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let number_array\
    \ = numbers.split(separator: \" \")\n    let sorted_numbers = number_array.sorted\
    \ { (lhs, rhs) -> Bool in\n        return number_map[String(lhs)]! < number_map[String(rhs)]!\n\
    \    }\n    return sorted_numbers.joined(separator: \" \")", "    let number_map\
    \ = [\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n      \
    \  \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\"\
    : 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    ]\n\
    \    let number_list = numbers.components(separatedBy: \" \")\n    let sorted_numbers\
    \ = number_list.sorted { (a, b) -> Bool in\n        return number_map[a]! < number_map[b]!\n\
    \    }\n    return sorted_numbers.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted(by: {\n        let a = Int(String(numbers_to_digits[String($0)]!))!\n\
    \        let b = Int(String(numbers_to_digits[String($1)]!))!\n        return\
    \ a < b\n    })\n    return sorted.joined(separator: \" \")", "    let nums =\
    \ numbers.components(separatedBy: \" \")\n    let nums_sorted = nums.sorted(by:\
    \ {\n        let num_a = convert_numeral_to_number(numeral: $0)\n        let num_b\
    \ = convert_numeral_to_number(numeral: $1)\n        return num_a < num_b\n   \
    \ })\n    return nums_sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numeral_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numeral_list = numbers.components(separatedBy: \" \")\n    let sorted_numbers\
    \ = numeral_list.sorted { (numeral1, numeral2) -> Bool in\n        return numeral_map[numeral1]!\
    \ < numeral_map[numeral2]!\n    }\n    return sorted_numbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) ->\
    \ Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let number_map = [\n        \"zero\": 0,\n        \"one\": 1,\n\
    \        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"\
    five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n\
    \        \"nine\": 9\n    ]\n    let numbers_array = numbers.components(separatedBy:\
    \ \" \")\n    let sorted_numbers = numbers_array.sorted {\n        number_map[$0]!\
    \ < number_map[$1]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\
    \ (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted {\n        switch $0 {\n        case \"zero\":\n            return\
    \ true\n        case \"one\":\n            if $1 == \"zero\" {\n             \
    \   return false\n            }\n            return true\n        case \"two\"\
    :\n            if $1 == \"zero\" || $1 == \"one\" {\n                return false\n\
    \            }\n            return true\n        case \"three\":\n           \
    \ if $1 == \"zero\" || $1 == \"one\" || $1 == \"two\" {\n                return\
    \ false\n            }\n            return true\n        case \"four\":\n    \
    \        if $1 == \"zero\" || $1 == \"one\" || $1 == \"two\" || $1 == \"three\"\
    \ {\n                return false\n            }\n            return true\n  \
    \      case \"five\":\n            if $1 == \"zero\" || $1 == \"one\" || $1 ==\
    \ \"two\" || $1 == \"three\" || $1 == \"four\" {\n                return false\n\
    \            }\n            return true\n        case \"six\":\n            if\
    \ $1 == \"zero\" || $1 == \"one\" || $1 == \"two\" || $1 == \"three\" || $1 ==\
    \ \"four\" || $1 == \"five\" {\n                return false\n            }\n\
    \            return true\n        case \"seven\":\n            if $1 == \"zero\"\
    \ || $1 == \"one\" || $1 == \"two\" || $1 == \"three\" || $1 == \"four\" || $1\
    \ == \"five\" || $1 == \"six\" {\n                return false\n            }\n\
    \            return true\n        case \"eight\":\n            if $1 == \"zero\"\
    \ || $1 == \"one\" || $1 == \"two\" || $1 == \"three\" || $1 == \"four\" || $1\
    \ == \"five\" || $1 == \"six\" || $1 == \"seven\" {\n                return false\n\
    \            }\n            return true\n        case \"nine\":\n            if\
    \ $1 == \"zero\" || $1 == \"one\" || $1 == \"two\" || $1 == \"three\" || $1 ==\
    \ \"four\" || $1 == \"five\" || $1 == \"", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers_array = numbers.components(separatedBy: \" \")\n    let\
    \ sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n        return number_map[a]!\
    \ < number_map[b]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").sorted { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of:\
    \ String($1))! }\n    return sorted.joined(separator: \" \")", "    let nums =\
    \ numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) -> Bool\
    \ in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral: a)\
    \ < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.components(separatedBy:\
    \ \" \").sorted { (a, b) -> Bool in\n        return numberals.index(of: a)! <\
    \ numberals.index(of: b)!\n    }\n    return sorted.joined(separator: \" \")",
  "    let numbers = numbers.components(separatedBy: \" \")\n    let sorted = numbers.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers_array = numbers.components(separatedBy: \" \")\n    let\
    \ sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n        return number_map[a]!\
    \ < number_map[b]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ {\n        let num1 = number_to_int($0)\n        let num2 = number_to_int($1)\n\
    \        return num1 < num2\n    }\n    return sorted.joined(separator: \" \")",
  "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\"\
    : 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let\
    \ numbers_array = numbers.components(separatedBy: \" \")\n    let sorted_numbers\
    \ = numbers_array.sorted { (a, b) -> Bool in\n        return number_map[a]! <\
    \ number_map[b]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let numbersArray = numbers.components(separatedBy: \" \")\n    let sortedNumbers\
    \ = numbersArray.sorted { (a, b) -> Bool in\n        return convert_number(number:\
    \ a) < convert_number(number: b)\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let number_map = [\n        \"zero\": 0,\n        \"one\": 1,\n\
    \        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"\
    five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n\
    \        \"nine\": 9\n    ]\n    let sorted_numbers = numbers.split(separator:\
    \ \" \").map { String($0) }.sorted { number_map[$0]! < number_map[$1]! }\n   \
    \ return sorted_numbers.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").sorted { (a, b) -> Bool in\n        return numberals.firstIndex(of: String(a))!\
    \ < numberals.firstIndex(of: String(b))!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        let aNum = number_to_int(number:\
    \ a)\n        let bNum = number_to_int(number: b)\n        return aNum < bNum\n\
    \    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return num_to_int(num: a) < num_to_int(num: b)\n\
    \    }\n    return sorted.joined(separator: \" \")", "    let number_map = [\"\
    zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"\
    six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let sorted_numbers = numbers.components(separatedBy:\
    \ \" \").sorted { (a, b) -> Bool in\n        return number_map[a]! < number_map[b]!\n\
    \    }\n    return sorted_numbers.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num:\
    \ a) < num_to_int(num: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return numeral_to_int(numeral: a) < numeral_to_int(numeral:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted_nums = nums.sorted { (a, b) -> Bool in\n        return\
    \ number_map[a]! < number_map[b]!\n    }\n    return sorted_nums.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return a < b\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let number_map = [\n        \"zero\": 0,\n        \"one\": 1,\n\
    \        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"\
    five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n\
    \        \"nine\": 9\n    ]\n    let numbers_array = numbers.components(separatedBy:\
    \ \" \")\n    let sorted_numbers = numbers_array.sorted { number_map[$0]! < number_map[$1]!\
    \ }\n    return sorted_numbers.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num: a) < num_to_int(num:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sortedNums\
    \ = nums.sorted { (a, b) -> Bool in\n        return nums.index(of: a)! < nums.index(of:\
    \ b)!\n    }\n    return sortedNums.joined(separator: \" \")", "    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let sorted_numbers\
    \ = numbers.components(separatedBy: \" \").sorted { (a, b) -> Bool in\n      \
    \  return number_map[a]! < number_map[b]!\n    }\n    return sorted_numbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let nums_sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n\
    \    return nums_sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (s1,\
    \ s2) -> Bool in\n        return s1.count < s2.count\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let number_map = [\n        \"zero\": 0,\n        \"one\": 1,\n\
    \        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"\
    five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n\
    \        \"nine\": 9\n    ]\n    let numbers_array = numbers.split(separator:\
    \ \" \")\n    var numbers_int_array = [Int]()\n    for number in numbers_array\
    \ {\n        numbers_int_array.append(number_map[String(number)]!)\n    }\n  \
    \  numbers_int_array.sort()\n    var sorted_numbers = \"\"\n    for number in\
    \ numbers_int_array {\n        sorted_numbers += String(number) + \" \"\n    }\n\
    \    return sorted_numbers", "    let nums = numbers.components(separatedBy: \"\
    \ \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a.count\
    \ < b.count\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return a.count < b.count\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return num_to_int(num: a) < num_to_int(num:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let numberals =\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.components(separatedBy: \" \"\
    ).sorted { (a, b) -> Bool in\n        return numberals.index(of: a)! < numberals.index(of:\
    \ b)!\n    }\n    return sorted.joined(separator: \" \")", "    let numeral_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_numbers = numbers_array.sorted\
    \ { (num1, num2) -> Bool in\n        return numeral_map[num1]! < numeral_map[num2]!\n\
    \    }\n    return sorted_numbers.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted {\n        return num_to_int($0) < num_to_int($1)\n\
    \    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ {\n        let a = Int(number_to_numeral($0))\n        let b = Int(number_to_numeral($1))\n\
    \        return a < b\n    }\n    return sorted.joined(separator: \" \")", " \
    \   let nums = numbers.components(separatedBy: \" \")\n    var nums_int = [Int]()\n\
    \    for num in nums {\n        nums_int.append(number_to_int(number: num))\n\
    \    }\n    nums_int.sort()\n    var nums_str = [String]()\n    for num in nums_int\
    \ {\n        nums_str.append(int_to_number(number: num))\n    }\n    return nums_str.joined(separator:\
    \ \" \")", "    let numeral_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let sorted_numbers = numbers.split(separator: \" \").map { String($0)\
    \ }.sorted { numeral_map[$0]! < numeral_map[$1]! }\n    return sorted_numbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_numbers = numbers_array.sorted\
    \ { (a, b) -> Bool in\n        return number_map[a]! < number_map[b]!\n    }\n\
    \    return sorted_numbers.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_numbers = numbers_array.sorted\
    \ { (a, b) -> Bool in\n        return number_map[a]! < number_map[b]!\n    }\n\
    \    return sorted_numbers.joined(separator: \" \")", "    let numbers = numbers.split(separator:\
    \ \" \")\n    let sorted = numbers.sorted { (a, b) -> Bool in\n        return\
    \ number_to_int(number: String(a)) < number_to_int(number: String(b))\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")"]
stop_tokens:
- "\n}"

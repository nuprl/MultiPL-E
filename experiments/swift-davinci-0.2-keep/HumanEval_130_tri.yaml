name: HumanEval_130_tri
language: swift
prompt: "\n/// Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n/// the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n/// Tribonacci sequence is defined by the recurrence:\n/// tri(1) =\
  \ 3\n/// tri(n) = 1 + n / 2, if n is even.\n/// tri(n) =  tri(n - 1) + tri(n - 2)\
  \ + tri(n + 1), if n is odd.\n/// For example:\n/// tri(2) = 1 + (2 / 2) = 2\n///\
  \ tri(4) = 3\n/// tri(3) = tri(2) + tri(1) + tri(4)\n/// = 2 + 3 + 3 = 8 \n/// You\
  \ are given a non-negative integer number n, you have to a return a list of the\
  \ \n/// first n + 1 numbers of the Tribonacci sequence.\n/// Examples:\n/// tri(3)\
  \ = [1, 3, 2, 8]\nfunc tri(n: Int) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(tri(n: 3) == [1, 3, 2, 8])\nassert(tri(n:\
  \ 4) == [1, 3, 2, 8, 3])\nassert(tri(n: 5) == [1, 3, 2, 8, 3, 15])\nassert(tri(n:\
  \ 6) == [1, 3, 2, 8, 3, 15, 4])\nassert(tri(n: 7) == [1, 3, 2, 8, 3, 15, 4, 24])\n\
  assert(tri(n: 8) == [1, 3, 2, 8, 3, 15, 4, 24, 5])\nassert(tri(n: 9) == [1, 3, 2,\
  \ 8, 3, 15, 4, 24, 5, 35])\nassert(tri(n: 20) == [1, 3, 2, 8, 3, 15, 4, 24, 5, 35,\
  \ 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11])\nassert(tri(n: 0) == [1])\nassert(tri(n:\
  \ 1) == [1, 3])"
completions: ["    var result = [Int]()\n    for i in 0...n {\n        if i == 0 {\n\
    \            result.append(1)\n        } else if i == 1 {\n            result.append(3)\n\
    \        } else if i == 2 {\n            result.append(2)\n        } else if i\
    \ % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n       \
    \     result.append(result[i - 1] + result[i - 2] + result[i - 3])\n        }\n\
    \    }\n    return result", "    var result = [1, 3, 2]\n    if n == 0 {\n   \
    \     return [1]\n    } else if n == 1 {\n        return [1, 3]\n    } else if\
    \ n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i in 3...n {\n\
    \            if i % 2 == 0 {\n                result.append(1 + i / 2)\n     \
    \       } else {\n                result.append(result[i - 1] + result[i - 2]\
    \ + result[i - 3])\n            }\n        }\n    }\n    return result", "   \
    \ var result = [1, 3, 2]\n    guard n > 2 else { return Array(result[0...n]) }\n\
    \    for i in 3...n {\n        result.append(i % 2 == 0 ? 1 + i / 2 : result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n  \
    \  for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1 + i\
    \ / 2)\n        } else {\n            result.append(result[i - 1] + result[i -\
    \ 2] + result[i + 1])\n        }\n    }\n    return result", "    var result =\
    \ [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if n == 1 {\n   \
    \     return [1, 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    } else\
    \ {\n        for i in 3...n {\n            if i % 2 == 0 {\n                result.append(1\
    \ + i / 2)\n            } else {\n                result.append(result[i - 1]\
    \ + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n    return\
    \ result", "    if n == 0 {\n        return [1]\n    }\n    if n == 1 {\n    \
    \    return [1, 3]\n    }\n    if n == 2 {\n        return [1, 3, 2]\n    }\n\
    \    var result = [1, 3, 2]\n    for i in 3...n {\n        if i % 2 == 0 {\n \
    \           result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    var arr = [1, 3, 2]\n    if n == 0 {\n        return []\n    }\n    if n ==\
    \ 1 {\n        return [1]\n    }\n    if n == 2 {\n        return [1, 3]\n   \
    \ }\n    if n == 3 {\n        return [1, 3, 2]\n    }\n    for i in 3...n {\n\
    \        if i % 2 == 0 {\n            arr.append(1 + i / 2)\n        } else {\n\
    \            arr.append(arr[i - 1] + arr[i - 2] + arr[i - 3])\n        }\n   \
    \ }\n    return arr", "    var result = [Int]()\n    if n == 0 {\n        return\
    \ result\n    }\n    result.append(1)\n    if n == 1 {\n        return result\n\
    \    }\n    result.append(3)\n    if n == 2 {\n        return result\n    }\n\
    \    result.append(2)\n    if n == 3 {\n        return result\n    }\n    for\
    \ i in 4...n {\n        if i % 2 == 0 {\n            result.append(1 + i / 2)\n\
    \        } else {\n            result.append(result[i - 1] + result[i - 2] + result[i\
    \ - 3])\n        }\n    }\n    return result", "    guard n > 0 else { return\
    \ [] }\n    var result = [1, 3, 2]\n    for i in 3...n {\n        result.append(i\
    \ % 2 == 0 ? 1 + i / 2 : result[i - 1] + result[i - 2] + result[i + 1])\n    }\n\
    \    return result", "    var result = [1, 3, 2]\n    if n < 3 {\n        return\
    \ Array(result[0...n])\n    }\n    for i in 3...n {\n        if i % 2 == 0 {\n\
    \            result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    guard n > 2 else { return Array(result[0...n])\
    \ }\n    for i in 3...n {\n        result.append(i % 2 == 0 ? 1 + i / 2 : result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n    }\n    return result", "    var result:\
    \ [Int] = [1, 3, 2]\n    if n <= 2 {\n        return result\n    }\n    for i\
    \ in 3...n {\n        if i % 2 == 0 {\n            result.append(1 + i / 2)\n\
    \        } else {\n            result.append(result[i - 1] + result[i - 2] + result[i\
    \ + 1])\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n \
    \   for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1 + i\
    \ / 2)\n        } else {\n            result.append(result[i - 1] + result[i -\
    \ 2] + result[i + 1])\n        }\n    }\n    return result", "    var result =\
    \ [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n    for\
    \ i in 3...n {\n        let a = result[i - 1]\n        let b = result[i - 2]\n\
    \        let c = result[i - 3]\n        result.append(a + b + c)\n    }\n    return\
    \ result", "    var result = [Int]()\n    if n == 0 {\n        return result\n\
    \    }\n    result.append(1)\n    if n == 1 {\n        return result\n    }\n\
    \    result.append(3)\n    if n == 2 {\n        return result\n    }\n    result.append(2)\n\
    \    if n == 3 {\n        return result\n    }\n    for i in 3...n {\n       \
    \ if i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n  \
    \          result.append(result[i - 1] + result[i - 2] + result[i + 1])\n    \
    \    }\n    }\n    return result", "    var result = [1, 3, 2]\n    if n <= 2\
    \ {\n        return result\n    }\n    for i in 3...n {\n        if i % 2 == 0\
    \ {\n            result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    for i in 3...n {\n        result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return result[0...n]\n    }\n    for i\
    \ in 3...n {\n        result.append(result[i - 1] + result[i - 2] + result[i -\
    \ 3])\n    }\n    return result", "    var result = [1, 3, 2]\n    if n == 0 {\n\
    \        return [1]\n    } else if n == 1 {\n        return [1, 3]\n    } else\
    \ if n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i in 3...n\
    \ {\n            if i % 2 == 0 {\n                result.append(1 + i / 2)\n \
    \           } else {\n                result.append(result[i - 1] + result[i -\
    \ 2] + result[i - 3])\n            }\n        }\n    }\n    return result", " \
    \   var result = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if\
    \ n == 1 {\n        return [1, 3]\n    } else if n == 2 {\n        return [1,\
    \ 3, 2]\n    } else {\n        for i in 3...n {\n            if i % 2 == 0 {\n\
    \                result.append(1 + i / 2)\n            } else {\n            \
    \    result.append(result[i - 1] + result[i - 2] + result[i - 3])\n          \
    \  }\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n    if\
    \ n <= 2 {\n        return Array(result[0...n])\n    }\n    for i in 3...n {\n\
    \        result.append(result[i - 1] + result[i - 2] + result[i - 3])\n    }\n\
    \    return result", "    var result = [1, 3, 2]\n    if n <= 2 {\n        return\
    \ Array(result[0...n])\n    }\n    for i in 3...n {\n        if i % 2 == 0 {\n\
    \            result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    if n <= 2 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n  \
    \  for i in 3...n {\n        result.append(i % 2 == 0 ? 1 + i / 2 : result[i -\
    \ 1] + result[i - 2] + result[i - 3])\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n  \
    \  for i in 3...n {\n        result.append(result[i - 1] + result[i - 2] + result[i\
    \ - 3])\n    }\n    return result", "    var result = [1, 3, 2]\n    if n == 0\
    \ {\n        return [1]\n    } else if n == 1 {\n        return [1, 3]\n    }\
    \ else if n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i in 3...n\
    \ {\n            if i % 2 == 0 {\n                result.append(1 + i / 2)\n \
    \           } else {\n                result.append(result[i - 1] + result[i -\
    \ 2] + result[i - 3])\n            }\n        }\n    }\n    return result", " \
    \   var result = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if\
    \ n == 1 {\n        return [1, 3]\n    } else if n == 2 {\n        return [1,\
    \ 3, 2]\n    } else {\n        for i in 3...n {\n            if i % 2 == 0 {\n\
    \                result.append(1 + i / 2)\n            } else {\n            \
    \    result.append(result[i - 1] + result[i - 2] + result[i - 3])\n          \
    \  }\n        }\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0...n {\n        result.append(tri(n: i))\n    }\n    return result", " \
    \   var result = [1, 3, 2]\n    if n <= 2 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        result.append(result[i - 1] + result[i -\
    \ 2] + result[i - 3])\n    }\n    return result", "    var result = [1, 3, 2]\n\
    \    if n == 0 {\n        return []\n    }\n    if n == 1 {\n        return [1]\n\
    \    }\n    if n == 2 {\n        return [1, 3]\n    }\n    if n == 3 {\n     \
    \   return [1, 3, 2]\n    }\n    for i in 4...n {\n        if i % 2 == 0 {\n \
    \           result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 4])\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        result.append(result[i - 1] + result[i -\
    \ 2] + result[i - 3])\n    }\n    return result", "    var result = [Int]()\n\
    \    for i in 0...n {\n        switch i {\n        case 0:\n            result.append(1)\n\
    \        case 1:\n            result.append(3)\n        case 2:\n            result.append(2)\n\
    \        default:\n            let last = result[i - 1]\n            let secondLast\
    \ = result[i - 2]\n            let thirdLast = result[i - 3]\n            result.append(last\
    \ + secondLast + thirdLast)\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n == 0 {\n        return []\n    }\n    if n == 1 {\n  \
    \      return [1]\n    }\n    if n == 2 {\n        return [1, 3]\n    }\n    if\
    \ n == 3 {\n        return [1, 3, 2]\n    }\n    for i in 3...n {\n        if\
    \ i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n     \
    \       result.append(result[i - 1] + result[i - 2] + result[i - 3])\n       \
    \ }\n    }\n    return result", "    var result = [1, 3, 2]\n    if n == 0 {\n\
    \        return [1]\n    } else if n == 1 {\n        return [1, 3]\n    } else\
    \ if n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i in 3...n\
    \ {\n            if i % 2 == 0 {\n                result.append(1 + i / 2)\n \
    \           } else {\n                result.append(result[i - 1] + result[i -\
    \ 2] + result[i - 3])\n            }\n        }\n    }\n    return result", " \
    \   var result = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if\
    \ n == 1 {\n        return [1, 3]\n    } else if n == 2 {\n        return [1,\
    \ 3, 2]\n    } else {\n        for i in 3...n {\n            if i % 2 == 0 {\n\
    \                result.append(1 + i / 2)\n            } else {\n            \
    \    result.append(result[i - 1] + result[i - 2] + result[i - 3])\n          \
    \  }\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n    if\
    \ n <= 2 {\n        return Array(result[0...n])\n    }\n    for i in 3...n {\n\
    \        let next = result[i - 1] + result[i - 2] + result[i - 3]\n        result.append(next)\n\
    \    }\n    return result", "    guard n > 0 else { return [] }\n    var result\
    \ = [1, 3, 2]\n    for i in 3...n {\n        let a = result[i - 1]\n        let\
    \ b = result[i - 2]\n        let c = result[i - 3]\n        if i % 2 == 0 {\n\
    \            result.append(1 + i / 2)\n        } else {\n            result.append(a\
    \ + b + c)\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n\
    \    if n == 0 {\n        return [1]\n    } else if n == 1 {\n        return [1,\
    \ 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    } else {\n       \
    \ for i in 3...n {\n            if i % 2 == 0 {\n                result.append(1\
    \ + i / 2)\n            } else {\n                result.append(result[i - 1]\
    \ + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n    return\
    \ result", "    var result = [1, 3, 2]\n    guard n > 2 else { return Array(result[0...n])\
    \ }\n    for i in 3...n {\n        result.append(i % 2 == 0 ? 1 + i / 2 : result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    guard n > 2 else {\n        return Array(result[0...n])\n \
    \   }\n    for i in 3...n {\n        result.append(i % 2 == 0 ? 1 + i / 2 : result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n == 0 {\n        return []\n    }\n    if n == 1 {\n  \
    \      return [1]\n    }\n    if n == 2 {\n        return [1, 3]\n    }\n    if\
    \ n == 3 {\n        return [1, 3, 2]\n    }\n    for i in 4...n {\n        if\
    \ i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n     \
    \       result.append(result[i - 1] + result[i - 2] + result[i - 4])\n       \
    \ }\n    }\n    return result", "    var result = [Int]()\n    for i in 0...n\
    \ {\n        result.append(tri(n: i))\n    }\n    return result", "    if n ==\
    \ 0 {\n        return [1]\n    }\n    if n == 1 {\n        return [1, 3]\n   \
    \ }\n    if n == 2 {\n        return [1, 3, 2]\n    }\n    var result = [1, 3,\
    \ 2]\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if n == 1 {\n \
    \       return [1, 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    }\
    \ else {\n        for i in 3...n {\n            if i % 2 == 0 {\n            \
    \    result.append(1 + i / 2)\n            } else {\n                result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n   \
    \ return result", "    if n == 0 {\n        return [1]\n    }\n    if n == 1 {\n\
    \        return [1, 3]\n    }\n    if n == 2 {\n        return [1, 3, 2]\n   \
    \ }\n    var result = [1, 3, 2]\n    for i in 3...n {\n        let last = result[i\
    \ - 1]\n        let last2 = result[i - 2]\n        let last3 = result[i - 3]\n\
    \        if i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else\
    \ {\n            result.append(last + last2 + last3)\n        }\n    }\n    return\
    \ result", "    var result = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    if n == 0\
    \ {\n        return [1]\n    }\n    if n == 1 {\n        return [1, 3]\n    }\n\
    \    if n == 2 {\n        return [1, 3, 2]\n    }\n    var result = [1, 3, 2]\n\
    \    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1 +\
    \ i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n  \
    \  for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1 + i\
    \ / 2)\n        } else {\n            result.append(result[i - 1] + result[i -\
    \ 2] + result[i + 1])\n        }\n    }\n    return result", "    var result =\
    \ [1, 3, 2]\n    if n == 0 {\n        return []\n    }\n    if n == 1 {\n    \
    \    return [1]\n    }\n    if n == 2 {\n        return [1, 3]\n    }\n    if\
    \ n == 3 {\n        return [1, 3, 2]\n    }\n    for i in 4...n {\n        if\
    \ i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n     \
    \       result.append(result[i - 1] + result[i - 2] + result[i - 4])\n       \
    \ }\n    }\n    return result", "    var result = [1, 3, 2]\n    if n == 0 {\n\
    \        return [1]\n    } else if n == 1 {\n        return [1, 3]\n    } else\
    \ if n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i in 3...n\
    \ {\n            if i % 2 == 0 {\n                result.append(1 + i / 2)\n \
    \           } else {\n                result.append(result[i - 1] + result[i -\
    \ 2] + result[i - 3])\n            }\n        }\n    }\n    return result", " \
    \   var result = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n == 0 {\n        return []\n    }\n    if n == 1 {\n  \
    \      return [1]\n    }\n    if n == 2 {\n        return [1, 3]\n    }\n    if\
    \ n == 3 {\n        return [1, 3, 2]\n    }\n    for i in 4...n {\n        if\
    \ i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n     \
    \       result.append(result[i - 1] + result[i - 2] + result[i - 4])\n       \
    \ }\n    }\n    return result", "    var result = [1, 3, 2]\n    if n < 3 {\n\
    \        return Array(result[0...n])\n    }\n    for i in 3...n {\n        if\
    \ i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n     \
    \       result.append(result[i - 1] + result[i - 2] + result[i + 1])\n       \
    \ }\n    }\n    return result", "    var result = [1, 3, 2]\n    if n <= 2 {\n\
    \        return Array(result[0...n])\n    }\n    for i in 3...n {\n        if\
    \ i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n     \
    \       result.append(result[i - 1] + result[i - 2] + result[i + 1])\n       \
    \ }\n    }\n    return result", "    var result = [1, 3, 2]\n    if n == 0 {\n\
    \        return [1]\n    } else if n == 1 {\n        return [1, 3]\n    } else\
    \ if n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i in 3...n\
    \ {\n            result.append(i % 2 == 0 ? 1 + i / 2 : result[i - 1] + result[i\
    \ - 2] + result[i - 3])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    for i in 3...n {\n        result.append(i % 2 == 0 ? 1 + i\
    \ / 2 : result[i - 1] + result[i - 2] + result[i + 1])\n    }\n    return result",
  "    var result = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if\
    \ n == 1 {\n        return [1, 3]\n    } else if n == 2 {\n        return [1,\
    \ 3, 2]\n    } else {\n        for i in 3...n {\n            if i % 2 == 0 {\n\
    \                result.append(1 + i / 2)\n            } else {\n            \
    \    result.append(result[i - 1] + result[i - 2] + result[i - 3])\n          \
    \  }\n        }\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0...n {\n        if i == 0 {\n            result.append(1)\n        } else\
    \ if i == 1 {\n            result.append(3)\n        } else if i == 2 {\n    \
    \        result.append(2)\n        } else if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i - 3])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n  \
    \  for i in 3...n {\n        result.append(result[i - 1] + result[i - 2] + result[i\
    \ - 3])\n    }\n    return result", "    var result = [1, 3, 2]\n    if n == 0\
    \ {\n        return [1]\n    } else if n == 1 {\n        return [1, 3]\n    }\
    \ else if n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i in 3...n\
    \ {\n            if i % 2 == 0 {\n                result.append(1 + i / 2)\n \
    \           } else {\n                result.append(result[i - 1] + result[i -\
    \ 2] + result[i - 3])\n            }\n        }\n    }\n    return result", " \
    \   if n == 0 {\n        return [0]\n    }\n    if n == 1 {\n        return [1,\
    \ 3]\n    }\n    if n == 2 {\n        return [1, 3, 2]\n    }\n    var result\
    \ = [1, 3, 2]\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if n == 1 {\n \
    \       return [1, 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    }\
    \ else {\n        for _ in 3...n {\n            let last = result.last!\n    \
    \        let secondLast = result[result.count - 2]\n            let thirdLast\
    \ = result[result.count - 3]\n            if last % 2 == 0 {\n               \
    \ result.append(1 + last / 2)\n            } else {\n                result.append(thirdLast\
    \ + secondLast + last)\n            }\n        }\n    }\n    return result", " \
    \   var result = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n  \
    \  for i in 3...n {\n        result.append(result[i - 1] + result[i - 2] + result[i\
    \ - 3])\n    }\n    return result", "    var result = [1, 3, 2]\n    for i in\
    \ 3...n {\n        if i % 2 == 0 {\n            result.append(1 + i / 2)\n   \
    \     } else {\n            result.append(result[i - 1] + result[i - 2] + result[i\
    \ + 1])\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n \
    \   if n < 3 {\n        return Array(result[0...n])\n    }\n    for i in 3...n\
    \ {\n        result.append(result[i - 1] + result[i - 2] + result[i - 3])\n  \
    \  }\n    return result", "    var result = [1, 3, 2]\n    if n == 0 {\n     \
    \   return []\n    }\n    if n == 1 {\n        return [1]\n    }\n    if n ==\
    \ 2 {\n        return [1, 3]\n    }\n    if n == 3 {\n        return [1, 3, 2]\n\
    \    }\n    for i in 4...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i - 4])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0..<n + 1])\n    }\n\
    \    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1 +\
    \ i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n  \
    \  for i in 3...n {\n        result.append(result[i - 1] + result[i - 2] + result[i\
    \ - 3])\n    }\n    return result", "    var result = [Int]()\n    for i in 0...n\
    \ {\n        switch i {\n        case 0:\n            result.append(1)\n     \
    \   case 1:\n            result.append(3)\n        case 2:\n            result.append(2)\n\
    \        default:\n            result.append(result[i - 1] + result[i - 2] + result[i\
    \ - 3])\n        }\n    }\n    return result", "    if n == 0 {\n        return\
    \ [1]\n    }\n    if n == 1 {\n        return [1, 3]\n    }\n    if n == 2 {\n\
    \        return [1, 3, 2]\n    }\n    var result = [1, 3, 2]\n    for i in 3...n\
    \ {\n        if i % 2 == 0 {\n            result.append(1 + i / 2)\n        }\
    \ else {\n            result.append(result[i - 1] + result[i - 2] + result[i +\
    \ 1])\n        }\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0...n {\n        if i == 0 {\n            result.append(1)\n        } else\
    \ if i == 1 {\n            result.append(3)\n        } else if i == 2 {\n    \
    \        result.append(2)\n        } else if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i - 3])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    guard n > 2 else { return result }\n    for i in 3...n {\n\
    \        if i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else\
    \ {\n            result.append(result[i - 1] + result[i - 2] + result[i + 1])\n\
    \        }\n    }\n    return result", "    var result = [1, 3, 2]\n    if n ==\
    \ 0 {\n        return [1]\n    } else if n == 1 {\n        return [1, 3]\n   \
    \ } else if n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i in\
    \ 3...n {\n            if i % 2 == 0 {\n                result.append(1 + i /\
    \ 2)\n            } else {\n                result.append(result[i - 1] + result[i\
    \ - 2] + result[i - 3])\n            }\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    for i in 3...n {\n        if i % 2 == 0 {\n   \
    \         result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    if n == 0 {\n        return [1]\n    }\n    if n == 1 {\n        return [1,\
    \ 3]\n    }\n    if n == 2 {\n        return [1, 3, 2]\n    }\n    var result\
    \ = [1, 3, 2]\n    for i in 3...n {\n        let last = result[i - 1]\n      \
    \  let secondLast = result[i - 2]\n        let thirdLast = result[i - 3]\n   \
    \     if i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n\
    \            result.append(last + secondLast + thirdLast)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    if n == 0 {\n        return\
    \ result\n    }\n    result.append(1)\n    if n == 1 {\n        return result\n\
    \    }\n    result.append(3)\n    if n == 2 {\n        return result\n    }\n\
    \    result.append(2)\n    if n == 3 {\n        return result\n    }\n    for\
    \ i in 3...n {\n        if i % 2 == 0 {\n            result.append(1 + i / 2)\n\
    \        } else {\n            result.append(result[i - 1] + result[i - 2] + result[i\
    \ + 1])\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n \
    \   if n == 0 {\n        return [1]\n    } else if n == 1 {\n        return [1,\
    \ 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    } else {\n       \
    \ for i in 3...n {\n            if i % 2 == 0 {\n                result.append(1\
    \ + i / 2)\n            } else {\n                result.append(result[i - 1]\
    \ + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n    return\
    \ result", "    var tri = [1, 3, 2]\n    if n < 3 {\n        return tri[0...n]\n\
    \    }\n    for i in 3...n {\n        tri.append(tri[i - 1] + tri[i - 2] + tri[i\
    \ - 3])\n    }\n    return tri", "    var result = [1, 3, 2]\n    if n == 0 {\n\
    \        return [1]\n    } else if n == 1 {\n        return [1, 3]\n    } else\
    \ if n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i in 3...n\
    \ {\n            if i % 2 == 0 {\n                result.append(1 + i / 2)\n \
    \           } else {\n                result.append(result[i - 1] + result[i -\
    \ 2] + result[i - 3])\n            }\n        }\n    }\n    return result", " \
    \   var result = [1, 3, 2]\n    if n <= 2 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        let val = result[i - 1] + result[i - 2]\
    \ + result[i - 3]\n        result.append(val)\n    }\n    return result", "  \
    \  var result = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if\
    \ n == 1 {\n        return [1, 3]\n    } else if n == 2 {\n        return [1,\
    \ 3, 2]\n    } else {\n        for i in 3...n {\n            if i % 2 == 0 {\n\
    \                result.append(1 + i / 2)\n            } else {\n            \
    \    result.append(result[i - 1] + result[i - 2] + result[i - 3])\n          \
    \  }\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n    if\
    \ n == 0 {\n        return [1]\n    } else if n == 1 {\n        return [1, 3]\n\
    \    } else if n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i\
    \ in 3...n {\n            if i % 2 == 0 {\n                result.append(1 + i\
    \ / 2)\n            } else {\n                result.append(result[i - 1] + result[i\
    \ - 2] + result[i - 3])\n            }\n        }\n    }\n    return result",
  "    var result = [Int]()\n    if n == 0 {\n        return result\n    }\n    result.append(1)\n\
    \    if n == 1 {\n        return result\n    }\n    result.append(3)\n    if n\
    \ == 2 {\n        return result\n    }\n    result.append(2)\n    if n == 3 {\n\
    \        return result\n    }\n    for i in 3...n {\n        if i % 2 == 0 {\n\
    \            result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0...n {\n        if i == 0 {\n         \
    \   result.append(1)\n        } else if i == 1 {\n            result.append(3)\n\
    \        } else if i == 2 {\n            result.append(2)\n        } else if i\
    \ % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n       \
    \     result.append(result[i - 1] + result[i - 2] + result[i - 3])\n        }\n\
    \    }\n    return result", "    var result = [1, 3, 2]\n    if n < 3 {\n    \
    \    return Array(result[0...n])\n    }\n    for i in 3...n {\n        result.append(i\
    \ % 2 == 0 ? 1 + i / 2 : result[i - 1] + result[i - 2] + result[i - 3])\n    }\n\
    \    return result", "    var result = [1, 3, 2]\n    if n <= 2 {\n        return\
    \ result\n    }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    for i in 0...n {\n        if i == 0 {\n            result.append(1)\n\
    \        } else if i == 1 {\n            result.append(3)\n        } else if i\
    \ == 2 {\n            result.append(2)\n        } else if i % 2 == 0 {\n     \
    \       result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if\
    \ n == 1 {\n        return [1, 3]\n    } else if n == 2 {\n        return [1,\
    \ 3, 2]\n    } else {\n        for i in 3...n {\n            if i % 2 == 0 {\n\
    \                result.append(1 + i / 2)\n            } else {\n            \
    \    result.append(result[i - 1] + result[i - 2] + result[i - 3])\n          \
    \  }\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n    for\
    \ i in 3...n {\n        if i % 2 == 0 {\n            result.append(1 + i / 2)\n\
    \        } else {\n            result.append(result[i - 1] + result[i - 2] + result[i\
    \ + 1])\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n \
    \   if n < 3 {\n        return Array(result[0...n])\n    }\n    for i in 3...n\
    \ {\n        if i % 2 == 0 {\n            result.append(1 + i / 2)\n        }\
    \ else {\n            result.append(result[i - 1] + result[i - 2] + result[i +\
    \ 1])\n        }\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0...n {\n        result.append(tri(n: i))\n    }\n    return result", " \
    \   if n == 0 {\n        return [1]\n    }\n    if n == 1 {\n        return [1,\
    \ 3]\n    }\n    if n == 2 {\n        return [1, 3, 2]\n    }\n    var result\
    \ = [1, 3, 2]\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n  \
    \  for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1 + i\
    \ / 2)\n        } else {\n            result.append(result[i - 1] + result[i -\
    \ 2] + result[i + 1])\n        }\n    }\n    return result", "    var result =\
    \ [1, 3, 2]\n    if n <= 2 {\n        return Array(result[0...n])\n    }\n   \
    \ for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1 + i /\
    \ 2)\n        } else {\n            result.append(result[i - 1] + result[i - 2]\
    \ + result[i + 1])\n        }\n    }\n    return result", "    var result = [1,\
    \ 3, 2]\n    if n <= 2 {\n        return result\n    }\n    for i in 3...n {\n\
    \        if i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else\
    \ {\n            result.append(result[i - 1] + result[i - 2] + result[i + 1])\n\
    \        }\n    }\n    return result", "    var result = [1, 3, 2]\n    if n <\
    \ 3 {\n        return Array(result[0...n])\n    }\n    for i in 3...n {\n    \
    \    if i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n\
    \            result.append(result[i - 1] + result[i - 2] + result[i + 1])\n  \
    \      }\n    }\n    return result", "    var result = [1, 3, 2]\n    if n <=\
    \ 2 {\n        return result\n    }\n    for i in 3...n {\n        if i % 2 ==\
    \ 0 {\n            result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    var result = [Int]()\n    if n == 0 {\n        return result\n    }\n    result.append(1)\n\
    \    if n == 1 {\n        return result\n    }\n    result.append(3)\n    if n\
    \ == 2 {\n        return result\n    }\n    result.append(2)\n    if n == 3 {\n\
    \        return result\n    }\n    for i in 3...n {\n        if i % 2 == 0 {\n\
    \            result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0..<n +\
    \ 1])\n    }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", '    return [1,
    3, 2, 8]', "    var result = [1, 3, 2]\n    if n <= 2 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        result.append(result[i - 1] + result[i -\
    \ 2] + result[i - 3])\n    }\n    return result", "    var tribonacci = [1, 3,\
    \ 2]\n    if n == 0 {\n        return []\n    } else if n == 1 {\n        return\
    \ [1]\n    } else if n == 2 {\n        return [1, 3]\n    } else if n == 3 {\n\
    \        return tribonacci\n    } else {\n        for i in 4...n {\n         \
    \   if i % 2 == 0 {\n                tribonacci.append(1 + i / 2)\n          \
    \  } else {\n                tribonacci.append(tribonacci[i - 2] + tribonacci[i\
    \ - 3] + tribonacci[i - 1])\n            }\n        }\n    }\n    return tribonacci",
  "    var result = [1, 3, 2]\n    for i in 3...n {\n        if i % 2 == 0 {\n   \
    \         result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    if n <= 2 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if n == 1 {\n \
    \       return [1, 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    }\
    \ else {\n        for i in 3...n {\n            if i % 2 == 0 {\n            \
    \    result.append(1 + i / 2)\n            } else {\n                result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n   \
    \ return result", "    var result = [1, 3, 2]\n    if n == 0 {\n        return\
    \ [1]\n    } else if n == 1 {\n        return [1, 3]\n    } else if n == 2 {\n\
    \        return [1, 3, 2]\n    } else {\n        for i in 3...n {\n          \
    \  if i % 2 == 0 {\n                result.append(1 + i / 2)\n            } else\
    \ {\n                result.append(result[i - 1] + result[i - 2] + result[i -\
    \ 3])\n            }\n        }\n    }\n    return result", "    var result =\
    \ [Int]()\n    for i in 0...n {\n        if i == 0 {\n            result.append(1)\n\
    \        } else if i == 1 {\n            result.append(3)\n        } else if i\
    \ == 2 {\n            result.append(2)\n        } else if i % 2 == 0 {\n     \
    \       result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if\
    \ n == 1 {\n        return [1, 3]\n    } else if n == 2 {\n        return [1,\
    \ 3, 2]\n    } else {\n        for i in 3...n {\n            if i % 2 == 0 {\n\
    \                result.append(1 + i / 2)\n            } else {\n            \
    \    result.append(result[i - 1] + result[i - 2] + result[i - 3])\n          \
    \  }\n        }\n    }\n    return result", "    var result = [Int]()\n    for\
    \ i in 0...n {\n        if i == 0 {\n            result.append(1)\n        } else\
    \ if i == 1 {\n            result.append(3)\n        } else if i == 2 {\n    \
    \        result.append(2)\n        } else if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i - 3])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    guard n > 2 else { return result }\n    for i in 3...n {\n\
    \        result.append(i % 2 == 0 ? 1 + i / 2 : result[i - 1] + result[i - 2]\
    \ + result[i + 1])\n    }\n    return result", "    var result = [1, 3, 2]\n \
    \   if n == 0 {\n        return []\n    }\n    if n == 1 {\n        return [1]\n\
    \    }\n    if n == 2 {\n        return [1, 3]\n    }\n    if n == 3 {\n     \
    \   return [1, 3, 2]\n    }\n    for i in 4...n {\n        if i % 2 == 0 {\n \
    \           result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 4])\n        }\n    }\n    return result",
  '    return [Int](0...n).map { tri(n: $0) }', "    var result = [1, 3, 2]\n    if\
    \ n == 0 {\n        return [1]\n    } else if n == 1 {\n        return [1, 3]\n\
    \    } else if n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i\
    \ in 3...n {\n            if i % 2 == 0 {\n                result.append(1 + i\
    \ / 2)\n            } else {\n                result.append(result[i - 1] + result[i\
    \ - 2] + result[i - 3])\n            }\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        let last = result[i - 1]\n        let secondLast\
    \ = result[i - 2]\n        let thirdLast = result[i - 3]\n        result.append(i\
    \ % 2 == 0 ? 1 + i / 2 : last + secondLast + thirdLast)\n    }\n    return result",
  "    if n == 0 {\n        return [1]\n    }\n    if n == 1 {\n        return [1,\
    \ 3]\n    }\n    if n == 2 {\n        return [1, 3, 2]\n    }\n    var result\
    \ = [1, 3, 2]\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    for i in 0...n {\n        if i == 0 {\n            result.append(1)\n\
    \        } else if i == 1 {\n            result.append(3)\n        } else if i\
    \ == 2 {\n            result.append(2)\n        } else if i % 2 == 0 {\n     \
    \       result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        result.append(result[i - 1] + result[i -\
    \ 2] + result[i - 3])\n    }\n    return result", "    var result = [1, 3, 2]\n\
    \    if n < 3 {\n        return Array(result[0...n])\n    }\n    for i in 3...n\
    \ {\n        result.append(result[i - 1] + result[i - 2] + result[i - 3])\n  \
    \  }\n    return result", "    var result = [1, 3, 2]\n    if n == 0 {\n     \
    \   return []\n    }\n    if n == 1 {\n        return [1]\n    }\n    if n ==\
    \ 2 {\n        return [1, 3]\n    }\n    if n == 3 {\n        return [1, 3, 2]\n\
    \    }\n    for i in 4...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i - 4])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if n == 1 {\n \
    \       return [1, 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    }\
    \ else {\n        for i in 3...n {\n            if i % 2 == 0 {\n            \
    \    result.append(1 + i / 2)\n            } else {\n                result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n   \
    \ return result", "    var result = [1, 3, 2]\n    if n <= 2 {\n        return\
    \ Array(result[0...n])\n    }\n    for i in 3...n {\n        result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n    }\n    return result", "    if n\
    \ == 0 {\n        return [1]\n    }\n    if n == 1 {\n        return [1, 3]\n\
    \    }\n    if n == 2 {\n        return [1, 3, 2]\n    }\n    var result = [1,\
    \ 3, 2]\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    for i in 0...n {\n        result.append(tri(n: i))\n    }\n \
    \   return result", "    var result = [1, 3, 2]\n    if n == 0 {\n        return\
    \ [1]\n    } else if n == 1 {\n        return [1, 3]\n    } else if n == 2 {\n\
    \        return [1, 3, 2]\n    } else {\n        for i in 3...n {\n          \
    \  if i % 2 == 0 {\n                result.append(1 + i / 2)\n            } else\
    \ {\n                result.append(result[i - 1] + result[i - 2] + result[i -\
    \ 3])\n            }\n        }\n    }\n    return result", "    var result =\
    \ [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if n == 1 {\n   \
    \     return [1, 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    } else\
    \ {\n        for i in 3...n {\n            if i % 2 == 0 {\n                result.append(1\
    \ + i / 2)\n            } else {\n                result.append(result[i - 1]\
    \ + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n    return\
    \ result", "    if n == 0 {\n        return [1]\n    }\n    if n == 1 {\n    \
    \    return [1, 3]\n    }\n    if n == 2 {\n        return [1, 3, 2]\n    }\n\
    \    var result = [1, 3, 2]\n    for i in 3...n {\n        if i % 2 == 0 {\n \
    \           result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    guard n > 2 else { return Array(result[0...n])\
    \ }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n  \
    \  for i in 3...n {\n        result.append(result[i - 1] + result[i - 2] + result[i\
    \ - 3])\n    }\n    return result", "    var result = [1, 3, 2]\n    if n <= 2\
    \ {\n        return Array(result[0...n])\n    }\n    for i in 3...n {\n      \
    \  if i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n \
    \           result.append(result[i - 1] + result[i - 2] + result[i + 1])\n   \
    \     }\n    }\n    return result", "    var result = [1, 3, 2]\n    if n < 3\
    \ {\n        return Array(result[0...n])\n    }\n    for i in 3...n {\n      \
    \  result.append(result[i - 1] + result[i - 2] + result[i - 3])\n    }\n    return\
    \ result", "    var result = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        result.append(result[i - 1] + result[i -\
    \ 2] + result[i - 3])\n    }\n    return result", "    var result = [1, 3, 2]\n\
    \    if n < 3 {\n        return Array(result[0...n])\n    }\n    for i in 3...n\
    \ {\n        result.append(result[i - 1] + result[i - 2] + result[i - 3])\n  \
    \  }\n    return result", "    var result = [Int]()\n    for i in 0...n {\n  \
    \      if i == 0 {\n            result.append(1)\n        } else if i == 1 {\n\
    \            result.append(3)\n        } else if i == 2 {\n            result.append(2)\n\
    \        } else if i % 2 == 0 {\n            result.append(1 + i / 2)\n      \
    \  } else {\n            result.append(result[i - 1] + result[i - 2] + result[i\
    \ - 3])\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n \
    \   if n == 0 {\n        return [1]\n    } else if n == 1 {\n        return [1,\
    \ 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    } else {\n       \
    \ for i in 3...n {\n            if i % 2 == 0 {\n                result.append(1\
    \ + i / 2)\n            } else {\n                result.append(result[i - 1]\
    \ + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n    return\
    \ result", "    var result = [1, 3, 2]\n    if n <= 2 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    if n == 0\
    \ {\n        return [1]\n    } else if n == 1 {\n        return [1, 3]\n    }\
    \ else if n == 2 {\n        return [1, 3, 2]\n    } else {\n        var result\
    \ = [1, 3, 2]\n        for i in 3...n {\n            if i % 2 == 0 {\n       \
    \         result.append(1 + i / 2)\n            } else {\n                result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n            }\n        }\n        return\
    \ result\n    }", "    var result = [1, 3, 2]\n    for i in 3...n {\n        result.append(i\
    \ % 2 == 0 ? 1 + i / 2 : result[i - 1] + result[i - 2] + result[i + 1])\n    }\n\
    \    return result", "    var result = [1, 3, 2]\n    if n < 3 {\n        return\
    \ Array(result[0...n])\n    }\n    for i in 3...n {\n        result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n <= 2 {\n        return Array(result[0...n])\n    }\n \
    \   for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1 + i\
    \ / 2)\n        } else {\n            result.append(result[i - 1] + result[i -\
    \ 2] + result[i + 1])\n        }\n    }\n    return result", "    var result =\
    \ [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if n == 1 {\n   \
    \     return [1, 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    } else\
    \ {\n        for i in 3...n {\n            if i % 2 == 0 {\n                result.append(1\
    \ + i / 2)\n            } else {\n                result.append(result[i - 1]\
    \ + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    for i in 0...n {\n        if i == 0\
    \ {\n            result.append(1)\n        } else if i == 1 {\n            result.append(3)\n\
    \        } else if i == 2 {\n            result.append(2)\n        } else if i\
    \ % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n       \
    \     result.append(result[i - 1] + result[i - 2] + result[i - 3])\n        }\n\
    \    }\n    return result", "    var result = [1, 3, 2]\n    if n < 3 {\n    \
    \    return Array(result[0...n])\n    }\n    for i in 3...n {\n        if i %\
    \ 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n         \
    \   result.append(result[i - 1] + result[i - 2] + result[i + 1])\n        }\n\
    \    }\n    return result", "    var result = [1, 3, 2]\n    if n == 0 {\n   \
    \     return [1]\n    } else if n == 1 {\n        return [1, 3]\n    } else if\
    \ n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i in 3...n {\n\
    \            if i % 2 == 0 {\n                result.append(1 + i / 2)\n     \
    \       } else {\n                result.append(result[i - 1] + result[i - 2]\
    \ + result[i - 3])\n            }\n        }\n    }\n    return result", "   \
    \ var result = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if n\
    \ == 1 {\n        return [1, 3]\n    } else if n == 2 {\n        return [1, 3,\
    \ 2]\n    } else {\n        for i in 3...n {\n            if i % 2 == 0 {\n  \
    \              result.append(1 + i / 2)\n            } else {\n              \
    \  result.append(result[i - 1] + result[i - 2] + result[i - 3])\n            }\n\
    \        }\n    }\n    return result", "    var arr = [1, 3, 2]\n    if n < 3\
    \ {\n        return Array(arr[0...n])\n    }\n    for i in 3...n {\n        arr.append(arr[i\
    \ - 1] + arr[i - 2] + arr[i - 3])\n    }\n    return arr", "    var result = [Int]()\n\
    \    if n == 0 {\n        return result\n    }\n    result.append(1)\n    if n\
    \ == 1 {\n        return result\n    }\n    result.append(3)\n    if n == 2 {\n\
    \        return result\n    }\n    result.append(2)\n    if n == 3 {\n       \
    \ return result\n    }\n    for i in 3...n {\n        if i % 2 == 0 {\n      \
    \      result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if\
    \ n == 1 {\n        return [1, 3]\n    } else if n == 2 {\n        return [1,\
    \ 3, 2]\n    } else {\n        for i in 3...n {\n            if i % 2 == 0 {\n\
    \                result.append(1 + i / 2)\n            } else {\n            \
    \    result.append(result[i - 1] + result[i - 2] + result[i - 3])\n          \
    \  }\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n    if\
    \ n == 0 {\n        return [1]\n    } else if n == 1 {\n        return [1, 3]\n\
    \    } else if n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i\
    \ in 3...n {\n            if i % 2 == 0 {\n                result.append(1 + i\
    \ / 2)\n            } else {\n                result.append(result[i - 1] + result[i\
    \ - 2] + result[i - 3])\n            }\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n  \
    \  for i in 3...n {\n        result.append(result[i - 1] + result[i - 2] + result[i\
    \ - 3])\n    }\n    return result", "    var result = [1, 3, 2]\n    if n <= 2\
    \ {\n        return Array(result[0...n])\n    }\n    for i in 3...n {\n      \
    \  if i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n \
    \           result.append(result[i - 1] + result[i - 2] + result[i + 1])\n   \
    \     }\n    }\n    return result", "    var result = [1, 3, 2]\n    if n < 3\
    \ {\n        return Array(result[0...n])\n    }\n    for i in 3...n {\n      \
    \  let a = result[i - 1]\n        let b = result[i - 2]\n        let c = result[i\
    \ - 3]\n        if i % 2 == 0 {\n            result.append(1 + i / 2)\n      \
    \  } else {\n            result.append(a + b + c)\n        }\n    }\n    return\
    \ result", "    var result = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        result.append(i % 2 == 0 ? 1 + i / 2 : result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if n == 1 {\n \
    \       return [1, 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    }\
    \ else {\n        for i in 3...n {\n            if i % 2 == 0 {\n            \
    \    result.append(1 + i / 2)\n            } else {\n                result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n   \
    \ return result", "    var result = [1, 3, 2]\n    if n < 3 {\n        return\
    \ Array(result[0...n])\n    }\n    for i in 3...n {\n        if i % 2 == 0 {\n\
    \            result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    guard n > 0 else { return [] }\n    var result = [1, 3, 2]\n    for i in 3...n\
    \ {\n        result.append(result[i - 1] + result[i - 2] + result[i - 3])\n  \
    \  }\n    return result", "    var result = [1, 3, 2]\n    if n < 3 {\n      \
    \  return Array(result[0...n])\n    }\n    for i in 3...n {\n        result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n    }\n    return result", "    var result\
    \ = [Int]()\n    for i in 0...n {\n        if i == 0 {\n            result.append(1)\n\
    \        } else if i == 1 {\n            result.append(3)\n        } else if i\
    \ == 2 {\n            result.append(2)\n        } else if i % 2 == 0 {\n     \
    \       result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n        }\n    }\n    return result",
  "    if n == 0 {\n        return [1]\n    }\n    if n == 1 {\n        return [1,\
    \ 3]\n    }\n    if n == 2 {\n        return [1, 3, 2]\n    }\n    var result\
    \ = [1, 3, 2]\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    for i in 0...n {\n        if i == 0 {\n            result.append(1)\n\
    \        } else if i == 1 {\n            result.append(3)\n        } else if i\
    \ == 2 {\n            result.append(2)\n        } else if i % 2 == 0 {\n     \
    \       result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n        }\n    }\n    return result",
  "    let result = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n\
    \    }\n    var tri = result\n    for i in 3...n {\n        tri.append(tri[i -\
    \ 1] + tri[i - 2] + tri[i - 3])\n    }\n    return tri", "    var result = [1,\
    \ 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n    for i\
    \ in 3...n {\n        let next = result[i - 1] + result[i - 2] + result[i - 3]\n\
    \        result.append(next)\n    }\n    return result", "    var result = [1,\
    \ 3, 2]\n    if n == 0 {\n        return [1]\n    } else if n == 1 {\n       \
    \ return [1, 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    } else\
    \ {\n        for i in 3...n {\n            if i % 2 == 0 {\n                result.append(1\
    \ + i / 2)\n            } else {\n                result.append(result[i - 1]\
    \ + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n    return\
    \ result", "    var result = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        let value = result[i - 1] + result[i - 2]\
    \ + result[i - 3]\n        result.append(value)\n    }\n    return result", " \
    \   var result = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n  \
    \  for i in 3...n {\n        result.append(result[i - 1] + result[i - 2] + result[i\
    \ - 3])\n    }\n    return result", "    var result = [1, 3, 2]\n    if n <= 2\
    \ {\n        return Array(result[0...n])\n    }\n    for i in 3...n {\n      \
    \  let sum = result[i - 1] + result[i - 2] + result[i - 3]\n        result.append(sum)\n\
    \    }\n    return result", "    var result = [1, 3, 2]\n    if n <= 2 {\n   \
    \     return Array(result[0...n])\n    }\n    for i in 3...n {\n        if i %\
    \ 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n         \
    \   result.append(result[i - 1] + result[i - 2] + result[i + 1])\n        }\n\
    \    }\n    return result", "    var result = [1, 3, 2]\n    if n == 0 {\n   \
    \     return []\n    }\n    if n == 1 {\n        return [1]\n    }\n    if n ==\
    \ 2 {\n        return [1, 3]\n    }\n    if n == 3 {\n        return [1, 3, 2]\n\
    \    }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i - 3])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n <= 2 {\n        return result\n    }\n    for i in 3...n\
    \ {\n        if i % 2 == 0 {\n            result.append(1 + i / 2)\n        }\
    \ else {\n            result.append(result[i - 1] + result[i - 2] + result[i +\
    \ 1])\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n   \
    \ if n == 0 {\n        return [1]\n    } else if n == 1 {\n        return [1,\
    \ 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    } else {\n       \
    \ for i in 3...n {\n            if i % 2 == 0 {\n                result.append(1\
    \ + i / 2)\n            } else {\n                result.append(result[i - 1]\
    \ + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n    return\
    \ result", "    var result = [1, 3, 2]\n    if n <= 2 {\n        return result[0...n]\n\
    \    }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result:\
    \ [Int] = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if n == 1\
    \ {\n        return [1, 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n\
    \    } else {\n        for i in 3...n {\n            if i % 2 == 0 {\n       \
    \         result.append(1 + i / 2)\n            } else {\n                result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n   \
    \ return result", "    var result = [1, 3, 2]\n    if n <= 2 {\n        return\
    \ Array(result[0...n])\n    }\n    for i in 3...n {\n        if i % 2 == 0 {\n\
    \            result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    if n == 0 {\n        return [1]\n    }\n    if n == 1 {\n        return [1,\
    \ 3]\n    }\n    if n == 2 {\n        return [1, 3, 2]\n    }\n    var result\
    \ = [1, 3, 2]\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    for i in 0...n {\n        if i == 0 {\n            result.append(1)\n\
    \        } else if i == 1 {\n            result.append(3)\n        } else if i\
    \ == 2 {\n            result.append(2)\n        } else if i % 2 == 0 {\n     \
    \       result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if\
    \ n == 1 {\n        return [1, 3]\n    } else if n == 2 {\n        return [1,\
    \ 3, 2]\n    } else {\n        for i in 3...n {\n            if i % 2 == 0 {\n\
    \                result.append(1 + i / 2)\n            } else {\n            \
    \    result.append(result[i - 1] + result[i - 2] + result[i - 3])\n          \
    \  }\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n    if\
    \ n == 0 {\n        return [1]\n    } else if n == 1 {\n        return [1, 3]\n\
    \    } else if n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i\
    \ in 3...n {\n            if i % 2 == 0 {\n                result.append(1 + i\
    \ / 2)\n            } else {\n                result.append(result[i - 1] + result[i\
    \ - 2] + result[i - 3])\n            }\n        }\n    }\n    return result",
  "    var result = [1, 3, 2]\n    if n <= 2 {\n        return Array(result[0...n])\n\
    \    }\n    for i in 3...n {\n        let last = result[i - 1]\n        let last2\
    \ = result[i - 2]\n        let last3 = result[i - 3]\n        result.append(last\
    \ + last2 + last3)\n    }\n    return result", "    var result = [1, 3, 2]\n \
    \   if n < 3 {\n        return Array(result[0...n])\n    }\n    for i in 3...n\
    \ {\n        if i % 2 == 0 {\n            result.append(1 + i / 2)\n        }\
    \ else {\n            result.append(result[i - 1] + result[i - 2] + result[i +\
    \ 1])\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n   \
    \ if n < 3 {\n        return Array(result[0...n])\n    }\n    for i in 3...n {\n\
    \        if i % 2 == 0 {\n            result.append(1 + i / 2)\n        } else\
    \ {\n            result.append(result[i - 1] + result[i - 2] + result[i + 1])\n\
    \        }\n    }\n    return result", "    var result = [1, 3, 2]\n    if n ==\
    \ 0 {\n        return [1]\n    } else if n == 1 {\n        return [1, 3]\n   \
    \ } else if n == 2 {\n        return [1, 3, 2]\n    } else {\n        for i in\
    \ 3...n {\n            if i % 2 == 0 {\n                result.append(1 + i /\
    \ 2)\n            } else {\n                result.append(result[i - 1] + result[i\
    \ - 2] + result[i - 3])\n            }\n        }\n    }\n    return result",
  "    var result = [Int]()\n    if n == 0 {\n        return result\n    }\n    result.append(1)\n\
    \    if n == 1 {\n        return result\n    }\n    result.append(3)\n    if n\
    \ == 2 {\n        return result\n    }\n    result.append(2)\n    for i in 3...n\
    \ {\n        result.append(result[i - 1] + result[i - 2] + result[i - 3])\n  \
    \  }\n    return result", "    var result: [Int] = []\n    for i in 0...n {\n\
    \        if i == 0 {\n            result.append(1)\n        } else if i == 1 {\n\
    \            result.append(3)\n        } else if i == 2 {\n            result.append(2)\n\
    \        } else if i % 2 == 0 {\n            result.append(1 + i / 2)\n      \
    \  } else {\n            result.append(result[i - 1] + result[i - 2] + result[i\
    \ - 3])\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n \
    \   if n == 0 {\n        return [1]\n    } else if n == 1 {\n        return [1,\
    \ 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    } else {\n       \
    \ for _ in 3...n {\n            let last = result.last!\n            let secondLast\
    \ = result[result.count - 2]\n            let thirdLast = result[result.count\
    \ - 3]\n            if last % 2 == 0 {\n                result.append(1 + last\
    \ / 2)\n            } else {\n                result.append(thirdLast + secondLast\
    \ + last)\n            }\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i + 1])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n  \
    \  for i in 3...n {\n        result.append(result[i - 1] + result[i - 2] + result[i\
    \ - 3])\n    }\n    return result", "    var result = [1, 3, 2]\n    if n < 3\
    \ {\n        return Array(result[0...n])\n    }\n    for i in 3...n {\n      \
    \  result.append(result[i - 1] + result[i - 2] + result[i - 3])\n    }\n    return\
    \ result", "    var result: [Int] = [1, 3, 2]\n    if n < 3 {\n        return\
    \ Array(result[0...n])\n    }\n    for i in 3...n {\n        if i % 2 == 0 {\n\
    \            result.append(1 + i / 2)\n        } else {\n            result.append(result[i\
    \ - 1] + result[i - 2] + result[i + 1])\n        }\n    }\n    return result",
  "    var result = [Int]()\n    for i in 0...n {\n        if i == 0 {\n         \
    \   result.append(1)\n        } else if i == 1 {\n            result.append(3)\n\
    \        } else if i == 2 {\n            result.append(2)\n        } else if i\
    \ % 2 == 0 {\n            result.append(1 + i / 2)\n        } else {\n       \
    \     result.append(result[i - 1] + result[i - 2] + result[i - 3])\n        }\n\
    \    }\n    return result", "    var result = [1, 3, 2]\n    if n == 0 {\n   \
    \     return []\n    }\n    if n == 1 {\n        return [1]\n    }\n    if n ==\
    \ 2 {\n        return [1, 3]\n    }\n    if n == 3 {\n        return [1, 3, 2]\n\
    \    }\n    for i in 3...n {\n        if i % 2 == 0 {\n            result.append(1\
    \ + i / 2)\n        } else {\n            result.append(result[i - 1] + result[i\
    \ - 2] + result[i - 3])\n        }\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n < 3 {\n        return Array(result[0...n])\n    }\n  \
    \  for i in 3...n {\n        result.append(i % 2 == 0 ? 1 + i / 2 : result[i -\
    \ 1] + result[i - 2] + result[i - 3])\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n == 0 {\n        return [1]\n    } else if n == 1 {\n \
    \       return [1, 3]\n    } else if n == 2 {\n        return [1, 3, 2]\n    }\
    \ else {\n        for i in 3...n {\n            if i % 2 == 0 {\n            \
    \    result.append(1 + i / 2)\n            } else {\n                result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n            }\n        }\n    }\n   \
    \ return result", "    var result = [Int]()\n    for i in 0...n {\n        if\
    \ i == 0 {\n            result.append(1)\n        } else if i == 1 {\n       \
    \     result.append(3)\n        } else if i == 2 {\n            result.append(2)\n\
    \        } else if i % 2 == 0 {\n            result.append(1 + i / 2)\n      \
    \  } else {\n            result.append(result[i - 1] + result[i - 2] + result[i\
    \ - 3])\n        }\n    }\n    return result", "    var result = [1, 3, 2]\n \
    \   guard n > 2 else { return result }\n    for i in 3...n {\n        result.append(i\
    \ % 2 == 0 ? 1 + i / 2 : result[i - 1] + result[i - 2] + result[i + 1])\n    }\n\
    \    return result", "    var result: [Int] = [1, 3, 2]\n    if n == 0 {\n   \
    \     return []\n    } else if n == 1 {\n        return [1]\n    } else if n ==\
    \ 2 {\n        return [1, 3]\n    } else if n == 3 {\n        return [1, 3, 2]\n\
    \    } else {\n        for i in 4...n {\n            if i % 2 == 0 {\n       \
    \         result.append(1 + i / 2)\n            } else {\n                result.append(result[i\
    \ - 1] + result[i - 2] + result[i - 4])\n            }\n        }\n    }\n   \
    \ return result", "    var result = [1, 3, 2]\n    if n == 0 {\n        return\
    \ []\n    }\n    if n == 1 {\n        return [1]\n    }\n    if n == 2 {\n   \
    \     return [1, 3]\n    }\n    if n == 3 {\n        return [1, 3, 2]\n    }\n\
    \    for _ in 4...n {\n        result.append(result[result.count - 1] + result[result.count\
    \ - 2] + result[result.count - 3])\n    }\n    return result", "    var result\
    \ = [1, 3, 2]\n    if n <= 2 {\n        return Array(result[0...n])\n    }\n \
    \   for i in 3...n {\n        result.append(i % 2 == 0 ? 1 + i / 2 : result[i\
    \ - 1] + result[i - 2] + result[i - 3])\n    }\n    return result"]
stop_tokens:
- "\n}"

name: HumanEval_118_get_closest_vowel
language: swift
prompt: "\n/// You are given a word. Your task is to find the closest vowel that stands\
  \ between \n/// two consonants from the right side of the word (case sensitive).\n\
  /// Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n/// find any vowel met the above condition. \n/// You may assume that\
  \ the given string contains English letter only.\n/// Example:\n/// get_closest_vowel(\"\
  yogurt\") ==> \"u\"\n/// get_closest_vowel(\"FULL\") ==> \"U\"\n/// get_closest_vowel(\"\
  quick\") ==> \"\"\n/// get_closest_vowel(\"ab\") ==> \"\"\nfunc get_closest_vowel(word:\
  \ String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(get_closest_vowel(word: \"yogurt\") == \"\
  u\")\nassert(get_closest_vowel(word: \"full\") == \"u\")\nassert(get_closest_vowel(word:\
  \ \"easy\") == \"\")\nassert(get_closest_vowel(word: \"eAsy\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ali\") == \"\")\nassert(get_closest_vowel(word: \"bad\") == \"a\")\nassert(get_closest_vowel(word:\
  \ \"most\") == \"o\")\nassert(get_closest_vowel(word: \"ab\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ba\") == \"\")\nassert(get_closest_vowel(word: \"quick\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"anime\") == \"i\")\nassert(get_closest_vowel(word: \"Asia\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"Above\") == \"o\")"
completions: ["    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var closestVowel = \"\"\n    var closestDistance = 0\n    for (index, char)\
    \ in word.characters.enumerated() {\n        if consonants.contains(char) {\n\
    \            for (i, vowel) in vowels.characters.enumerated() {\n            \
    \    if word.characters.contains(vowel) {\n                    if word.characters.index(of:\
    \ vowel)! > word.characters.index(of: char)! {\n                        if closestDistance\
    \ == 0 {\n                            closestDistance = word.characters.index(of:\
    \ vowel)! - word.characters.index(of: char)!\n                            closestVowel\
    \ = String(vowel)\n                        } else if word.characters.index(of:\
    \ vowel)! - word.characters.index(of: char)! < closestDistance {\n           \
    \                 closestDistance = word.characters.index(of: vowel)! - word.characters.index(of:\
    \ char)!\n                            closestVowel = String(vowel)\n         \
    \               }\n                    }\n                }\n            }\n \
    \       }\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\n    var\
    \ result = \"\"\n    var prev = \"\"\n    for char in word.reversed() {\n    \
    \    if vowels.contains(char) {\n            if prev != \"\" && !vowels.contains(prev)\
    \ {\n                result = String(char)\n                break\n          \
    \  }\n        }\n        prev = String(char)\n    }\n    return result", "   \
    \ var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var consonants = [\"b\"\
    , \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var wordArray = Array(word)\n    for i in 0..<wordArray.count {\n\
    \        if vowels.contains(String(wordArray[i])) {\n            if i == 0 {\n\
    \                continue\n            }\n            if i == wordArray.count\
    \ - 1 {\n                continue\n            }\n            if consonants.contains(String(wordArray[i-1]))\
    \ && consonants.contains(String(wordArray[i+1])) {\n                result = String(wordArray[i])\n\
    \                break\n            }\n        }\n    }\n    return result", " \
    \   let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n \
    \   var result = \"\"\n    var vowelIndex = -1\n    var consonantIndex = -1\n\
    \    for (index, char) in word.characters.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            vowelIndex = index\n        }\n        if consonants.contains(String(char))\
    \ {\n            consonantIndex = index\n        }\n        if vowelIndex != -1\
    \ && consonantIndex != -1 && vowelIndex > consonantIndex {\n            result\
    \ = String(char)\n            break\n        }\n    }\n    return result", " \
    \   let vowels = \"aeiou\"\n    var result = \"\"\n    var distance = word.count\n\
    \    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = word[index]\n        if vowels.contains(char)\
    \ {\n            if i > 0 {\n                let index = word.index(word.startIndex,\
    \ offsetBy: i - 1)\n                let prev = word[index]\n                if\
    \ !vowels.contains(prev) {\n                    if i < distance {\n          \
    \              distance = i\n                        result = String(char)\n \
    \                   }\n                }\n            }\n            if i < word.count\
    \ - 1 {\n                let index = word.index(word.startIndex, offsetBy: i +\
    \ 1)\n                let next = word[index]\n                if !vowels.contains(next)\
    \ {\n                    if i < distance {\n                        distance =\
    \ i\n                        result = String(char)\n                    }\n  \
    \              }\n            }\n        }\n    }\n    return result", "    let\
    \ vowels = \"aeiou\"\n    var closestVowel = \"\"\n    var closestDistance = word.count\n\
    \    for (index, letter) in word.enumerated() {\n        if vowels.contains(letter)\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if !vowels.contains(word[i]) {\n                    distance\
    \ += 1\n                } else {\n                    break\n                }\n\
    \            }\n            if distance < closestDistance {\n                closestDistance\
    \ = distance\n                closestVowel = String(letter)\n            }\n \
    \       }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    var result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n\
    \        let char = word[word.index(word.startIndex, offsetBy: index)]\n     \
    \   if vowels.contains(char) {\n            result = String(char)\n          \
    \  break\n        }\n        index -= 1\n    }\n    return result", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel\
    \ = \"\"\n    var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if consonants.contains(char) {\n            let nextIndex = word.index(word.startIndex,\
    \ offsetBy: index + 1)\n            let nextChar = word[nextIndex]\n         \
    \   if vowels.contains(nextChar) {\n                let distance = word.distance(from:\
    \ word.startIndex, to: nextIndex)\n                if distance < closestDistance\
    \ {\n                    closestDistance = distance\n                    closestVowel\
    \ = String(nextChar)\n                }\n            }\n        }\n    }\n   \
    \ return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var\
    \ consonantIndex = 0\n    var vowelFound = false\n    var consonantFound = false\n\
    \    for i in stride(from: word.count - 1, through: 0, by: -1) {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: i)]\n        if !vowelFound\
    \ {\n            if vowels.contains(String(char)) {\n                vowelFound\
    \ = true\n                vowelIndex = i\n            }\n        }\n        if\
    \ !consonantFound {\n            if consonants.contains(String(char)) {\n    \
    \            consonantFound = true\n                consonantIndex = i\n     \
    \       }\n        }\n        if vowelFound && consonantFound {\n            break\n\
    \        }\n    }\n    if vowelFound && consonantFound {\n        if vowelIndex\
    \ > consonantIndex {\n            closestVowel = String(word[word.index(word.startIndex,\
    \ offsetBy: vowelIndex)])\n        }\n    }\n    return closestVowel", "    let\
    \ vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = word.count - 1\n    while index >= 0\
    \ {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n \
    \       if consonants.contains(char) {\n            break\n        }\n       \
    \ index -= 1\n    }\n    if index < 0 {\n        return result\n    }\n    index\
    \ -= 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            let distance = word.count - index\n            if distance <\
    \ closestDistance {\n                closestDistance = distance\n            \
    \    closestVowel = String(char)\n            }\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestVowelIndex = word.count\n    for\
    \ (index, char) in word.enumerated() {\n        if consonants.contains(char) {\n\
    \            for (i, vowel) in vowels.enumerated() {\n                if word.contains(vowel)\
    \ && word.index(of: vowel)! > word.index(of: char)! && word.index(of: vowel)!\
    \ < closestVowelIndex {\n                    closestVowel = String(vowel)\n  \
    \                  closestVowelIndex = word.index(of: vowel)!\n              \
    \  }\n            }\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel:\
    \ Character?\n    var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if consonants.contains(char) {\n            for (vowelIndex, vowel)\
    \ in vowels.enumerated() {\n                if word.contains(vowel) {\n      \
    \              let vowelDistance = abs(index - word.index(of: vowel)!.encodedOffset)\n\
    \                    if vowelDistance < closestDistance {\n                  \
    \      closestDistance = vowelDistance\n                        closestVowel =\
    \ vowel\n                    }\n                }\n            }\n        }\n\
    \    }\n    return closestVowel != nil ? String(closestVowel!) : \"\"", "    let\
    \ vowels = \"aeiouAEIOU\"\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if vowels.contains(word[i]) {\n                    break\n  \
    \              }\n                distance += 1\n            }\n            if\
    \ distance < closestDistance {\n                closestDistance = distance\n \
    \               closestVowel = String(char)\n            }\n        }\n    }\n\
    \    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var closestVowelIndex = -1\n    var closestConsonantIndex = -1\n    for\
    \ (index, char) in word.characters.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if closestConsonantIndex != -1 {\n                if closestVowelIndex\
    \ == -1 || index - closestConsonantIndex < closestVowelIndex - closestConsonantIndex\
    \ {\n                    closestVowel = String(char)\n                    closestVowelIndex\
    \ = index\n                }\n            }\n        } else if consonants.contains(char)\
    \ {\n            closestConsonantIndex = index\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var vowelIndex\
    \ = -1\n    var consonantIndex = -1\n    for i in 0..<word.count {\n        let\
    \ index = word.index(word.startIndex, offsetBy: i)\n        let char = String(word[index])\n\
    \        if vowels.contains(char) {\n            vowelIndex = i\n        }\n \
    \       if consonants.contains(char) {\n            consonantIndex = i\n     \
    \   }\n        if vowelIndex != -1 && consonantIndex != -1 && vowelIndex < consonantIndex\
    \ {\n            return char\n        }\n    }\n    return \"\"", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: index)]\n        if consonants.contains(char)\
    \ {\n            let nextIndex = word.index(word.startIndex, offsetBy: index +\
    \ 1)\n            let nextChar = word[nextIndex]\n            if vowels.contains(nextChar)\
    \ {\n                result = String(nextChar)\n                break\n      \
    \      }\n        }\n        index -= 1\n    }\n    return result", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var distance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index > 0 && index < word.count - 1 {\n                if\
    \ !vowels.contains(String(word[word.index(word.startIndex, offsetBy: index - 1)]))\
    \ && !vowels.contains(String(word[word.index(word.startIndex, offsetBy: index\
    \ + 1)])) {\n                    if index < distance {\n                     \
    \   distance = index\n                        result = String(char)\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    for (index,\
    \ letter) in word.reversed().enumerated() {\n        if vowels.contains(letter)\
    \ {\n            if index == 0 {\n                return String(letter)\n    \
    \        } else if !vowels.contains(word[word.index(word.endIndex, offsetBy: -index\
    \ - 1)]) {\n                return String(letter)\n            }\n        }\n\
    \    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"\
    x\", \"y\", \"z\"]\n    var result = \"\"\n    var index = 0\n    var isVowel\
    \ = false\n    var isConsonant = false\n    var isFirst = true\n    var isLast\
    \ = false\n    var isFound = false\n    var isFirstVowel = false\n    var isLastVowel\
    \ = false\n    var isFirstConsonant = false\n    var isLastConsonant = false\n\
    \    var isFirstConsonantFound = false\n    var isLastConsonantFound = false\n\
    \    var firstConsonantIndex = 0\n    var lastConsonantIndex = 0\n    var firstVowelIndex\
    \ = 0\n    var lastVowelIndex = 0\n    var firstConsonant = \"\"\n    var lastConsonant\
    \ = \"\"\n    var firstVowel = \"\"\n    var lastVowel = \"\"\n    var temp =\
    \ \"\"\n    var tempIndex = 0\n    var tempIndex2 = 0\n    var tempIndex3 = 0\n\
    \    var tempIndex4 = 0\n    var tempIndex5 = 0\n    var tempIndex6 = 0\n    var\
    \ tempIndex7 = 0\n    var tempIndex8 = 0\n    var tempIndex9 = 0\n    var tempIndex10\
    \ = 0\n    var tempIndex11 = 0\n    var tempIndex12 = 0\n    var tempIndex13 =\
    \ 0\n    var tempIndex14 = 0\n    var tempIndex15 = 0\n    var tempIndex16 = 0\n\
    \    var tempIndex17 = 0\n    var tempIndex18 = 0\n    var tempIndex19 = 0\n \
    \   var tempIndex20 = 0\n    var tempIndex21 = 0\n    var tempIndex22 = 0\n  \
    \  var tempIndex23 = 0\n    var tempIndex24 = 0\n    var tempIndex25 = 0\n   \
    \ var tempIndex26 = 0\n    var tempIndex27 = 0\n    var tempIndex28 = 0\n    var\
    \ temp", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if consonants.contains(String(char).lowercased())\
    \ {\n            for (index2, char2) in word.enumerated() {\n                if\
    \ vowels.contains(String(char2).lowercased()) {\n                    if index2\
    \ > index && index2 - index < closestDistance {\n                        closestDistance\
    \ = index2 - index\n                        closestVowel = String(char2)\n   \
    \                 }\n                }\n            }\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let\
    \ consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"]\n    var vowel = \"\"\n    var index = 0\n    for i in word.characters.indices\
    \ {\n        if vowels.contains(String(word[i])) {\n            vowel = String(word[i])\n\
    \            index = word.characters.distance(from: word.startIndex, to: i)\n\
    \        }\n    }\n    if vowel == \"\" {\n        return \"\"\n    }\n    var\
    \ left = \"\"\n    var right = \"\"\n    for i in 0..<index {\n        if consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: i)])) {\n            left = String(word[word.index(word.startIndex,\
    \ offsetBy: i)])\n        }\n    }\n    for i in index..<word.characters.count\
    \ {\n        if consonants.contains(String(word[word.index(word.startIndex, offsetBy:\
    \ i)])) {\n            right = String(word[word.index(word.startIndex, offsetBy:\
    \ i)])\n        }\n    }\n    if left == \"\" || right == \"\" {\n        return\
    \ \"\"\n    }\n    return vowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestDistance =\
    \ word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                let char = String(word[word.index(word.startIndex, offsetBy:\
    \ i)])\n                if consonants.contains(char) {\n                    distance\
    \ += 1\n                } else {\n                    break\n                }\n\
    \            }\n            if distance < closestDistance {\n                closestDistance\
    \ = distance\n                closestVowel = String(char)\n            }\n   \
    \     }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var result = \"\"\n    var index = word.count - 1\n  \
    \  while index > 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n \
    \   var index = word.count - 1\n    while index > 0 {\n        let index1 = word.index(word.startIndex,\
    \ offsetBy: index)\n        let index2 = word.index(word.startIndex, offsetBy:\
    \ index - 1)\n        let char1 = String(word[index1])\n        let char2 = String(word[index2])\n\
    \        if vowels.contains(char1) && !vowels.contains(char2) {\n            result\
    \ = char1\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var result = \"\"\n    var index = 0\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(char) {\n            result = String(char)\n \
    \           break\n        }\n        if consonants.contains(char) {\n       \
    \     if index > 0 {\n                result = \"\"\n                break\n \
    \           }\n            index += 1\n        }\n    }\n    return result", " \
    \   let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n \
    \   var closestVowel = \"\"\n    var closestIndex = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   if index > 0 && consonants.contains(word[word.index(word.startIndex, offsetBy:\
    \ index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestIndex {\n  \
    \                      closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var lastConsonant\
    \ = \"\"\n    var lastVowel = \"\"\n    for char in word.characters {\n      \
    \  if vowels.contains(String(char).lowercased()) {\n            lastVowel = String(char)\n\
    \        } else if consonants.contains(String(char).lowercased()) {\n        \
    \    lastConsonant = String(char)\n        }\n        if lastConsonant != \"\"\
    \ && lastVowel != \"\" {\n            result = lastVowel\n            break\n\
    \        }\n    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var vowel = \"\"\n    for i in stride(from:\
    \ word.count - 1, through: 0, by: -1) {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let letter = String(word[index])\n        if consonants.contains(letter)\
    \ {\n            for j in stride(from: i - 1, through: 0, by: -1) {\n        \
    \        let index = word.index(word.startIndex, offsetBy: j)\n              \
    \  let letter = String(word[index])\n                if vowels.contains(letter)\
    \ {\n                    vowel = letter\n                    break\n         \
    \       }\n            }\n            break\n        }\n    }\n    return vowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var index = 0\n    for char in word.characters.reversed() {\n  \
    \      if vowels.contains(String(char)) {\n            result = String(char)\n\
    \            break\n        }\n        if consonants.contains(String(char)) {\n\
    \            if index == 0 {\n                return \"\"\n            }\n   \
    \         return result\n        }\n        index += 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var closestVowelIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                if !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    if index < closestVowelIndex\
    \ {\n                        closestVowelIndex = index\n                     \
    \   closestVowel = String(char)\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return closestVowel", "    let vowels = \"\
    aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\
    \n    for (index, char) in word.characters.enumerated() {\n        if index ==\
    \ 0 || index == word.characters.count - 1 {\n            continue\n        }\n\
    \        if consonants.contains(String(char)) {\n            if let index = word.characters.index(of:\
    \ char) {\n                let left = word.substring(to: index)\n            \
    \    let right = word.substring(from: index)\n                let leftVowel =\
    \ left.characters.filter { vowels.contains(String($0)) }\n                let\
    \ rightVowel = right.characters.filter { vowels.contains(String($0)) }\n     \
    \           if leftVowel.count > 0 && rightVowel.count > 0 {\n               \
    \     result = String(leftVowel.last!)\n                    break\n          \
    \      }\n            }\n        }\n    }\n    return result", "    let vowels\
    \ = \"aeiou\"\n    var closestVowel: Character?\n    var closestVowelIndex = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index < closestVowelIndex {\n                closestVowel\
    \ = char\n                closestVowelIndex = index\n            }\n        }\n\
    \    }\n    return closestVowel != nil ? String(closestVowel!) : \"\"", "    let\
    \ vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count - 1\n\
    \    while index >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n        if vowels.contains(char) {\n            result = String(char)\n\
    \            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var index = 0\n    for char in word.reversed() {\n        if vowels.contains(String(char))\
    \ {\n            if index > 0 && consonants.contains(String(word[word.index(word.endIndex,\
    \ offsetBy: -(index + 1))])) {\n                result = String(char)\n      \
    \          break\n            }\n        }\n        index += 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result\
    \ = \"\"\n    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index > 0 && index < word.count - 1 {\n                if\
    \ !vowels.contains(String(word[word.index(word.startIndex, offsetBy: index - 1)]))\
    \ && !vowels.contains(String(word[word.index(word.startIndex, offsetBy: index\
    \ + 1)])) {\n                    result = String(char)\n                    break\n\
    \                }\n            }\n        }\n    }\n    return result", "   \
    \ let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\"\
    , \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel\
    \ = \"\"\n    var closestVowelIndex = 0\n    var closestConsonantIndex = 0\n \
    \   var closestConsonant = \"\"\n    var wordArray = Array(word)\n    for i in\
    \ 0..<wordArray.count {\n        if vowels.contains(String(wordArray[i]).lowercased())\
    \ {\n            closestVowel = String(wordArray[i])\n            closestVowelIndex\
    \ = i\n            break\n        }\n    }\n    for i in (0..<wordArray.count).reversed()\
    \ {\n        if consonants.contains(String(wordArray[i]).lowercased()) {\n   \
    \         closestConsonant = String(wordArray[i])\n            closestConsonantIndex\
    \ = i\n            break\n        }\n    }\n    if closestVowelIndex < closestConsonantIndex\
    \ {\n        return closestVowel\n    } else {\n        return \"\"\n    }", " \
    \   let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n \
    \   var closestVowel = \"\"\n    var closestVowelIndex = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   if index > 0 && index < word.count - 1 {\n                if consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestVowelIndex {\n\
    \                        closestVowelIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index\
    \ = 0\n    var vowelIndex = 0\n    var consonantIndex = 0\n    var vowelFound\
    \ = false\n    var consonantFound = false\n    for char in word.characters.reversed()\
    \ {\n        if !vowelFound && vowels.contains(char) {\n            vowelFound\
    \ = true\n            vowelIndex = index\n        }\n        if !consonantFound\
    \ && consonants.contains(char) {\n            consonantFound = true\n        \
    \    consonantIndex = index\n        }\n        if vowelFound && consonantFound\
    \ {\n            if vowelIndex < consonantIndex {\n                result = String(char)\n\
    \            }\n            break\n        }\n        index += 1\n    }\n    return\
    \ result", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestIndex = 0\n    var index = word.count\
    \ - 1\n    var foundVowel = false\n    while index >= 0 {\n        let char =\
    \ word[word.index(word.startIndex, offsetBy: index)]\n        if consonants.contains(char)\
    \ {\n            if foundVowel {\n                return closestVowel\n      \
    \      }\n        } else if vowels.contains(char) {\n            foundVowel =\
    \ true\n            if index > closestIndex {\n                closestVowel =\
    \ String(char)\n                closestIndex = index\n            }\n        }\n\
    \        index -= 1\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closest = \"\"\n   \
    \ var closestIndex = word.count\n    for (index, char) in word.enumerated() {\n\
    \        if vowels.contains(char) {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestIndex {\n  \
    \                      closest = String(char)\n                        closestIndex\
    \ = index\n                    }\n                }\n            }\n        }\n\
    \    }\n    return closest", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    var result = \"\"\n    var index = word.count - 1\n    while index >=\
    \ 0 {\n        if vowels.contains(String(word[word.index(word.startIndex, offsetBy:\
    \ index)])) {\n            result = String(word[word.index(word.startIndex, offsetBy:\
    \ index)])\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var result = \"\"\n    var index = 0\n    for char in word.reversed() {\n\
    \        if consonants.contains(String(char)) {\n            for char2 in word.reversed()\
    \ {\n                if vowels.contains(String(char2)) {\n                   \
    \ if index > 0 {\n                        result = String(char2)\n           \
    \             break\n                    }\n                }\n              \
    \  index += 1\n            }\n            break\n        }\n    }\n    return\
    \ result", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if consonants.contains(char) {\n     \
    \       for (index2, char2) in word.enumerated() {\n                if vowels.contains(char2)\
    \ {\n                    if index2 > index && index2 - index < closestDistance\
    \ {\n                        closestDistance = index2 - index\n              \
    \          closestVowel = String(char2)\n                    }\n             \
    \   }\n            }\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel\
    \ = \"\"\n    var closestDistance = Int.max\n    for (index, char) in word.enumerated()\
    \ {\n        if consonants.contains(char) {\n            for (vowelIndex, vowel)\
    \ in vowels.enumerated() {\n                if word.contains(vowel) {\n      \
    \              let vowelIndex = word.index(of: vowel)!\n                    let\
    \ distance = word.distance(from: vowelIndex, to: index)\n                    if\
    \ distance < closestDistance {\n                        closestDistance = distance\n\
    \                        closestVowel = String(vowel)\n                    }\n\
    \                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if consonants.contains(char) {\n     \
    \       for (index2, char2) in word.enumerated() {\n                if vowels.contains(char2)\
    \ {\n                    if index2 > index && index2 - index < closestDistance\
    \ {\n                        closestDistance = index2 - index\n              \
    \          closestVowel = String(char2)\n                    }\n             \
    \   }\n            }\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.characters.count -\
    \ 1 && consonants.contains(word[word.index(word.startIndex, offsetBy: index +\
    \ 1)]) {\n                    vowel = String(char)\n                }\n      \
    \      }\n        }\n    }\n    return vowel", "    let vowels = \"aeiou\"\n \
    \   var result = \"\"\n    for i in (0..<word.count).reversed() {\n        let\
    \ index = word.index(word.startIndex, offsetBy: i)\n        let char = word[index]\n\
    \        if vowels.contains(char) {\n            result = String(char)\n     \
    \       break\n        }\n    }\n    return result", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n   \
    \ var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if consonants.contains(String(char).lowercased()) {\n           \
    \ for (i, vowel) in vowels.enumerated() {\n                if word.contains(vowel)\
    \ {\n                    let distance = word.distance(from: word.index(of: vowel)!,\
    \ to: word.index(of: char)!)\n                    if distance < closestDistance\
    \ {\n                        closestDistance = distance\n                    \
    \    closestVowel = vowel\n                    }\n                }\n        \
    \    }\n        }\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var\
    \ index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(char) {\n            index\
    \ -= 1\n            continue\n        }\n        if vowels.contains(char) {\n\
    \            result = String(char)\n            break\n        }\n        index\
    \ -= 1\n    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var vowel = \"\"\n    var index = 0\n    for\
    \ i in word.characters.reversed() {\n        if vowels.contains(String(i)) {\n\
    \            vowel = String(i)\n            break\n        }\n        index +=\
    \ 1\n    }\n    if vowel == \"\" {\n        return \"\"\n    }\n    for i in word.characters.reversed()\
    \ {\n        if consonants.contains(String(i)) {\n            break\n        }\n\
    \        index += 1\n    }\n    if index == word.characters.count {\n        return\
    \ \"\"\n    }\n    return vowel", "    let vowels = \"aeiou\"\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(char)\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ index -= 1\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var vowelIndex\
    \ = 0\n    var consonantIndex = 0\n    for i in (0..<word.count).reversed() {\n\
    \        let index = word.index(word.startIndex, offsetBy: i)\n        let char\
    \ = String(word[index])\n        if vowels.contains(char) {\n            vowelIndex\
    \ = i\n        }\n        if consonants.contains(char) {\n            consonantIndex\
    \ = i\n            break\n        }\n    }\n    if vowelIndex > consonantIndex\
    \ {\n        closestVowel = String(word[word.index(word.startIndex, offsetBy:\
    \ vowelIndex)])\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\n\
    \    var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   var distance = word.count - index\n            if distance < closestDistance\
    \ {\n                closestDistance = distance\n                closestVowel\
    \ = String(char)\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiou\"\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                let char = word[word.index(word.startIndex, offsetBy: i)]\n \
    \               if vowels.contains(char) {\n                    break\n      \
    \          }\n                distance += 1\n            }\n            if distance\
    \ < closestDistance {\n                closestDistance = distance\n          \
    \      closestVowel = String(char)\n            }\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var result = \"\"\n    var index = word.count - 1\n    while index >= 0\
    \ {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n \
    \       if consonants.contains(char) {\n            index -= 1\n            continue\n\
    \        }\n        if vowels.contains(char) {\n            result = String(char)\n\
    \            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var prev = \"\"\n    var curr = \"\"\n    for char in word.reversed()\
    \ {\n        if vowels.contains(String(char)) {\n            if consonants.contains(prev)\
    \ && consonants.contains(curr) {\n                result = String(char)\n    \
    \            break\n            }\n        }\n        curr = prev\n        prev\
    \ = String(char)\n    }\n    return result", "    let vowels = \"aeiou\"\n   \
    \ let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var distance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if consonants.contains(char)\
    \ {\n            for vowel in vowels {\n                if word.contains(vowel)\
    \ {\n                    let indexOfVowel = word.index(of: vowel)\n          \
    \          if indexOfVowel! > index {\n                        if indexOfVowel!.encodedOffset\
    \ - index < distance {\n                            distance = indexOfVowel!.encodedOffset\
    \ - index\n                            result = String(vowel)\n              \
    \          }\n                    }\n                }\n            }\n      \
    \  }\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var result = \"\"\n  \
    \  var index = 0\n    for char in word.reversed() {\n        if vowels.contains(char)\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ if consonants.contains(char) {\n            result = \"\"\n            break\n\
    \        }\n        index += 1\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = -1\n    var currentVowelIndex = -1\n    var currentConsonantIndex = -1\n \
    \   for (index, char) in word.characters.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            currentVowelIndex = index\n            if currentConsonantIndex\
    \ != -1 && currentVowelIndex - currentConsonantIndex < closestVowelIndex - currentConsonantIndex\
    \ {\n                closestVowel = String(char)\n                closestVowelIndex\
    \ = currentVowelIndex\n            }\n        } else {\n            currentConsonantIndex\
    \ = index\n        }\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n\
    \    var closestVowelDistance = 0\n    for (i, char) in word.characters.enumerated()\
    \ {\n        if consonants.contains(char) {\n            for (j, vowel) in vowels.characters.enumerated()\
    \ {\n                if word.characters.contains(vowel) {\n                  \
    \  let vowelIndex = word.characters.index(of: vowel)!\n                    let\
    \ distance = word.distance(from: vowelIndex, to: word.endIndex) - 1\n        \
    \            if distance > closestVowelDistance {\n                        closestVowelDistance\
    \ = distance\n                        closestVowel = String(vowel)\n         \
    \           }\n                }\n            }\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let\
    \ consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"]\n    var closestVowel = \"\"\n    var closestDistance = 0\n    for (index,\
    \ char) in word.characters.enumerated() {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            var distance = 0\n            for i in index+1..<word.characters.count\
    \ {\n                if consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: i)]).lowercased()) {\n                    distance = i - index\n \
    \                   break\n                }\n            }\n            if distance\
    \ > 0 && (closestDistance == 0 || distance < closestDistance) {\n            \
    \    closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiou\"\n    var result = \"\"\n    var index = 0\n    for char in word.reversed()\
    \ {\n        if vowels.contains(char) {\n            result = String(char)\n \
    \           break\n        }\n        index += 1\n    }\n    if index > 0 {\n\
    \        let next = word.index(word.endIndex, offsetBy: -index - 1)\n        if\
    \ vowels.contains(word[next]) {\n            result = \"\"\n        }\n    }\n\
    \    return result", "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   var result = \"\"\n    var index = 0\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(String(char)) {\n            result = String(char)\n\
    \            break\n        }\n        index += 1\n    }\n    if index == word.characters.count\
    \ {\n        return \"\"\n    }\n    for char in word.characters.reversed() {\n\
    \        if !vowels.contains(String(char)) {\n            break\n        }\n \
    \       index += 1\n    }\n    if index == word.characters.count {\n        return\
    \ \"\"\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if consonants.contains(String(char).lowercased())\
    \ {\n            for (index2, char2) in word.enumerated() {\n                if\
    \ vowels.contains(String(char2).lowercased()) {\n                    if index2\
    \ > index && index2 - index < closestDistance {\n                        closestDistance\
    \ = index2 - index\n                        closestVowel = String(char2)\n   \
    \                 }\n                }\n            }\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var result = \"\"\n    var isConsonant = false\n    var isVowel = false\n\
    \    for char in word.characters.reversed() {\n        if vowels.contains(char)\
    \ {\n            if isConsonant {\n                result = String(char)\n   \
    \             break\n            }\n            isVowel = true\n        } else\
    \ if consonants.contains(char) {\n            if isVowel {\n                result\
    \ = String(char)\n                break\n            }\n            isConsonant\
    \ = true\n        }\n    }\n    return result", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\"\
    , \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index > 0 && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) {\n                if index < word.count - 1 && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    if index < closestVowelIndex\
    \ {\n                        closestVowel = String(char)\n                   \
    \     closestVowelIndex = index\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return closestVowel", "    let vowels = \"\
    aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\
    \n    for (index, char) in word.reversed().enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index == 0 {\n                break\n            }\n     \
    \       if consonants.contains(word[word.index(word.endIndex, offsetBy: -index\
    \ - 1)]) {\n                result = String(char)\n                break\n   \
    \         }\n        }\n    }\n    return result", "    let vowels = \"aeiou\"\
    \n    var result = \"\"\n    var index = word.count - 1\n    while index >= 0\
    \ {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n \
    \       if vowels.contains(char) {\n            result = String(char)\n      \
    \      break\n        }\n        index -= 1\n    }\n    return result", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var\
    \ index = word.count - 1\n    while index > 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var closestVowel = \"\"\n    var closestDistance = Int.max\n    for (index,\
    \ char) in word.enumerated() {\n        if consonants.contains(char) {\n     \
    \       for (index2, char2) in word.enumerated() {\n                if vowels.contains(char2)\
    \ {\n                    if index2 > index && index2 - index < closestDistance\
    \ {\n                        closestDistance = index2 - index\n              \
    \          closestVowel = String(char2)\n                    }\n             \
    \   }\n            }\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = word[index]\n        if consonants.contains(char) {\n            if index\
    \ == word.count - 1 {\n                return \"\"\n            }\n          \
    \  let nextChar = word[index + 1]\n            if vowels.contains(nextChar) {\n\
    \                result = String(nextChar)\n                break\n          \
    \  }\n        }\n        index -= 1\n    }\n    return result", "    let vowels\
    \ = \"aeiou\"\n    var closestVowel = \"\"\n    var closestDistance = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if vowels.contains(word[i]) {\n                    break\n  \
    \              }\n                distance += 1\n            }\n            if\
    \ distance < closestDistance {\n                closestDistance = distance\n \
    \               closestVowel = String(char)\n            }\n        }\n    }\n\
    \    return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var\
    \ consonantIndex = 0\n    var wordArray = Array(word)\n    var wordArrayReversed\
    \ = Array(word.reversed())\n    for i in 0..<wordArray.count {\n        if vowels.contains(String(wordArray[i]).lowercased())\
    \ {\n            vowelIndex = i\n        }\n        if consonants.contains(String(wordArray[i]).lowercased())\
    \ {\n            consonantIndex = i\n        }\n        if vowelIndex > consonantIndex\
    \ {\n            closestVowel = String(wordArray[vowelIndex])\n            break\n\
    \        }\n    }\n    for i in 0..<wordArrayReversed.count {\n        if vowels.contains(String(wordArrayReversed[i]).lowercased())\
    \ {\n            vowelIndex = i\n        }\n        if consonants.contains(String(wordArrayReversed[i]).lowercased())\
    \ {\n            consonantIndex = i\n        }\n        if vowelIndex > consonantIndex\
    \ {\n            closestVowel = String(wordArrayReversed[vowelIndex])\n      \
    \      break\n        }\n    }\n    return closestVowel", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n\
    \    var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if consonants.contains(String(char).lowercased()) {\n           \
    \ for i in index..<word.count {\n                if vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: i)]).lowercased()) {\n                    if i - index < closestDistance\
    \ {\n                        closestDistance = i - index\n                   \
    \     closestVowel = String(word[word.index(word.startIndex, offsetBy: i)])\n\
    \                    }\n                    break\n                }\n       \
    \     }\n        }\n    }\n    return closestVowel", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var index\
    \ = 0\n    var vowelIndex = 0\n    var consonantIndex = 0\n    var vowelCount\
    \ = 0\n    var consonantCount = 0\n    for letter in word.characters {\n     \
    \   if vowels.contains(String(letter).lowercased()) {\n            vowelCount\
    \ += 1\n            vowelIndex = index\n        }\n        if consonants.contains(String(letter).lowercased())\
    \ {\n            consonantCount += 1\n            consonantIndex = index\n   \
    \     }\n        index += 1\n    }\n    if vowelCount == 0 || consonantCount ==\
    \ 0 {\n        return \"\"\n    }\n    if vowelCount == 1 && consonantCount ==\
    \ 1 {\n        return \"\"\n    }\n    if vowelCount == 1 && consonantCount >\
    \ 1 {\n        return String(word.characters.suffix(from: word.index(word.startIndex,\
    \ offsetBy: vowelIndex)))\n    }\n    if vowelCount > 1 && consonantCount == 1\
    \ {\n        return String(word.characters.prefix(upTo: word.index(word.startIndex,\
    \ offsetBy: vowelIndex)))\n    }\n    if vowelCount > 1 && consonantCount > 1\
    \ {\n        if vowelIndex > consonantIndex {\n            return String(word.characters.prefix(upTo:\
    \ word.index(word.startIndex, offsetBy: vowelIndex)))\n        } else {\n    \
    \        return String(word.characters.suffix(from: word.index(word.startIndex,\
    \ offsetBy: vowelIndex)))\n        }\n    }\n    return result", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel\
    \ = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n    for i in stride(from:\
    \ word.count - 1, through: 0, by: -1) {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: i)]\n        if consonants.contains(char) {\n            consonantIndex\
    \ = i\n            break\n        }\n    }\n    for i in stride(from: consonantIndex\
    \ - 1, through: 0, by: -1) {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: i)]\n        if vowels.contains(char) {\n            vowelIndex =\
    \ i\n            break\n        }\n    }\n    if vowelIndex > 0 {\n        closestVowel\
    \ = String(word[word.index(word.startIndex, offsetBy: vowelIndex)])\n    }\n \
    \   return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var result = \"\"\n    var index = word.count - 1\n    while index > 0\
    \ {\n        let char = String(word[word.index(word.startIndex, offsetBy: index)])\n\
    \        if vowels.contains(char) {\n            result = char\n            break\n\
    \        }\n        index -= 1\n    }\n    return result", "    let vowels = \"\
    aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\
    \n    var index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(char) {\n            if index\
    \ == word.count - 1 {\n                return \"\"\n            }\n          \
    \  let nextChar = word[word.index(word.startIndex, offsetBy: index + 1)]\n   \
    \         if vowels.contains(nextChar) {\n                return String(nextChar)\n\
    \            }\n        }\n        index -= 1\n    }\n    return result", "  \
    \  let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel\
    \ = \"\"\n    var closestVowelIndex = -1\n    var lastConsonantIndex = -1\n  \
    \  for (index, char) in word.lowercased().characters.enumerated() {\n        if\
    \ vowels.contains(String(char)) {\n            if lastConsonantIndex != -1 &&\
    \ index - lastConsonantIndex < closestVowelIndex {\n                closestVowel\
    \ = String(char)\n                closestVowelIndex = index - lastConsonantIndex\n\
    \            }\n        } else if consonants.contains(String(char)) {\n      \
    \      lastConsonantIndex = index\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var closestVowelIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index < closestVowelIndex\
    \ {\n                closestVowelIndex = index\n                closestVowel =\
    \ String(char)\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n \
    \   var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if consonants.contains(char) {\n     \
    \       for (i, vowel) in vowels.enumerated() {\n                if word.contains(vowel)\
    \ {\n                    let distance = abs(index - word.index(of: vowel)!)\n\
    \                    if distance < closestDistance {\n                       \
    \ closestDistance = distance\n                        closestVowel = String(vowel)\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestDistance = 0\n  \
    \  for (index, letter) in word.enumerated() {\n        if vowels.contains(String(letter).lowercased())\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if consonants.contains(String(word[i]).lowercased()) {\n    \
    \                distance += 1\n                } else {\n                   \
    \ break\n                }\n            }\n            if distance > closestDistance\
    \ {\n                closestDistance = distance\n                closestVowel\
    \ = String(letter)\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var lastConsonant = \"\"\n    var lastVowel = \"\"\n    for letter\
    \ in word.lowercased() {\n        if vowels.contains(String(letter)) {\n     \
    \       lastVowel = String(letter)\n        } else if consonants.contains(String(letter))\
    \ {\n            if lastVowel != \"\" {\n                result = lastVowel\n\
    \            }\n            lastConsonant = String(letter)\n        }\n    }\n\
    \    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   var result = \"\"\n    var index = word.count - 1\n    while index > 0 {\n\
    \        let char = word[word.index(word.startIndex, offsetBy: index)]\n     \
    \   if vowels.contains(String(char)) {\n            result = String(char)\n  \
    \          break\n        }\n        index -= 1\n    }\n    return result", " \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var index = word.count\
    \ - 1\n    while index > 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            let\
    \ prevChar = word[word.index(word.startIndex, offsetBy: index - 1)]\n        \
    \    if !vowels.contains(String(prevChar)) {\n                return String(char)\n\
    \            }\n        }\n        index -= 1\n    }\n    return \"\"", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"\
    c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result =\
    \ \"\"\n    var index = 0\n    var lastConsonant = \"\"\n    var firstVowel =\
    \ \"\"\n    var firstVowelIndex = 0\n    var lastConsonantIndex = 0\n    for letter\
    \ in word.lowercased() {\n        if vowels.contains(String(letter)) {\n     \
    \       firstVowel = String(letter)\n            firstVowelIndex = index\n   \
    \     }\n        if consonants.contains(String(letter)) {\n            lastConsonant\
    \ = String(letter)\n            lastConsonantIndex = index\n        }\n      \
    \  index += 1\n    }\n    if firstVowelIndex > lastConsonantIndex {\n        result\
    \ = firstVowel\n    }\n    return result", "    let vowels = \"aeiou\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    for i in\
    \ (0..<word.count).reversed() {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            result = char\n            break\n        }\n        if consonants.contains(char)\
    \ {\n            break\n        }\n    }\n    return result", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var index\
    \ = word.count - 1\n    while index > 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var index = 0\n    for char in word.characters.reversed() {\n  \
    \      if vowels.contains(String(char)) {\n            result = String(char)\n\
    \            break\n        }\n        if consonants.contains(String(char)) {\n\
    \            if index > 0 {\n                break\n            }\n          \
    \  index += 1\n        }\n    }\n    return result", "    let vowels = \"aeiou\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var\
    \ index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    if\
    \ result.isEmpty {\n        return result\n    }\n    index -= 1\n    while index\
    \ >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n\
    \        if consonants.contains(char) {\n            break\n        }\n      \
    \  index -= 1\n    }\n    if index < 0 {\n        return \"\"\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if consonants.contains(char) {\n     \
    \       let nextIndex = word.index(word.startIndex, offsetBy: index + 1)\n   \
    \         let nextChar = word[nextIndex]\n            if vowels.contains(nextChar)\
    \ {\n                let distance = word.distance(from: word.startIndex, to: nextIndex)\n\
    \                if distance < closestDistance {\n                    closestDistance\
    \ = distance\n                    closestVowel = String(nextChar)\n          \
    \      }\n            }\n        }\n    }\n    return closestVowel", "    let\
    \ vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    var consonant = \"\"\n    var closestVowel = \"\"\n\
    \    var closestDistance = 0\n    for char in word.characters {\n        if vowels.containsString(String(char))\
    \ {\n            vowel = String(char)\n        } else if consonants.containsString(String(char))\
    \ {\n            consonant = String(char)\n        }\n        if vowel != \"\"\
    \ && consonant != \"\" {\n            let distance = word.characters.distanceOf(vowel,\
    \ from: word.characters.indexOf(consonant)!)\n            if closestDistance ==\
    \ 0 || distance < closestDistance {\n                closestDistance = distance\n\
    \                closestVowel = vowel\n            }\n            vowel = \"\"\
    \n            consonant = \"\"\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n \
    \   var result = \"\"\n    var closest = Int.max\n    for (index, char) in word.lowercased().enumerated()\
    \ {\n        if consonants.contains(char) {\n            for (i, vowel) in vowels.enumerated()\
    \ {\n                if word.lowercased().contains(vowel) {\n                \
    \    if index - word.lowercased().firstIndex(of: vowel)! < closest {\n       \
    \                 closest = index - word.lowercased().firstIndex(of: vowel)!\n\
    \                        result = String(vowel)\n                    }\n     \
    \           }\n            }\n        }\n    }\n    return result", "    let vowels\
    \ = \"aeiou\"\n    var lastVowel = \"\"\n    for (i, c) in word.characters.enumerated()\
    \ {\n        if vowels.contains(String(c)) {\n            lastVowel = String(c)\n\
    \        } else if lastVowel != \"\" {\n            if i == word.characters.count\
    \ - 1 {\n                return lastVowel\n            } else if vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: i + 1)])) {\n                return lastVowel\n            }\n   \
    \     }\n    }\n    return \"\"", "    let vowels = \"aeiou\"\n    var closestVowel\
    \ = \"\"\n    var closestVowelDistance = word.count\n    for (index, char) in\
    \ word.enumerated() {\n        if vowels.contains(char) {\n            var distance\
    \ = word.count - index\n            if distance < closestVowelDistance {\n   \
    \             closestVowelDistance = distance\n                closestVowel =\
    \ String(char)\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n\
    \    var index = word.count - 1\n    while index > 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            result\
    \ = String(char)\n            break\n        }\n        index -= 1\n    }\n  \
    \  return result", "    let vowels = \"aeiou\"\n    var closestVowel = \"\"\n\
    \    var closestDistance = 0\n    for (index, letter) in word.reversed().enumerated()\
    \ {\n        if vowels.contains(letter) {\n            closestVowel = String(letter)\n\
    \            closestDistance = index\n            break\n        }\n    }\n  \
    \  for (index, letter) in word.reversed().enumerated() {\n        if vowels.contains(letter)\
    \ && index < closestDistance {\n            closestVowel = String(letter)\n  \
    \          closestDistance = index\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiou\"\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if !vowels.contains(word[i]) {\n                    distance\
    \ += 1\n                } else {\n                    break\n                }\n\
    \            }\n            if distance < closestDistance {\n                closestDistance\
    \ = distance\n                closestVowel = String(char)\n            }\n   \
    \     }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var result = \"\"\n    var index = word.count - 1\n  \
    \  while index > 0 {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n        if vowels.contains(String(char)) {\n            result = String(char)\n\
    \            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if consonants.contains(char) {\n     \
    \       for (index2, char2) in word.enumerated() {\n                if vowels.contains(char2)\
    \ {\n                    if index2 > index && index2 - index < closestDistance\
    \ {\n                        closestDistance = index2 - index\n              \
    \          closestVowel = String(char2)\n                    }\n             \
    \   }\n            }\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel =\
    \ \"\"\n    var closestDistance = 0\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(String(char).lowercased()) {\n            var\
    \ distance = 0\n            for i in index..<word.characters.count {\n       \
    \         if consonants.contains(String(word[word.index(word.startIndex, offsetBy:\
    \ i)]).lowercased()) {\n                    distance += 1\n                } else\
    \ {\n                    break\n                }\n            }\n           \
    \ if distance > closestDistance {\n                closestDistance = distance\n\
    \                closestVowel = String(char)\n            }\n        }\n    }\n\
    \    return closestVowel", "    let vowels = \"aeiou\"\n    let consonants = \"\
    bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for (i, char) in word.enumerated() {\n        if consonants.contains(char)\
    \ {\n            for (j, vowel) in vowels.enumerated() {\n                if word.contains(vowel)\
    \ {\n                    if abs(i - word.firstIndex(of: vowel)!) < closestDistance\
    \ {\n                        closestDistance = abs(i - word.firstIndex(of: vowel)!)\n\
    \                        closestVowel = String(vowel)\n                    }\n\
    \                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var closest = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            let left = word.index(word.startIndex,\
    \ offsetBy: index)\n            let right = word.index(word.startIndex, offsetBy:\
    \ index + 1)\n            if consonants.contains(String(word[left])) && consonants.contains(String(word[right]))\
    \ {\n                if index < closest {\n                    closest = index\n\
    \                    result = String(char)\n                }\n            }\n\
    \        }\n    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel: String = \"\"\n    var closestVowelDistance:\
    \ Int = 0\n    for (index, char) in word.characters.enumerated() {\n        if\
    \ consonants.contains(char) {\n            for (index2, char2) in word.characters.enumerated()\
    \ {\n                if vowels.contains(char2) {\n                    if index2\
    \ > index {\n                        if closestVowelDistance == 0 {\n        \
    \                    closestVowelDistance = index2 - index\n                 \
    \           closestVowel = String(char2)\n                        } else if index2\
    \ - index < closestVowelDistance {\n                            closestVowelDistance\
    \ = index2 - index\n                            closestVowel = String(char2)\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    for\
    \ (index, char) in word.characters.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.characters.count -\
    \ 1 && consonants.contains(word[word.index(word.startIndex, offsetBy: index +\
    \ 1)]) {\n                    result = String(char)\n                }\n     \
    \       }\n        }\n    }\n    return result", "    let vowels = \"aeiou\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var\
    \ index = 0\n    for char in word.characters.reversed() {\n        if consonants.contains(char)\
    \ {\n            for char2 in word.characters.reversed() {\n                if\
    \ vowels.contains(char2) {\n                    result = String(char2)\n     \
    \               break\n                }\n                index += 1\n       \
    \     }\n            break\n        }\n        index += 1\n    }\n    if index\
    \ == word.characters.count {\n        return \"\"\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var closestVowelIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                if !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    if index < closestVowelIndex\
    \ {\n                        closestVowelIndex = index\n                     \
    \   closestVowel = String(char)\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return closestVowel", "    let vowels = \"\
    aeiou\"\n    var closestVowel = \"\"\n    var closestIndex = word.count\n    for\
    \ (index, char) in word.enumerated() {\n        if vowels.contains(char) {\n \
    \           if index > 0 && index < word.count - 1 {\n                if !vowels.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) && !vowels.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestIndex {\n  \
    \                      closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var vowelIndex = 0\n    var consonantIndex = 0\n    var\
    \ vowel = \"\"\n    var consonant = \"\"\n    var closestVowel = \"\"\n    for\
    \ (index, letter) in word.enumerated() {\n        if vowels.contains(String(letter))\
    \ {\n            vowelIndex = index\n            vowel = String(letter)\n    \
    \    }\n        if !vowels.contains(String(letter)) && vowel != \"\" {\n     \
    \       consonantIndex = index\n            consonant = String(letter)\n     \
    \       if consonantIndex - vowelIndex > 1 {\n                closestVowel = vowel\n\
    \            }\n            vowel = \"\"\n        }\n    }\n    return closestVowel",
  "    let vowels = \"AEIOUaeiou\"\n    let consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n    var closestVowel = \"\"\n    var closestVowelIndex = 0\n    var lastConsonantIndex\
    \ = 0\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index > lastConsonantIndex {\n                closestVowel\
    \ = String(char)\n                closestVowelIndex = index\n            }\n \
    \       } else if consonants.contains(char) {\n            lastConsonantIndex\
    \ = index\n        }\n    }\n    if closestVowelIndex > lastConsonantIndex {\n\
    \        return closestVowel\n    }\n    return \"\"", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    for i in stride(from:\
    \ word.count - 1, through: 0, by: -1) {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            result = char\n            break\n        }\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var result = \"\"\n    var index = 0\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(char) {\n            result = String(char)\n \
    \           break\n        }\n        if consonants.contains(char) {\n       \
    \     result = String(word[word.index(word.startIndex, offsetBy: index)])\n  \
    \          break\n        }\n        index += 1\n    }\n    return result", " \
    \   let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n \
    \   var result = \"\"\n    var index = 0\n    for char in word.reversed() {\n\
    \        if vowels.contains(char) {\n            if index > 0 && consonants.contains(word[word.index(word.endIndex,\
    \ offsetBy: -index-1)]) {\n                result = String(char)\n           \
    \     break\n            }\n        } else if consonants.contains(char) {\n  \
    \          if index > 0 && vowels.contains(word[word.index(word.endIndex, offsetBy:\
    \ -index-1)]) {\n                result = String(word[word.index(word.endIndex,\
    \ offsetBy: -index)])\n                break\n            }\n        }\n     \
    \   index += 1\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestDistance = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if vowels.contains(String(word[word.index(word.startIndex, offsetBy:\
    \ i)])) {\n                    break\n                }\n                distance\
    \ += 1\n            }\n            if distance < closestDistance {\n         \
    \       closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel =\
    \ \"\"\n    var closestDistance = word.count\n    for i in 0..<word.count {\n\
    \        let index = word.index(word.startIndex, offsetBy: i)\n        let char\
    \ = String(word[index])\n        if vowels.contains(char) {\n            var distance\
    \ = 0\n            var foundConsonant = false\n            for j in (0..<i).reversed()\
    \ {\n                let index = word.index(word.startIndex, offsetBy: j)\n  \
    \              let char = String(word[index])\n                if consonants.contains(char)\
    \ {\n                    foundConsonant = true\n                    break\n  \
    \              }\n                distance += 1\n            }\n            if\
    \ foundConsonant {\n                if distance < closestDistance {\n        \
    \            closestDistance = distance\n                    closestVowel = char\n\
    \                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ letter) in word.enumerated() {\n        if consonants.contains(letter) {\n \
    \           for (vowelIndex, vowel) in vowels.enumerated() {\n               \
    \ if word.contains(vowel) {\n                    let distance = abs(word.distance(from:\
    \ word.index(of: vowel)!, to: word.index(of: letter)!))\n                    if\
    \ distance < closestDistance {\n                        closestDistance = distance\n\
    \                        closestVowel = String(vowel)\n                    }\n\
    \                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel\
    \ = \"\"\n    var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            var distance = 0\n\
    \            var isConsonant = false\n            for i in index..<word.count\
    \ {\n                let char = word[word.index(word.startIndex, offsetBy: i)]\n\
    \                if consonants.contains(String(char)) {\n                    isConsonant\
    \ = true\n                    distance += 1\n                } else if isConsonant\
    \ {\n                    break\n                }\n            }\n           \
    \ if distance < closestDistance {\n                closestDistance = distance\n\
    \                closestVowel = String(char)\n            }\n        }\n    }\n\
    \    return closestVowel", "    let vowels = \"aeiou\"\n    var closestVowel =\
    \ \"\"\n    var closestDistance = Int.max\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            let distance = word.distance(from:\
    \ word.startIndex, to: word.index(word.startIndex, offsetBy: index))\n       \
    \     if distance < closestDistance {\n                closestDistance = distance\n\
    \                closestVowel = String(char)\n            }\n        }\n    }\n\
    \    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var closestDistance = 0\n    var distance = 0\n    for (index, char) in\
    \ word.enumerated() {\n        if consonants.contains(char) {\n            distance\
    \ = 0\n            for (index2, char2) in word.enumerated() {\n              \
    \  if vowels.contains(char2) {\n                    distance = index2 - index\n\
    \                    if distance > 0 && (distance < closestDistance || closestDistance\
    \ == 0) {\n                        closestDistance = distance\n              \
    \          closestVowel = String(char2)\n                    }\n             \
    \   }\n            }\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel\
    \ = \"\"\n    var closestIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if consonants.contains(char) {\n            if index + 1 < word.count\
    \ {\n                let nextChar = word[word.index(word.startIndex, offsetBy:\
    \ index + 1)]\n                if vowels.contains(nextChar) {\n              \
    \      if index + 2 < word.count {\n                        let nextNextChar =\
    \ word[word.index(word.startIndex, offsetBy: index + 2)]\n                   \
    \     if consonants.contains(nextNextChar) {\n                            if index\
    \ + 2 < closestIndex {\n                                closestIndex = index +\
    \ 2\n                                closestVowel = String(nextChar)\n       \
    \                     }\n                        }\n                    }\n  \
    \              }\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var vowel\
    \ = \"\"\n    var consonant = \"\"\n    var closestVowel = \"\"\n    var closestConsonant\
    \ = \"\"\n    var distance = 0\n    var closestDistance = 0\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ letter = String(word[index])\n        if vowels.contains(letter) {\n       \
    \     vowel = letter\n            if consonant != \"\" {\n                distance\
    \ = word.count - i\n                if closestDistance == 0 {\n              \
    \      closestDistance = distance\n                    closestVowel = vowel\n\
    \                    closestConsonant = consonant\n                } else if distance\
    \ < closestDistance {\n                    closestDistance = distance\n      \
    \              closestVowel = vowel\n                    closestConsonant = consonant\n\
    \                }\n            }\n        } else if consonants.contains(letter)\
    \ {\n            consonant = letter\n        }\n    }\n    if closestVowel ==\
    \ \"\" {\n        return \"\"\n    } else {\n        return closestVowel\n   \
    \ }", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ letter) in word.enumerated() {\n        if consonants.contains(letter) {\n \
    \           for vowel in vowels {\n                if word.contains(vowel) {\n\
    \                    let vowelIndex = word.firstIndex(of: vowel)!\n          \
    \          if vowelIndex > index && vowelIndex - index < closestDistance {\n \
    \                       closestDistance = vowelIndex - index\n               \
    \         closestVowel = String(vowel)\n                    }\n              \
    \  }\n            }\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiou\"\n    var closestVowel = \"\"\n    var closestDistance = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if vowels.contains(word[i]) {\n                    break\n  \
    \              }\n                distance += 1\n            }\n            if\
    \ distance < closestDistance {\n                closestDistance = distance\n \
    \               closestVowel = String(char)\n            }\n        }\n    }\n\
    \    return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var result = \"\"\n    var index = word.count - 1\n    var\
    \ found = false\n    while index >= 0 && !found {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            result\
    \ = String(char)\n            found = true\n        } else if consonants.contains(String(char))\
    \ {\n            index -= 1\n        } else {\n            index -= 1\n      \
    \  }\n    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var vowelIndex = 0\n\
    \    var consonantIndex = 0\n    for i in stride(from: word.count - 1, through:\
    \ 0, by: -1) {\n        let c = word[word.index(word.startIndex, offsetBy: i)]\n\
    \        if vowels.contains(c) {\n            vowelIndex = i\n            break\n\
    \        }\n    }\n    for i in stride(from: vowelIndex - 1, through: 0, by: -1)\
    \ {\n        let c = word[word.index(word.startIndex, offsetBy: i)]\n        if\
    \ consonants.contains(c) {\n            consonantIndex = i\n            break\n\
    \        }\n    }\n    if vowelIndex > consonantIndex {\n        result = String(word[word.index(word.startIndex,\
    \ offsetBy: vowelIndex)])\n    }\n    return result", "    let vowels = \"aeiou\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n\
    \    var closestDistance = 0\n    for (i, char) in word.enumerated() {\n     \
    \   if vowels.contains(char) {\n            var distance = 0\n            for\
    \ (j, char2) in word.enumerated() {\n                if consonants.contains(char2)\
    \ {\n                    distance = abs(i - j)\n                    if distance\
    \ > closestDistance {\n                        closestDistance = distance\n  \
    \                      closestVowel = String(char)\n                    }\n  \
    \              }\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel\
    \ = \"\"\n    var closestVowelDistance = word.count\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = String(word[index])\n        if vowels.contains(char) {\n           \
    \ for j in (0..<word.count).reversed() {\n                let index2 = word.index(word.startIndex,\
    \ offsetBy: j)\n                let char2 = String(word[index2])\n           \
    \     if consonants.contains(char2) {\n                    if j - i < closestVowelDistance\
    \ && j - i > 0 {\n                        closestVowel = char\n              \
    \          closestVowelDistance = j - i\n                    }\n             \
    \       break\n                }\n            }\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var closestVowel = \"\"\n    var closestVowelIndex = word.count\n    for\
    \ (index, char) in word.enumerated() {\n        if consonants.contains(char) {\n\
    \            for (i, vowel) in vowels.enumerated() {\n                if word.contains(vowel)\
    \ && word.index(of: vowel)! > word.index(of: char)! {\n                    if\
    \ word.index(of: vowel)! < closestVowelIndex {\n                        closestVowelIndex\
    \ = word.index(of: vowel)!\n                        closestVowel = String(vowel)\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var result = \"\"\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index == 0 {\n\
    \                continue\n            }\n            if index == word.characters.count\
    \ - 1 {\n                continue\n            }\n            if !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                result = String(char)\n         \
    \       break\n            }\n        }\n    }\n    return result", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: index)]\n        if consonants.contains(char)\
    \ {\n            if index == word.count - 1 {\n                break\n       \
    \     }\n            let nextChar = word[word.index(word.startIndex, offsetBy:\
    \ index + 1)]\n            if vowels.contains(nextChar) {\n                result\
    \ = String(nextChar)\n                break\n            }\n        }\n      \
    \  index -= 1\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            for j in (0..<word.count).reversed() {\n                let index\
    \ = word.index(word.startIndex, offsetBy: j)\n                let char = String(word[index])\n\
    \                if consonants.contains(char) {\n                    if j - i\
    \ < closestDistance {\n                        closestDistance = j - i\n     \
    \                   closestVowel = char\n                    }\n             \
    \       break\n                }\n            }\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let\
    \ consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex = 0\n    var\
    \ closestConsonantIndex = 0\n    var closestConsonant = \"\"\n    var wordArray\
    \ = Array(word)\n    for i in 0..<wordArray.count {\n        if vowels.contains(String(wordArray[i]).lowercased())\
    \ {\n            closestVowel = String(wordArray[i])\n            closestVowelIndex\
    \ = i\n            for j in i..<wordArray.count {\n                if consonants.contains(String(wordArray[j]).lowercased())\
    \ {\n                    closestConsonant = String(wordArray[j])\n           \
    \         closestConsonantIndex = j\n                    break\n             \
    \   }\n            }\n            if closestConsonantIndex > closestVowelIndex\
    \ {\n                return closestVowel\n            }\n        }\n    }\n  \
    \  return \"\"", "    let vowels = \"aeiou\"\n    var closestVowel = \"\"\n  \
    \  var closestDistance = Int.max\n    for (i, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(char) {\n            var distance = 0\n      \
    \      for j in i+1..<word.characters.count {\n                let nextChar =\
    \ word[word.index(word.startIndex, offsetBy: j)]\n                if vowels.contains(nextChar)\
    \ {\n                    break\n                }\n                distance +=\
    \ 1\n            }\n            if distance < closestDistance {\n            \
    \    closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    var vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel =\
    \ \"\"\n    var closestVowelIndex = 0\n    var closestConsonantIndex = 0\n   \
    \ var closestConsonant = \"\"\n    var wordArray = Array(word)\n    var wordArrayReverse\
    \ = wordArray.reversed()\n    var wordArrayReverseString = \"\"\n    for i in\
    \ wordArrayReverse {\n        wordArrayReverseString += String(i)\n    }\n   \
    \ for i in 0..<wordArrayReverseString.count {\n        if vowels.contains(String(wordArrayReverseString[i]))\
    \ {\n            closestVowel = String(wordArrayReverseString[i])\n          \
    \  closestVowelIndex = i\n            break\n        }\n    }\n    for i in 0..<wordArrayReverseString.count\
    \ {\n        if consonants.contains(String(wordArrayReverseString[i])) && i >\
    \ closestVowelIndex {\n            closestConsonant = String(wordArrayReverseString[i])\n\
    \            closestConsonantIndex = i\n            break\n        }\n    }\n\
    \    if closestVowel == \"\" || closestConsonant == \"\" {\n        return \"\"\
    \n    } else {\n        return closestVowel\n    }", "    let vowels = \"aeiou\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n\
    \    var distance = word.count\n    for (i, char) in word.enumerated() {\n   \
    \     if consonants.contains(char) {\n            for (j, vowel) in vowels.enumerated()\
    \ {\n                if word.contains(vowel) && word.index(of: vowel)! > word.index(of:\
    \ char)! && word.distance(from: word.index(of: vowel)!, to: word.index(of: char)!)\
    \ < distance {\n                    distance = word.distance(from: word.index(of:\
    \ vowel)!, to: word.index(of: char)!)\n                    closestVowel = String(vowel)\n\
    \                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiou\"\n    var closestVowel = \"\"\n    var distance = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index > 0 && index < word.count - 1 {\n                let\
    \ leftChar = word[word.index(word.startIndex, offsetBy: index - 1)]\n        \
    \        let rightChar = word[word.index(word.startIndex, offsetBy: index + 1)]\n\
    \                if !vowels.contains(leftChar) && !vowels.contains(rightChar)\
    \ {\n                    if index < distance {\n                        distance\
    \ = index\n                        closestVowel = String(char)\n             \
    \       }\n                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    let word\
    \ = word.lowercased()\n    var result = \"\"\n    var index = 0\n    for char\
    \ in word.reversed() {\n        if vowels.contains(String(char)) {\n         \
    \   result = String(char)\n            break\n        }\n        if consonants.contains(String(char))\
    \ {\n            if index == 0 {\n                return \"\"\n            }\n\
    \            return result\n        }\n        index += 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel: String\
    \ = \"\"\n    var closestVowelIndex: Int = 0\n    var vowelIndex: Int = 0\n  \
    \  for (index, char) in word.characters.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            vowelIndex = index\n            if vowelIndex > closestVowelIndex\
    \ {\n                closestVowel = String(char)\n                closestVowelIndex\
    \ = vowelIndex\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiou\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var closestVowel = \"\"\n    var closestVowelIndex = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(String(char)) {\n \
    \           if index < closestVowelIndex {\n                closestVowel = String(char)\n\
    \                closestVowelIndex = index\n            }\n        }\n    }\n\
    \    if closestVowelIndex == word.count {\n        return \"\"\n    }\n    for\
    \ (index, char) in word.enumerated() {\n        if consonants.contains(String(char))\
    \ {\n            if index > closestVowelIndex {\n                return closestVowel\n\
    \            }\n        }\n    }\n    return \"\"", "    let vowels = [\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index > 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n \
    \   var index = word.count - 1\n    while index > 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var closestVowel = \"\"\n    var closestIndex = word.count\n    for (index,\
    \ letter) in word.enumerated() {\n        if vowels.contains(letter) {\n     \
    \       if index > 0 && consonants.contains(word[word.index(word.startIndex, offsetBy:\
    \ index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestIndex {\n  \
    \                      closestIndex = index\n                        closestVowel\
    \ = String(letter)\n                    }\n                }\n            }\n\
    \        }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ result = \"\"\n    for i in (0..<word.count).reversed() {\n        let index\
    \ = word.index(word.startIndex, offsetBy: i)\n        let char = String(word[index])\n\
    \        if vowels.contains(char) {\n            result = char\n            break\n\
    \        }\n        if consonants.contains(char) {\n            break\n      \
    \  }\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var result = \"\"\n  \
    \  var i = word.count - 1\n    while i >= 0 {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if consonants.contains(char)\
    \ {\n            if i == word.count - 1 {\n                return \"\"\n     \
    \       }\n            let nextIndex = word.index(word.startIndex, offsetBy: i\
    \ + 1)\n            let nextChar = String(word[nextIndex])\n            if vowels.contains(nextChar)\
    \ {\n                return nextChar\n            }\n        }\n        i -= 1\n\
    \    }\n    return result", "    let vowels = \"aeiou\"\n    let consonants =\
    \ \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(char) {\n            if index\
    \ == word.count - 1 {\n                return \"\"\n            }\n          \
    \  let nextChar = word[word.index(word.startIndex, offsetBy: index + 1)]\n   \
    \         if vowels.contains(nextChar) {\n                return String(nextChar)\n\
    \            }\n        }\n        index -= 1\n    }\n    return result", "  \
    \  let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var result = \"\"\n    var index = 0\n    for char in word.characters.reversed()\
    \ {\n        if vowels.contains(char) {\n            result = String(char)\n \
    \           break\n        }\n        if consonants.contains(char) {\n       \
    \     if index > 0 {\n                break\n            }\n            index\
    \ += 1\n        }\n    }\n    return result", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestDistance =\
    \ word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if vowels.contains(String(word[word.index(word.startIndex, offsetBy:\
    \ i)])) {\n                    break\n                }\n                distance\
    \ += 1\n            }\n            if distance < closestDistance {\n         \
    \       closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var vowel = \"\
    \"\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowel = char\n        }\n        if consonants.contains(char)\
    \ {\n            if vowel != \"\" {\n                return vowel\n          \
    \  }\n        }\n    }\n    return \"\"", "    let vowels = \"aeiou\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index\
    \ = word.count - 1\n    while index >= 0 {\n        let char = word[index]\n \
    \       if consonants.contains(char) {\n            break\n        }\n       \
    \ index -= 1\n    }\n    if index < 0 {\n        return result\n    }\n    index\
    \ -= 1\n    while index >= 0 {\n        let char = word[index]\n        if vowels.contains(char)\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ index -= 1\n    }\n    return result", "    let vowels = \"aeiou\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var index\
    \ = word.count - 1\n    var prevConsonant = false\n    while index >= 0 {\n  \
    \      let char = word[word.index(word.startIndex, offsetBy: index)]\n       \
    \ if vowels.contains(char) {\n            if prevConsonant {\n               \
    \ result = String(char)\n                break\n            }\n        } else\
    \ if consonants.contains(char) {\n            prevConsonant = true\n        }\n\
    \        index -= 1\n    }\n    return result", "    let vowels = \"aeiou\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var\
    \ index = 0\n    var indexOfVowel = 0\n    var indexOfConsonant = 0\n    var distance\
    \ = 0\n    var minDistance = 0\n    for char in word.characters {\n        if\
    \ vowels.containsString(String(char)) {\n            indexOfVowel = index\n  \
    \      }\n        if consonants.containsString(String(char)) {\n            indexOfConsonant\
    \ = index\n            distance = indexOfConsonant - indexOfVowel\n          \
    \  if distance > 0 && (minDistance == 0 || distance < minDistance) {\n       \
    \         minDistance = distance\n                result = String(char)\n    \
    \        }\n        }\n        index += 1\n    }\n    return result", "    let\
    \ vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var\
    \ closestVowel = \"\"\n    var closestDistance = 0\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            var distance = 0\n      \
    \      for i in index..<word.count {\n                if consonants.contains(word[i])\
    \ {\n                    distance += 1\n                } else {\n           \
    \         break\n                }\n            }\n            if distance > closestDistance\
    \ {\n                closestDistance = distance\n                closestVowel\
    \ = String(char)\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n \
    \   var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if consonants.contains(char) {\n     \
    \       for vowel in vowels {\n                if word.contains(vowel) {\n   \
    \                 let vowelIndex = word.firstIndex(of: vowel)!\n             \
    \       if vowelIndex > index {\n                        let distance = vowelIndex.encodedOffset\
    \ - index\n                        if distance < closestDistance {\n         \
    \                   closestDistance = distance\n                            closestVowel\
    \ = String(vowel)\n                        }\n                    }\n        \
    \        }\n            }\n        }\n    }\n    return closestVowel", "    let\
    \ vowels = \"aeiou\"\n    var closestVowel = \"\"\n    var closestDistance = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            var distance = 0\n            var isConsonant = false\n     \
    \       for i in (0..<index).reversed() {\n                if vowels.contains(word[word.index(word.startIndex,\
    \ offsetBy: i)]) {\n                    break\n                }\n           \
    \     distance += 1\n                isConsonant = true\n            }\n     \
    \       if isConsonant {\n                for i in (index+1)..<word.count {\n\
    \                    if vowels.contains(word[word.index(word.startIndex, offsetBy:\
    \ i)]) {\n                        break\n                    }\n             \
    \       distance += 1\n                    isConsonant = true\n              \
    \  }\n            }\n            if isConsonant && distance < closestDistance\
    \ {\n                closestDistance = distance\n                closestVowel\
    \ = String(char)\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiou\"\n    let word = word.lowercased()\n    var result =\
    \ \"\"\n    for i in (0..<word.count).reversed() {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = word[index]\n        if vowels.contains(char)\
    \ {\n            result = String(char)\n            break\n        }\n    }\n\
    \    return result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var\
    \ index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(String(char))\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ index -= 1\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = 0\n    var closestConsonantIndex = 0\n    var closestConsonant = \"\"\n  \
    \  for (index, char) in word.lowercased().characters.enumerated() {\n        if\
    \ vowels.contains(String(char)) {\n            closestVowel = String(char)\n \
    \           closestVowelIndex = index\n        }\n        if consonants.contains(String(char))\
    \ {\n            closestConsonant = String(char)\n            closestConsonantIndex\
    \ = index\n        }\n        if closestVowelIndex > closestConsonantIndex {\n\
    \            return closestVowel\n        }\n    }\n    return \"\"", "    let\
    \ vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var\
    \ result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n    \
    \    let char = word[word.index(word.startIndex, offsetBy: index)]\n        if\
    \ consonants.contains(char) {\n            break\n        }\n        index -=\
    \ 1\n    }\n    if index == 0 {\n        return \"\"\n    }\n    index -= 1\n\
    \    while index >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n        if vowels.contains(char) {\n            result = String(char)\n\
    \            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if consonants.contains(char) {\n     \
    \       let start = word.index(word.startIndex, offsetBy: index)\n           \
    \ let end = word.index(word.endIndex, offsetBy: -1)\n            let substring\
    \ = word[start..<end]\n            for (index, char) in substring.enumerated()\
    \ {\n                if vowels.contains(char) {\n                    if index\
    \ < closestDistance {\n                        closestDistance = index\n     \
    \                   closestVowel = String(char)\n                    }\n     \
    \           }\n            }\n        }\n    }\n    return closestVowel", "  \
    \  let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var result = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n   \
    \ for char in word.reversed() {\n        if vowels.contains(char) {\n        \
    \    vowelIndex = word.index(of: char)!\n        }\n        if consonants.contains(char)\
    \ {\n            consonantIndex = word.index(of: char)!\n            if vowelIndex\
    \ > consonantIndex {\n                result = String(word[vowelIndex])\n    \
    \            break\n            }\n        }\n    }\n    return result", "   \
    \ let vowels = \"aeiou\"\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if vowels.contains(word[i]) {\n                    break\n  \
    \              }\n                distance += 1\n            }\n            if\
    \ distance < closestDistance {\n                closestDistance = distance\n \
    \               closestVowel = String(char)\n            }\n        }\n    }\n\
    \    return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex = 0\n\
    \    var closestConsonantIndex = 0\n    var closestConsonant = \"\"\n    var word\
    \ = word.lowercased()\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        if vowels.contains(String(word[index])) {\n          \
    \  closestVowel = String(word[index])\n            closestVowelIndex = i\n   \
    \     }\n        if consonants.contains(String(word[index])) {\n            closestConsonant\
    \ = String(word[index])\n            closestConsonantIndex = i\n        }\n  \
    \      if closestVowelIndex > closestConsonantIndex {\n            return closestVowel\n\
    \        }\n    }\n    return \"\"", "    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var index = word.count -\
    \ 1\n    var lastConsonant = \"\"\n    var firstVowel = \"\"\n    while index\
    \ >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n\
    \        if vowels.contains(String(char)) {\n            firstVowel = String(char)\n\
    \            break\n        }\n        index -= 1\n    }\n    index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(String(char)) {\n        \
    \    lastConsonant = String(char)\n            break\n        }\n        index\
    \ -= 1\n    }\n    if firstVowel != \"\" && lastConsonant != \"\" {\n        result\
    \ = firstVowel\n    }\n    return result", "    let vowels = \"aeiou\"\n    var\
    \ result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n    \
    \    let char = word[word.index(word.startIndex, offsetBy: index)]\n        if\
    \ vowels.contains(char) {\n            result = String(char)\n            break\n\
    \        }\n        index -= 1\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var\
    \ index = word.count - 1\n    var vowelIndex = -1\n    var consonantIndex = -1\n\
    \    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            vowelIndex\
    \ = index\n        } else if consonants.contains(char) {\n            consonantIndex\
    \ = index\n        }\n        if vowelIndex != -1 && consonantIndex != -1 {\n\
    \            result = String(word[word.index(word.startIndex, offsetBy: vowelIndex)])\n\
    \            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel\
    \ = \"\"\n    var closestVowelDistance = word.count\n    for (index, char) in\
    \ word.enumerated() {\n        if consonants.contains(String(char).lowercased())\
    \ {\n            for (index2, char2) in word.enumerated() {\n                if\
    \ vowels.contains(String(char2).lowercased()) {\n                    if index2\
    \ > index && index2 - index < closestVowelDistance {\n                       \
    \ closestVowel = String(char2)\n                        closestVowelDistance =\
    \ index2 - index\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ result = \"\"\n    for (index, char) in word.characters.enumerated() {\n   \
    \     if vowels.contains(char) {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.characters.count -\
    \ 1 && consonants.contains(word[word.index(word.startIndex, offsetBy: index +\
    \ 1)]) {\n                    result = String(char)\n                }\n     \
    \       }\n        }\n    }\n    return result", "    let vowels = \"aeiou\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var\
    \ index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(char) {\n            for i\
    \ in index + 1..<word.count {\n                let char = word[word.index(word.startIndex,\
    \ offsetBy: i)]\n                if vowels.contains(char) {\n                \
    \    result = String(char)\n                    break\n                }\n   \
    \         }\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var closestVowel = \"\"\n    var closestVowelIndex = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if consonants.contains(String(char).lowercased())\
    \ {\n            for (vowelIndex, vowel) in word.enumerated() {\n            \
    \    if vowels.contains(String(vowel).lowercased()) && vowelIndex > index && vowelIndex\
    \ < closestVowelIndex {\n                    closestVowel = String(vowel)\n  \
    \                  closestVowelIndex = vowelIndex\n                }\n       \
    \     }\n        }\n    }\n    return closestVowel", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n   \
    \ var closestDistance = 0\n    for (index, char) in word.enumerated() {\n    \
    \    if consonants.contains(String(char).lowercased()) {\n            for (index2,\
    \ char2) in word.enumerated() {\n                if vowels.contains(String(char2).lowercased())\
    \ {\n                    if index2 > index {\n                        if closestDistance\
    \ == 0 {\n                            closestDistance = index2 - index\n     \
    \                       closestVowel = String(char2)\n                       \
    \ } else if index2 - index < closestDistance {\n                            closestDistance\
    \ = index2 - index\n                            closestVowel = String(char2)\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ vowel = \"\"\n    for i in (0..<word.count).reversed() {\n        let index\
    \ = word.index(word.startIndex, offsetBy: i)\n        if vowels.contains(word[index])\
    \ {\n            vowel = String(word[index])\n            break\n        }\n \
    \   }\n    for i in (0..<word.count).reversed() {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        if consonants.contains(word[index]) {\n            if\
    \ i == word.count - 1 {\n                return \"\"\n            }\n        \
    \    let nextIndex = word.index(word.startIndex, offsetBy: i + 1)\n          \
    \  if vowels.contains(word[nextIndex]) {\n                return String(word[nextIndex])\n\
    \            }\n            return vowel\n        }\n    }\n    return \"\"",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   var distance = 0\n            for i in index..<word.count {\n            \
    \    let char = word[word.index(word.startIndex, offsetBy: i)]\n             \
    \   if consonants.contains(char) {\n                    distance += 1\n      \
    \          } else {\n                    break\n                }\n          \
    \  }\n            if distance < closestDistance {\n                closestDistance\
    \ = distance\n                closestVowel = String(char)\n            }\n   \
    \     }\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var lastConsonant\
    \ = \"\"\n    var lastVowel = \"\"\n    for char in word.characters {\n      \
    \  if vowels.containsString(String(char)) {\n            lastVowel = String(char)\n\
    \        } else if consonants.containsString(String(char)) {\n            if lastVowel\
    \ != \"\" {\n                result = lastVowel\n            }\n            lastConsonant\
    \ = String(char)\n        }\n    }\n    return result", "    var vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    for i in stride(from:\
    \ word.count - 1, through: 0, by: -1) {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            result = char\n            break\n        }\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var closestVowel: Character?\n   \
    \ var closestVowelIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > 0 && index < word.count\
    \ - 1 {\n                if !vowels.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) && !vowels.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestVowelIndex {\n\
    \                        closestVowel = char\n                        closestVowelIndex\
    \ = index\n                    }\n                }\n            }\n        }\n\
    \    }\n    return closestVowel != nil ? String(closestVowel!) : \"\"", "    let\
    \ vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var\
    \ closestVowel = \"\"\n    var closestDistance = word.count\n    for (index, char)\
    \ in word.enumerated() {\n        if consonants.contains(char) {\n           \
    \ for (index2, char2) in word.enumerated() {\n                if vowels.contains(char2)\
    \ && index2 > index {\n                    if index2 - index < closestDistance\
    \ {\n                        closestDistance = index2 - index\n              \
    \          closestVowel = String(char2)\n                    }\n             \
    \   }\n            }\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiou\"\n    var closestVowel = \"\"\n    var closestVowelIndex = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index < closestVowelIndex {\n                closestVowel\
    \ = String(char)\n                closestVowelIndex = index\n            }\n \
    \       }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = -1\n    var closestConsonantIndex = -1\n    for (index, char) in word.lowercased().reversed().enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            closestVowel = String(char)\n\
    \            closestVowelIndex = index\n        }\n        if consonants.contains(String(char))\
    \ && closestVowelIndex > -1 {\n            closestConsonantIndex = index\n   \
    \         break\n        }\n    }\n    if closestVowelIndex > -1 && closestConsonantIndex\
    \ > -1 && closestVowelIndex > closestConsonantIndex {\n        return closestVowel\n\
    \    }\n    return \"\"", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var result = \"\"\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.characters.count - 1 {\n                if !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    result = String(char)\n     \
    \               break\n                }\n            }\n        }\n    }\n  \
    \  return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"\
    y\", \"z\"]\n    var closestVowel: String = \"\"\n    var closestIndex: Int =\
    \ 0\n    var index = 0\n    for letter in word.characters {\n        if vowels.contains(String(letter).lowercased())\
    \ {\n            if consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]).lowercased()) && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]).lowercased()) {\n                if index > closestIndex\
    \ {\n                    closestVowel = String(letter)\n                    closestIndex\
    \ = index\n                }\n            }\n        }\n        index += 1\n \
    \   }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\"]\n    var vowel = \"\"\n    var index = 0\n    for char\
    \ in word.characters.reversed() {\n        if vowels.contains(String(char)) {\n\
    \            vowel = String(char)\n            break\n        }\n        index\
    \ += 1\n    }\n    if vowel == \"\" {\n        return \"\"\n    }\n    var consonant\
    \ = \"\"\n    for char in word.characters.reversed() {\n        if consonants.contains(String(char))\
    \ {\n            consonant = String(char)\n            break\n        }\n    }\n\
    \    if consonant == \"\" {\n        return \"\"\n    }\n    if index == 0 {\n\
    \        return \"\"\n    }\n    return vowel", "    let vowels = \"aeiou\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n\
    \    var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            var distance = 0\n      \
    \      for (i, c) in word.enumerated() {\n                if consonants.contains(c)\
    \ {\n                    distance = abs(index - i)\n                    break\n\
    \                }\n            }\n            if distance < closestDistance {\n\
    \                closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiou\"\n    var closestVowel = \"\"\n    var closestVowelDistance = word.count\n\
    \    for (index, letter) in word.enumerated() {\n        if vowels.contains(letter)\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if vowels.contains(word[i]) {\n                    break\n  \
    \              }\n                distance += 1\n            }\n            if\
    \ distance < closestVowelDistance {\n                closestVowelDistance = distance\n\
    \                closestVowel = String(letter)\n            }\n        }\n   \
    \ }\n    return closestVowel", "    let vowels = \"aeiou\"\n    var closestVowel\
    \ = \"\"\n    var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            var distance = 0\n      \
    \      for i in index..<word.count {\n                if vowels.contains(word[i])\
    \ {\n                    break\n                }\n                distance +=\
    \ 1\n            }\n            if distance < closestDistance {\n            \
    \    closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel:\
    \ String = \"\"\n    var closestVowelIndex: Int = 0\n    var closestConsonantIndex:\
    \ Int = 0\n    var currentConsonantIndex: Int = 0\n    var currentVowelIndex:\
    \ Int = 0\n    var currentVowel: String = \"\"\n    var currentConsonant: String\
    \ = \"\"\n    var currentDistance: Int = 0\n    var closestDistance: Int = 0\n\
    \    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            currentVowel = char\n            currentVowelIndex = i\n    \
    \        if currentConsonantIndex != 0 {\n                currentDistance = currentVowelIndex\
    \ - currentConsonantIndex\n                if closestVowelIndex == 0 {\n     \
    \               closestVowelIndex = currentVowelIndex\n                    closestConsonantIndex\
    \ = currentConsonantIndex\n                    closestVowel = currentVowel\n \
    \                   closestDistance = currentDistance\n                } else\
    \ {\n                    if currentDistance < closestDistance {\n            \
    \            closestVowelIndex = currentVowelIndex\n                        closestConsonantIndex\
    \ = currentConsonantIndex\n                        closestVowel = currentVowel\n\
    \                        closestDistance = currentDistance\n                 \
    \   }\n                }\n            }\n        } else if consonants.contains(char)\
    \ {\n            currentConsonant = char\n            currentConsonantIndex =\
    \ i\n        }\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var\
    \ closest = Int.max\n    for (i, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            var left = i - 1\n            while left >= 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: left)]) {\n                left -= 1\n            }\n            var\
    \ right = i + 1\n            while right < word.count && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: right)]) {\n                right += 1\n            }\n          \
    \  if left >= 0 && right < word.count && right - left < closest {\n          \
    \      closest = right - left\n                result = String(char)\n       \
    \     }\n        }\n    }\n    return result", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\"\
    , \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var lastVowel\
    \ = \"\"\n    var lastConsonant = \"\"\n    for char in word.lowercased() {\n\
    \        if vowels.contains(String(char)) {\n            lastVowel = String(char)\n\
    \        } else if consonants.contains(String(char)) {\n            lastConsonant\
    \ = String(char)\n            if lastVowel != \"\" {\n                result =\
    \ lastVowel\n            }\n        }\n    }\n    return result", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var index\
    \ = word.count - 1\n    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var result = \"\"\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.characters.count -\
    \ 1 && consonants.contains(word[word.index(word.startIndex, offsetBy: index +\
    \ 1)]) {\n                    result = String(char)\n                }\n     \
    \       }\n        }\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ result = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n    for i\
    \ in word.indices {\n        if vowels.contains(word[i]) {\n            vowelIndex\
    \ = word.distance(from: word.startIndex, to: i)\n        }\n        if consonants.contains(word[i])\
    \ {\n            consonantIndex = word.distance(from: word.startIndex, to: i)\n\
    \        }\n        if vowelIndex > consonantIndex {\n            result = String(word[i])\n\
    \            break\n        }\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var\
    \ lastConsonant = \"\"\n    var lastVowel = \"\"\n    for char in word.characters\
    \ {\n        if vowels.contains(String(char).lowercased()) {\n            lastVowel\
    \ = String(char)\n        } else if consonants.contains(String(char).lowercased())\
    \ {\n            lastConsonant = String(char)\n        }\n        if lastConsonant\
    \ != \"\" && lastVowel != \"\" {\n            result = lastVowel\n           \
    \ break\n        }\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ result = \"\"\n    var lastVowel = \"\"\n    for letter in word.characters {\n\
    \        if vowels.containsString(String(letter)) {\n            lastVowel = String(letter)\n\
    \        } else if consonants.containsString(String(letter)) && lastVowel != \"\
    \" {\n            result = lastVowel\n            break\n        }\n    }\n  \
    \  return result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var\
    \ index = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    var index =\
    \ word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if consonants.contains(char) {\n     \
    \       for (index2, char2) in word.enumerated() {\n                if vowels.contains(char2)\
    \ {\n                    if index2 > index && index2 - index < closestDistance\
    \ {\n                        closestDistance = index2 - index\n              \
    \          closestVowel = String(char2)\n                    }\n             \
    \   }\n            }\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: index)]\n        if consonants.contains(char)\
    \ {\n            break\n        }\n        index -= 1\n    }\n    if index < 0\
    \ {\n        return result\n    }\n    index -= 1\n    while index >= 0 {\n  \
    \      let char = word[word.index(word.startIndex, offsetBy: index)]\n       \
    \ if vowels.contains(char) {\n            result = String(char)\n            break\n\
    \        }\n        index -= 1\n    }\n    return result"]
stop_tokens:
- "\n}"

name: HumanEval_118_get_closest_vowel
language: swift
prompt: "\n/// You are given a word. Your task is to find the closest vowel that stands\
  \ between \n/// two consonants from the right side of the word (case sensitive).\n\
  /// Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n/// find any vowel met the above condition. \n/// You may assume that\
  \ the given string contains English letter only.\n/// Example:\n/// get_closest_vowel(\"\
  yogurt\") ==> \"u\"\n/// get_closest_vowel(\"FULL\") ==> \"U\"\n/// get_closest_vowel(\"\
  quick\") ==> \"\"\n/// get_closest_vowel(\"ab\") ==> \"\"\nfunc get_closest_vowel(word:\
  \ String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(get_closest_vowel(word: \"yogurt\") == \"\
  u\")\nassert(get_closest_vowel(word: \"full\") == \"u\")\nassert(get_closest_vowel(word:\
  \ \"easy\") == \"\")\nassert(get_closest_vowel(word: \"eAsy\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ali\") == \"\")\nassert(get_closest_vowel(word: \"bad\") == \"a\")\nassert(get_closest_vowel(word:\
  \ \"most\") == \"o\")\nassert(get_closest_vowel(word: \"ab\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ba\") == \"\")\nassert(get_closest_vowel(word: \"quick\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"anime\") == \"i\")\nassert(get_closest_vowel(word: \"Asia\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"Above\") == \"o\")"
completions: ["    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var closestVowel = \"\"\n    var closestDistance = 0\n    for (index, char)\
    \ in word.characters.enumerated() {\n        if consonants.contains(char) {\n\
    \            for (i, vowel) in vowels.characters.enumerated() {\n            \
    \    if word.characters.contains(vowel) {\n                    if word.characters.index(of:\
    \ vowel)! > word.characters.index(of: char)! {\n                        if closestDistance\
    \ == 0 {\n                            closestDistance = word.characters.index(of:\
    \ vowel)! - word.characters.index(of: char)!\n                            closestVowel\
    \ = String(vowel)\n                        } else if word.characters.index(of:\
    \ vowel)! - word.characters.index(of: char)! < closestDistance {\n           \
    \                 closestDistance = word.characters.index(of: vowel)! - word.characters.index(of:\
    \ char)!\n                            closestVowel = String(vowel)\n         \
    \               }\n                    }\n                }\n            }\n \
    \       }\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\n    var\
    \ result = \"\"\n    var prev = \"\"\n    for char in word.reversed() {\n    \
    \    if vowels.contains(char) {\n            if prev != \"\" && !vowels.contains(prev)\
    \ {\n                result = String(char)\n                break\n          \
    \  }\n        }\n        prev = String(char)\n    }\n    return result", "   \
    \ var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var consonants = [\"b\"\
    , \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var wordArray = Array(word)\n    for i in 0..<wordArray.count {\n\
    \        if vowels.contains(String(wordArray[i])) {\n            if i == 0 {\n\
    \                continue\n            }\n            if i == wordArray.count\
    \ - 1 {\n                continue\n            }\n            if consonants.contains(String(wordArray[i-1]))\
    \ && consonants.contains(String(wordArray[i+1])) {\n                result = String(wordArray[i])\n\
    \                break\n            }\n        }\n    }\n    return result", " \
    \   let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n \
    \   var result = \"\"\n    var vowelIndex = -1\n    var consonantIndex = -1\n\
    \    for (index, char) in word.characters.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            vowelIndex = index\n        }\n        if consonants.contains(String(char))\
    \ {\n            consonantIndex = index\n        }\n        if vowelIndex != -1\
    \ && consonantIndex != -1 && vowelIndex > consonantIndex {\n            result\
    \ = String(char)\n            break\n        }\n    }\n    return result", " \
    \   let vowels = \"aeiou\"\n    var result = \"\"\n    var distance = word.count\n\
    \    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = word[index]\n        if vowels.contains(char)\
    \ {\n            if i > 0 {\n                let index = word.index(word.startIndex,\
    \ offsetBy: i - 1)\n                let prev = word[index]\n                if\
    \ !vowels.contains(prev) {\n                    if i < distance {\n          \
    \              distance = i\n                        result = String(char)\n \
    \                   }\n                }\n            }\n            if i < word.count\
    \ - 1 {\n                let index = word.index(word.startIndex, offsetBy: i +\
    \ 1)\n                let next = word[index]\n                if !vowels.contains(next)\
    \ {\n                    if i < distance {\n                        distance =\
    \ i\n                        result = String(char)\n                    }\n  \
    \              }\n            }\n        }\n    }\n    return result", "    let\
    \ vowels = \"aeiou\"\n    var closestVowel = \"\"\n    var closestDistance = word.count\n\
    \    for (index, letter) in word.enumerated() {\n        if vowels.contains(letter)\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if !vowels.contains(word[i]) {\n                    distance\
    \ += 1\n                } else {\n                    break\n                }\n\
    \            }\n            if distance < closestDistance {\n                closestDistance\
    \ = distance\n                closestVowel = String(letter)\n            }\n \
    \       }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    var result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n\
    \        let char = word[word.index(word.startIndex, offsetBy: index)]\n     \
    \   if vowels.contains(char) {\n            result = String(char)\n          \
    \  break\n        }\n        index -= 1\n    }\n    return result", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel\
    \ = \"\"\n    var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if consonants.contains(char) {\n            let nextIndex = word.index(word.startIndex,\
    \ offsetBy: index + 1)\n            let nextChar = word[nextIndex]\n         \
    \   if vowels.contains(nextChar) {\n                let distance = word.distance(from:\
    \ word.startIndex, to: nextIndex)\n                if distance < closestDistance\
    \ {\n                    closestDistance = distance\n                    closestVowel\
    \ = String(nextChar)\n                }\n            }\n        }\n    }\n   \
    \ return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var\
    \ consonantIndex = 0\n    var vowelFound = false\n    var consonantFound = false\n\
    \    for i in stride(from: word.count - 1, through: 0, by: -1) {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: i)]\n        if !vowelFound\
    \ {\n            if vowels.contains(String(char)) {\n                vowelFound\
    \ = true\n                vowelIndex = i\n            }\n        }\n        if\
    \ !consonantFound {\n            if consonants.contains(String(char)) {\n    \
    \            consonantFound = true\n                consonantIndex = i\n     \
    \       }\n        }\n        if vowelFound && consonantFound {\n            break\n\
    \        }\n    }\n    if vowelFound && consonantFound {\n        if vowelIndex\
    \ > consonantIndex {\n            closestVowel = String(word[word.index(word.startIndex,\
    \ offsetBy: vowelIndex)])\n        }\n    }\n    return closestVowel", "    let\
    \ vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = word.count - 1\n    while index >= 0\
    \ {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n \
    \       if consonants.contains(char) {\n            break\n        }\n       \
    \ index -= 1\n    }\n    if index < 0 {\n        return result\n    }\n    index\
    \ -= 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            let distance = word.count - index\n            if distance <\
    \ closestDistance {\n                closestDistance = distance\n            \
    \    closestVowel = String(char)\n            }\n        }\n    }\n    return\
    \ closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestVowelIndex = word.count\n    for\
    \ (index, char) in word.enumerated() {\n        if consonants.contains(char) {\n\
    \            for (i, vowel) in vowels.enumerated() {\n                if word.contains(vowel)\
    \ && word.index(of: vowel)! > word.index(of: char)! && word.index(of: vowel)!\
    \ < closestVowelIndex {\n                    closestVowel = String(vowel)\n  \
    \                  closestVowelIndex = word.index(of: vowel)!\n              \
    \  }\n            }\n        }\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel:\
    \ Character?\n    var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if consonants.contains(char) {\n            for (vowelIndex, vowel)\
    \ in vowels.enumerated() {\n                if word.contains(vowel) {\n      \
    \              let vowelDistance = abs(index - word.index(of: vowel)!.encodedOffset)\n\
    \                    if vowelDistance < closestDistance {\n                  \
    \      closestDistance = vowelDistance\n                        closestVowel =\
    \ vowel\n                    }\n                }\n            }\n        }\n\
    \    }\n    return closestVowel != nil ? String(closestVowel!) : \"\"", "    let\
    \ vowels = \"aeiouAEIOU\"\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if vowels.contains(word[i]) {\n                    break\n  \
    \              }\n                distance += 1\n            }\n            if\
    \ distance < closestDistance {\n                closestDistance = distance\n \
    \               closestVowel = String(char)\n            }\n        }\n    }\n\
    \    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var closestVowelIndex = -1\n    var closestConsonantIndex = -1\n    for\
    \ (index, char) in word.characters.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if closestConsonantIndex != -1 {\n                if closestVowelIndex\
    \ == -1 || index - closestConsonantIndex < closestVowelIndex - closestConsonantIndex\
    \ {\n                    closestVowel = String(char)\n                    closestVowelIndex\
    \ = index\n                }\n            }\n        } else if consonants.contains(char)\
    \ {\n            closestConsonantIndex = index\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var vowelIndex\
    \ = -1\n    var consonantIndex = -1\n    for i in 0..<word.count {\n        let\
    \ index = word.index(word.startIndex, offsetBy: i)\n        let char = String(word[index])\n\
    \        if vowels.contains(char) {\n            vowelIndex = i\n        }\n \
    \       if consonants.contains(char) {\n            consonantIndex = i\n     \
    \   }\n        if vowelIndex != -1 && consonantIndex != -1 && vowelIndex < consonantIndex\
    \ {\n            return char\n        }\n    }\n    return \"\"", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: index)]\n        if consonants.contains(char)\
    \ {\n            let nextIndex = word.index(word.startIndex, offsetBy: index +\
    \ 1)\n            let nextChar = word[nextIndex]\n            if vowels.contains(nextChar)\
    \ {\n                result = String(nextChar)\n                break\n      \
    \      }\n        }\n        index -= 1\n    }\n    return result", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var distance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index > 0 && index < word.count - 1 {\n                if\
    \ !vowels.contains(String(word[word.index(word.startIndex, offsetBy: index - 1)]))\
    \ && !vowels.contains(String(word[word.index(word.startIndex, offsetBy: index\
    \ + 1)])) {\n                    if index < distance {\n                     \
    \   distance = index\n                        result = String(char)\n        \
    \            }\n                }\n            }\n        }\n    }\n    return\
    \ result", "    let vowels = \"aeiou\"\n    var result = \"\"\n    for (index,\
    \ letter) in word.reversed().enumerated() {\n        if vowels.contains(letter)\
    \ {\n            if index == 0 {\n                return String(letter)\n    \
    \        } else if !vowels.contains(word[word.index(word.endIndex, offsetBy: -index\
    \ - 1)]) {\n                return String(letter)\n            }\n        }\n\
    \    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"\
    x\", \"y\", \"z\"]\n    var result = \"\"\n    var index = 0\n    var isVowel\
    \ = false\n    var isConsonant = false\n    var isFirst = true\n    var isLast\
    \ = false\n    var isFound = false\n    var isFirstVowel = false\n    var isLastVowel\
    \ = false\n    var isFirstConsonant = false\n    var isLastConsonant = false\n\
    \    var isFirstConsonantFound = false\n    var isLastConsonantFound = false\n\
    \    var firstConsonantIndex = 0\n    var lastConsonantIndex = 0\n    var firstVowelIndex\
    \ = 0\n    var lastVowelIndex = 0\n    var firstConsonant = \"\"\n    var lastConsonant\
    \ = \"\"\n    var firstVowel = \"\"\n    var lastVowel = \"\"\n    var temp =\
    \ \"\"\n    var tempIndex = 0\n    var tempIndex2 = 0\n    var tempIndex3 = 0\n\
    \    var tempIndex4 = 0\n    var tempIndex5 = 0\n    var tempIndex6 = 0\n    var\
    \ tempIndex7 = 0\n    var tempIndex8 = 0\n    var tempIndex9 = 0\n    var tempIndex10\
    \ = 0\n    var tempIndex11 = 0\n    var tempIndex12 = 0\n    var tempIndex13 =\
    \ 0\n    var tempIndex14 = 0\n    var tempIndex15 = 0\n    var tempIndex16 = 0\n\
    \    var tempIndex17 = 0\n    var tempIndex18 = 0\n    var tempIndex19 = 0\n \
    \   var tempIndex20 = 0\n    var tempIndex21 = 0\n    var tempIndex22 = 0\n  \
    \  var tempIndex23 = 0\n    var tempIndex24 = 0\n    var tempIndex25 = 0\n   \
    \ var tempIndex26 = 0\n    var tempIndex27 = 0\n    var tempIndex28 = 0\n    var\
    \ temp"]
stop_tokens:
- "\n}"

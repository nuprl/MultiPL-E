language: swift
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = Double(a + b + c) / 2\n  \
    \      return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp2tzibtys.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2.0\n    let area\
    \ = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : round(area * 100) / 100\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpdus09nrw.swift:11:25: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Double'\n    let s = (a + b + c) / 2.0\n    \
    \        ~~~~~~~~~~~ ^ ~~~\n/tmp/tmpdus09nrw.swift:11:25: note: overloads for\
    \ '/' exist with these partially matching parameter lists: (Double, Double), (Duration,\
    \ Double), (Int, Int)\n    let s = (a + b + c) / 2.0\n                       \
    \ ^\n/tmp/tmpdus09nrw.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmpdus09nrw.swift:12:16: error: the compiler is unable to\
    \ type-check this expression in reasonable time; try breaking up the expression\
    \ into distinct sub-expressions\n    let area = sqrt(s * (s - Double(a)) * (s\
    \ - Double(b)) * (s - Double(c)))\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdus09nrw.swift:13:30: error: cannot find 'round' in scope\n    return\
    \ area.isNaN ? -1 : round(area * 100) / 100\n                             ^~~~~\n"
  stdout: ''
  timestamp: 1660014144
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    if a + b > c && a + c > b && b + c > a\
    \ {\n        let s = Double(a + b + c) / 2\n        return sqrt(s * (s - Double(a))\
    \ * (s - Double(b)) * (s - Double(c)))\n    }\n    return -1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpk4of5y1n.swift:13:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = (Double(a) + Double(b) + Double(c))\
    \ / 2\n        return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpawxxokjt.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = Double(a + b + c) / 2\n  \
    \      return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp2tzibtys.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? area : -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp4n1mb748.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    if\
    \ a + b > c && a + c > b && b + c > a {\n        return sqrt(s * (s - Double(a))\
    \ * (s - Double(b)) * (s - Double(c)))\n    }\n    return -1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpkxsew48m.swift:13:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    if a + b > c && a + c > b && b + c > a\
    \ {\n        let s = Double(a + b + c) / 2\n        return sqrt(s * (s - Double(a))\
    \ * (s - Double(b)) * (s - Double(c)))\n    }\n    return -1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpk4of5y1n.swift:13:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : round(area * 100) / 100\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpmoz6frxg.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n\
    /tmp/tmpmoz6frxg.swift:13:30: error: cannot find 'round' in scope\n    return\
    \ area.isNaN ? -1 : round(area * 100) / 100\n                             ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? round(area * 100) / 100 : -1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpt1qr0jhn.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmpt1qr0jhn.swift:13:23: error: cannot find 'round' in scope\n\
    \    return area > 0 ? round(area * 100) / 100 : -1\n                      ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? Double(round(area * 100) / 100) : -1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp974pedg1.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmp974pedg1.swift:13:30: error: cannot find 'round' in scope\n\
    \    return area > 0 ? Double(round(area * 100) / 100) : -1\n                \
    \             ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area > 0 ? area\
    \ : -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3, b:\
    \ 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpbdl60c8l.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    if\
    \ s - Double(a) > 0 && s - Double(b) > 0 && s - Double(c) > 0 {\n        return\
    \ round(sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c))) * 100) /\
    \ 100\n    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp_ucs89o9.swift:13:16: error: cannot find 'round' in scope\n   \
    \     return round(sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\
    \ * 100) / 100\n               ^~~~~\n/tmp/tmp_ucs89o9.swift:13:22: error: cannot\
    \ find 'sqrt' in scope\n        return round(sqrt(s * (s - Double(a)) * (s - Double(b))\
    \ * (s - Double(c))) * 100) / 100\n                     ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2.0\n    let area\
    \ = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? Double(round(area * 100) / 100) : -1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpz8z8gqrg.swift:11:25: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Double'\n    let s = (a + b + c) / 2.0\n    \
    \        ~~~~~~~~~~~ ^ ~~~\n/tmp/tmpz8z8gqrg.swift:11:25: note: overloads for\
    \ '/' exist with these partially matching parameter lists: (Double, Double), (Duration,\
    \ Double), (Int, Int)\n    let s = (a + b + c) / 2.0\n                       \
    \ ^\n/tmp/tmpz8z8gqrg.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmpz8z8gqrg.swift:12:16: error: the compiler is unable to\
    \ type-check this expression in reasonable time; try breaking up the expression\
    \ into distinct sub-expressions\n    let area = sqrt(s * (s - Double(a)) * (s\
    \ - Double(b)) * (s - Double(c)))\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpz8z8gqrg.swift:13:30: error: cannot find 'round' in scope\n    return\
    \ area > 0 ? Double(round(area * 100) / 100) : -1\n                          \
    \   ^~~~~\n"
  stdout: ''
  timestamp: 1660014143
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = Double(a + b + c) / 2\n  \
    \      return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp2tzibtys.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = (Double(a) + Double(b) + Double(c))\
    \ / 2\n        return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpawxxokjt.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? Double(round(area * 100) / 100) : -1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp974pedg1.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmp974pedg1.swift:13:30: error: cannot find 'round' in scope\n\
    \    return area > 0 ? Double(round(area * 100) / 100) : -1\n                \
    \             ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    if a + b > c && a + c > b && b + c > a\
    \ {\n        let s = Double(a + b + c) / 2\n        return sqrt(s * (s - Double(a))\
    \ * (s - Double(b)) * (s - Double(c)))\n    }\n    return -1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpk4of5y1n.swift:13:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area < 0 ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp5qa3kfll.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    if a + b > c && a + c > b && b + c > a\
    \ {\n        let s = Double(a + b + c) / 2\n        return sqrt(s * (s - Double(a))\
    \ * (s - Double(b)) * (s - Double(c)))\n    }\n    return -1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpk4of5y1n.swift:13:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    if area.isNaN {\n     \
    \   return -1\n    }\n    return round(area * 100) / 100\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp8slmeqgd.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n\
    /tmp/tmp8slmeqgd.swift:16:12: error: cannot find 'round' in scope\n    return\
    \ round(area * 100) / 100\n           ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? area : -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp4n1mb748.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    if area.isNaN {\n     \
    \   return -1\n    }\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b:\
    \ 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpve90s74p.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    if a + b > c && a + c > b && b + c > a\
    \ {\n        let s = Double(a + b + c) / 2\n        return sqrt(s * (s - Double(a))\
    \ * (s - Double(b)) * (s - Double(c)))\n    }\n    return -1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpk4of5y1n.swift:13:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    if\
    \ area.isNaN {\n        return -1\n    }\n    return round(area * 100) / 100\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpwwj1fbaw.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmpwwj1fbaw.swift:16:12: error: cannot find 'round' in scope\n\
    \    return round(area * 100) / 100\n           ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    if\
    \ area.isNaN {\n        return -1\n    }\n    return area\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp7m0xzbg1.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : round(area * 100) / 100\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpmoz6frxg.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n\
    /tmp/tmpmoz6frxg.swift:13:30: error: cannot find 'round' in scope\n    return\
    \ area.isNaN ? -1 : round(area * 100) / 100\n                             ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    if a + b > c && a + c > b && b + c > a\
    \ {\n        let s = Double(a + b + c) / 2\n        return sqrt(s * (s - Double(a))\
    \ * (s - Double(b)) * (s - Double(c)))\n    }\n    return -1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpk4of5y1n.swift:13:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    return -1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: Exception
  stderr: 'tmp76dbczt9/tmp76dbczt9.swift:27: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaab8210c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaab7f07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaab7f07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaab7f067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp76dbczt9                        0x0000557682c0b1cf <unavailable> + 4559

    5    libc.so.6                          0x00002aaab83fc460 __libc_start_main +
    245

    6    tmp76dbczt9                        0x0000557682c0ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? area : -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp4n1mb748.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    if area.isNaN {\n     \
    \   return -1\n    }\n    return round(area * 100) / 100\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp8slmeqgd.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n\
    /tmp/tmp8slmeqgd.swift:16:12: error: cannot find 'round' in scope\n    return\
    \ round(area * 100) / 100\n           ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2.0\n    let area\
    \ = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? Double(round(area * 100) / 100) : -1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpz8z8gqrg.swift:11:25: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Double'\n    let s = (a + b + c) / 2.0\n    \
    \        ~~~~~~~~~~~ ^ ~~~\n/tmp/tmpz8z8gqrg.swift:11:25: note: overloads for\
    \ '/' exist with these partially matching parameter lists: (Double, Double), (Duration,\
    \ Double), (Int, Int)\n    let s = (a + b + c) / 2.0\n                       \
    \ ^\n/tmp/tmpz8z8gqrg.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmpz8z8gqrg.swift:12:16: error: the compiler is unable to\
    \ type-check this expression in reasonable time; try breaking up the expression\
    \ into distinct sub-expressions\n    let area = sqrt(s * (s - Double(a)) * (s\
    \ - Double(b)) * (s - Double(c)))\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpz8z8gqrg.swift:13:30: error: cannot find 'round' in scope\n    return\
    \ area > 0 ? Double(round(area * 100) / 100) : -1\n                          \
    \   ^~~~~\n"
  stdout: ''
  timestamp: 1660014143
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? area : -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp4n1mb748.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? round(area * 100) / 100 : -1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpt1qr0jhn.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmpt1qr0jhn.swift:13:23: error: cannot find 'round' in scope\n\
    \    return area > 0 ? round(area * 100) / 100 : -1\n                      ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2.0\n    let area\
    \ = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp_opdhvj5.swift:11:25: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Double'\n    let s = (a + b + c) / 2.0\n    \
    \        ~~~~~~~~~~~ ^ ~~~\n/tmp/tmp_opdhvj5.swift:11:25: note: overloads for\
    \ '/' exist with these partially matching parameter lists: (Double, Double), (Duration,\
    \ Double), (Int, Int)\n    let s = (a + b + c) / 2.0\n                       \
    \ ^\n/tmp/tmp_opdhvj5.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmp_opdhvj5.swift:12:16: error: the compiler is unable to\
    \ type-check this expression in reasonable time; try breaking up the expression\
    \ into distinct sub-expressions\n    let area = sqrt(s * (s - Double(a)) * (s\
    \ - Double(b)) * (s - Double(c)))\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014143
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : round(area * 100) / 100\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpmoz6frxg.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n\
    /tmp/tmpmoz6frxg.swift:13:30: error: cannot find 'round' in scope\n    return\
    \ area.isNaN ? -1 : round(area * 100) / 100\n                             ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = Double(a + b + c) / 2\n  \
    \      return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp2tzibtys.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? area : -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp4n1mb748.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2.0\n    let area\
    \ = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp_opdhvj5.swift:11:25: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Double'\n    let s = (a + b + c) / 2.0\n    \
    \        ~~~~~~~~~~~ ^ ~~~\n/tmp/tmp_opdhvj5.swift:11:25: note: overloads for\
    \ '/' exist with these partially matching parameter lists: (Double, Double), (Duration,\
    \ Double), (Int, Int)\n    let s = (a + b + c) / 2.0\n                       \
    \ ^\n/tmp/tmp_opdhvj5.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmp_opdhvj5.swift:12:16: error: the compiler is unable to\
    \ type-check this expression in reasonable time; try breaking up the expression\
    \ into distinct sub-expressions\n    let area = sqrt(s * (s - Double(a)) * (s\
    \ - Double(b)) * (s - Double(c)))\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014143
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2.0\n    let area\
    \ = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : round(area * 100) / 100\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpdus09nrw.swift:11:25: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Double'\n    let s = (a + b + c) / 2.0\n    \
    \        ~~~~~~~~~~~ ^ ~~~\n/tmp/tmpdus09nrw.swift:11:25: note: overloads for\
    \ '/' exist with these partially matching parameter lists: (Double, Double), (Duration,\
    \ Double), (Int, Int)\n    let s = (a + b + c) / 2.0\n                       \
    \ ^\n/tmp/tmpdus09nrw.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmpdus09nrw.swift:12:16: error: the compiler is unable to\
    \ type-check this expression in reasonable time; try breaking up the expression\
    \ into distinct sub-expressions\n    let area = sqrt(s * (s - Double(a)) * (s\
    \ - Double(b)) * (s - Double(c)))\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpdus09nrw.swift:13:30: error: cannot find 'round' in scope\n    return\
    \ area.isNaN ? -1 : round(area * 100) / 100\n                             ^~~~~\n"
  stdout: ''
  timestamp: 1660014144
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = (Double(a) + Double(b) + Double(c))\
    \ / 2\n        return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpawxxokjt.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    if a + b > c && a + c > b && b + c > a\
    \ {\n        let s = Double(a + b + c) / 2\n        return sqrt(s * (s - Double(a))\
    \ * (s - Double(b)) * (s - Double(c)))\n    }\n    return -1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpk4of5y1n.swift:13:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2.0\n    let area\
    \ = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp_opdhvj5.swift:11:25: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Double'\n    let s = (a + b + c) / 2.0\n    \
    \        ~~~~~~~~~~~ ^ ~~~\n/tmp/tmp_opdhvj5.swift:11:25: note: overloads for\
    \ '/' exist with these partially matching parameter lists: (Double, Double), (Duration,\
    \ Double), (Int, Int)\n    let s = (a + b + c) / 2.0\n                       \
    \ ^\n/tmp/tmp_opdhvj5.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmp_opdhvj5.swift:12:16: error: the compiler is unable to\
    \ type-check this expression in reasonable time; try breaking up the expression\
    \ into distinct sub-expressions\n    let area = sqrt(s * (s - Double(a)) * (s\
    \ - Double(b)) * (s - Double(c)))\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014143
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2.0\n    let area\
    \ = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? area : -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpab339ug2.swift:11:25: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Double'\n    let s = (a + b + c) / 2.0\n    \
    \        ~~~~~~~~~~~ ^ ~~~\n/tmp/tmpab339ug2.swift:11:25: note: overloads for\
    \ '/' exist with these partially matching parameter lists: (Double, Double), (Duration,\
    \ Double), (Int, Int)\n    let s = (a + b + c) / 2.0\n                       \
    \ ^\n/tmp/tmpab339ug2.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmpab339ug2.swift:12:16: error: the compiler is unable to\
    \ type-check this expression in reasonable time; try breaking up the expression\
    \ into distinct sub-expressions\n    let area = sqrt(s * (s - Double(a)) * (s\
    \ - Double(b)) * (s - Double(c)))\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014143
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = Double(a + b + c) / 2\n  \
    \      return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp2tzibtys.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let s = Double(a + b + c) / 2\n  \
    \      return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp12k2za65.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = Double(a + b + c) / 2\n  \
    \      return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp2tzibtys.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    if\
    \ area.isNaN {\n        return -1\n    }\n    return Double(round(100 * area)\
    \ / 100)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpluwnuant.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmpluwnuant.swift:16:19: error: cannot find 'round' in scope\n\
    \    return Double(round(100 * area) / 100)\n                  ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    let\
    \ sum = sides.reduce(0, combine: +)\n    if sides[0] + sides[1] > sides[2] {\n\
    \        let p = Double(sum) / 2\n        return sqrt(p * (p - Double(sides[0]))\
    \ * (p - Double(sides[1])) * (p - Double(sides[2])))\n    }\n    return -1\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp0rtp5nft.swift:12:27: error: extraneous argument label 'combine:'\
    \ in call\n    let sum = sides.reduce(0, combine: +)\n                       \
    \   ^   ~~~~~~~~~\n                              \n/tmp/tmp0rtp5nft.swift:15:16:\
    \ error: cannot find 'sqrt' in scope\n        return sqrt(p * (p - Double(sides[0]))\
    \ * (p - Double(sides[1])) * (p - Double(sides[2])))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? Double(round(area * 100) / 100) : -1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp974pedg1.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmp974pedg1.swift:13:30: error: cannot find 'round' in scope\n\
    \    return area > 0 ? Double(round(area * 100) / 100) : -1\n                \
    \             ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? area : -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp4n1mb748.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    if\
    \ area.isNaN {\n        return -1\n    }\n    return round(area * 100) / 100\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpwwj1fbaw.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmpwwj1fbaw.swift:16:12: error: cannot find 'round' in scope\n\
    \    return round(area * 100) / 100\n           ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = (Double(a) + Double(b) + Double(c))\
    \ / 2\n        return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpawxxokjt.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = Double(a + b + c) / 2\n  \
    \      return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp2tzibtys.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    if s - Double(a)\
    \ > 0 && s - Double(b) > 0 && s - Double(c) > 0 {\n        return sqrt(Double(s\
    \ * (s - a) * (s - b) * (s - c)))\n    }\n    return -1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp8afsf4_z.swift:12:12: error: cannot convert value of type 'Double'\
    \ to expected argument type 'Int'\n    if s - Double(a) > 0 && s - Double(b) >\
    \ 0 && s - Double(c) > 0 {\n           ^\n           Int(     )\n/tmp/tmp8afsf4_z.swift:12:33:\
    \ error: cannot convert value of type 'Double' to expected argument type 'Int'\n\
    \    if s - Double(a) > 0 && s - Double(b) > 0 && s - Double(c) > 0 {\n      \
    \                          ^\n                                Int(     )\n/tmp/tmp8afsf4_z.swift:12:54:\
    \ error: cannot convert value of type 'Double' to expected argument type 'Int'\n\
    \    if s - Double(a) > 0 && s - Double(b) > 0 && s - Double(c) > 0 {\n      \
    \                                               ^\n                          \
    \                           Int(     )\n/tmp/tmp8afsf4_z.swift:13:16: error: cannot\
    \ find 'sqrt' in scope\n        return sqrt(Double(s * (s - a) * (s - b) * (s\
    \ - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014125
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    if a + b > c && a + c > b && b + c > a\
    \ {\n        let s = Double(a + b + c) / 2\n        return sqrt(s * (s - Double(a))\
    \ * (s - Double(b)) * (s - Double(c)))\n    }\n    return -1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpk4of5y1n.swift:13:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2.0\n    let area\
    \ = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp_opdhvj5.swift:11:25: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Double'\n    let s = (a + b + c) / 2.0\n    \
    \        ~~~~~~~~~~~ ^ ~~~\n/tmp/tmp_opdhvj5.swift:11:25: note: overloads for\
    \ '/' exist with these partially matching parameter lists: (Double, Double), (Duration,\
    \ Double), (Int, Int)\n    let s = (a + b + c) / 2.0\n                       \
    \ ^\n/tmp/tmp_opdhvj5.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmp_opdhvj5.swift:12:16: error: the compiler is unable to\
    \ type-check this expression in reasonable time; try breaking up the expression\
    \ into distinct sub-expressions\n    let area = sqrt(s * (s - Double(a)) * (s\
    \ - Double(b)) * (s - Double(c)))\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660014143
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = Double(a + b + c) / 2\n  \
    \      return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp2tzibtys.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? area : -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp4n1mb748.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : round(area * 100) / 100\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpmoz6frxg.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n\
    /tmp/tmpmoz6frxg.swift:13:30: error: cannot find 'round' in scope\n    return\
    \ area.isNaN ? -1 : round(area * 100) / 100\n                             ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    if\
    \ area > 0 {\n        return round(area * 100) / 100\n    }\n    return -1\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpt9wcmf9l.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmpt9wcmf9l.swift:14:16: error: cannot find 'round' in scope\n\
    \        return round(area * 100) / 100\n               ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    if\
    \ s - Double(a) <= 0 || s - Double(b) <= 0 || s - Double(c) <= 0 {\n        return\
    \ -1\n    }\n    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp2lolzv6w.swift:15:12: error: cannot find 'sqrt' in scope\n    return\
    \ sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n           ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = Double(a + b + c) / 2\n  \
    \      return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp2tzibtys.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : round(area * 100) / 100\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpmoz6frxg.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n\
    /tmp/tmpmoz6frxg.swift:13:30: error: cannot find 'round' in scope\n    return\
    \ area.isNaN ? -1 : round(area * 100) / 100\n                             ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : Double(round(100 * area) / 100)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b:\
    \ 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpbragp_zt.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n\
    /tmp/tmpbragp_zt.swift:13:37: error: cannot find 'round' in scope\n    return\
    \ area.isNaN ? -1 : Double(round(100 * area) / 100)\n                        \
    \            ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : round(area * 100) / 100\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpmoz6frxg.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n\
    /tmp/tmpmoz6frxg.swift:13:30: error: cannot find 'round' in scope\n    return\
    \ area.isNaN ? -1 : round(area * 100) / 100\n                             ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? round(area * 100) / 100 : -1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpt1qr0jhn.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmpt1qr0jhn.swift:13:23: error: cannot find 'round' in scope\n\
    \    return area > 0 ? round(area * 100) / 100 : -1\n                      ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area < 0 ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp5qa3kfll.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : round(area * 100) / 100\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpmoz6frxg.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n\
    /tmp/tmpmoz6frxg.swift:13:30: error: cannot find 'round' in scope\n    return\
    \ area.isNaN ? -1 : round(area * 100) / 100\n                             ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? round(area * 100) / 100 : -1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpt1qr0jhn.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n/tmp/tmpt1qr0jhn.swift:13:23: error: cannot find 'round' in scope\n\
    \    return area > 0 ? round(area * 100) / 100 : -1\n                      ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    if a + b > c && a + c > b && b + c > a\
    \ {\n        let s = Double(a + b + c) / 2\n        return sqrt(s * (s - Double(a))\
    \ * (s - Double(b)) * (s - Double(c)))\n    }\n    return -1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpk4of5y1n.swift:13:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    if a + b > c && a + c > b && b + c > a\
    \ {\n        let s = Double(a + b + c) / 2\n        return sqrt(s * (s - Double(a))\
    \ * (s - Double(b)) * (s - Double(c)))\n    }\n    return -1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpk4of5y1n.swift:13:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area > 0 ? area\
    \ : -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3, b:\
    \ 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpbdl60c8l.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area > 0 ? area : -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp4n1mb748.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    if area.isNaN {\n     \
    \   return -1\n    }\n    return Double(round(100 * area) / 100)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp0ixyv3j4.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n\
    /tmp/tmp0ixyv3j4.swift:16:19: error: cannot find 'round' in scope\n    return\
    \ Double(round(100 * area) / 100)\n                  ^~~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let sides = [a, b, c].sorted()\n    if\
    \ sides[0] + sides[1] > sides[2] {\n        let p = Double(a + b + c) / 2\n  \
    \      return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n\
    \    }\n    return -1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp2tzibtys.swift:14:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(p * (p - Double(a)) * (p - Double(b)) * (p - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = Double(a + b + c) / 2\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n    return\
    \ area.isNaN ? -1 : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(triangle_area(a:\
    \ 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp3d70d9pe.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n     \
    \          ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    let s = (a + b + c) / 2\n    let area\
    \ = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n    return area.isNaN ? -1\
    \ : area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(triangle_area(a: 3,\
    \ b: 4, c: 5) == 6.0)\nassert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a:\
    \ 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
    \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmp9hx2zvj8.swift:12:16: error: cannot find 'sqrt' in scope\n    let\
    \ area = sqrt(Double(s * (s - a) * (s - b) * (s - c)))\n               ^~~~\n"
  stdout: ''
  timestamp: 1660014124
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return the area\
    \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
    /// triangle_area(3, 4, 5) == 6.00\n/// triangle_area(1, 2, 10) == -1\nfunc triangle_area(a:\
    \ Int, b: Int, c: Int) -> Double {\n    if a + b > c && a + c > b && b + c > a\
    \ {\n        let s = Double(a + b + c) / 2\n        return sqrt(s * (s - Double(a))\
    \ * (s - Double(b)) * (s - Double(c)))\n    }\n    return -1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\nassert(triangle_area(a:\
    \ 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8, c: 5) == 8.18)\nassert(triangle_area(a:\
    \ 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a: 1, b: 2, c: 3) == -1)\nassert(triangle_area(a:\
    \ 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a: 2, b: 6, c: 3) == -1)\nassert(triangle_area(a:\
    \ 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a: 2, b: 2, c: 10) == -1)"
  status: SyntaxError
  stderr: "/tmp/tmpk4of5y1n.swift:13:16: error: cannot find 'sqrt' in scope\n    \
    \    return sqrt(s * (s - Double(a)) * (s - Double(b)) * (s - Double(c)))\n  \
    \             ^~~~\n"
  stdout: ''
  timestamp: 1660014124

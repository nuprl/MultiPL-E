language: swift
name: HumanEval_145_order_by_points
results:
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted {\n        let\
    \ sum1 = $0.digits.reduce(0, +)\n        let sum2 = $1.digits.reduce(0, +)\n \
    \       return sum1 == sum2 ? $0 < $1 : sum1 < sum2\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp5st1enxy.swift:11:23: error: value of type 'Int' has no member\
    \ 'digits'\n        let sum1 = $0.digits.reduce(0, +)\n                   ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let sum1 = sum_of_digits(num: $0)\n        let sum2 = sum_of_digits(num:\
    \ $1)\n        if sum1 == sum2 {\n            return nums.index(of: $0)! < nums.index(of:\
    \ $1)!\n        }\n        return sum1 < sum2\n    })\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpr2o96hxk.swift:11:20: error: cannot find 'sum_of_digits' in scope\n\
    \        let sum1 = sum_of_digits(num: $0)\n                   ^~~~~~~~~~~~~\n\
    /tmp/tmpr2o96hxk.swift:12:20: error: cannot find 'sum_of_digits' in scope\n  \
    \      let sum2 = sum_of_digits(num: $1)\n                   ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: { (a, b)\
    \ -> Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    })\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpvhmjpf4f.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let a = $0.digits.reduce(0, +)\n        let b = $1.digits.reduce(0, +)\n\
    \        return a == b ? $0 < $1 : a < b\n    })\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpbj5o2y5s.swift:11:20: error: value of type 'Int' has no member\
    \ 'digits'\n        let a = $0.digits.reduce(0, +)\n                ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (num1, num2)\
    \ -> Bool in\n        let sum1 = num1.digits.reduce(0, +)\n        let sum2 =\
    \ num2.digits.reduce(0, +)\n        return sum1 < sum2\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp2_aujzs1.swift:11:25: error: value of type 'Int' has no member\
    \ 'digits'\n        let sum1 = num1.digits.reduce(0, +)\n                   ~~~~\
    \ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    var result = [Int]()\n    var dict\
    \ = [Int: Int]()\n    for (index, num) in nums.enumerated() {\n        let sum\
    \ = num.digits.reduce(0, +)\n        dict[sum] = num\n    }\n    let sortedKeys\
    \ = dict.keys.sorted()\n    for key in sortedKeys {\n        result.append(dict[key]!)\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp1q7n38hk.swift:13:23: error: value of type 'Int' has no member\
    \ 'digits'\n        let sum = num.digits.reduce(0, +)\n                  ~~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: -4
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = String(a).reduce(0) { $0 + Int(String($1))! }\n\
    \        let bSum = String(b).reduce(0) { $0 + Int(String($1))! }\n        return\
    \ aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: Exception
  stderr: 'tmps51h6icw/tmps51h6icw.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e8d342c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e8d039561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b0e8d039286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b0e8d03913c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b0e8d038bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmps51h6icw                        0x0000556e946572fa <unavailable> + 8954

    6    libswiftCore.so                    0x00002b0e8d148410 Sequence.reduce<A>(_:_:)
    + 530

    7    tmps51h6icw                        0x0000556e946570d3 <unavailable> + 8403

    8    libswiftCore.so                    0x00002b0e8d15ac90 MutableCollection<>._insertionSort(within:sortedEnd:by:)
    + 770

    9    libswiftCore.so                    0x00002b0e8d15b110 MutableCollection<>._insertionSort(within:by:)
    + 356

    10   libswiftCore.so                    0x00002b0e8d159d30 UnsafeMutableBufferPointer._stableSortImpl(by:)
    + 319

    11   libswiftCore.so                    0x00002b0e8d159d15 <unavailable> + 2616597

    12   libswiftCore.so                    0x00002b0e8d27f65a <unavailable> + 3819098

    13   libswiftCore.so                    0x00002b0e8d06e720 ContiguousArray.withContiguousMutableStorageIfAvailable<A>(_:)
    + 130

    14   libswiftCore.so                    0x00002b0e8d06e70f <unavailable> + 1652495

    15   libswiftCore.so                    0x00002b0e8d159460 MutableCollection<>.sort(by:)
    + 771

    16   libswiftCore.so                    0x00002b0e8d159370 Sequence.sorted(by:)
    + 193

    17   tmps51h6icw                        0x0000556e94657000 <unavailable> + 8192

    18   tmps51h6icw                        0x0000556e946566b4 <unavailable> + 5812

    19   libc.so.6                          0x00002b0e8d52e460 __libc_start_main +
    245

    20   tmps51h6icw                        0x0000556e94656389 <unavaila'
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted {\n        let\
    \ sum1 = sum_of_digits(n: $0)\n        let sum2 = sum_of_digits(n: $1)\n     \
    \   if sum1 == sum2 {\n            return nums.index(of: $0)! < nums.index(of:\
    \ $1)!\n        }\n        return sum1 < sum2\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp_1srgont.swift:11:20: error: cannot find 'sum_of_digits' in scope\n\
    \        let sum1 = sum_of_digits(n: $0)\n                   ^~~~~~~~~~~~~\n/tmp/tmp_1srgont.swift:12:20:\
    \ error: cannot find 'sum_of_digits' in scope\n        let sum2 = sum_of_digits(n:\
    \ $1)\n                   ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = sumOfDigits(a)\n        let bSum = sumOfDigits(b)\n\
    \        if aSum == bSum {\n            return a < b\n        }\n        return\
    \ aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmd9h86r3.swift:11:20: error: cannot find 'sumOfDigits' in scope\n\
    \        let aSum = sumOfDigits(a)\n                   ^~~~~~~~~~~\n/tmp/tmpmd9h86r3.swift:12:20:\
    \ error: cannot find 'sumOfDigits' in scope\n        let bSum = sumOfDigits(b)\n\
    \                   ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let sumA = a.digits.reduce(0, +)\n        let sumB = b.digits.reduce(0,\
    \ +)\n        return sumA == sumB ? a < b : sumA < sumB\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp9vqa7onl.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let sumA = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let a = $0.digits.reduce(0, +)\n        let b = $1.digits.reduce(0, +)\n\
    \        return a == b ? $0 < $1 : a < b\n    })\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpbj5o2y5s.swift:11:20: error: value of type 'Int' has no member\
    \ 'digits'\n        let a = $0.digits.reduce(0, +)\n                ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    var nums = nums\n    for i in 0..<nums.count\
    \ {\n        for j in i+1..<nums.count {\n            if sum_of_digits(nums[i])\
    \ > sum_of_digits(nums[j]) {\n                nums.swapAt(i, j)\n            }\n\
    \        }\n    }\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp7j2k5tk6.swift:13:16: error: cannot find 'sum_of_digits' in scope\n\
    \            if sum_of_digits(nums[i]) > sum_of_digits(nums[j]) {\n          \
    \     ^~~~~~~~~~~~~\n/tmp/tmp7j2k5tk6.swift:13:41: error: cannot find 'sum_of_digits'\
    \ in scope\n            if sum_of_digits(nums[i]) > sum_of_digits(nums[j]) {\n\
    \                                        ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum || (aSum == bSum && a < b)\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpgh9z3iot.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = sum_of_digits(a)\n        let bSum = sum_of_digits(b)\n\
    \        if aSum == bSum {\n            return nums.firstIndex(of: a)! < nums.firstIndex(of:\
    \ b)!\n        }\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp933q32ac.swift:11:20: error: cannot find 'sum_of_digits' in scope\n\
    \        let aSum = sum_of_digits(a)\n                   ^~~~~~~~~~~~~\n/tmp/tmp933q32ac.swift:12:20:\
    \ error: cannot find 'sum_of_digits' in scope\n        let bSum = sum_of_digits(b)\n\
    \                   ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let sum1 = $0.digits.reduce(0, +)\n        let sum2 = $1.digits.reduce(0,\
    \ +)\n        return sum1 == sum2 ? $0 < $1 : sum1 < sum2\n    })\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpzhrsiyf8.swift:11:23: error: value of type 'Int' has no member\
    \ 'digits'\n        let sum1 = $0.digits.reduce(0, +)\n                   ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let a = abs($0)\n        let b = abs($1)\n        let aSum = a.digits.reduce(0,\
    \ +)\n        let bSum = b.digits.reduce(0, +)\n        return aSum == bSum ?\
    \ $0 < $1 : aSum < bSum\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpz_qfx6bn.swift:13:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = sum_of_digits(a)\n        let bSum = sum_of_digits(b)\n\
    \        if aSum == bSum {\n            return a < b\n        }\n        return\
    \ aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmptjhmp4i_.swift:11:20: error: cannot find 'sum_of_digits' in scope\n\
    \        let aSum = sum_of_digits(a)\n                   ^~~~~~~~~~~~~\n/tmp/tmptjhmp4i_.swift:12:20:\
    \ error: cannot find 'sum_of_digits' in scope\n        let bSum = sum_of_digits(b)\n\
    \                   ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    var result = [Int]()\n    var dict\
    \ = [Int: Int]()\n    for (index, num) in nums.enumerated() {\n        dict[num]\
    \ = index\n    }\n    let sortedDict = dict.sorted { (a, b) -> Bool in\n     \
    \   let aSum = a.key.digits.reduce(0, +)\n        let bSum = b.key.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a.value < b.value : aSum < bSum\n    }\n \
    \   for (key, _) in sortedDict {\n        result.append(key)\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpflrc7c9a.swift:16:26: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.key.digits.reduce(0, +)\n                   ~~~~~\
    \ ^~~~~~\n/tmp/tmpflrc7c9a.swift:20:5: error: failed to produce diagnostic for\
    \ expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)\
    \ and include the project\n    for (key, _) in sortedDict {\n    ^\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted {\n        let\
    \ sumOfDigits = $0.digits.reduce(0, +)\n        let sumOfDigits2 = $1.digits.reduce(0,\
    \ +)\n        return sumOfDigits == sumOfDigits2 ? $0 < $1 : sumOfDigits < sumOfDigits2\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(order_by_points(nums: [1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpe3ob27z5.swift:11:30: error: value of type 'Int' has no member\
    \ 'digits'\n        let sumOfDigits = $0.digits.reduce(0, +)\n               \
    \           ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let sum1 = $0.digits.reduce(0, +)\n        let sum2 = $1.digits.reduce(0,\
    \ +)\n        return sum1 < sum2\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmptcgszfp7.swift:11:23: error: value of type 'Int' has no member\
    \ 'digits'\n        let sum1 = $0.digits.reduce(0, +)\n                   ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    var dict: [Int: [Int]] = [:]\n\
    \    for (index, num) in nums.enumerated() {\n        let sum = num.digits.reduce(0,\
    \ +)\n        if dict[sum] == nil {\n            dict[sum] = [num]\n        }\
    \ else {\n            dict[sum]?.append(num)\n        }\n    }\n    let sortedKeys\
    \ = dict.keys.sorted()\n    var result: [Int] = []\n    for key in sortedKeys\
    \ {\n        result.append(contentsOf: dict[key]!)\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp0sup9hcs.swift:12:23: error: value of type 'Int' has no member\
    \ 'digits'\n        let sum = num.digits.reduce(0, +)\n                  ~~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let a = abs($0)\n        let b = abs($1)\n        let aSum = a.digits.reduce(0,\
    \ +)\n        let bSum = b.digits.reduce(0, +)\n        return aSum == bSum ?\
    \ a < b : aSum < bSum\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmplen34o6m.swift:13:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let a = $0.digits.reduce(0, +)\n        let b = $1.digits.reduce(0, +)\n\
    \        return a < b\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpc4kzlv_r.swift:11:20: error: value of type 'Int' has no member\
    \ 'digits'\n        let a = $0.digits.reduce(0, +)\n                ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let a = abs($0)\n        let b = abs($1)\n        let aSum = a.digits.reduce(0,\
    \ +)\n        let bSum = b.digits.reduce(0, +)\n        return aSum == bSum ?\
    \ a < b : aSum < bSum\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmplen34o6m.swift:13:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted {\n        let\
    \ sum1 = $0.digits.reduce(0, +)\n        let sum2 = $1.digits.reduce(0, +)\n \
    \       return sum1 == sum2 ? $0 < $1 : sum1 < sum2\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp5st1enxy.swift:11:23: error: value of type 'Int' has no member\
    \ 'digits'\n        let sum1 = $0.digits.reduce(0, +)\n                   ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted {\n        let\
    \ a = $0.digits.reduce(0, +)\n        let b = $1.digits.reduce(0, +)\n       \
    \ return a < b\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpj8_mcva7.swift:11:20: error: value of type 'Int' has no member\
    \ 'digits'\n        let a = $0.digits.reduce(0, +)\n                ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    var result = nums\n    result.sort\
    \ { (a, b) -> Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum\
    \ = b.digits.reduce(0, +)\n        return aSum == bSum ? a < b : aSum < bSum\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp31bticxk.swift:12:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: -4
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = String(a).reduce(0) { $0 + Int(String($1))! }\n\
    \        let bSum = String(b).reduce(0) { $0 + Int(String($1))! }\n        return\
    \ aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: Exception
  stderr: 'tmps51h6icw/tmps51h6icw.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e8d342c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e8d039561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b0e8d039286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b0e8d03913c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b0e8d038bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmps51h6icw                        0x0000556e946572fa <unavailable> + 8954

    6    libswiftCore.so                    0x00002b0e8d148410 Sequence.reduce<A>(_:_:)
    + 530

    7    tmps51h6icw                        0x0000556e946570d3 <unavailable> + 8403

    8    libswiftCore.so                    0x00002b0e8d15ac90 MutableCollection<>._insertionSort(within:sortedEnd:by:)
    + 770

    9    libswiftCore.so                    0x00002b0e8d15b110 MutableCollection<>._insertionSort(within:by:)
    + 356

    10   libswiftCore.so                    0x00002b0e8d159d30 UnsafeMutableBufferPointer._stableSortImpl(by:)
    + 319

    11   libswiftCore.so                    0x00002b0e8d159d15 <unavailable> + 2616597

    12   libswiftCore.so                    0x00002b0e8d27f65a <unavailable> + 3819098

    13   libswiftCore.so                    0x00002b0e8d06e720 ContiguousArray.withContiguousMutableStorageIfAvailable<A>(_:)
    + 130

    14   libswiftCore.so                    0x00002b0e8d06e70f <unavailable> + 1652495

    15   libswiftCore.so                    0x00002b0e8d159460 MutableCollection<>.sort(by:)
    + 771

    16   libswiftCore.so                    0x00002b0e8d159370 Sequence.sorted(by:)
    + 193

    17   tmps51h6icw                        0x0000556e94657000 <unavailable> + 8192

    18   tmps51h6icw                        0x0000556e946566b4 <unavailable> + 5812

    19   libc.so.6                          0x00002b0e8d52e460 __libc_start_main +
    245

    20   tmps51h6icw                        0x0000556e94656389 <unavaila'
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted {\n        let\
    \ sum1 = $0.digits.reduce(0, +)\n        let sum2 = $1.digits.reduce(0, +)\n \
    \       return sum1 == sum2 ? $0 < $1 : sum1 < sum2\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp5st1enxy.swift:11:23: error: value of type 'Int' has no member\
    \ 'digits'\n        let sum1 = $0.digits.reduce(0, +)\n                   ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    var nums = nums\n    for i in 0..<nums.count\
    \ {\n        for j in 0..<nums.count - 1 {\n            if sum_of_digits(nums[j])\
    \ > sum_of_digits(nums[j + 1]) {\n                nums.swapAt(j, j + 1)\n    \
    \        }\n        }\n    }\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46,\
    \ 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\n\
    assert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98,\
    \ -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp8ech1rth.swift:13:16: error: cannot find 'sum_of_digits' in scope\n\
    \            if sum_of_digits(nums[j]) > sum_of_digits(nums[j + 1]) {\n      \
    \         ^~~~~~~~~~~~~\n/tmp/tmp8ech1rth.swift:13:41: error: cannot find 'sum_of_digits'\
    \ in scope\n            if sum_of_digits(nums[j]) > sum_of_digits(nums[j + 1])\
    \ {\n                                        ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let a = $0.digits.reduce(0, +)\n        let b = $1.digits.reduce(0, +)\n\
    \        return a < b\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpc4kzlv_r.swift:11:20: error: value of type 'Int' has no member\
    \ 'digits'\n        let a = $0.digits.reduce(0, +)\n                ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    var result = [Int]()\n    var dict\
    \ = [Int: Int]()\n    for (index, num) in nums.enumerated() {\n        let sum\
    \ = sum_of_digits(num: num)\n        dict[sum] = num\n    }\n    for key in dict.keys.sorted()\
    \ {\n        result.append(dict[key]!)\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpg0i84yok.swift:13:19: error: cannot find 'sum_of_digits' in scope\n\
    \        let sum = sum_of_digits(num: num)\n                  ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: { (a, b)\
    \ -> Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpzx8rnf8b.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted {\n        let\
    \ sum1 = $0.digits.reduce(0, +)\n        let sum2 = $1.digits.reduce(0, +)\n \
    \       return sum1 < sum2\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp9_rmgzi0.swift:11:23: error: value of type 'Int' has no member\
    \ 'digits'\n        let sum1 = $0.digits.reduce(0, +)\n                   ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: { (a, b)\
    \ -> Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpzx8rnf8b.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let sumA = a.digits.reduce(0, +)\n        let sumB = b.digits.reduce(0,\
    \ +)\n        return sumA < sumB\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpx85mcvqj.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let sumA = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: -4
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let a = String($0).map { Int(String($0))! }.reduce(0, +)\n        let b =\
    \ String($1).map { Int(String($0))! }.reduce(0, +)\n        return a < b\n   \
    \ })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(order_by_points(nums: [1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: Exception
  stderr: 'tmpx4e7v3sx/tmpx4e7v3sx.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002adf7cfa5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adf7cc9c561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002adf7cc9c286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002adf7cc9c13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002adf7cc9bbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpx4e7v3sx                        0x0000556e41a5c4f1 <unavailable> + 9457

    6    libswiftCore.so                    0x00002adf7cc84820 Collection.map<A>(_:)
    + 426

    7    tmpx4e7v3sx                        0x0000556e41a5c131 <unavailable> + 8497

    8    libswiftCore.so                    0x00002adf7cdbdc90 MutableCollection<>._insertionSort(within:sortedEnd:by:)
    + 770

    9    libswiftCore.so                    0x00002adf7cdbe110 MutableCollection<>._insertionSort(within:by:)
    + 356

    10   libswiftCore.so                    0x00002adf7cdbcd30 UnsafeMutableBufferPointer._stableSortImpl(by:)
    + 319

    11   libswiftCore.so                    0x00002adf7cdbcd15 <unavailable> + 2616597

    12   libswiftCore.so                    0x00002adf7cee265a <unavailable> + 3819098

    13   libswiftCore.so                    0x00002adf7ccd1720 ContiguousArray.withContiguousMutableStorageIfAvailable<A>(_:)
    + 130

    14   libswiftCore.so                    0x00002adf7ccd170f <unavailable> + 1652495

    15   libswiftCore.so                    0x00002adf7cdbc460 MutableCollection<>.sort(by:)
    + 771

    16   libswiftCore.so                    0x00002adf7cdbc370 Sequence.sorted(by:)
    + 193

    17   tmpx4e7v3sx                        0x0000556e41a5c060 <unavailable> + 8288

    18   tmpx4e7v3sx                        0x0000556e41a5b714 <unavailable> + 5908

    19   libc.so.6                          0x00002adf7d191460 __libc_start_main +
    245

    20   tmpx4e7v3sx                        0x0000556e41a5b3e9 <unavailable'
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let sum1 = sum_of_digits(num: $0)\n        let sum2 = sum_of_digits(num:\
    \ $1)\n        if sum1 == sum2 {\n            return nums.index(of: $0)! < nums.index(of:\
    \ $1)!\n        }\n        return sum1 < sum2\n    })\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpr2o96hxk.swift:11:20: error: cannot find 'sum_of_digits' in scope\n\
    \        let sum1 = sum_of_digits(num: $0)\n                   ^~~~~~~~~~~~~\n\
    /tmp/tmpr2o96hxk.swift:12:20: error: cannot find 'sum_of_digits' in scope\n  \
    \      let sum2 = sum_of_digits(num: $1)\n                   ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    var nums = nums\n    for i in 0..<nums.count\
    \ {\n        for j in 0..<nums.count - 1 {\n            if sum_of_digits(nums[j])\
    \ > sum_of_digits(nums[j + 1]) {\n                let temp = nums[j]\n       \
    \         nums[j] = nums[j + 1]\n                nums[j + 1] = temp\n        \
    \    }\n        }\n    }\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6,\
    \ 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46,\
    \ 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\n\
    assert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98,\
    \ -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpxo8_xxhv.swift:13:16: error: cannot find 'sum_of_digits' in scope\n\
    \            if sum_of_digits(nums[j]) > sum_of_digits(nums[j + 1]) {\n      \
    \         ^~~~~~~~~~~~~\n/tmp/tmpxo8_xxhv.swift:13:41: error: cannot find 'sum_of_digits'\
    \ in scope\n            if sum_of_digits(nums[j]) > sum_of_digits(nums[j + 1])\
    \ {\n                                        ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let sumA = a.digits.reduce(0, +)\n        let sumB = b.digits.reduce(0,\
    \ +)\n        return sumA < sumB\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpx85mcvqj.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let sumA = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits().reduce(0, +)\n        let bSum = b.digits().reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp_wei4ss2.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits().reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let sum1 = $0.digits.reduce(0, +)\n        let sum2 = $1.digits.reduce(0,\
    \ +)\n        return sum1 == sum2 ? $0 < $1 : sum1 < sum2\n    })\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpzhrsiyf8.swift:11:23: error: value of type 'Int' has no member\
    \ 'digits'\n        let sum1 = $0.digits.reduce(0, +)\n                   ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum || (aSum == bSum && a < b)\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpgh9z3iot.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let a = $0.digits().reduce(0, +)\n        let b = $1.digits().reduce(0, +)\n\
    \        return a == b ? $0 < $1 : a < b\n    })\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpsp_y3lgr.swift:11:20: error: value of type 'Int' has no member\
    \ 'digits'\n        let a = $0.digits().reduce(0, +)\n                ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: -4
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = String(a).map { Int(String($0))! }.reduce(0, +)\n\
    \        let bSum = String(b).map { Int(String($0))! }.reduce(0, +)\n        return\
    \ aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: Exception
  stderr: 'tmpdsfef50y/tmpdsfef50y.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b221dcc6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b221d9bd561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b221d9bd286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b221d9bd13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b221d9bcbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpdsfef50y                        0x00005564c37164f1 <unavailable> + 9457

    6    libswiftCore.so                    0x00002b221d9a5820 Collection.map<A>(_:)
    + 426

    7    tmpdsfef50y                        0x00005564c3716131 <unavailable> + 8497

    8    libswiftCore.so                    0x00002b221dadec90 MutableCollection<>._insertionSort(within:sortedEnd:by:)
    + 770

    9    libswiftCore.so                    0x00002b221dadf110 MutableCollection<>._insertionSort(within:by:)
    + 356

    10   libswiftCore.so                    0x00002b221daddd30 UnsafeMutableBufferPointer._stableSortImpl(by:)
    + 319

    11   libswiftCore.so                    0x00002b221daddd15 <unavailable> + 2616597

    12   libswiftCore.so                    0x00002b221dc0365a <unavailable> + 3819098

    13   libswiftCore.so                    0x00002b221d9f2720 ContiguousArray.withContiguousMutableStorageIfAvailable<A>(_:)
    + 130

    14   libswiftCore.so                    0x00002b221d9f270f <unavailable> + 1652495

    15   libswiftCore.so                    0x00002b221dadd460 MutableCollection<>.sort(by:)
    + 771

    16   libswiftCore.so                    0x00002b221dadd370 Sequence.sorted(by:)
    + 193

    17   tmpdsfef50y                        0x00005564c3716060 <unavailable> + 8288

    18   tmpdsfef50y                        0x00005564c3715714 <unavailable> + 5908

    19   libc.so.6                          0x00002b221deb2460 __libc_start_main +
    245

    20   tmpdsfef50y                        0x00005564c37153e9 <unavailable'
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: { (a, b)\
    \ -> Bool in\n        let aSum = sum_of_digits(num: a)\n        let bSum = sum_of_digits(num:\
    \ b)\n        return aSum < bSum\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpa6hgjlsc.swift:11:20: error: cannot find 'sum_of_digits' in scope\n\
    \        let aSum = sum_of_digits(num: a)\n                   ^~~~~~~~~~~~~\n\
    /tmp/tmpa6hgjlsc.swift:12:20: error: cannot find 'sum_of_digits' in scope\n  \
    \      let bSum = sum_of_digits(num: b)\n                   ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let sum1 = sum_of_digits(n: $0)\n        let sum2 = sum_of_digits(n: $1)\n\
    \        if sum1 == sum2 {\n            return nums.index(of: $0)! < nums.index(of:\
    \ $1)!\n        }\n        return sum1 < sum2\n    })\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmprrjvmqhj.swift:11:20: error: cannot find 'sum_of_digits' in scope\n\
    \        let sum1 = sum_of_digits(n: $0)\n                   ^~~~~~~~~~~~~\n/tmp/tmprrjvmqhj.swift:12:20:\
    \ error: cannot find 'sum_of_digits' in scope\n        let sum2 = sum_of_digits(n:\
    \ $1)\n                   ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum || (aSum == bSum && a < b)\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpgh9z3iot.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (lhs, rhs)\
    \ -> Bool in\n        let lhsSum = lhs.digits.reduce(0, +)\n        let rhsSum\
    \ = rhs.digits.reduce(0, +)\n        return lhsSum < rhsSum\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpdhq1lm55.swift:11:26: error: value of type 'Int' has no member\
    \ 'digits'\n        let lhsSum = lhs.digits.reduce(0, +)\n                   \
    \  ~~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    var nums = nums\n    nums.sort\
    \ { (a, b) -> Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum\
    \ = b.digits.reduce(0, +)\n        return aSum < bSum\n    }\n    return nums\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpfxext0f6.swift:12:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: -4
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (n1, n2) ->\
    \ Bool in\n        let s1 = String(n1).reduce(0) { (result, c) -> Int in\n   \
    \         return result + Int(String(c))!\n        }\n        let s2 = String(n2).reduce(0)\
    \ { (result, c) -> Int in\n            return result + Int(String(c))!\n     \
    \   }\n        return s1 < s2\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: Exception
  stderr: 'tmp9yk7_tx4/tmp9yk7_tx4.swift:12: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b6660ae5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b66607dc561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b66607dc286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b66607dc13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b66607dbbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmp9yk7_tx4                        0x0000556d3fdaf2fa <unavailable> + 8954

    6    libswiftCore.so                    0x00002b66608eb410 Sequence.reduce<A>(_:_:)
    + 530

    7    tmp9yk7_tx4                        0x0000556d3fdaf0d3 <unavailable> + 8403

    8    libswiftCore.so                    0x00002b66608fdc90 MutableCollection<>._insertionSort(within:sortedEnd:by:)
    + 770

    9    libswiftCore.so                    0x00002b66608fe110 MutableCollection<>._insertionSort(within:by:)
    + 356

    10   libswiftCore.so                    0x00002b66608fcd30 UnsafeMutableBufferPointer._stableSortImpl(by:)
    + 319

    11   libswiftCore.so                    0x00002b66608fcd15 <unavailable> + 2616597

    12   libswiftCore.so                    0x00002b6660a2265a <unavailable> + 3819098

    13   libswiftCore.so                    0x00002b6660811720 ContiguousArray.withContiguousMutableStorageIfAvailable<A>(_:)
    + 130

    14   libswiftCore.so                    0x00002b666081170f <unavailable> + 1652495

    15   libswiftCore.so                    0x00002b66608fc460 MutableCollection<>.sort(by:)
    + 771

    16   libswiftCore.so                    0x00002b66608fc370 Sequence.sorted(by:)
    + 193

    17   tmp9yk7_tx4                        0x0000556d3fdaf000 <unavailable> + 8192

    18   tmp9yk7_tx4                        0x0000556d3fdae6b4 <unavailable> + 5812

    19   libc.so.6                          0x00002b6660cd1460 __libc_start_main +
    245

    20   tmp9yk7_tx4                        0x0000556d3fdae389 <unavaila'
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let a = $0.digits.reduce(0, +)\n        let b = $1.digits.reduce(0, +)\n\
    \        return a == b ? $0 < $1 : a < b\n    })\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpbj5o2y5s.swift:11:20: error: value of type 'Int' has no member\
    \ 'digits'\n        let a = $0.digits.reduce(0, +)\n                ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: { (a, b)\
    \ -> Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpzx8rnf8b.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted {\n        let\
    \ sum1 = $0.digits.reduce(0, +)\n        let sum2 = $1.digits.reduce(0, +)\n \
    \       return sum1 == sum2 ? $0 < $1 : sum1 < sum2\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp5st1enxy.swift:11:23: error: value of type 'Int' has no member\
    \ 'digits'\n        let sum1 = $0.digits.reduce(0, +)\n                   ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: -4
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = String(a).reduce(0) { $0 + Int(String($1))! }\n\
    \        let bSum = String(b).reduce(0) { $0 + Int(String($1))! }\n        return\
    \ aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: Exception
  stderr: 'tmps51h6icw/tmps51h6icw.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e8d342c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e8d039561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b0e8d039286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b0e8d03913c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b0e8d038bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmps51h6icw                        0x0000556e946572fa <unavailable> + 8954

    6    libswiftCore.so                    0x00002b0e8d148410 Sequence.reduce<A>(_:_:)
    + 530

    7    tmps51h6icw                        0x0000556e946570d3 <unavailable> + 8403

    8    libswiftCore.so                    0x00002b0e8d15ac90 MutableCollection<>._insertionSort(within:sortedEnd:by:)
    + 770

    9    libswiftCore.so                    0x00002b0e8d15b110 MutableCollection<>._insertionSort(within:by:)
    + 356

    10   libswiftCore.so                    0x00002b0e8d159d30 UnsafeMutableBufferPointer._stableSortImpl(by:)
    + 319

    11   libswiftCore.so                    0x00002b0e8d159d15 <unavailable> + 2616597

    12   libswiftCore.so                    0x00002b0e8d27f65a <unavailable> + 3819098

    13   libswiftCore.so                    0x00002b0e8d06e720 ContiguousArray.withContiguousMutableStorageIfAvailable<A>(_:)
    + 130

    14   libswiftCore.so                    0x00002b0e8d06e70f <unavailable> + 1652495

    15   libswiftCore.so                    0x00002b0e8d159460 MutableCollection<>.sort(by:)
    + 771

    16   libswiftCore.so                    0x00002b0e8d159370 Sequence.sorted(by:)
    + 193

    17   tmps51h6icw                        0x0000556e94657000 <unavailable> + 8192

    18   tmps51h6icw                        0x0000556e946566b4 <unavailable> + 5812

    19   libc.so.6                          0x00002b0e8d52e460 __libc_start_main +
    245

    20   tmps51h6icw                        0x0000556e94656389 <unavaila'
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: { (a, b)\
    \ -> Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpzx8rnf8b.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let sum1 = $0.digits.reduce(0, +)\n        let sum2 = $1.digits.reduce(0,\
    \ +)\n        return sum1 < sum2\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmptcgszfp7.swift:11:23: error: value of type 'Int' has no member\
    \ 'digits'\n        let sum1 = $0.digits.reduce(0, +)\n                   ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits().reduce(0, +)\n        let bSum = b.digits().reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmppof69jmv.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits().reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (lhs, rhs)\
    \ -> Bool in\n        let lhsSum = lhs.digits.reduce(0, +)\n        let rhsSum\
    \ = rhs.digits.reduce(0, +)\n        return lhsSum < rhsSum\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpdhq1lm55.swift:11:26: error: value of type 'Int' has no member\
    \ 'digits'\n        let lhsSum = lhs.digits.reduce(0, +)\n                   \
    \  ~~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    var nums = nums\n    nums.sort\
    \ { (lhs, rhs) -> Bool in\n        let lhsSum = lhs.digits.reduce(0, +)\n    \
    \    let rhsSum = rhs.digits.reduce(0, +)\n        return lhsSum == rhsSum ? lhs\
    \ < rhs : lhsSum < rhsSum\n    }\n    return nums\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpsrdqkzm9.swift:12:26: error: value of type 'Int' has no member\
    \ 'digits'\n        let lhsSum = lhs.digits.reduce(0, +)\n                   \
    \  ~~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: -4
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = String(a).map { Int(String($0))! }.reduce(0, +)\n\
    \        let bSum = String(b).map { Int(String($0))! }.reduce(0, +)\n        return\
    \ aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: Exception
  stderr: 'tmpdsfef50y/tmpdsfef50y.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b221dcc6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b221d9bd561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b221d9bd286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b221d9bd13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b221d9bcbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpdsfef50y                        0x00005564c37164f1 <unavailable> + 9457

    6    libswiftCore.so                    0x00002b221d9a5820 Collection.map<A>(_:)
    + 426

    7    tmpdsfef50y                        0x00005564c3716131 <unavailable> + 8497

    8    libswiftCore.so                    0x00002b221dadec90 MutableCollection<>._insertionSort(within:sortedEnd:by:)
    + 770

    9    libswiftCore.so                    0x00002b221dadf110 MutableCollection<>._insertionSort(within:by:)
    + 356

    10   libswiftCore.so                    0x00002b221daddd30 UnsafeMutableBufferPointer._stableSortImpl(by:)
    + 319

    11   libswiftCore.so                    0x00002b221daddd15 <unavailable> + 2616597

    12   libswiftCore.so                    0x00002b221dc0365a <unavailable> + 3819098

    13   libswiftCore.so                    0x00002b221d9f2720 ContiguousArray.withContiguousMutableStorageIfAvailable<A>(_:)
    + 130

    14   libswiftCore.so                    0x00002b221d9f270f <unavailable> + 1652495

    15   libswiftCore.so                    0x00002b221dadd460 MutableCollection<>.sort(by:)
    + 771

    16   libswiftCore.so                    0x00002b221dadd370 Sequence.sorted(by:)
    + 193

    17   tmpdsfef50y                        0x00005564c3716060 <unavailable> + 8288

    18   tmpdsfef50y                        0x00005564c3715714 <unavailable> + 5908

    19   libc.so.6                          0x00002b221deb2460 __libc_start_main +
    245

    20   tmpdsfef50y                        0x00005564c37153e9 <unavailable'
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    var result = [Int]()\n    var dict\
    \ = [Int: Int]()\n    for i in 0..<nums.count {\n        dict[nums[i]] = sum_of_digits(nums[i])\n\
    \    }\n    let sortedDict = dict.sorted(by: {$0.value < $1.value})\n    for (key,\
    \ _) in sortedDict {\n        result.append(key)\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp_b6flo5_.swift:13:25: error: cannot find 'sum_of_digits' in scope\n\
    \        dict[nums[i]] = sum_of_digits(nums[i])\n                        ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted {\n        let\
    \ sum1 = $0.digits.reduce(0, +)\n        let sum2 = $1.digits.reduce(0, +)\n \
    \       return sum1 == sum2 ? $0 < $1 : sum1 < sum2\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp5st1enxy.swift:11:23: error: value of type 'Int' has no member\
    \ 'digits'\n        let sum1 = $0.digits.reduce(0, +)\n                   ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum || (aSum == bSum && a < b)\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpgh9z3iot.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted(by: {\n    \
    \    let sum1 = sum_of_digits(num: $0)\n        let sum2 = sum_of_digits(num:\
    \ $1)\n        if sum1 == sum2 {\n            return nums.index(of: $0)! < nums.index(of:\
    \ $1)!\n        }\n        return sum1 < sum2\n    })\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpr2o96hxk.swift:11:20: error: cannot find 'sum_of_digits' in scope\n\
    \        let sum1 = sum_of_digits(num: $0)\n                   ^~~~~~~~~~~~~\n\
    /tmp/tmpr2o96hxk.swift:12:20: error: cannot find 'sum_of_digits' in scope\n  \
    \      let sum2 = sum_of_digits(num: $1)\n                   ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: -4
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = String(a).reduce(0) { $0 + Int(String($1))! }\n\
    \        let bSum = String(b).reduce(0) { $0 + Int(String($1))! }\n        return\
    \ aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(order_by_points(nums:\
    \ [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\nassert(order_by_points(nums:\
    \ [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums:\
    \ [] as [Int]) == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: Exception
  stderr: 'tmps51h6icw/tmps51h6icw.swift:11: Fatal error: Unexpectedly found nil while
    unwrapping an Optional value

    Current stack trace:

    0    libswiftCore.so                    0x00002b0e8d342c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0e8d039561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b0e8d039286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b0e8d03913c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b0e8d038bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmps51h6icw                        0x0000556e946572fa <unavailable> + 8954

    6    libswiftCore.so                    0x00002b0e8d148410 Sequence.reduce<A>(_:_:)
    + 530

    7    tmps51h6icw                        0x0000556e946570d3 <unavailable> + 8403

    8    libswiftCore.so                    0x00002b0e8d15ac90 MutableCollection<>._insertionSort(within:sortedEnd:by:)
    + 770

    9    libswiftCore.so                    0x00002b0e8d15b110 MutableCollection<>._insertionSort(within:by:)
    + 356

    10   libswiftCore.so                    0x00002b0e8d159d30 UnsafeMutableBufferPointer._stableSortImpl(by:)
    + 319

    11   libswiftCore.so                    0x00002b0e8d159d15 <unavailable> + 2616597

    12   libswiftCore.so                    0x00002b0e8d27f65a <unavailable> + 3819098

    13   libswiftCore.so                    0x00002b0e8d06e720 ContiguousArray.withContiguousMutableStorageIfAvailable<A>(_:)
    + 130

    14   libswiftCore.so                    0x00002b0e8d06e70f <unavailable> + 1652495

    15   libswiftCore.so                    0x00002b0e8d159460 MutableCollection<>.sort(by:)
    + 771

    16   libswiftCore.so                    0x00002b0e8d159370 Sequence.sorted(by:)
    + 193

    17   tmps51h6icw                        0x0000556e94657000 <unavailable> + 8192

    18   tmps51h6icw                        0x0000556e946566b4 <unavailable> + 5812

    19   libc.so.6                          0x00002b0e8d52e460 __libc_start_main +
    245

    20   tmps51h6icw                        0x0000556e94656389 <unavaila'
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    var nums = nums\n    nums.sort\
    \ { (a, b) -> Bool in\n        let aSum = sumDigits(a)\n        let bSum = sumDigits(b)\n\
    \        if aSum == bSum {\n            return a < b\n        }\n        return\
    \ aSum < bSum\n    }\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp_zqmkvun.swift:12:20: error: cannot find 'sumDigits' in scope\n\
    \        let aSum = sumDigits(a)\n                   ^~~~~~~~~\n/tmp/tmp_zqmkvun.swift:13:20:\
    \ error: cannot find 'sumDigits' in scope\n        let bSum = sumDigits(b)\n \
    \                  ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum || (aSum == bSum && a < b)\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpgh9z3iot.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted {\n        let\
    \ a = $0.digits.reduce(0, +)\n        let b = $1.digits.reduce(0, +)\n       \
    \ return a == b ? $0 < $1 : a < b\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp24s0pmbq.swift:11:20: error: value of type 'Int' has no member\
    \ 'digits'\n        let a = $0.digits.reduce(0, +)\n                ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum < bSum\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpmtxja9db.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted {\n        let\
    \ a = $0.digits.reduce(0, +)\n        let b = $1.digits.reduce(0, +)\n       \
    \ return a == b ? $0 < $1 : a < b\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\
    assert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as [Int])\nassert(order_by_points(nums:\
    \ [1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums:\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\
    assert(order_by_points(nums: [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23,\
    \ 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmp24s0pmbq.swift:11:20: error: value of type 'Int' has no member\
    \ 'digits'\n        let a = $0.digits.reduce(0, +)\n                ~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (lhs, rhs)\
    \ -> Bool in\n        let lhsSum = lhs.digits.reduce(0, +)\n        let rhsSum\
    \ = rhs.digits.reduce(0, +)\n        return lhsSum < rhsSum\n    }\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) ==\
    \ [-1, -11, 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2,\
    \ 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int])\
    \ == [] as [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2,\
    \ -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpdhq1lm55.swift:11:26: error: value of type 'Int' has no member\
    \ 'digits'\n        let lhsSum = lhs.digits.reduce(0, +)\n                   \
    \  ~~~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840
- exit_code: 1
  program: "\n/// Write a function which sorts the given list of integers\n/// in\
    \ ascending order according to the sum of their digits.\n/// Note: if there are\
    \ several items with similar sum of their digits,\n/// order them based on their\
    \ index in original list.\n/// For example:\n/// >>> order_by_points([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11]\n/// >>> order_by_points([]) == []\nfunc\
    \ order_by_points(nums: [Int]) -> [Int] {\n    return nums.sorted { (a, b) ->\
    \ Bool in\n        let aSum = a.digits.reduce(0, +)\n        let bSum = b.digits.reduce(0,\
    \ +)\n        return aSum == bSum ? a < b : aSum < bSum\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(order_by_points(nums: [1, 11, -1, -11, -12]) == [-1, -11,\
    \ 1, -12, 11])\nassert(order_by_points(nums: [1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\nassert(order_by_points(nums: [] as [Int]) == [] as\
    \ [Int])\nassert(order_by_points(nums: [1, -11, -32, 43, 54, -98, 2, -3]) == [-3,\
    \ -32, -98, -11, 1, 2, 43, 54])\nassert(order_by_points(nums: [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\nassert(order_by_points(nums:\
    \ [0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])"
  status: SyntaxError
  stderr: "/tmp/tmpb57xfyfi.swift:11:22: error: value of type 'Int' has no member\
    \ 'digits'\n        let aSum = a.digits.reduce(0, +)\n                   ~ ^~~~~~\n"
  stdout: ''
  timestamp: 1659824840

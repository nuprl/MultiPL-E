language: swift
name: HumanEval_26_remove_duplicates
results:
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfrgmxwm/tmpsfrgmxwm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac12a811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac12a508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac12a508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac12a5077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfrgmxwm                        0x000055fb9be07941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac12a9fd460 __libc_start_main +
    245

    6    tmpsfrgmxwm                        0x000055fb9be072f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var numbersSet = Set<Int>()\n    for number\
    \ in numbers {\n        if !numbersSet.contains(number) {\n            result.append(number)\n\
    \            numbersSet.insert(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp9_4wzxta/tmp9_4wzxta.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17bb851c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17bb548b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17bb548988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17bb5477b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9_4wzxta                        0x00005577b2d08981 <unavailable> + 6529

    5    libc.so.6                          0x00002b17bba3d460 __libc_start_main +
    245

    6    tmp9_4wzxta                        0x00005577b2d08339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5apmok88/tmp5apmok88.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2470dbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2470ab6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2470ab6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2470ab57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5apmok88                        0x0000564ff5d14981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2470fab460 __libc_start_main +
    245

    6    tmp5apmok88                        0x0000564ff5d14339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers: [Int] = []\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpqj7b01p_/tmpqj7b01p_.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b266f58cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b266f283b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b266f283988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b266f2827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqj7b01p_                        0x00005602b6f8e841 <unavailable> + 6209

    5    libc.so.6                          0x00002b266f778460 __libc_start_main +
    245

    6    tmpqj7b01p_                        0x00005602b6f8e1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfrgmxwm/tmpsfrgmxwm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac12a811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac12a508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac12a508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac12a5077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfrgmxwm                        0x000055fb9be07941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac12a9fd460 __libc_start_main +
    245

    6    tmpsfrgmxwm                        0x000055fb9be072f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfrgmxwm/tmpsfrgmxwm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac12a811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac12a508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac12a508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac12a5077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfrgmxwm                        0x000055fb9be07941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac12a9fd460 __libc_start_main +
    245

    6    tmpsfrgmxwm                        0x000055fb9be072f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var unique = [Int]()\n    for number in numbers {\n        if !unique.contains(number)\
    \ {\n            unique.append(number)\n        }\n    }\n    return unique\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp7_m9peyy/tmp7_m9peyy.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc5d363c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc5d05ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc5d05a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc5d0597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7_m9peyy                        0x000056404b421891 <unavailable> + 6289

    5    libc.so.6                          0x00002afc5d54f460 __libc_start_main +
    245

    6    tmp7_m9peyy                        0x000056404b421249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfrgmxwm/tmpsfrgmxwm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac12a811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac12a508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac12a508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac12a5077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfrgmxwm                        0x000055fb9be07941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac12a9fd460 __libc_start_main +
    245

    6    tmpsfrgmxwm                        0x000055fb9be072f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var numbers_set: Set<Int> = []\n    for number\
    \ in numbers {\n        if !numbers_set.contains(number) {\n            result.append(number)\n\
    \            numbers_set.insert(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpc9jtehr7/tmpc9jtehr7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b322bf18c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b322bc0fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b322bc0f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b322bc0e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc9jtehr7                        0x0000561d56fd7941 <unavailable> + 6465

    5    libc.so.6                          0x00002b322c104460 __libc_start_main +
    245

    6    tmpc9jtehr7                        0x0000561d56fd72f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5apmok88/tmp5apmok88.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2470dbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2470ab6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2470ab6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2470ab57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5apmok88                        0x0000564ff5d14981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2470fab460 __libc_start_main +
    245

    6    tmp5apmok88                        0x0000564ff5d14339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int] = []\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.append(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpzsozom_9/tmpzsozom_9.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af9b1011c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af9b0d08b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af9b0d08988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af9b0d077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzsozom_9                        0x00005609b9d95841 <unavailable> + 6209

    5    libc.so.6                          0x00002af9b11fd460 __libc_start_main +
    245

    6    tmpzsozom_9                        0x00005609b9d951f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5apmok88/tmp5apmok88.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2470dbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2470ab6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2470ab6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2470ab57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5apmok88                        0x0000564ff5d14981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2470fab460 __libc_start_main +
    245

    6    tmp5apmok88                        0x0000564ff5d14339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfrgmxwm/tmpsfrgmxwm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac12a811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac12a508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac12a508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac12a5077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfrgmxwm                        0x000055fb9be07941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac12a9fd460 __libc_start_main +
    245

    6    tmpsfrgmxwm                        0x000055fb9be072f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5apmok88/tmp5apmok88.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2470dbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2470ab6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2470ab6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2470ab57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5apmok88                        0x0000564ff5d14981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2470fab460 __libc_start_main +
    245

    6    tmp5apmok88                        0x0000564ff5d14339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var unique = [Int]()\n    for number in numbers {\n        if !unique.contains(number)\
    \ {\n            unique.append(number)\n        }\n    }\n    return unique\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp7_m9peyy/tmp7_m9peyy.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc5d363c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc5d05ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc5d05a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc5d0597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7_m9peyy                        0x000056404b421891 <unavailable> + 6289

    5    libc.so.6                          0x00002afc5d54f460 __libc_start_main +
    245

    6    tmp7_m9peyy                        0x000056404b421249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfrgmxwm/tmpsfrgmxwm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac12a811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac12a508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac12a508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac12a5077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfrgmxwm                        0x000055fb9be07941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac12a9fd460 __libc_start_main +
    245

    6    tmpsfrgmxwm                        0x000055fb9be072f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5apmok88/tmp5apmok88.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2470dbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2470ab6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2470ab6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2470ab57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5apmok88                        0x0000564ff5d14981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2470fab460 __libc_start_main +
    245

    6    tmp5apmok88                        0x0000564ff5d14339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfrgmxwm/tmpsfrgmxwm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac12a811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac12a508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac12a508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac12a5077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfrgmxwm                        0x000055fb9be07941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac12a9fd460 __libc_start_main +
    245

    6    tmpsfrgmxwm                        0x000055fb9be072f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfrgmxwm/tmpsfrgmxwm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac12a811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac12a508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac12a508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac12a5077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfrgmxwm                        0x000055fb9be07941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac12a9fd460 __libc_start_main +
    245

    6    tmpsfrgmxwm                        0x000055fb9be072f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    var uniqueNumbersSet = Set<Int>()\n\
    \    \n    for number in numbers {\n        if !uniqueNumbersSet.contains(number)\
    \ {\n            uniqueNumbers.append(number)\n            uniqueNumbersSet.insert(number)\n\
    \        }\n    }\n    \n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpbsyx0ucu/tmpbsyx0ucu.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9930763c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b993045ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b993045a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b99304597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbsyx0ucu                        0x000055ad07936981 <unavailable> + 6529

    5    libc.so.6                          0x00002b993094f460 __libc_start_main +
    245

    6    tmpbsyx0ucu                        0x000055ad07936339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers: [Int] = []\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpqj7b01p_/tmpqj7b01p_.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b266f58cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b266f283b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b266f283988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b266f2827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqj7b01p_                        0x00005602b6f8e841 <unavailable> + 6209

    5    libc.so.6                          0x00002b266f778460 __libc_start_main +
    245

    6    tmpqj7b01p_                        0x00005602b6f8e1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5apmok88/tmp5apmok88.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2470dbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2470ab6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2470ab6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2470ab57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5apmok88                        0x0000564ff5d14981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2470fab460 __libc_start_main +
    245

    6    tmp5apmok88                        0x0000564ff5d14339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfrgmxwm/tmpsfrgmxwm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac12a811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac12a508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac12a508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac12a5077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfrgmxwm                        0x000055fb9be07941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac12a9fd460 __libc_start_main +
    245

    6    tmpsfrgmxwm                        0x000055fb9be072f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5apmok88/tmp5apmok88.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2470dbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2470ab6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2470ab6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2470ab57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5apmok88                        0x0000564ff5d14981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2470fab460 __libc_start_main +
    245

    6    tmp5apmok88                        0x0000564ff5d14339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfrgmxwm/tmpsfrgmxwm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac12a811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac12a508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac12a508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac12a5077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfrgmxwm                        0x000055fb9be07941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac12a9fd460 __libc_start_main +
    245

    6    tmpsfrgmxwm                        0x000055fb9be072f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var unique = [Int]()\n    for number in numbers {\n        if !unique.contains(number)\
    \ {\n            unique.append(number)\n        }\n    }\n    return unique\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp7_m9peyy/tmp7_m9peyy.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc5d363c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc5d05ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc5d05a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc5d0597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7_m9peyy                        0x000056404b421891 <unavailable> + 6289

    5    libc.so.6                          0x00002afc5d54f460 __libc_start_main +
    245

    6    tmp7_m9peyy                        0x000056404b421249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var dict: [Int: Int] = [:]\n    for n in\
    \ numbers {\n        if dict[n] == nil {\n            dict[n] = 1\n          \
    \  result.append(n)\n        }\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmphfdurdzh/tmphfdurdzh.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abaf0f80c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abaf0c77b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abaf0c77988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abaf0c767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphfdurdzh                        0x000055b2454d2921 <unavailable> + 6433

    5    libc.so.6                          0x00002abaf116c460 __libc_start_main +
    245

    6    tmphfdurdzh                        0x000055b2454d22d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    return Array(Set(numbers))\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp36v7jvaa/tmp36v7jvaa.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa1b160c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa1ae57b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa1ae57988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa1ae567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp36v7jvaa                        0x000055b55523560d <unavailable> + 5645

    5    libc.so.6                          0x00002afa1b34c460 __libc_start_main +
    245

    6    tmp36v7jvaa                        0x000055b555235129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var unique = [Int]()\n    for number in numbers {\n        if !unique.contains(number)\
    \ {\n            unique.append(number)\n        }\n    }\n    return unique\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp7_m9peyy/tmp7_m9peyy.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc5d363c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc5d05ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc5d05a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc5d0597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7_m9peyy                        0x000056404b421891 <unavailable> + 6289

    5    libc.so.6                          0x00002afc5d54f460 __libc_start_main +
    245

    6    tmp7_m9peyy                        0x000056404b421249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var unique_numbers = [Int]()\n    for number in numbers {\n        if\
    \ !unique_numbers.contains(number) {\n            unique_numbers.append(number)\n\
    \        }\n    }\n    return unique_numbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp8jieslmu/tmp8jieslmu.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae277e22c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae277b19b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae277b19988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae277b187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8jieslmu                        0x00005575de8a1891 <unavailable> + 6289

    5    libc.so.6                          0x00002ae27800e460 __libc_start_main +
    245

    6    tmp8jieslmu                        0x00005575de8a1249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5apmok88/tmp5apmok88.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2470dbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2470ab6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2470ab6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2470ab57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5apmok88                        0x0000564ff5d14981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2470fab460 __libc_start_main +
    245

    6    tmp5apmok88                        0x0000564ff5d14339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var seen = Set<Int>()\n    var result = [Int]()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            seen.insert(number)\n  \
    \          result.append(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpikky1uu6/tmpikky1uu6.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93adf0ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93adc01b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93adc01988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93adc007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpikky1uu6                        0x000055a923fb5981 <unavailable> + 6529

    5    libc.so.6                          0x00002b93ae0f6460 __libc_start_main +
    245

    6    tmpikky1uu6                        0x000055a923fb5339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5apmok88/tmp5apmok88.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2470dbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2470ab6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2470ab6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2470ab57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5apmok88                        0x0000564ff5d14981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2470fab460 __libc_start_main +
    245

    6    tmp5apmok88                        0x0000564ff5d14339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5apmok88/tmp5apmok88.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2470dbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2470ab6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2470ab6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2470ab57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5apmok88                        0x0000564ff5d14981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2470fab460 __libc_start_main +
    245

    6    tmp5apmok88                        0x0000564ff5d14339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var seen = Set<Int>()\n    var result = [Int]()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            seen.insert(number)\n  \
    \          result.append(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpikky1uu6/tmpikky1uu6.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93adf0ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93adc01b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93adc01988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93adc007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpikky1uu6                        0x000055a923fb5981 <unavailable> + 6529

    5    libc.so.6                          0x00002b93ae0f6460 __libc_start_main +
    245

    6    tmpikky1uu6                        0x000055a923fb5339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfrgmxwm/tmpsfrgmxwm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac12a811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac12a508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac12a508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac12a5077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfrgmxwm                        0x000055fb9be07941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac12a9fd460 __libc_start_main +
    245

    6    tmpsfrgmxwm                        0x000055fb9be072f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfrgmxwm/tmpsfrgmxwm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac12a811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac12a508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac12a508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac12a5077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfrgmxwm                        0x000055fb9be07941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac12a9fd460 __libc_start_main +
    245

    6    tmpsfrgmxwm                        0x000055fb9be072f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    return []\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpqpuzjchf/tmpqpuzjchf.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aec03a75c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aec0376cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aec0376c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aec0376b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqpuzjchf                        0x00005587c76ed4ad <unavailable> + 5293

    5    libc.so.6                          0x00002aec03c61460 __libc_start_main +
    245

    6    tmpqpuzjchf                        0x00005587c76ecfc9 <unavailable> + 4041

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var new_numbers = [Int]()\n    for number in numbers {\n        if !new_numbers.contains(number)\
    \ {\n            new_numbers.append(number)\n        }\n    }\n    return new_numbers\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpqm7svmln/tmpqm7svmln.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8ea79afc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ea76a6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ea76a6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ea76a57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqm7svmln                        0x0000556788a86891 <unavailable> + 6289

    5    libc.so.6                          0x00002b8ea7b9b460 __libc_start_main +
    245

    6    tmpqm7svmln                        0x0000556788a86249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    return []\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpqpuzjchf/tmpqpuzjchf.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aec03a75c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aec0376cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aec0376c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aec0376b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqpuzjchf                        0x00005587c76ed4ad <unavailable> + 5293

    5    libc.so.6                          0x00002aec03c61460 __libc_start_main +
    245

    6    tmpqpuzjchf                        0x00005587c76ecfc9 <unavailable> + 4041

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var seen: [Int: Bool] = [:]\n    var result: [Int] = []\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            seen[number] = true\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjccuxva3/tmpjccuxva3.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d7e07fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d7dd76b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d7dd76988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d7dd757b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjccuxva3                        0x00005618b508e961 <unavailable> + 6497

    5    libc.so.6                          0x00002b2d7e26b460 __libc_start_main +
    245

    6    tmpjccuxva3                        0x00005618b508e319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5apmok88/tmp5apmok88.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2470dbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2470ab6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2470ab6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2470ab57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5apmok88                        0x0000564ff5d14981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2470fab460 __libc_start_main +
    245

    6    tmp5apmok88                        0x0000564ff5d14339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var unique = [Int]()\n    for number in numbers {\n        if !unique.contains(number)\
    \ {\n            unique.append(number)\n        }\n    }\n    return unique\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp7_m9peyy/tmp7_m9peyy.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc5d363c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc5d05ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc5d05a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc5d0597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7_m9peyy                        0x000056404b421891 <unavailable> + 6289

    5    libc.so.6                          0x00002afc5d54f460 __libc_start_main +
    245

    6    tmp7_m9peyy                        0x000056404b421249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var seen: [Int: Bool] = [:]\n    return numbers.filter { seen.updateValue(true,\
    \ forKey: $0) == nil }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmp2ga341af/tmp2ga341af.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b932b303c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b932affab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b932affa988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b932aff97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ga341af                        0x00005621fc451821 <unavailable> + 6177

    5    libc.so.6                          0x00002b932b4ef460 __libc_start_main +
    245

    6    tmp2ga341af                        0x00005621fc4511d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var set = Set<Int>()\n    var result = [Int]()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            set.insert(number)\n    \
    \        result.append(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpct2oljuz/tmpct2oljuz.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b943027bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b942ff72b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b942ff72988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b942ff717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpct2oljuz                        0x00005594c8271981 <unavailable> + 6529

    5    libc.so.6                          0x00002b9430467460 __libc_start_main +
    245

    6    tmpct2oljuz                        0x00005594c8271339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpsfrgmxwm/tmpsfrgmxwm.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac12a811c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac12a508b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac12a508988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac12a5077b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsfrgmxwm                        0x000055fb9be07941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac12a9fd460 __libc_start_main +
    245

    6    tmpsfrgmxwm                        0x000055fb9be072f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp_nz5aaxg/tmp_nz5aaxg.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b82835c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b8252cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b8252c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b8252b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_nz5aaxg                        0x000055dddfe83981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2b82a21460 __libc_start_main +
    245

    6    tmp_nz5aaxg                        0x000055dddfe83339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpkabwgfwk/tmpkabwgfwk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b291875dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2918454b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2918454988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29184537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkabwgfwk                        0x0000557f33a9f891 <unavailable> + 6289

    5    libc.so.6                          0x00002b2918949460 __libc_start_main +
    245

    6    tmpkabwgfwk                        0x0000557f33a9f249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpxtm5nt5n/tmpxtm5nt5n.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b93d9567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b93d925eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b93d925e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b93d925d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxtm5nt5n                        0x000055c4e7087961 <unavailable> + 6497

    5    libc.so.6                          0x00002b93d9753460 __libc_start_main +
    245

    6    tmpxtm5nt5n                        0x000055c4e7087319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var unique = [Int]()\n    for number in numbers {\n        if !unique.contains(number)\
    \ {\n            unique.append(number)\n        }\n    }\n    return unique\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp7_m9peyy/tmp7_m9peyy.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc5d363c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc5d05ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc5d05a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc5d0597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7_m9peyy                        0x000056404b421891 <unavailable> + 6289

    5    libc.so.6                          0x00002afc5d54f460 __libc_start_main +
    245

    6    tmp7_m9peyy                        0x000056404b421249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5apmok88/tmp5apmok88.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2470dbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2470ab6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2470ab6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2470ab57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5apmok88                        0x0000564ff5d14981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2470fab460 __libc_start_main +
    245

    6    tmp5apmok88                        0x0000564ff5d14339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp5apmok88/tmp5apmok88.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2470dbfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2470ab6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2470ab6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2470ab57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5apmok88                        0x0000564ff5d14981 <unavailable> + 6529

    5    libc.so.6                          0x00002b2470fab460 __libc_start_main +
    245

    6    tmp5apmok88                        0x0000564ff5d14339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpngjam0o2/tmpngjam0o2.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b101c702c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b101c3f9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b101c3f9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b101c3f87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpngjam0o2                        0x000055f923edc841 <unavailable> + 6209

    5    libc.so.6                          0x00002b101c8ee460 __libc_start_main +
    245

    6    tmpngjam0o2                        0x000055f923edc1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631
- exit_code: -4
  program: "\n/// From a list of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpg6aesnnh/tmpg6aesnnh.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba287293c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba286f8ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba286f8a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba286f897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg6aesnnh                        0x000056365ebac891 <unavailable> + 6289

    5    libc.so.6                          0x00002ba28747f460 __libc_start_main +
    245

    6    tmpg6aesnnh                        0x000056365ebac249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824631

language: swift
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n        if is_prime(next)\
    \ {\n            fibs.append(next)\n            i += 1\n        }\n    }\n   \
    \ return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpemqa8pbj.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 5\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpo26r70j8.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp5q4dt5ek.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib: [Int] = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i +=\
    \ 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmp23_o3sjv/tmp23_o3sjv.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b41c4493c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b41c418ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b41c418a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b41c41897b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp23_o3sjv                        0x000056024e0234d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b41c467f460 __libc_start_main +
    245

    6    tmp23_o3sjv                        0x000056024e023019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2, b = 3, c = 5\n    for _\
    \ in 1..<n {\n        a = b\n        b = c\n        c = a + b\n        while !is_prime(c)\
    \ {\n            a = b\n            b = c\n            c = a + b\n        }\n\
    \    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpfe1v1loi.swift:19:16: error: cannot find 'is_prime' in scope\n\
    \        while !is_prime(c) {\n               ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if is_prime(fib[i])\
    \ {\n            i += 1\n        }\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp97gndzus.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var f1 = 2\n    var f2 = 3\n    var\
    \ f3 = 5\n    var i = 5\n    while i < n {\n        f1 = f2\n        f2 = f3\n\
    \        f3 = f1 + f2\n        i += 1\n    }\n    return f3\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpr_focm4t/tmpr_focm4t.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5c35843c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5c3553ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5c3553a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5c355397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_focm4t                        0x000055964e0821b8 <unavailable> + 4536

    5    libc.so.6                          0x00002b5c35a2f460 __libc_start_main +
    245

    6    tmpr_focm4t                        0x000055964e081e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if is_prime(fib[i])\
    \ {\n            i += 1\n        }\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp97gndzus.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if !is_prime(fib[i])\
    \ {\n            fib.removeLast()\n        } else {\n            i += 1\n    \
    \    }\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpn5rb9ysg.swift:18:13: error: cannot find 'is_prime' in scope\n\
    \        if !is_prime(fib[i]) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp5q4dt5ek.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n    var k\
    \ = 0\n    var count = 0\n    while count < n {\n        k = i + j\n        i\
    \ = j\n        j = k\n        if is_prime(k) {\n            count += 1\n     \
    \   }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_s1g0c22.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    var i = 0\n\
    \    var j = 1\n    var k = 0\n    while k < n {\n        let t = i + j\n    \
    \    i = j\n        j = t\n        if is_prime(i) {\n            fib.append(i)\n\
    \            k += 1\n        }\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_zmzq5t7.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(i) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp5q4dt5ek.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    fib.append(2)\n\
    \    fib.append(3)\n    var i = 2\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpk1604r5b/tmpk1604r5b.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c94860c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c94557b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c94557988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c945567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk1604r5b                        0x0000559fb5f0f429 <unavailable> + 5161

    5    libc.so.6                          0x00002b3c94a4c460 __libc_start_main +
    245

    6    tmpk1604r5b                        0x0000559fb5f0ef69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp5q4dt5ek.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n    var k\
    \ = 1\n    var count = 1\n    while count < n {\n        k = i + j\n        i\
    \ = j\n        j = k\n        if is_prime(k) {\n            count += 1\n     \
    \   }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp5jc6lhwc.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n\
    \        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmps91hoj7y/tmps91hoj7y.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae472632c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae472329b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae472329988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4723287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps91hoj7y                        0x0000564b94b644d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ae47281e460 __libc_start_main +
    245

    6    tmps91hoj7y                        0x0000564b94b64019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [2, 3]\n    var i =\
    \ 2\n    while i < n {\n        fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n\
    \        i += 1\n    }\n    return fib_nums[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpoucfqj43/tmpoucfqj43.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaf16f1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaf16c11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaf16c11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaf16c107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoucfqj43                        0x0000556850deb4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aaf17106460 __libc_start_main +
    245

    6    tmpoucfqj43                        0x0000556850deb019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n\
    \        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmps91hoj7y/tmps91hoj7y.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae472632c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae472329b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae472329988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4723287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps91hoj7y                        0x0000564b94b644d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ae47281e460 __libc_start_main +
    245

    6    tmps91hoj7y                        0x0000564b94b64019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n    while\
    \ i < n {\n        fib = next_prime_fib(fib)\n        i += 1\n    }\n    return\
    \ fib\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n   \
    \ if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) == 2)\n\
    assert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpmaa7emkv.swift:17:15: error: cannot find 'next_prime_fib' in scope\n\
    \        fib = next_prime_fib(fib)\n              ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci()\n    var prime\
    \ = prime_numbers()\n    var i = 0\n    while i < n {\n        if fib.next() ==\
    \ prime.next() {\n            i++\n        }\n    }\n    return fib.next()\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpq6ax7mjt.swift:14:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci()\n              ^~~~~~~~~\n/tmp/tmpq6ax7mjt.swift:15:17:\
    \ error: cannot find 'prime_numbers' in scope\n    var prime = prime_numbers()\n\
    \                ^~~~~~~~~~~~~\n/tmp/tmpq6ax7mjt.swift:19:14: error: cannot find\
    \ operator '++' in scope; did you mean '+= 1'?\n            i++\n            \
    \ ^~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 0\n    var i = 1\n    while i < n {\n        c = a + b\n        a = b\n  \
    \      b = c\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpuflm1eoi.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i <= n {\n        fib_numbers.append(fib_numbers[i - 1] + fib_numbers[i\
    \ - 2])\n        i += 1\n    }\n    return fib_numbers[n - 1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmptymrmftv/tmptymrmftv.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b831bd08c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b831b9ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b831b9ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b831b9fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptymrmftv                        0x000055e84f8a74d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b831bef4460 __libc_start_main +
    245

    6    tmptymrmftv                        0x000055e84f8a7019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i++\n        }\n    }\n  \
    \  return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) == 2)\n\
    assert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpioafuw_l.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n/tmp/tmpioafuw_l.swift:23:14:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  i++\n             ^~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n    var k\
    \ = 0\n    var count = 0\n    while count < n {\n        k = i + j\n        i\
    \ = j\n        j = k\n        if is_prime(k) {\n            count += 1\n     \
    \   }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_s1g0c22.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n    var k\
    \ = 1\n    var count = 1\n    while count < n {\n        k = i + j\n        i\
    \ = j\n        j = k\n        if is_prime(k) {\n            count += 1\n     \
    \   }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp5jc6lhwc.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    fib.append(2)\n\
    \    fib.append(3)\n    var i = 2\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpk1604r5b/tmpk1604r5b.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c94860c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c94557b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c94557988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c945567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk1604r5b                        0x0000559fb5f0f429 <unavailable> + 5161

    5    libc.so.6                          0x00002b3c94a4c460 __libc_start_main +
    245

    6    tmpk1604r5b                        0x0000559fb5f0ef69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n    var k\
    \ = 1\n    var count = 0\n    while count < n {\n        if is_prime(i) {\n  \
    \          count += 1\n        }\n        if count == n {\n            return\
    \ i\n        }\n        k = i + j\n        i = j\n        j = k\n    }\n    return\
    \ 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n:\
    \ 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpjh36f_2h.swift:19:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(i) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 0\n \
    \   while fib.count < n {\n        fib.append(fib[i] + fib[i + 1])\n        i\
    \ += 1\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpbcy6l41u/tmpbcy6l41u.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b90e7688c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b90e737fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b90e737f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b90e737e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbcy6l41u                        0x000055ca6893d3c8 <unavailable> + 5064

    5    libc.so.6                          0x00002b90e7874460 __libc_start_main +
    245

    6    tmpbcy6l41u                        0x000055ca6893d079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n        if is_prime(next)\
    \ {\n            fibs.append(next)\n            i += 1\n        }\n    }\n   \
    \ return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpemqa8pbj.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if is_prime(fib[i])\
    \ {\n            i += 1\n        }\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp97gndzus.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var a = 0\n    var b\
    \ = 1\n    while i < n {\n        let c = a + b\n        a = b\n        b = c\n\
    \        if is_prime(c) {\n            i += 1\n        }\n    }\n    return a\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp0b4328en.swift:21:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n\
    \        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmps91hoj7y/tmps91hoj7y.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae472632c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae472329b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae472329988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4723287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps91hoj7y                        0x0000564b94b644d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ae47281e460 __libc_start_main +
    245

    6    tmps91hoj7y                        0x0000564b94b64019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if is_prime(fib[i])\
    \ {\n            i += 1\n        }\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp97gndzus.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while fib.count < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i\
    \ += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpqfywujmg/tmpqfywujmg.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b953f2eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b953efe1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b953efe1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b953efe07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqfywujmg                        0x000055db9055a539 <unavailable> + 5433

    5    libc.so.6                          0x00002b953f4d6460 __libc_start_main +
    245

    6    tmpqfywujmg                        0x000055db9055a079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i - 1] + fib[i - 2])\n        i += 1\n\
    \    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpkwnwpj4n/tmpkwnwpj4n.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9da115c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9d9e0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9d9e0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9d9e0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkwnwpj4n                        0x000056207b266368 <unavailable> + 4968

    5    libc.so.6                          0x00002ad9da301460 __libc_start_main +
    245

    6    tmpkwnwpj4n                        0x000056207b266019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var count =\
    \ 2\n    while count < n {\n        let next = fibs[0] + fibs[1]\n        if is_prime(next)\
    \ {\n            fibs.append(next)\n            count += 1\n        }\n      \
    \  fibs.removeFirst()\n    }\n    return fibs[1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpho8xg80g.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp5q4dt5ek.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        let next = fib[i - 1] + fib[i - 2]\n        if is_prime(next)\
    \ {\n            fib.append(next)\n            i += 1\n        }\n    }\n    return\
    \ fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1fyb8bx9.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while fib_numbers.count < n {\n        let next_fib = fib_numbers[i\
    \ - 1] + fib_numbers[i - 2]\n        if is_prime(next_fib) {\n            fib_numbers.append(next_fib)\n\
    \        }\n        i += 1\n    }\n    return fib_numbers[n - 1]\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpps_3hs31.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n    var k\
    \ = 2\n    var count = 0\n    while count < n {\n        if is_prime(k) {\n  \
    \          count += 1\n        }\n        if count == n {\n            return\
    \ k\n        }\n        i = j\n        j = k\n        k = i + j\n    }\n    return\
    \ 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n:\
    \ 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpcknxp9ve.swift:19:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while fibs.count < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n  \
    \      if is_prime(next) {\n            fibs.append(next)\n        }\n       \
    \ i += 1\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp7rn7co7l.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp5q4dt5ek.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n    var k\
    \ = 1\n    var count = 0\n    while count < n {\n        if is_prime(i) {\n  \
    \          count += 1\n        }\n        if count == n {\n            return\
    \ i\n        }\n        k = i + j\n        i = j\n        j = k\n    }\n    return\
    \ 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n:\
    \ 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpjh36f_2h.swift:19:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(i) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var i = 2\n \
    \   var prime_fib = 0\n    while i < n {\n        fib.append(fib[i - 1] + fib[i\
    \ - 2])\n        if is_prime(fib[i]) {\n            prime_fib += 1\n        }\n\
    \        i += 1\n    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp88e8y1t_.swift:19:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 2]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpdol329ec/tmpdol329ec.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d8790ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d87605b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d87605988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d876047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdol329ec                        0x0000561a97c1d368 <unavailable> + 4968

    5    libc.so.6                          0x00002b3d87afa460 __libc_start_main +
    245

    6    tmpdol329ec                        0x0000561a97c1d019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var f1 = 2\n    var f2 = 3\n    var\
    \ f3 = 5\n    var i = 3\n    while i < n {\n        f1 = f2\n        f2 = f3\n\
    \        f3 = f1 + f2\n        if is_prime(f3) {\n            i += 1\n       \
    \ }\n    }\n    return f3\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpzkeo_9jg.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(f3) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        let next = fib[i - 1] + fib[i - 2]\n        if is_prime(next)\
    \ {\n            fib.append(next)\n            i += 1\n        }\n    }\n    return\
    \ fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1fyb8bx9.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n    var c\
    \ = 1\n    var i = 1\n    while i < n {\n        c = a + b\n        a = b\n  \
    \      b = c\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpcu1w5vdg.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp5q4dt5ek.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n\
    \        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmps91hoj7y/tmps91hoj7y.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae472632c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae472329b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae472329988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4723287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps91hoj7y                        0x0000564b94b644d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ae47281e460 __libc_start_main +
    245

    6    tmps91hoj7y                        0x0000564b94b64019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if is_prime(fib[i])\
    \ {\n            i += 1\n        }\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp97gndzus.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n\
    \        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmps91hoj7y/tmps91hoj7y.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae472632c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae472329b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae472329988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4723287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps91hoj7y                        0x0000564b94b644d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ae47281e460 __libc_start_main +
    245

    6    tmps91hoj7y                        0x0000564b94b64019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while fibs.count < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n  \
    \      if is_prime(next) {\n            fibs.append(next)\n        }\n       \
    \ i += 1\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp7rn7co7l.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 5\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpo26r70j8.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n        if is_prime(next)\
    \ {\n            fibs.append(next)\n            i += 1\n        }\n    }\n   \
    \ return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpemqa8pbj.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n    var k\
    \ = 0\n    var count = 0\n    while count < n {\n        k = i + j\n        i\
    \ = j\n        j = k\n        if is_prime(k) {\n            count += 1\n     \
    \   }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_s1g0c22.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp5q4dt5ek.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while fibs.count < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n  \
    \      if is_prime(next) {\n            fibs.append(next)\n        }\n       \
    \ i += 1\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp7rn7co7l.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 5\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpo26r70j8.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if is_prime(fib[i])\
    \ {\n            i += 1\n        }\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp97gndzus.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = fibonacci()\n    var prime\
    \ = prime_numbers()\n    var result = 0\n    var i = 0\n    while i < n {\n  \
    \      let f = fib.next()!\n        let p = prime.next()!\n        if f == p {\n\
    \            result = f\n            i += 1\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpj_nfphyi.swift:14:15: error: cannot find 'fibonacci' in scope\n\
    \    var fib = fibonacci()\n              ^~~~~~~~~\n/tmp/tmpj_nfphyi.swift:15:17:\
    \ error: cannot find 'prime_numbers' in scope\n    var prime = prime_numbers()\n\
    \                ^~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var f1 = 2\n    var f2 = 3\n    var\
    \ f3 = 5\n    var i = 5\n    while i < n {\n        f1 = f2\n        f2 = f3\n\
    \        f3 = f1 + f2\n        if f3.isPrime() {\n            i += 1\n       \
    \ }\n    }\n    return f3\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpjr6kb0na.swift:22:15: error: value of type 'Int' has no member\
    \ 'isPrime'\n        if f3.isPrime() {\n           ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_num = fib(n)\n    var count\
    \ = 0\n    while count < n {\n        if is_prime(fib_num) {\n            count\
    \ += 1\n        }\n        fib_num += 1\n    }\n    return fib_num - 1\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpyiegb98k.swift:14:19: error: cannot find 'fib' in scope\n    var\
    \ fib_num = fib(n)\n                  ^~~\n/tmp/tmpyiegb98k.swift:17:12: error:\
    \ cannot find 'is_prime' in scope\n        if is_prime(fib_num) {\n          \
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n    var k\
    \ = 1\n    var count = 1\n    while count < n {\n        k = i + j\n        i\
    \ = j\n        j = k\n        if is_prime(k) {\n            count += 1\n     \
    \   }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp5jc6lhwc.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n    var k\
    \ = 0\n    var count = 0\n    while count < n {\n        k = i + j\n        i\
    \ = j\n        j = k\n        if is_prime(k) {\n            count += 1\n     \
    \   }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_s1g0c22.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp5q4dt5ek.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        let next = fib[i - 1] + fib[i - 2]\n        if is_prime(next)\
    \ {\n            fib.append(next)\n            i += 1\n        }\n    }\n    return\
    \ fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1fyb8bx9.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        let next_fib = fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]\n        if is_prime(next_fib) {\n            fib_numbers.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_numbers[n - 1]\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp70m4w421.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n    var k\
    \ = 0\n    var count = 0\n    while count < n {\n        k = i + j\n        i\
    \ = j\n        j = k\n        if is_prime(k) {\n            count += 1\n     \
    \   }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpxlk4dabm.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var f = 0\n    var f1\
    \ = 1\n    var f2 = 1\n    while i < n {\n        f = f1 + f2\n        f1 = f2\n\
    \        f2 = f\n        if is_prime(f) {\n            i += 1\n        }\n   \
    \ }\n    return f\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1c3pia_h.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(f) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n    while\
    \ i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n          \
    \  i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1q6dqsw_.swift:17:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp1q6dqsw_.swift:18:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if !is_prime(fib[i])\
    \ {\n            fib.removeLast()\n        } else {\n            i++\n       \
    \ }\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmphq_rzs8_.swift:18:13: error: cannot find 'is_prime' in scope\n\
    \        if !is_prime(fib[i]) {\n            ^~~~~~~~\n/tmp/tmphq_rzs8_.swift:21:14:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  i++\n             ^~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 3\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp5q4dt5ek.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n    var k\
    \ = 1\n    var count = 0\n    while count < n {\n        if is_prime(i) {\n  \
    \          count += 1\n        }\n        if count == n {\n            return\
    \ i\n        }\n        k = i + j\n        i = j\n        j = k\n    }\n    return\
    \ 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n:\
    \ 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpjh36f_2h.swift:19:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(i) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n\
    \        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmps91hoj7y/tmps91hoj7y.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae472632c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae472329b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae472329988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4723287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps91hoj7y                        0x0000564b94b644d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ae47281e460 __libc_start_main +
    245

    6    tmps91hoj7y                        0x0000564b94b64019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n\
    \        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmps91hoj7y/tmps91hoj7y.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae472632c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae472329b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae472329988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4723287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps91hoj7y                        0x0000564b94b644d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ae47281e460 __libc_start_main +
    245

    6    tmps91hoj7y                        0x0000564b94b64019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n    while\
    \ i < n {\n        fib = fibonacci(i)\n        if is_prime(fib) {\n          \
    \  i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1q6dqsw_.swift:17:15: error: cannot find 'fibonacci' in scope\n\
    \        fib = fibonacci(i)\n              ^~~~~~~~~\n/tmp/tmp1q6dqsw_.swift:18:12:\
    \ error: cannot find 'is_prime' in scope\n        if is_prime(fib) {\n       \
    \    ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    fib.append(2)\n\
    \    fib.append(3)\n    var i = 2\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpk1604r5b/tmpk1604r5b.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c94860c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c94557b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c94557988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c945567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk1604r5b                        0x0000559fb5f0f429 <unavailable> + 5161

    5    libc.so.6                          0x00002b3c94a4c460 __libc_start_main +
    245

    6    tmpk1604r5b                        0x0000559fb5f0ef69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n    var c\
    \ = 0\n    var i = 0\n    while i < n {\n        c = a + b\n        a = b\n  \
    \      b = c\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpwgw6khih.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var f = 0\n    var f1\
    \ = 1\n    var f2 = 1\n    while i < n {\n        f = f1 + f2\n        f1 = f2\n\
    \        f2 = f\n        if is_prime(f) {\n            i += 1\n        }\n   \
    \ }\n    return f\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1c3pia_h.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(f) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n        if is_prime(next)\
    \ {\n            fibs.append(next)\n            i += 1\n        }\n    }\n   \
    \ return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpemqa8pbj.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n\
    \        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmps91hoj7y/tmps91hoj7y.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae472632c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae472329b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae472329988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4723287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps91hoj7y                        0x0000564b94b644d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ae47281e460 __libc_start_main +
    245

    6    tmps91hoj7y                        0x0000564b94b64019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n        if is_prime(next)\
    \ {\n            fibs.append(next)\n            i += 1\n        }\n    }\n   \
    \ return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpemqa8pbj.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n        if is_prime(next)\
    \ {\n            fibs.append(next)\n            i += 1\n        }\n    }\n   \
    \ return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpemqa8pbj.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n    var k\
    \ = 0\n    var count = 0\n    while count < n {\n        k = i + j\n        i\
    \ = j\n        j = k\n        if is_prime(k) {\n            count += 1\n     \
    \   }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_s1g0c22.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var f1 = 2\n    var f2 = 3\n    var\
    \ f3 = 5\n    var i = 3\n    while i < n {\n        f1 = f2\n        f2 = f3\n\
    \        f3 = f1 + f2\n        if is_prime(f3) {\n            i += 1\n       \
    \ }\n    }\n    return f3\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpzkeo_9jg.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(f3) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 2\n    var j = 3\n    var k\
    \ = 5\n    var count = 3\n    while count < n {\n        let temp = i + j\n  \
    \      i = j\n        j = k\n        k = temp\n        if is_prime(k) {\n    \
    \        count += 1\n        }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpenc5adls.swift:23:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 1\n    var b = 1\n    var c\
    \ = 2\n    var i = 2\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpx2jwvtfs.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var prime_fibs = [2, 3, 5, 13, 89]\n\
    \    var i = 5\n    var fib = 0\n    while i < n {\n        fib = prime_fibs[i\
    \ - 1] + prime_fibs[i - 2]\n        if is_prime(fib) {\n            prime_fibs.append(fib)\n\
    \            i += 1\n        }\n    }\n    return prime_fibs[n - 1]\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmprfdxz8sw.swift:19:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        let next_fib = fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]\n        if is_prime(next_fib) {\n            fib_numbers.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_numbers[n - 1]\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp70m4w421.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var fib = 0\n    var\
    \ fib_1 = 1\n    var fib_2 = 1\n    while i < n {\n        fib = fib_1 + fib_2\n\
    \        fib_2 = fib_1\n        fib_1 = fib\n        if is_prime(fib) {\n    \
    \        i += 1\n        }\n    }\n    return fib\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmppqlg4jj4.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n        if is_prime(next)\
    \ {\n            fibs.append(next)\n            i += 1\n        }\n    }\n   \
    \ return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpemqa8pbj.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [2, 3]\n    var i =\
    \ 2\n    var fib_num = 0\n    while i < n {\n        fib_num = fib_nums[i - 1]\
    \ + fib_nums[i - 2]\n        if is_prime(fib_num) {\n            fib_nums.append(fib_num)\n\
    \            i += 1\n        }\n    }\n    return fib_nums[n - 1]\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpum0wxt39.swift:19:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib_num) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while fibs.count < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n  \
    \      if is_prime(next) {\n            fibs.append(next)\n        }\n       \
    \ i += 1\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp7rn7co7l.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n\
    \        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmps91hoj7y/tmps91hoj7y.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae472632c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae472329b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae472329988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4723287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps91hoj7y                        0x0000564b94b644d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ae47281e460 __libc_start_main +
    245

    6    tmps91hoj7y                        0x0000564b94b64019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n        if is_prime(next)\
    \ {\n            fibs.append(next)\n            i += 1\n        }\n    }\n   \
    \ return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpemqa8pbj.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n        i += 1\n\
    \    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzltefinf/tmpzltefinf.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9775c35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b977592cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b977592c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b977592b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzltefinf                        0x000055e704c3c4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002b9775e21460 __libc_start_main +
    245

    6    tmpzltefinf                        0x000055e704c3c019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    fib.append(2)\n\
    \    fib.append(3)\n    var i = 2\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpk1604r5b/tmpk1604r5b.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c94860c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c94557b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c94557988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c945567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk1604r5b                        0x0000559fb5f0f429 <unavailable> + 5161

    5    libc.so.6                          0x00002b3c94a4c460 __libc_start_main +
    245

    6    tmpk1604r5b                        0x0000559fb5f0ef69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while i < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n        if is_prime(next)\
    \ {\n            fibs.append(next)\n            i += 1\n        }\n    }\n   \
    \ return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpemqa8pbj.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n\
    \        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmps91hoj7y/tmps91hoj7y.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae472632c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae472329b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae472329988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4723287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps91hoj7y                        0x0000564b94b644d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ae47281e460 __libc_start_main +
    245

    6    tmps91hoj7y                        0x0000564b94b64019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n\
    \        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmps91hoj7y/tmps91hoj7y.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae472632c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae472329b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae472329988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4723287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps91hoj7y                        0x0000564b94b644d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ae47281e460 __libc_start_main +
    245

    6    tmps91hoj7y                        0x0000564b94b64019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        fib_numbers.append(fib_numbers[i-1] + fib_numbers[i-2])\n\
    \        i += 1\n    }\n    return fib_numbers[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmps91hoj7y/tmps91hoj7y.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae472632c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae472329b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae472329988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae4723287b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps91hoj7y                        0x0000564b94b644d9 <unavailable> + 5337

    5    libc.so.6                          0x00002ae47281e460 __libc_start_main +
    245

    6    tmps91hoj7y                        0x0000564b94b64019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [2, 3]\n    var i =\
    \ 2\n    while i < n {\n        let next_fib = fib_nums[i - 1] + fib_nums[i -\
    \ 2]\n        if is_prime(next_fib) {\n            fib_nums.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_nums[n - 1]\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpqwcrn2ly.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [2, 3]\n    var i =\
    \ 2\n    while i < n {\n        let next_fib = fib_nums[i - 1] + fib_nums[i -\
    \ 2]\n        if is_prime(next_fib) {\n            fib_nums.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_nums[n - 1]\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpqwcrn2ly.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n    var k\
    \ = 0\n    var count = 0\n    while count < n {\n        k = i + j\n        i\
    \ = j\n        j = k\n        if is_prime(k) {\n            count += 1\n     \
    \   }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_s1g0c22.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 2\n    var b = 3\n    var c\
    \ = 5\n    var i = 5\n    while i < n {\n        a = b\n        b = c\n      \
    \  c = a + b\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpo26r70j8.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013569
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n    var k\
    \ = 1\n    var count = 0\n    while count < n {\n        i = j + k\n        j\
    \ = k\n        k = i\n        if is_prime(i) {\n            count++\n        }\n\
    \    }\n    return i\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpn7gu_uy2.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(i) {\n           ^~~~~~~~\n/tmp/tmpn7gu_uy2.swift:23:18:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  count++\n                 ^~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        let next = fib[i - 1] + fib[i - 2]\n        if is_prime(next)\
    \ {\n            fib.append(next)\n            i += 1\n        }\n    }\n    return\
    \ fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1fyb8bx9.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var nth = 0\n    var i = 0\n    while\
    \ nth < n {\n        if is_prime(fib(i)) {\n            nth++\n        }\n   \
    \     i++\n    }\n    return fib(i - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpgmizmo9c.swift:17:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib(i)) {\n           ^~~~~~~~\n/tmp/tmpgmizmo9c.swift:17:21:\
    \ error: cannot find 'fib' in scope\n        if is_prime(fib(i)) {\n         \
    \           ^~~\n/tmp/tmpgmizmo9c.swift:18:16: error: cannot find operator '++'\
    \ in scope; did you mean '+= 1'?\n            nth++\n               ^~\n/tmp/tmpgmizmo9c.swift:20:10:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n        i++\n\
    \         ^~\n/tmp/tmpgmizmo9c.swift:22:12: error: cannot find 'fib' in scope\n\
    \    return fib(i - 1)\n           ^~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        let next_fib = fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]\n        if is_prime(next_fib) {\n            fib_numbers.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_numbers[n - 1]\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp70m4w421.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 1]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i - 1] + fib[i - 2])\n        i += 1\n\
    \    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpkwnwpj4n/tmpkwnwpj4n.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad9da115c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad9d9e0cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad9d9e0c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad9d9e0b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkwnwpj4n                        0x000056207b266368 <unavailable> + 4968

    5    libc.so.6                          0x00002ad9da301460 __libc_start_main +
    245

    6    tmpkwnwpj4n                        0x000056207b266019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        if is_prime(fib[i])\
    \ {\n            i += 1\n        }\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp97gndzus.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(fib[i]) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n    var c\
    \ = 1\n    var i = 1\n    while i < n {\n        c = a + b\n        a = b\n  \
    \      b = c\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpcu1w5vdg.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n    var k\
    \ = 0\n    var count = 0\n    while count < n {\n        k = i + j\n        i\
    \ = j\n        j = k\n        if is_prime(k) {\n            count += 1\n     \
    \   }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_s1g0c22.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_numbers = [2, 3]\n    var i\
    \ = 2\n    while i < n {\n        let next_fib = fib_numbers[i - 1] + fib_numbers[i\
    \ - 2]\n        if is_prime(next_fib) {\n            fib_numbers.append(next_fib)\n\
    \            i += 1\n        }\n    }\n    return fib_numbers[n - 1]\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2)\
    \ == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp70m4w421.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next_fib) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpzu4x6ln0/tmpzu4x6ln0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aea8db8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aea8d884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aea8d884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aea8d8837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzu4x6ln0                        0x0000562ab84904d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aea8dd79460 __libc_start_main +
    245

    6    tmpzu4x6ln0                        0x0000562ab8490019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [2, 3]\n    var i = 2\n\
    \    while fibs.count < n {\n        let next = fibs[i - 1] + fibs[i - 2]\n  \
    \      if is_prime(next) {\n            fibs.append(next)\n        }\n       \
    \ i += 1\n    }\n    return fibs[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp7rn7co7l.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   var j = 0\n    while i < n {\n        j = fib[i - 1] + fib[i - 2]\n      \
    \  if is_prime(j) {\n            fib.append(j)\n            i += 1\n        }\n\
    \    }\n    return fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpea20wzxr.swift:19:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(j) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var a = 0\n    var b = 1\n    var c\
    \ = 0\n    var i = 0\n    while i < n {\n        c = a + b\n        a = b\n  \
    \      b = c\n        if is_prime(c) {\n            i += 1\n        }\n    }\n\
    \    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpwgw6khih.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(c) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fibs = [1, 2]\n    var i = 2\n\
    \    while fibs.count < n {\n        fibs.append(fibs[i-1] + fibs[i-2])\n    \
    \    i += 1\n    }\n    return fibs[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmppk30xndo/tmppk30xndo.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5d5606dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5d55d64b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5d55d64988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5d55d637b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppk30xndo                        0x000055825ce523c8 <unavailable> + 5064

    5    libc.so.6                          0x00002b5d56259460 __libc_start_main +
    245

    6    tmppk30xndo                        0x000055825ce52079 <unavailable> + 4217

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [2, 3]\n    var i = 2\n \
    \   while i < n {\n        let next = fib[i - 1] + fib[i - 2]\n        if is_prime(next)\
    \ {\n            fib.append(next)\n            i += 1\n        }\n    }\n    return\
    \ fib[n - 1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(prime_fib(n: 1) ==\
    \ 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp1fyb8bx9.swift:18:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(next) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n    var k\
    \ = 0\n    var count = 0\n    while count < n {\n        k = i + j\n        i\
    \ = j\n        j = k\n        if is_prime(k) {\n            count += 1\n     \
    \   }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_s1g0c22.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [Int]()\n    fib.append(2)\n\
    \    fib.append(3)\n    var i = 2\n    while i < n {\n        fib.append(fib[i-1]\
    \ + fib[i-2])\n        i += 1\n    }\n    return fib[n-1]\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\n\
    assert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: Exception
  stderr: 'tmpk1604r5b/tmpk1604r5b.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c94860c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c94557b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c94557988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c945567b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpk1604r5b                        0x0000559fb5f0f429 <unavailable> + 5161

    5    libc.so.6                          0x00002b3c94a4c460 __libc_start_main +
    245

    6    tmpk1604r5b                        0x0000559fb5f0ef69 <unavailable> + 3945

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib = [1, 2]\n    var i = 2\n \
    \   while i < n {\n        fib.append(fib[i-1] + fib[i-2])\n        i += 1\n \
    \   }\n    return fib[n-1]\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpwv4v6vwm/tmpwv4v6vwm.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b622cf39c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b622cc30b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b622cc30988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b622cc2f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwv4v6vwm                        0x0000556f41407368 <unavailable> + 4968

    5    libc.so.6                          0x00002b622d125460 __libc_start_main +
    245

    6    tmpwv4v6vwm                        0x0000556f41407019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 1\n    var j = 1\n    var k\
    \ = 1\n    var count = 0\n    while count < n {\n        if is_prime(i) {\n  \
    \          count += 1\n        }\n        if count == n {\n            return\
    \ i\n        }\n        k = i + j\n        i = j\n        j = k\n    }\n    return\
    \ 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n:\
    \ 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n:\
    \ 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n: 7) == 1597)\n\
    assert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n:\
    \ 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmpjh36f_2h.swift:19:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(i) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570
- exit_code: -4
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var fib_nums = [2, 3]\n    var i =\
    \ 2\n    while i < n {\n        fib_nums.append(fib_nums[i-1] + fib_nums[i-2])\n\
    \        i += 1\n    }\n    return fib_nums[n-1]\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(prime_fib(n: 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n:\
    \ 3) == 5)\nassert(prime_fib(n: 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n:\
    \ 6) == 233)\nassert(prime_fib(n: 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\n\
    assert(prime_fib(n: 9) == 514229)\nassert(prime_fib(n: 10) == 433494437)"
  status: Exception
  stderr: 'tmpoucfqj43/tmpoucfqj43.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaf16f1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaf16c11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaf16c11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaf16c107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoucfqj43                        0x0000556850deb4d9 <unavailable> + 5337

    5    libc.so.6                          0x00002aaf17106460 __libc_start_main +
    245

    6    tmpoucfqj43                        0x0000556850deb019 <unavailable> + 4121

    '
  stdout: ''
  timestamp: 1660013570
- exit_code: 1
  program: "\n/// prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n/// >>> prime_fib(1)\n/// 2\n/// >>> prime_fib(2)\n/// 3\n/// >>>\
    \ prime_fib(3)\n/// 5\n/// >>> prime_fib(4)\n/// 13\n/// >>> prime_fib(5)\n///\
    \ 89\nfunc prime_fib(n: Int) -> Int {\n    var i = 0\n    var j = 1\n    var k\
    \ = 0\n    var count = 0\n    while count < n {\n        k = i + j\n        i\
    \ = j\n        j = k\n        if is_prime(k) {\n            count += 1\n     \
    \   }\n    }\n    return k\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(prime_fib(n:\
    \ 1) == 2)\nassert(prime_fib(n: 2) == 3)\nassert(prime_fib(n: 3) == 5)\nassert(prime_fib(n:\
    \ 4) == 13)\nassert(prime_fib(n: 5) == 89)\nassert(prime_fib(n: 6) == 233)\nassert(prime_fib(n:\
    \ 7) == 1597)\nassert(prime_fib(n: 8) == 28657)\nassert(prime_fib(n: 9) == 514229)\n\
    assert(prime_fib(n: 10) == 433494437)"
  status: SyntaxError
  stderr: "/tmp/tmp_s1g0c22.swift:22:12: error: cannot find 'is_prime' in scope\n\
    \        if is_prime(k) {\n           ^~~~~~~~\n"
  stdout: ''
  timestamp: 1660013570

language: swift
name: HumanEval_51_remove_vowels
results:
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text\
    \ {\n        if !vowels.contains(char) {\n            result.append(char)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiou\"\n    var result = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpm8qe2n90/tmpm8qe2n90.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2002f06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2002bfdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2002bfd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2002bfc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm8qe2n90                        0x00005640aa00896b <unavailable> + 6507

    5    libc.so.6                          0x00002b20030f2460 __libc_start_main +
    245

    6    tmpm8qe2n90                        0x00005640aa008169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !char.isVowel\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpqdn4g7kw.swift:16:18: error: value of type 'Character' has no member\
    \ 'isVowel'\n        if !char.isVowel {\n            ~~~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in\
    \ text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.replacingOccurrences(of: \"[aeiou]\", with: \"\"\
    , options: .regularExpression)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpuo3_c92h.swift:14:17: error: value of type 'String' has no member\
    \ 'replacingOccurrences'\n    return text.replacingOccurrences(of: \"[aeiou]\"\
    , with: \"\", options: .regularExpression)\n           ~~~~ ^~~~~~~~~~~~~~~~~~~~\n\
    /tmp/tmpuo3_c92h.swift:14:73: error: cannot infer contextual base in reference\
    \ to member 'regularExpression'\n    return text.replacingOccurrences(of: \"[aeiou]\"\
    , with: \"\", options: .regularExpression)\n                                 \
    \                                      ~^~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result: String = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if char\
    \ != \"a\" && char != \"e\" && char != \"i\" && char != \"o\" && char != \"u\"\
    \ {\n            result += String(char)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmppvdrma75/tmppvdrma75.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2e8deec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2e8ae5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2e8ae5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2e8ae47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppvdrma75                        0x0000560b92e0399b <unavailable> + 6555

    5    libc.so.6                          0x00002af2e8fda460 __libc_start_main +
    245

    6    tmppvdrma75                        0x0000560b92e03199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.is_vowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpdssrxwsb.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'is_vowel'\n    return text.filter { !$0.is_vowel\
    \ }\n                          ~~ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiou\"\n    var result = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpm8qe2n90/tmpm8qe2n90.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2002f06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2002bfdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2002bfd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2002bfc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm8qe2n90                        0x00005640aa00896b <unavailable> + 6507

    5    libc.so.6                          0x00002b20030f2460 __libc_start_main +
    245

    6    tmpm8qe2n90                        0x00005640aa008169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiou\"\n    var result = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpm8qe2n90/tmpm8qe2n90.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2002f06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2002bfdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2002bfd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2002bfc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm8qe2n90                        0x00005640aa00896b <unavailable> + 6507

    5    libc.so.6                          0x00002b20030f2460 __libc_start_main +
    245

    6    tmpm8qe2n90                        0x00005640aa008169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in\
    \ text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for c in text {\n        if !is_vowel(c)\
    \ {\n            result.append(c)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpn11f410i.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(c) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in\
    \ text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in\
    \ text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if char\
    \ != \"a\" && char != \"e\" && char != \"i\" && char != \"o\" && char != \"u\"\
    \ {\n            result += String(char)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmppvdrma75/tmppvdrma75.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2e8deec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2e8ae5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2e8ae5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2e8ae47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppvdrma75                        0x0000560b92e0399b <unavailable> + 6555

    5    libc.so.6                          0x00002af2e8fda460 __libc_start_main +
    245

    6    tmppvdrma75                        0x0000560b92e03199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text\
    \ {\n        if !vowels.contains(char) {\n            result.append(char)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    var new_text = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            new_text.append(char)\n\
    \        }\n    }\n    return new_text\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if char\
    \ != \"a\" && char != \"e\" && char != \"i\" && char != \"o\" && char != \"u\"\
    \ {\n            result += String(char)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmppvdrma75/tmppvdrma75.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2e8deec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2e8ae5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2e8ae5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2e8ae47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppvdrma75                        0x0000560b92e0399b <unavailable> + 6555

    5    libc.so.6                          0x00002af2e8fda460 __libc_start_main +
    245

    6    tmppvdrma75                        0x0000560b92e03199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for c in text {\n        if !is_vowel(c)\
    \ {\n            result.append(c)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpn11f410i.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(c) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    return String(text.characters.filter\
    \ { !vowels.containsString(String($0)) })\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"\
    abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp2ndsaxwm.swift:15:52: error: value of type 'String' has no member\
    \ 'containsString'\n    return String(text.characters.filter { !vowels.containsString(String($0))\
    \ })\n                                            ~~~~~~ ^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if char\
    \ != \"a\" && char != \"e\" && char != \"i\" && char != \"o\" && char != \"u\"\
    \ {\n            result += String(char)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmppvdrma75/tmppvdrma75.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2e8deec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2e8ae5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2e8ae5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2e8ae47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppvdrma75                        0x0000560b92e0399b <unavailable> + 6555

    5    libc.so.6                          0x00002af2e8fda460 __libc_start_main +
    245

    6    tmppvdrma75                        0x0000560b92e03199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if char\
    \ != \"a\" && char != \"e\" && char != \"i\" && char != \"o\" && char != \"u\"\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpa032r7v8/tmpa032r7v8.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002baa8975bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002baa89452b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002baa89452988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002baa894517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa032r7v8                        0x000055cd4ffea94b <unavailable> + 6475

    5    libc.so.6                          0x00002baa89947460 __libc_start_main +
    245

    6    tmpa032r7v8                        0x000055cd4ffea149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result: String = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiou\"\n    var result = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpm8qe2n90/tmpm8qe2n90.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2002f06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2002bfdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2002bfd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2002bfc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm8qe2n90                        0x00005640aa00896b <unavailable> + 6507

    5    libc.so.6                          0x00002b20030f2460 __libc_start_main +
    245

    6    tmpm8qe2n90                        0x00005640aa008169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var new_text = \"\"\n    for char in\
    \ text {\n        if !vowels.contains(char) {\n            new_text.append(char)\n\
    \        }\n    }\n    return new_text\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text\
    \ {\n        if !vowels.contains(char) {\n            result.append(char)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in\
    \ text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text\
    \ {\n        if !vowels.contains(char) {\n            result.append(char)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text\
    \ {\n        if !vowels.contains(char) {\n            result.append(char)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if char\
    \ != \"a\" && char != \"e\" && char != \"i\" && char != \"o\" && char != \"u\"\
    \ {\n            result += String(char)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmppvdrma75/tmppvdrma75.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2e8deec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2e8ae5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2e8ae5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2e8ae47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppvdrma75                        0x0000560b92e0399b <unavailable> + 6555

    5    libc.so.6                          0x00002af2e8fda460 __libc_start_main +
    245

    6    tmppvdrma75                        0x0000560b92e03199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in\
    \ text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var newText = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            newText.append(char)\n        }\n    }\n    return newText\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmp7p56quey.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text\
    \ {\n        if !vowels.contains(char) {\n            result.append(char)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text\
    \ {\n        if !vowels.contains(char) {\n            result.append(char)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text {\n   \
    \     if !vowels.contains(String(char)) {\n            result += String(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var new_text = \"\"\n    for char in text {\n        if char\
    \ != \"a\" && char != \"e\" && char != \"i\" && char != \"o\" && char != \"u\"\
    \ {\n            new_text += String(char)\n        }\n    }\n    return new_text\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmp04ew5dvc/tmp04ew5dvc.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad3840c7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad383dbeb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad383dbe988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad383dbd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp04ew5dvc                        0x0000564b2aad499b <unavailable> + 6555

    5    libc.so.6                          0x00002ad3842b3460 __libc_start_main +
    245

    6    tmp04ew5dvc                        0x0000564b2aad4199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text\
    \ {\n        if !vowels.contains(char) {\n            result.append(char)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text\
    \ {\n        if !vowels.contains(char) {\n            result.append(char)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text {\n   \
    \     if !vowels.contains(String(char)) {\n            result += String(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var newText = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            newText.append(char)\n\
    \        }\n    }\n    return newText\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result: String = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text {\n   \
    \     if !vowels.contains(String(char)) {\n            result.append(char)\n \
    \       }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text\
    \ {\n        if !vowels.contains(char) {\n            result.append(char)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiou\"\n    var result = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpm8qe2n90/tmpm8qe2n90.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2002f06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2002bfdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2002bfd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2002bfc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm8qe2n90                        0x00005640aa00896b <unavailable> + 6507

    5    libc.so.6                          0x00002b20030f2460 __libc_start_main +
    245

    6    tmpm8qe2n90                        0x00005640aa008169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result: String = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiou\"\n    var result = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpm8qe2n90/tmpm8qe2n90.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2002f06c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2002bfdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2002bfd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2002bfc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm8qe2n90                        0x00005640aa00896b <unavailable> + 6507

    5    libc.so.6                          0x00002b20030f2460 __libc_start_main +
    245

    6    tmpm8qe2n90                        0x00005640aa008169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if char\
    \ != \"a\" && char != \"e\" && char != \"i\" && char != \"o\" && char != \"u\"\
    \ {\n            result += String(char)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmppvdrma75/tmppvdrma75.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2e8deec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2e8ae5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2e8ae5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2e8ae47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppvdrma75                        0x0000560b92e0399b <unavailable> + 6555

    5    libc.so.6                          0x00002af2e8fda460 __libc_start_main +
    245

    6    tmppvdrma75                        0x0000560b92e03199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if char\
    \ != \"a\" && char != \"e\" && char != \"i\" && char != \"o\" && char != \"u\"\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpa032r7v8/tmpa032r7v8.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002baa8975bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002baa89452b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002baa89452988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002baa894517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa032r7v8                        0x000055cd4ffea94b <unavailable> + 6475

    5    libc.so.6                          0x00002baa89947460 __libc_start_main +
    245

    6    tmpa032r7v8                        0x000055cd4ffea149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result: String = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    return text.filter { !$0.isVowel }\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpoe56gmpl.swift:14:30: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return text.filter { !$0.isVowel }\n\
    \                          ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for ch in text {\n        if !is_vowel(ch)\
    \ {\n            result.append(ch)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpti266vd7.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(ch) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result: String = \"\"\n    for char\
    \ in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if char\
    \ != \"a\" && char != \"e\" && char != \"i\" && char != \"o\" && char != \"u\"\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpa032r7v8/tmpa032r7v8.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002baa8975bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002baa89452b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002baa89452988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002baa894517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa032r7v8                        0x000055cd4ffea94b <unavailable> + 6475

    5    libc.so.6                          0x00002baa89947460 __libc_start_main +
    245

    6    tmpa032r7v8                        0x000055cd4ffea149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text\
    \ {\n        if !vowels.contains(char) {\n            result.append(char)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if char\
    \ != \"a\" && char != \"e\" && char != \"i\" && char != \"o\" && char != \"u\"\
    \ {\n            result += String(char)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmppvdrma75/tmppvdrma75.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2e8deec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2e8ae5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2e8ae5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2e8ae47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppvdrma75                        0x0000560b92e0399b <unavailable> + 6555

    5    libc.so.6                          0x00002af2e8fda460 __libc_start_main +
    245

    6    tmppvdrma75                        0x0000560b92e03199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in\
    \ text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text\
    \ {\n        if !vowels.contains(char) {\n            result.append(char)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text {\n   \
    \     if !vowels.contains(String(char)) {\n            result += String(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text {\n   \
    \     if !vowels.contains(String(char)) {\n            result += String(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    for\
    \ char in text {\n        if !vowels.contains(char) {\n            result.append(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !char.isVowel\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpqdn4g7kw.swift:16:18: error: value of type 'Character' has no member\
    \ 'isVowel'\n        if !char.isVowel {\n            ~~~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if char\
    \ != \"a\" && char != \"e\" && char != \"i\" && char != \"o\" && char != \"u\"\
    \ {\n            result += String(char)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmppvdrma75/tmppvdrma75.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2e8deec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2e8ae5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2e8ae5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2e8ae47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppvdrma75                        0x0000560b92e0399b <unavailable> + 6555

    5    libc.so.6                          0x00002af2e8fda460 __libc_start_main +
    245

    6    tmppvdrma75                        0x0000560b92e03199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ {!vowels.contains($0)})\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmps247bioh.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter {!vowels.contains($0)})\n\
    \                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was\
    \ obsoleted in Swift 5.0\n    public var characters: String { get set }\n    \
    \           ^\n"
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: -4
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if char\
    \ != \"a\" && char != \"e\" && char != \"i\" && char != \"o\" && char != \"u\"\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: Exception
  stderr: 'tmpa032r7v8/tmpa032r7v8.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002baa8975bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002baa89452b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002baa89452988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002baa894517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa032r7v8                        0x000055cd4ffea94b <unavailable> + 6475

    5    libc.so.6                          0x00002baa89947460 __libc_start_main +
    245

    6    tmpa032r7v8                        0x000055cd4ffea149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpzijllje_.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"A\", \"E\", \"I\", \"O\", \"U\"]\n    return String(text.characters.filter\
    \ { !vowels.contains($0) })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpz935cftt.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter { !vowels.contains($0)\
    \ })\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824465
- exit_code: 0
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"\
    E\", \"I\", \"O\", \"U\"]\n    var result = \"\"\n    for char in text {\n   \
    \     if !vowels.contains(String(char)) {\n            result += String(char)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\\
    nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"\
    fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    let vowels = \"aeiou\"\n    return String(text.characters.filter({vowels.contains($0)\
    \ == false}))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_vowels(text:\
    \ \"\") == \"\")\nassert(remove_vowels(text: \"abcdef\\nghijklm\") == \"bcdf\\\
    nghjklm\")\nassert(remove_vowels(text: \"fedcba\") == \"fdcb\")\nassert(remove_vowels(text:\
    \ \"eeeee\") == \"\")\nassert(remove_vowels(text: \"acBAA\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"EcBOO\") == \"cB\")\nassert(remove_vowels(text: \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpeldc7a2e.swift:15:24: error: 'characters' is unavailable: Please\
    \ use String directly\n    return String(text.characters.filter({vowels.contains($0)\
    \ == false}))\n                       ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824465
- exit_code: 1
  program: "\n/// remove_vowels is a function that takes string and returns string\
    \ without vowels.\n/// >>> remove_vowels('')\n/// ''\n/// >>> remove_vowels('abcdef')\n\
    /// 'bcdf'\n/// >>> remove_vowels('aaaaa')\n/// ''\n/// >>> remove_vowels('aaBAA')\n\
    /// 'B'\n/// >>> remove_vowels('zbcd')\n/// 'zbcd'\nfunc remove_vowels(text: String)\
    \ -> String {\n    var result = \"\"\n    for char in text {\n        if !is_vowel(char)\
    \ {\n            result.append(char)\n        }\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_vowels(text: \"\") == \"\")\nassert(remove_vowels(text:\
    \ \"abcdef\\nghijklm\") == \"bcdf\\nghjklm\")\nassert(remove_vowels(text: \"fedcba\"\
    ) == \"fdcb\")\nassert(remove_vowels(text: \"eeeee\") == \"\")\nassert(remove_vowels(text:\
    \ \"acBAA\") == \"cB\")\nassert(remove_vowels(text: \"EcBOO\") == \"cB\")\nassert(remove_vowels(text:\
    \ \"ybcd\") == \"ybcd\")"
  status: SyntaxError
  stderr: "/tmp/tmpd34atnaa.swift:16:13: error: cannot find 'is_vowel' in scope\n\
    \        if !is_vowel(char) {\n            ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824464

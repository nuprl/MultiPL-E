language: swift
name: HumanEval_27_flip_case
results:
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: { $0 + String($1) })\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpz3omwc2p.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: { $0 + String($1) })\n            ^   \
    \ ~~~~~~~~~\n                 \n/tmp/tmpz3omwc2p.swift:8:23: error: value of type\
    \ 'String.Element' (aka 'Character') has no member 'lowercase'\n            return\
    \ $0.lowercase\n                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map { char in\n        if\
    \ char.isUppercase {\n            return char.lowercase\n        } else {\n  \
    \          return char.uppercase\n        }\n    }.reduce(\"\", combine: +)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpqeu_3yq8.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpqeu_3yq8.swift:8:25: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return char.lowercase\n\
    \                   ~~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return Character($0.uppercaseString)\n        } else {\n    \
    \        return Character($0.lowercaseString)\n        }\n    }.reduce(\"\", combine:\
    \ +)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(flip_case(string: \"\") == \"\
    \")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmp8nh4c69g.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmp8nh4c69g.swift:8:33: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'uppercaseString'\n            return Character($0.uppercaseString)\n\
    \                             ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return String(string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase\n        } else {\n            return $0.lowercase\n\
    \        }\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpxv8f8qyb.swift:8:23: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'uppercase'\n            return $0.uppercase\n  \
    \                 ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.map {\n        if $0.isUppercase {\n\
    \            return $0.lowercased()\n        } else {\n            return $0.uppercased()\n\
    \        }\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpd9rgaoe0.swift:6:19: error: cannot convert return expression of\
    \ type '[String]' to return type 'String'\n    return string.map {\n         \
    \  ~~~~~~~^~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase\n        } else {\n            return $0.lowercase\n\
    \        }\n    }.joinWithSeparator(\"\")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpv0bdihmn.swift:12:7: error: value of type 'Array<_>' has no member\
    \ 'joinWithSeparator'\n    }.joinWithSeparator(\"\")\n~~~~~ ^~~~~~~~~~~~~~~~~\n\
    /tmp/tmpv0bdihmn.swift:8:23: error: value of type 'String.Element' (aka 'Character')\
    \ has no member 'uppercase'\n            return $0.uppercase\n               \
    \    ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return String(string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpllnlqs9j.swift:8:23: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'lowercase'\n            return $0.lowercase\n  \
    \                 ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.map {\n        $0.isUppercase ? $0.lowercased()\
    \ : $0.uppercased()\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpi8m2x323.swift:6:19: error: cannot convert return expression of\
    \ type '[String]' to return type 'String'\n    return string.map {\n         \
    \  ~~~~~~~^~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var newString = \"\"\n    for character in string {\n\
    \        if character.isUppercase {\n            newString.append(character.lowercased())\n\
    \        } else {\n            newString.append(character.uppercased())\n    \
    \    }\n    }\n    return newString\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\")\
    \ == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: { $0 + String($1) })\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpz3omwc2p.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: { $0 + String($1) })\n            ^   \
    \ ~~~~~~~~~\n                 \n/tmp/tmpz3omwc2p.swift:8:23: error: value of type\
    \ 'String.Element' (aka 'Character') has no member 'lowercase'\n            return\
    \ $0.lowercase\n                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var flipped = \"\"\n    for char in string {\n    \
    \    if char.isUppercase {\n            flipped.append(char.lowercased())\n  \
    \      } else {\n            flipped.append(char.uppercased())\n        }\n  \
    \  }\n    return flipped\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return Character($0.lowercaseString)\n        } else {\n    \
    \        return Character($0.uppercaseString)\n        }\n    }.reduce(\"\", combine:\
    \ +)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(flip_case(string: \"\") == \"\
    \")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpt4ha27h3.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpt4ha27h3.swift:8:33: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercaseString'\n            return Character($0.lowercaseString)\n\
    \                             ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map({\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }).reduce(\"\", combine: { $0 + String($1) })\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpem5ogun7.swift:12:14: error: extraneous argument label 'combine:'\
    \ in call\n    }).reduce(\"\", combine: { $0 + String($1) })\n             ^ \
    \   ~~~~~~~~~\n                  \n/tmp/tmpem5ogun7.swift:8:23: error: value of\
    \ type 'String.Element' (aka 'Character') has no member 'lowercase'\n        \
    \    return $0.lowercase\n                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var flipped = \"\"\n    for char in string {\n    \
    \    let str = String(char)\n        if str.lowercased() == str {\n          \
    \  flipped.append(str.uppercased())\n        } else {\n            flipped.append(str.lowercased())\n\
    \        }\n    }\n    return flipped\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\")\
    \ == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if let char\
    \ = String($0).lowercaseString.characters.first {\n            return Character(String(char).uppercaseString)\n\
    \        } else {\n            return $0\n        }\n    }.reduce(\"\", combine:\
    \ +)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(flip_case(string: \"\") == \"\
    \")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmp9ulkyutf.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmp9ulkyutf.swift:7:34: error: value of type 'String' has no\
    \ member 'lowercaseString'\n        if let char = String($0).lowercaseString.characters.first\
    \ {\n                      ~~~~~~~~~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.map {\n        if $0.isUppercase {\n\
    \            return $0.lowercased()\n        } else {\n            return $0.uppercased()\n\
    \        }\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpd9rgaoe0.swift:6:19: error: cannot convert return expression of\
    \ type '[String]' to return type 'String'\n    return string.map {\n         \
    \  ~~~~~~~^~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map { char in\n        if\
    \ char.isUppercase {\n            return char.lowercase\n        } else {\n  \
    \          return char.uppercase\n        }\n    }.reduce(\"\", combine: +)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpqeu_3yq8.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpqeu_3yq8.swift:8:25: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return char.lowercase\n\
    \                   ~~~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var result = \"\"\n    for char in string {\n     \
    \   if char.isUppercase {\n            result.append(char.lowercased())\n    \
    \    } else {\n            result.append(char.uppercased())\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var result = \"\"\n    for char in string {\n     \
    \   if char.isUppercase {\n            result.append(char.lowercased())\n    \
    \    } else {\n            result.append(char.uppercased())\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: { $0 + String($1) })\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpz3omwc2p.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: { $0 + String($1) })\n            ^   \
    \ ~~~~~~~~~\n                 \n/tmp/tmpz3omwc2p.swift:8:23: error: value of type\
    \ 'String.Element' (aka 'Character') has no member 'lowercase'\n            return\
    \ $0.lowercase\n                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.uppercased()\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: Exception
  stderr: 'tmp2l2rimzk/tmp2l2rimzk.swift:23: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b177939dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1779094b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1779094988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17790937b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2l2rimzk                        0x000055b1e7240445 <unavailable> + 5189

    5    libc.so.6                          0x00002b1779589460 __libc_start_main +
    245

    6    tmp2l2rimzk                        0x000055b1e723ff99 <unavailable> + 3993

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var newString = \"\"\n    for character in string {\n\
    \        if character.isUppercase {\n            newString.append(character.lowercased())\n\
    \        } else {\n            newString.append(character.uppercased())\n    \
    \    }\n    }\n    return newString\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\")\
    \ == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase\n        } else {\n            return $0.lowercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpgbmdtp_u.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpgbmdtp_u.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'uppercase'\n            return $0.uppercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase\n        } else {\n            return $0.lowercase\n\
    \        }\n    }.reduce(\"\", combine: { $0 + String($1) })\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpap9vcx8d.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: { $0 + String($1) })\n            ^   \
    \ ~~~~~~~~~\n                 \n/tmp/tmpap9vcx8d.swift:8:23: error: value of type\
    \ 'String.Element' (aka 'Character') has no member 'uppercase'\n            return\
    \ $0.uppercase\n                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return String(string.characters.map { $0.isUpperCase()\
    \ ? $0.lowercase() : $0.uppercase() })\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\")\
    \ == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpl_umty7q.swift:6:46: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isUpperCase'\n    return String(string.characters.map\
    \ { $0.isUpperCase() ? $0.lowercase() : $0.uppercase() })\n                  \
    \                        ~~ ^~~~~~~~~~~\n/tmp/tmpl_umty7q.swift:6:65: error: value\
    \ of type 'String.Element' (aka 'Character') has no member 'lowercase'\n    return\
    \ String(string.characters.map { $0.isUpperCase() ? $0.lowercase() : $0.uppercase()\
    \ })\n                                                             ~~ ^~~~~~~~~\n\
    /tmp/tmpl_umty7q.swift:6:82: error: value of type 'String.Element' (aka 'Character')\
    \ has no member 'uppercase'\n    return String(string.characters.map { $0.isUpperCase()\
    \ ? $0.lowercase() : $0.uppercase() })\n                                     \
    \                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var result = \"\"\n    for char in string {\n     \
    \   if char.isUppercase {\n            result.append(char.lowercased())\n    \
    \    } else {\n            result.append(char.uppercased())\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var flipped = \"\"\n    for char in string {\n    \
    \    if char.isUppercase {\n            flipped.append(char.lowercased())\n  \
    \      } else {\n            flipped.append(char.uppercased())\n        }\n  \
    \  }\n    return flipped\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.map { $0.isUppercase ? $0.lowercased()\
    \ : $0.uppercased() }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpcxw_8q9o.swift:6:19: error: cannot convert return expression of\
    \ type '[String]' to return type 'String'\n    return string.map { $0.isUppercase\
    \ ? $0.lowercased() : $0.uppercased() }\n           ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var flipped = \"\"\n    for char in string {\n    \
    \    if char.isUppercase {\n            flipped.append(char.lowercased())\n  \
    \      } else {\n            flipped.append(char.uppercased())\n        }\n  \
    \  }\n    return flipped\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return String(string.characters.map {\n        if $0.isUppercase()\
    \ {\n            return $0.lowercase()\n        } else {\n            return $0.uppercase()\n\
    \        }\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpdl5j9ca7.swift:7:15: error: cannot call value of non-function type\
    \ 'Bool'\n        if $0.isUppercase() {\n              ^          ~~\n       \
    \                  \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return String(string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    })\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpllnlqs9j.swift:8:23: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'lowercase'\n            return $0.lowercase\n  \
    \                 ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase\n        } else {\n            return $0.lowercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpgbmdtp_u.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpgbmdtp_u.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'uppercase'\n            return $0.uppercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: { $0 + String($1) })\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpz3omwc2p.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: { $0 + String($1) })\n            ^   \
    \ ~~~~~~~~~\n                 \n/tmp/tmpz3omwc2p.swift:8:23: error: value of type\
    \ 'String.Element' (aka 'Character') has no member 'lowercase'\n            return\
    \ $0.lowercase\n                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var result = \"\"\n    for char in string {\n     \
    \   if char.isUppercase {\n            result.append(char.lowercased())\n    \
    \    } else {\n            result.append(char.uppercased())\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase\n        } else {\n            return $0.lowercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpgbmdtp_u.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpgbmdtp_u.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'uppercase'\n            return $0.uppercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var flipped = \"\"\n    for char in string {\n    \
    \    if char.isUppercase {\n            flipped.append(char.lowercased())\n  \
    \      } else {\n            flipped.append(char.uppercased())\n        }\n  \
    \  }\n    return flipped\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map { $0.isUpperCase() ? $0.lowercase()\
    \ : $0.uppercase() }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpgfhr44p9.swift:6:39: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isUpperCase'\n    return string.characters.map {\
    \ $0.isUpperCase() ? $0.lowercase() : $0.uppercase() }.reduce(\"\", combine: +)\n\
    \                                   ~~ ^~~~~~~~~~~\n/tmp/tmpgfhr44p9.swift:6:58:\
    \ error: value of type 'String.Element' (aka 'Character') has no member 'lowercase'\n\
    \    return string.characters.map { $0.isUpperCase() ? $0.lowercase() : $0.uppercase()\
    \ }.reduce(\"\", combine: +)\n                                               \
    \       ~~ ^~~~~~~~~\n/tmp/tmpgfhr44p9.swift:6:75: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'uppercase'\n    return string.characters.map\
    \ { $0.isUpperCase() ? $0.lowercase() : $0.uppercase() }.reduce(\"\", combine:\
    \ +)\n                                                                       ~~\
    \ ^~~~~~~~~\n/tmp/tmpgfhr44p9.swift:6:95: error: extraneous argument label 'combine:'\
    \ in call\n    return string.characters.map { $0.isUpperCase() ? $0.lowercase()\
    \ : $0.uppercase() }.reduce(\"\", combine: +)\n                              \
    \                                                                ^    ~~~~~~~~~\n\
    \                                                                            \
    \                       \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.joinWithSeparator(\"\")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmp26ub8i7d.swift:12:7: error: value of type 'Array<_>' has no member\
    \ 'joinWithSeparator'\n    }.joinWithSeparator(\"\")\n~~~~~ ^~~~~~~~~~~~~~~~~\n\
    /tmp/tmp26ub8i7d.swift:8:23: error: value of type 'String.Element' (aka 'Character')\
    \ has no member 'lowercase'\n            return $0.lowercase\n               \
    \    ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase()\n        } else {\n            return $0.lowercase()\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpj9a8rb0w.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpj9a8rb0w.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'uppercase'\n            return $0.uppercase()\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: { $0 + String($1) })\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpz3omwc2p.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: { $0 + String($1) })\n            ^   \
    \ ~~~~~~~~~\n                 \n/tmp/tmpz3omwc2p.swift:8:23: error: value of type\
    \ 'String.Element' (aka 'Character') has no member 'lowercase'\n            return\
    \ $0.lowercase\n                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.joinWithSeparator(\"\")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmp26ub8i7d.swift:12:7: error: value of type 'Array<_>' has no member\
    \ 'joinWithSeparator'\n    }.joinWithSeparator(\"\")\n~~~~~ ^~~~~~~~~~~~~~~~~\n\
    /tmp/tmp26ub8i7d.swift:8:23: error: value of type 'String.Element' (aka 'Character')\
    \ has no member 'lowercase'\n            return $0.lowercase\n               \
    \    ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    let flipped = string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }\n    return String(flipped)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpabugimka.swift:8:23: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'lowercase'\n            return $0.lowercase\n  \
    \                 ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var flipped_string = \"\"\n    for char in string {\n\
    \        if char.isUppercase {\n            flipped_string.append(char.lowercased())\n\
    \        } else {\n            flipped_string.append(char.uppercased())\n    \
    \    }\n    }\n    return flipped_string\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\")\
    \ == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var newString = \"\"\n    for char in string {\n  \
    \      if char.isUppercase {\n            newString.append(char.lowercased())\n\
    \        } else {\n            newString.append(char.uppercased())\n        }\n\
    \    }\n    return newString\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map { $0.isUpperCase() ? $0.lowercase()\
    \ : $0.uppercase() }.reduce(\"\", combine: { $0 + String($1) })\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpsdor3c1b.swift:6:39: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isUpperCase'\n    return string.characters.map {\
    \ $0.isUpperCase() ? $0.lowercase() : $0.uppercase() }.reduce(\"\", combine: {\
    \ $0 + String($1) })\n                                   ~~ ^~~~~~~~~~~\n/tmp/tmpsdor3c1b.swift:6:58:\
    \ error: value of type 'String.Element' (aka 'Character') has no member 'lowercase'\n\
    \    return string.characters.map { $0.isUpperCase() ? $0.lowercase() : $0.uppercase()\
    \ }.reduce(\"\", combine: { $0 + String($1) })\n                             \
    \                         ~~ ^~~~~~~~~\n/tmp/tmpsdor3c1b.swift:6:75: error: value\
    \ of type 'String.Element' (aka 'Character') has no member 'uppercase'\n    return\
    \ string.characters.map { $0.isUpperCase() ? $0.lowercase() : $0.uppercase() }.reduce(\"\
    \", combine: { $0 + String($1) })\n                                          \
    \                             ~~ ^~~~~~~~~\n/tmp/tmpsdor3c1b.swift:6:95: error:\
    \ extraneous argument label 'combine:' in call\n    return string.characters.map\
    \ { $0.isUpperCase() ? $0.lowercase() : $0.uppercase() }.reduce(\"\", combine:\
    \ { $0 + String($1) })\n                                                     \
    \                                         ^    ~~~~~~~~~\n                   \
    \                                                                            \
    \    \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var result = \"\"\n    for char in string {\n     \
    \   if char.isUppercase {\n            result.append(char.lowercased())\n    \
    \    } else {\n            result.append(char.uppercased())\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase\n        } else {\n            return $0.lowercase\n\
    \        }\n    }.reduce(\"\", combine: { $0 + String($1) })\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpap9vcx8d.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: { $0 + String($1) })\n            ^   \
    \ ~~~~~~~~~\n                 \n/tmp/tmpap9vcx8d.swift:8:23: error: value of type\
    \ 'String.Element' (aka 'Character') has no member 'uppercase'\n            return\
    \ $0.uppercase\n                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase\n        } else {\n            return $0.lowercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpgbmdtp_u.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpgbmdtp_u.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'uppercase'\n            return $0.uppercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var result = \"\"\n    for char in string {\n     \
    \   if char.isUppercase {\n            result.append(char.lowercased())\n    \
    \    } else {\n            result.append(char.uppercased())\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.joinWithSeparator(\"\")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmp26ub8i7d.swift:12:7: error: value of type 'Array<_>' has no member\
    \ 'joinWithSeparator'\n    }.joinWithSeparator(\"\")\n~~~~~ ^~~~~~~~~~~~~~~~~\n\
    /tmp/tmp26ub8i7d.swift:8:23: error: value of type 'String.Element' (aka 'Character')\
    \ has no member 'lowercase'\n            return $0.lowercase\n               \
    \    ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map({\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }).reduce(\"\", combine: { $0 + String($1) })\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpem5ogun7.swift:12:14: error: extraneous argument label 'combine:'\
    \ in call\n    }).reduce(\"\", combine: { $0 + String($1) })\n             ^ \
    \   ~~~~~~~~~\n                  \n/tmp/tmpem5ogun7.swift:8:23: error: value of\
    \ type 'String.Element' (aka 'Character') has no member 'lowercase'\n        \
    \    return $0.lowercase\n                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var newString = \"\"\n    for character in string {\n\
    \        if character.isUppercase {\n            newString.append(character.lowercased())\n\
    \        } else {\n            newString.append(character.uppercased())\n    \
    \    }\n    }\n    return newString\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\")\
    \ == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.map {\n        if $0.isUppercase {\n\
    \            return $0.lowercased()\n        } else {\n            return $0.uppercased()\n\
    \        }\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpd9rgaoe0.swift:6:19: error: cannot convert return expression of\
    \ type '[String]' to return type 'String'\n    return string.map {\n         \
    \  ~~~~~~~^~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.joinWithSeparator(\"\")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmp26ub8i7d.swift:12:7: error: value of type 'Array<_>' has no member\
    \ 'joinWithSeparator'\n    }.joinWithSeparator(\"\")\n~~~~~ ^~~~~~~~~~~~~~~~~\n\
    /tmp/tmp26ub8i7d.swift:8:23: error: value of type 'String.Element' (aka 'Character')\
    \ has no member 'lowercase'\n            return $0.lowercase\n               \
    \    ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: {$0 + String($1)})\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmp44vat2q6.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: {$0 + String($1)})\n            ^    ~~~~~~~~~\n\
    \                 \n/tmp/tmp44vat2q6.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var result = \"\"\n    for char in string {\n     \
    \   if char.isUppercase {\n            result.append(char.lowercased())\n    \
    \    } else {\n            result.append(char.uppercased())\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.joinWithSeparator(\"\")\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmp26ub8i7d.swift:12:7: error: value of type 'Array<_>' has no member\
    \ 'joinWithSeparator'\n    }.joinWithSeparator(\"\")\n~~~~~ ^~~~~~~~~~~~~~~~~\n\
    /tmp/tmp26ub8i7d.swift:8:23: error: value of type 'String.Element' (aka 'Character')\
    \ has no member 'lowercase'\n            return $0.lowercase\n               \
    \    ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return String(string.characters.map { $0.isUpperCase()\
    \ ? $0.lowercase() : $0.uppercase() })\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\")\
    \ == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpl_umty7q.swift:6:46: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isUpperCase'\n    return String(string.characters.map\
    \ { $0.isUpperCase() ? $0.lowercase() : $0.uppercase() })\n                  \
    \                        ~~ ^~~~~~~~~~~\n/tmp/tmpl_umty7q.swift:6:65: error: value\
    \ of type 'String.Element' (aka 'Character') has no member 'lowercase'\n    return\
    \ String(string.characters.map { $0.isUpperCase() ? $0.lowercase() : $0.uppercase()\
    \ })\n                                                             ~~ ^~~~~~~~~\n\
    /tmp/tmpl_umty7q.swift:6:82: error: value of type 'String.Element' (aka 'Character')\
    \ has no member 'uppercase'\n    return String(string.characters.map { $0.isUpperCase()\
    \ ? $0.lowercase() : $0.uppercase() })\n                                     \
    \                                         ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase()\n        } else {\n            return $0.lowercase()\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpj9a8rb0w.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpj9a8rb0w.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'uppercase'\n            return $0.uppercase()\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercaseString\n        } else {\n            return\
    \ $0.lowercaseString\n        }\n    }.joinWithSeparator(\"\")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpyp1rxzol.swift:12:7: error: value of type 'Array<_>' has no member\
    \ 'joinWithSeparator'\n    }.joinWithSeparator(\"\")\n~~~~~ ^~~~~~~~~~~~~~~~~\n\
    /tmp/tmpyp1rxzol.swift:8:23: error: value of type 'String.Element' (aka 'Character')\
    \ has no member 'uppercaseString'\n            return $0.uppercaseString\n   \
    \                ~~ ^~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase\n        } else {\n            return $0.lowercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpgbmdtp_u.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpgbmdtp_u.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'uppercase'\n            return $0.uppercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var result = \"\"\n    for char in string {\n     \
    \   if char.isUppercase {\n            result.append(char.lowercased())\n    \
    \    } else {\n            result.append(char.uppercased())\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map({\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }).reduce(\"\", combine: { $0 + String($1) })\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string:\
    \ \"Hello!\") == \"hELLO!\")\nassert(flip_case(string: \"These violent delights\
    \ have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpem5ogun7.swift:12:14: error: extraneous argument label 'combine:'\
    \ in call\n    }).reduce(\"\", combine: { $0 + String($1) })\n             ^ \
    \   ~~~~~~~~~\n                  \n/tmp/tmpem5ogun7.swift:8:23: error: value of\
    \ type 'String.Element' (aka 'Character') has no member 'lowercase'\n        \
    \    return $0.lowercase\n                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var flipped_string = \"\"\n    for char in string {\n\
    \        if char.isUppercase {\n            flipped_string.append(char.lowercased())\n\
    \        } else {\n            flipped_string.append(char.uppercased())\n    \
    \    }\n    }\n    return flipped_string\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\")\
    \ == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isLowercase\
    \ {\n            return $0.uppercase()\n        } else {\n            return $0.lowercase()\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpj9a8rb0w.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpj9a8rb0w.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'uppercase'\n            return $0.uppercase()\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 0
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    var flipped = \"\"\n    for char in string {\n    \
    \    if char.isUppercase {\n            flipped.append(char.lowercased())\n  \
    \      } else {\n            flipped.append(char.uppercased())\n        }\n  \
    \  }\n    return flipped\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(flip_case(string:\
    \ \"\") == \"\")\nassert(flip_case(string: \"Hello!\") == \"hELLO!\")\nassert(flip_case(string:\
    \ \"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE\
    \ VIOLENT ENDS\")"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map { $0.isUpperCase() ? $0.lowercase()\
    \ : $0.uppercase() }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpgfhr44p9.swift:6:39: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isUpperCase'\n    return string.characters.map {\
    \ $0.isUpperCase() ? $0.lowercase() : $0.uppercase() }.reduce(\"\", combine: +)\n\
    \                                   ~~ ^~~~~~~~~~~\n/tmp/tmpgfhr44p9.swift:6:58:\
    \ error: value of type 'String.Element' (aka 'Character') has no member 'lowercase'\n\
    \    return string.characters.map { $0.isUpperCase() ? $0.lowercase() : $0.uppercase()\
    \ }.reduce(\"\", combine: +)\n                                               \
    \       ~~ ^~~~~~~~~\n/tmp/tmpgfhr44p9.swift:6:75: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'uppercase'\n    return string.characters.map\
    \ { $0.isUpperCase() ? $0.lowercase() : $0.uppercase() }.reduce(\"\", combine:\
    \ +)\n                                                                       ~~\
    \ ^~~~~~~~~\n/tmp/tmpgfhr44p9.swift:6:95: error: extraneous argument label 'combine:'\
    \ in call\n    return string.characters.map { $0.isUpperCase() ? $0.lowercase()\
    \ : $0.uppercase() }.reduce(\"\", combine: +)\n                              \
    \                                                                ^    ~~~~~~~~~\n\
    \                                                                            \
    \                       \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n/// >>> flip_case('Hello')\n/// 'hELLO'\nfunc flip_case(string:\
    \ String) -> String {\n    return string.characters.map {\n        if $0.isUppercase\
    \ {\n            return $0.lowercase\n        } else {\n            return $0.uppercase\n\
    \        }\n    }.reduce(\"\", combine: +)\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(flip_case(string: \"\") == \"\")\nassert(flip_case(string: \"Hello!\"\
    ) == \"hELLO!\")\nassert(flip_case(string: \"These violent delights have violent\
    \ ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")"
  status: SyntaxError
  stderr: "/tmp/tmpevhva539.swift:12:13: error: extraneous argument label 'combine:'\
    \ in call\n    }.reduce(\"\", combine: +)\n            ^    ~~~~~~~~~\n      \
    \           \n/tmp/tmpevhva539.swift:8:23: error: value of type 'String.Element'\
    \ (aka 'Character') has no member 'lowercase'\n            return $0.lowercase\n\
    \                   ~~ ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454

language: swift
name: HumanEval_92_any_int
results:
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmppa984d50/tmppa984d50.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0d45e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0d42dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0d42dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0d42db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppa984d50                        0x0000557950e0a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ba0d47d1460 __libc_start_main +
    245

    6    tmppa984d50                        0x0000557950e09f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmppa984d50/tmppa984d50.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0d45e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0d42dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0d42dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0d42db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppa984d50                        0x0000557950e0a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ba0d47d1460 __libc_start_main +
    245

    6    tmppa984d50                        0x0000557950e09f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z) || (y == x + z) || (z == x + y)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpypcq_odm/tmpypcq_odm.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae770f63c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae770c5ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae770c5a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae770c597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpypcq_odm                        0x00005572e0b332d6 <unavailable> + 4822

    5    libc.so.6                          0x00002ae77114f460 __libc_start_main +
    245

    6    tmpypcq_odm                        0x00005572e0b32e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x == y + z || y == x + z || z == x + y\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp6ujq7nb4/tmp6ujq7nb4.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e1458fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e14286b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6e14286988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6e142857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujq7nb4                        0x000055f18eac22d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b6e1477b460 __libc_start_main +
    245

    6    tmp6ujq7nb4                        0x000055f18eac1e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x == y + z || y == x + z || z == x + y\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp6ujq7nb4/tmp6ujq7nb4.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e1458fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e14286b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6e14286988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6e142857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujq7nb4                        0x000055f18eac22d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b6e1477b460 __libc_start_main +
    245

    6    tmp6ujq7nb4                        0x000055f18eac1e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x + y == z || x + z\
    \ == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpy6hmk443/tmpy6hmk443.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c1523c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c121ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c121a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c12197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy6hmk443                        0x00005593a165777d <unavailable> + 6013

    5    libc.so.6                          0x00002b13c170f460 __libc_start_main +
    245

    6    tmpy6hmk443                        0x00005593a1656f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x + y == z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpoe_isw40/tmpoe_isw40.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad28361fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad283316b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad283316988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad2833157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoe_isw40                        0x0000563c33aff77d <unavailable> + 6013

    5    libc.so.6                          0x00002ad28380b460 __libc_start_main +
    245

    6    tmpoe_isw40                        0x0000563c33afef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x + y == z || x + z\
    \ == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpy6hmk443/tmpy6hmk443.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c1523c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c121ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c121a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c12197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy6hmk443                        0x00005593a165777d <unavailable> + 6013

    5    libc.so.6                          0x00002b13c170f460 __libc_start_main +
    245

    6    tmpy6hmk443                        0x00005593a1656f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x + y == z || x + z\
    \ == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpy6hmk443/tmpy6hmk443.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c1523c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c121ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c121a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c12197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy6hmk443                        0x00005593a165777d <unavailable> + 6013

    5    libc.so.6                          0x00002b13c170f460 __libc_start_main +
    245

    6    tmpy6hmk443                        0x00005593a1656f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x + y == z || x + z == y || y + z == x) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp70tkbx34/tmp70tkbx34.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b578646dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5786164b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5786164988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b57861637b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp70tkbx34                        0x0000561cc0f8177d <unavailable> + 6013

    5    libc.so.6                          0x00002b5786659460 __libc_start_main +
    245

    6    tmp70tkbx34                        0x0000561cc0f80f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmppa984d50/tmppa984d50.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0d45e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0d42dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0d42dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0d42db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppa984d50                        0x0000557950e0a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ba0d47d1460 __libc_start_main +
    245

    6    tmppa984d50                        0x0000557950e09f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x + y ==\
    \ z || x + z == y || y + z == x {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_9iai85/tmpl_9iai85.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2865010c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2864d07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2864d07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2864d067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_9iai85                        0x000055c0d80a877d <unavailable> + 6013

    5    libc.so.6                          0x00002b28651fc460 __libc_start_main +
    245

    6    tmpl_9iai85                        0x000055c0d80a7f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmppa984d50/tmppa984d50.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0d45e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0d42dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0d42dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0d42db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppa984d50                        0x0000557950e0a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ba0d47d1460 __libc_start_main +
    245

    6    tmppa984d50                        0x0000557950e09f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x + y ==\
    \ z || x + z == y || y + z == x {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_9iai85/tmpl_9iai85.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2865010c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2864d07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2864d07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2864d067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_9iai85                        0x000055c0d80a877d <unavailable> + 6013

    5    libc.so.6                          0x00002b28651fc460 __libc_start_main +
    245

    6    tmpl_9iai85                        0x000055c0d80a7f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x + y == z || x + z\
    \ == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpy6hmk443/tmpy6hmk443.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c1523c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c121ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c121a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c12197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy6hmk443                        0x00005593a165777d <unavailable> + 6013

    5    libc.so.6                          0x00002b13c170f460 __libc_start_main +
    245

    6    tmpy6hmk443                        0x00005593a1656f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0) &&\
    \ (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && ((x + y == z) || (x + z == y) || (y + z == x))\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvnarbncl/tmpvnarbncl.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a6fd99c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a6fa90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a6fa90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a6fa8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvnarbncl                        0x00005620d6ecf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b1a6ff85460 __libc_start_main +
    245

    6    tmpvnarbncl                        0x00005620d6ecef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x + y ==\
    \ z || x + z == y || y + z == x {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_9iai85/tmpl_9iai85.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2865010c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2864d07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2864d07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2864d067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_9iai85                        0x000055c0d80a877d <unavailable> + 6013

    5    libc.so.6                          0x00002b28651fc460 __libc_start_main +
    245

    6    tmpl_9iai85                        0x000055c0d80a7f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        return x ==\
    \ y + z || y == x + z || z == x + y\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp6bodtp5_/tmp6bodtp5_.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9adaedc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9ad7e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9ad7e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9ad7e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6bodtp5_                        0x0000559d4c54977d <unavailable> + 6013

    5    libc.so.6                          0x00002ac9adcd9460 __libc_start_main +
    245

    6    tmp6bodtp5_                        0x0000559d4c548f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x == y + z || y == x + z || z == x + y\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp6ujq7nb4/tmp6ujq7nb4.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e1458fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e14286b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6e14286988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6e142857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujq7nb4                        0x000055f18eac22d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b6e1477b460 __libc_start_main +
    245

    6    tmp6ujq7nb4                        0x000055f18eac1e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        return x ==\
    \ y + z || y == x + z || z == x + y\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp6bodtp5_/tmp6bodtp5_.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9adaedc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9ad7e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9ad7e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9ad7e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6bodtp5_                        0x0000559d4c54977d <unavailable> + 6013

    5    libc.so.6                          0x00002ac9adcd9460 __libc_start_main +
    245

    6    tmp6bodtp5_                        0x0000559d4c548f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x + y ==\
    \ z || x + z == y || y + z == x {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_9iai85/tmpl_9iai85.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2865010c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2864d07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2864d07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2864d067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_9iai85                        0x000055c0d80a877d <unavailable> + 6013

    5    libc.so.6                          0x00002b28651fc460 __libc_start_main +
    245

    6    tmpl_9iai85                        0x000055c0d80a7f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x == y + z || y == x + z || z == x + y\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp6ujq7nb4/tmp6ujq7nb4.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e1458fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e14286b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6e14286988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6e142857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujq7nb4                        0x000055f18eac22d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b6e1477b460 __libc_start_main +
    245

    6    tmp6ujq7nb4                        0x000055f18eac1e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        return x ==\
    \ y + z || y == x + z || z == x + y\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp6bodtp5_/tmp6bodtp5_.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9adaedc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9ad7e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9ad7e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9ad7e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6bodtp5_                        0x0000559d4c54977d <unavailable> + 6013

    5    libc.so.6                          0x00002ac9adcd9460 __libc_start_main +
    245

    6    tmp6bodtp5_                        0x0000559d4c548f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x == y + z || y == x + z || z == x + y\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp6ujq7nb4/tmp6ujq7nb4.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e1458fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e14286b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6e14286988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6e142857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujq7nb4                        0x000055f18eac22d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b6e1477b460 __libc_start_main +
    245

    6    tmp6ujq7nb4                        0x000055f18eac1e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0) &&\
    \ (y.truncatingRemainder(dividingBy: 1) == 0) && (z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp4xhht_8g/tmp4xhht_8g.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adc1c73ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adc1c435b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adc1c435988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adc1c4347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4xhht_8g                        0x0000558b8dd9a77d <unavailable> + 6013

    5    libc.so.6                          0x00002adc1c92a460 __libc_start_main +
    245

    6    tmp4xhht_8g                        0x0000558b8dd99f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if (x.truncatingRemainder(dividingBy: 1) == 0) && (y.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (z.truncatingRemainder(dividingBy: 1) == 0) {\n        if (x + y\
    \ == z) || (x + z == y) || (y + z == x) {\n            return true\n        }\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpt5yxujs5/tmpt5yxujs5.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9f02848c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9f0253fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9f0253f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9f0253e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt5yxujs5                        0x00005611c07a777d <unavailable> + 6013

    5    libc.so.6                          0x00002b9f02a34460 __libc_start_main +
    245

    6    tmpt5yxujs5                        0x00005611c07a6f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x + y == z || x + z\
    \ == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpy6hmk443/tmpy6hmk443.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c1523c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c121ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c121a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c12197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy6hmk443                        0x00005593a165777d <unavailable> + 6013

    5    libc.so.6                          0x00002b13c170f460 __libc_start_main +
    245

    6    tmpy6hmk443                        0x00005593a1656f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmppa984d50/tmppa984d50.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0d45e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0d42dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0d42dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0d42db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppa984d50                        0x0000557950e0a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ba0d47d1460 __libc_start_main +
    245

    6    tmppa984d50                        0x0000557950e09f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmppa984d50/tmppa984d50.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0d45e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0d42dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0d42dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0d42db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppa984d50                        0x0000557950e0a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ba0d47d1460 __libc_start_main +
    245

    6    tmppa984d50                        0x0000557950e09f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x + y ==\
    \ z || x + z == y || y + z == x {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_9iai85/tmpl_9iai85.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2865010c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2864d07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2864d07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2864d067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_9iai85                        0x000055c0d80a877d <unavailable> + 6013

    5    libc.so.6                          0x00002b28651fc460 __libc_start_main +
    245

    6    tmpl_9iai85                        0x000055c0d80a7f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmppa984d50/tmppa984d50.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0d45e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0d42dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0d42dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0d42db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppa984d50                        0x0000557950e0a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ba0d47d1460 __libc_start_main +
    245

    6    tmppa984d50                        0x0000557950e09f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x + y == z || x + z\
    \ == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpy6hmk443/tmpy6hmk443.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c1523c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c121ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c121a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c12197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy6hmk443                        0x00005593a165777d <unavailable> + 6013

    5    libc.so.6                          0x00002b13c170f460 __libc_start_main +
    245

    6    tmpy6hmk443                        0x00005593a1656f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x + y ==\
    \ z || x + z == y || y + z == x {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_9iai85/tmpl_9iai85.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2865010c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2864d07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2864d07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2864d067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_9iai85                        0x000055c0d80a877d <unavailable> + 6013

    5    libc.so.6                          0x00002b28651fc460 __libc_start_main +
    245

    6    tmpl_9iai85                        0x000055c0d80a7f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x + y ==\
    \ z || x + z == y || y + z == x {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_9iai85/tmpl_9iai85.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2865010c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2864d07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2864d07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2864d067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_9iai85                        0x000055c0d80a877d <unavailable> + 6013

    5    libc.so.6                          0x00002b28651fc460 __libc_start_main +
    245

    6    tmpl_9iai85                        0x000055c0d80a7f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x + y ==\
    \ z || x + z == y || y + z == x {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_9iai85/tmpl_9iai85.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2865010c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2864d07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2864d07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2864d067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_9iai85                        0x000055c0d80a877d <unavailable> + 6013

    5    libc.so.6                          0x00002b28651fc460 __libc_start_main +
    245

    6    tmpl_9iai85                        0x000055c0d80a7f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x + y == z || x + z\
    \ == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpy6hmk443/tmpy6hmk443.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c1523c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c121ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c121a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c12197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy6hmk443                        0x00005593a165777d <unavailable> + 6013

    5    libc.so.6                          0x00002b13c170f460 __libc_start_main +
    245

    6    tmpy6hmk443                        0x00005593a1656f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x == y + z || y == x + z || z == x + y\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp6ujq7nb4/tmp6ujq7nb4.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e1458fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e14286b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6e14286988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6e142857b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6ujq7nb4                        0x000055f18eac22d6 <unavailable> + 4822

    5    libc.so.6                          0x00002b6e1477b460 __libc_start_main +
    245

    6    tmp6ujq7nb4                        0x000055f18eac1e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmppa984d50/tmppa984d50.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0d45e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0d42dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0d42dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0d42db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppa984d50                        0x0000557950e0a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ba0d47d1460 __libc_start_main +
    245

    6    tmppa984d50                        0x0000557950e09f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x + y ==\
    \ z || x + z == y || y + z == x {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpl_9iai85/tmpl_9iai85.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2865010c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2864d07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2864d07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2864d067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl_9iai85                        0x000055c0d80a877d <unavailable> + 6013

    5    libc.so.6                          0x00002b28651fc460 __libc_start_main +
    245

    6    tmpl_9iai85                        0x000055c0d80a7f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x + y == z || x + z\
    \ == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpy6hmk443/tmpy6hmk443.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c1523c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c121ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c121a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c12197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy6hmk443                        0x00005593a165777d <unavailable> + 6013

    5    libc.so.6                          0x00002b13c170f460 __libc_start_main +
    245

    6    tmpy6hmk443                        0x00005593a1656f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x + y == z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpoe_isw40/tmpoe_isw40.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad28361fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad283316b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad283316988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad2833157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoe_isw40                        0x0000563c33aff77d <unavailable> + 6013

    5    libc.so.6                          0x00002ad28380b460 __libc_start_main +
    245

    6    tmpoe_isw40                        0x0000563c33afef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp0qncspo1/tmp0qncspo1.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac25e5bec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac25e2b5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac25e2b5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac25e2b47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qncspo1                        0x000055c4a324a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ac25e7aa460 __libc_start_main +
    245

    6    tmp0qncspo1                        0x000055c4a3249f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x + y == z || x + z == y || y + z == x) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpoe_isw40/tmpoe_isw40.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad28361fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad283316b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad283316988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad2833157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoe_isw40                        0x0000563c33aff77d <unavailable> + 6013

    5    libc.so.6                          0x00002ad28380b460 __libc_start_main +
    245

    6    tmpoe_isw40                        0x0000563c33afef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    let xInt = Int(x)\n    let yInt = Int(y)\n    let zInt\
    \ = Int(z)\n    return xInt == yInt + zInt || yInt == xInt + zInt || zInt == xInt\
    \ + yInt\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp6otzsotv/tmp6otzsotv.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b873eb7cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b873e873b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b873e873988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b873e8727b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6otzsotv                        0x00005618453e472d <unavailable> + 5933

    5    libc.so.6                          0x00002b873ed68460 __libc_start_main +
    245

    6    tmp6otzsotv                        0x00005618453e3ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmppa984d50/tmppa984d50.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0d45e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0d42dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0d42dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0d42db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppa984d50                        0x0000557950e0a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ba0d47d1460 __libc_start_main +
    245

    6    tmppa984d50                        0x0000557950e09f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x + y == z || x + z\
    \ == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpy6hmk443/tmpy6hmk443.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c1523c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c121ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b13c121a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b13c12197b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy6hmk443                        0x00005593a165777d <unavailable> + 6013

    5    libc.so.6                          0x00002b13c170f460 __libc_start_main +
    245

    6    tmpy6hmk443                        0x00005593a1656f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        return x ==\
    \ y + z || y == x + z || z == x + y\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmp6bodtp5_/tmp6bodtp5_.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac9adaedc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9ad7e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9ad7e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9ad7e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6bodtp5_                        0x0000559d4c54977d <unavailable> + 6013

    5    libc.so.6                          0x00002ac9adcd9460 __libc_start_main +
    245

    6    tmp6bodtp5_                        0x0000559d4c548f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x + y == z || x + z == y || y + z == x)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmppa984d50/tmppa984d50.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba0d45e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba0d42dcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba0d42dc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba0d42db7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppa984d50                        0x0000557950e0a77d <unavailable> + 6013

    5    libc.so.6                          0x00002ba0d47d1460 __libc_start_main +
    245

    6    tmppa984d50                        0x0000557950e09f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 && (x == y + z || y ==\
    \ x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(any_int(x:\
    \ 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpcj1rszii/tmpcj1rszii.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac6db9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac6ab0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac6ab0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac6aaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcj1rszii                        0x000055dc9b01c77d <unavailable> + 6013

    5    libc.so.6                          0x00002b7ac6fa5460 __libc_start_main +
    245

    6    tmpcj1rszii                        0x000055dc9b01bf49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x.truncatingRemainder(dividingBy: 1) == 0 &&\
    \ y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0) && (x == y + z || y == x + z || z == x + y)\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x: 2.5,\
    \ y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x:\
    \ 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) == true)\nassert(any_int(x:\
    \ 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4, y: 6, z: 2) == true)\n\
    assert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x: 3, y: 4, z: 7) ==\
    \ true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaf7rof4r/tmpaf7rof4r.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afad0100c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afacfdf7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afacfdf7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afacfdf67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaf7rof4r                        0x000056494aa2477d <unavailable> + 6013

    5    libc.so.6                          0x00002afad02ec460 __libc_start_main +
    245

    6    tmpaf7rof4r                        0x000056494aa23f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if x.truncatingRemainder(dividingBy: 1) == 0 && y.truncatingRemainder(dividingBy:\
    \ 1) == 0 && z.truncatingRemainder(dividingBy: 1) == 0 {\n        if x == y +\
    \ z || y == x + z || z == x + y {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpeav2054h/tmpeav2054h.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002add87b81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002add87878b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002add87878988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002add878777b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeav2054h                        0x0000564753d5977d <unavailable> + 6013

    5    libc.so.6                          0x00002add87d6d460 __libc_start_main +
    245

    6    tmpeav2054h                        0x0000564753d58f49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    return (x == y + z || y == x + z || z == x + y) && (x.truncatingRemainder(dividingBy:\
    \ 1) == 0 && y.truncatingRemainder(dividingBy: 1) == 0 && z.truncatingRemainder(dividingBy:\
    \ 1) == 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(any_int(x: 2, y: 3,\
    \ z: 1) == true)\nassert(any_int(x: 2.5, y: 2, z: 3) == false)\nassert(any_int(x:\
    \ 1.5, y: 5, z: 3.5) == false)\nassert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x:\
    \ 4, y: 2, z: 2) == true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\n\
    assert(any_int(x: -4, y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) ==\
    \ true)\nassert(any_int(x: 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y:\
    \ 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpaufmgfzr/tmpaufmgfzr.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b45b177ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b45b1471b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b45b1471988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45b14707b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaufmgfzr                        0x0000563ae1ddf77d <unavailable> + 6013

    5    libc.so.6                          0x00002b45b1966460 __libc_start_main +
    245

    6    tmpaufmgfzr                        0x0000563ae1ddef49 <unavailable> + 3913

    '
  stdout: ''
  timestamp: 1659824527
- exit_code: -4
  program: "\n/// Create a function that takes 3 numbers.\n/// Returns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    /// Returns false in any other cases.\n/// Examples\n/// any_int(5, 2, 7) \u279E\
    \ True\n/// any_int(3, 2, 2) \u279E False\n/// any_int(3, -2, 1) \u279E True\n\
    /// any_int(3.6, -2.2, 2) \u279E False\nfunc any_int(x: Double, y: Double, z:\
    \ Double) -> Bool {\n    if (x == y + z) || (y == x + z) || (z == x + y) {\n \
    \       return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(any_int(x: 2, y: 3, z: 1) == true)\nassert(any_int(x:\
    \ 2.5, y: 2, z: 3) == false)\nassert(any_int(x: 1.5, y: 5, z: 3.5) == false)\n\
    assert(any_int(x: 2, y: 6, z: 2) == false)\nassert(any_int(x: 4, y: 2, z: 2) ==\
    \ true)\nassert(any_int(x: 2.2, y: 2.2, z: 2.2) == false)\nassert(any_int(x: -4,\
    \ y: 6, z: 2) == true)\nassert(any_int(x: 2, y: 1, z: 1) == true)\nassert(any_int(x:\
    \ 3, y: 4, z: 7) == true)\nassert(any_int(x: 3.0, y: 4, z: 7) == false)"
  status: Exception
  stderr: 'tmpvz8u6tmi/tmpvz8u6tmi.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef8590bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef85602b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef85602988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef856017b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvz8u6tmi                        0x0000563f8036c2d6 <unavailable> + 4822

    5    libc.so.6                          0x00002aef85af7460 __libc_start_main +
    245

    6    tmpvz8u6tmi                        0x0000563f8036be69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824527

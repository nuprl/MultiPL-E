name: HumanEval_26_remove_duplicates
language: ts
prompt: "//From an array of integers, remove all elements that occur more than once.\n\
  // Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
  \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers: number[]): number[]\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
completions: ["    return numbers.filter((value, index, array) => array.indexOf(value)\
    \ === index);\n}\n", "    let newArray: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (newArray.indexOf(numbers[i]) ===\
    \ -1) {\n            newArray.push(numbers[i]);\n        }\n    }\n    return\
    \ newArray;\n}\n", "    return numbers.filter((number, index) => numbers.indexOf(number)\
    \ === index);\n}\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n", "    let unique: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n", "    return numbers.filter((value, index, self) => self.indexOf(value)\
    \ === index);\n}\n", "    let result: number[] = [];\n    for (let i: number =\
    \ 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) === -1)\
    \ {\n            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n", "    let result: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "    return numbers.filter((value, index, array) => array.indexOf(value)\
    \ === index);\n}\n", "    let unique_numbers: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n",
  "    let unique: number[] = [];\n    numbers.forEach(function (value) {\n      \
    \  if (unique.indexOf(value) === -1) {\n            unique.push(value);\n    \
    \    }\n    });\n    return unique;\n}\n", "    let uniqueNumbers: number[] =\
    \ [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n", "    let unique_numbers: number[] = [];\n   \
    \ for (let i = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n", "    let uniqueNumbers: number[] = [];\n  \
    \  for (let i: number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n",
  "    let result: number[] = [];\n    let unique: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    let uniqueNumbers: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n", "    let unique: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (unique.indexOf(number) === -1) {\n            unique.push(number);\n\
    \        }\n    });\n    return unique;\n}\n", "    let uniqueNumbers: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n", "    let result: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "    let uniqueNumbers: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n", "    let uniqueNumbers: number[] = [];\n    for\
    \ (let i: number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n",
  "    let result: number[] = [];\n    numbers.forEach(function (value) {\n      \
    \  if (result.indexOf(value) === -1) {\n            result.push(value);\n    \
    \    }\n    });\n    return result;\n}\n", "    let unique_numbers: number[] =\
    \ [];\n    numbers.forEach(function (number) {\n        if (unique_numbers.indexOf(number)\
    \ === -1) {\n            unique_numbers.push(number);\n        }\n    });\n  \
    \  return unique_numbers;\n}\n", "    let result: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "    let result: number[] = [];\n    for (let i: number = 0;\
    \ i < numbers.length; i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n", "    let uniqueNumbers: number[] = [];\n    for (let i: number = 0; i <\
    \ numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i]) === -1)\
    \ {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n    return\
    \ uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n", " \
    \   let result: number[] = [];\n    numbers.forEach(function (value) {\n     \
    \   if (result.indexOf(value) === -1) {\n            result.push(value);\n   \
    \     }\n    });\n    return result;\n}\n", "    let unique_numbers: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n", "    let unique: number[] = [];\n    numbers.forEach(function\
    \ (value) {\n        if (unique.indexOf(value) === -1) {\n            unique.push(value);\n\
    \        }\n    });\n    return unique;\n}\n", "    let uniqueNumbers: number[]\
    \ = [];\n    numbers.forEach(function (number) {\n        if (uniqueNumbers.indexOf(number)\
    \ === -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n   \
    \ return uniqueNumbers;\n}\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n", "    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    let result: number[] = [];\n\
    \    for (let i: number = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n", "    let\
    \ uniqueNumbers: number[] = [];\n    numbers.forEach(function (number) {\n   \
    \     if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n", "    let uniqueNumbers:\
    \ number[] = [];\n    numbers.forEach(function (number) {\n        if (uniqueNumbers.indexOf(number)\
    \ === -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n   \
    \ return uniqueNumbers;\n}\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n", "    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    let uniqueNumbers: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n", "    let result: number[] = [];\n    let unique:\
    \ number[] = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n   \
    \     if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \            result.push(numbers[i]);\n        }\n    }\n    return result;\n\
    }\n", "    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n", "    let uniqueNumbers: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n", "    let result: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "    let uniqueNumbers: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n", "    return numbers.filter((value, index, self)\
    \ => self.indexOf(value) === index);\n}\n", "    return numbers.filter((value,\
    \ index, self) => {\n        return self.indexOf(value) === index;\n    });\n\
    }\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function (number)\
    \ {\n        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n", "    let uniqueNumbers:\
    \ number[] = [];\n    numbers.forEach(function (number) {\n        if (uniqueNumbers.indexOf(number)\
    \ === -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n   \
    \ return uniqueNumbers;\n}\n", "    let unique: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n", "    let uniqueNumbers: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n",
  "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n", "    return numbers.filter((value,\
    \ index, self) => self.indexOf(value) === index);\n}\n", "    let uniqueNumbers:\
    \ number[] = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n   \
    \     if (uniqueNumbers.indexOf(numbers[i]) === -1) {\n            uniqueNumbers.push(numbers[i]);\n\
    \        }\n    }\n    return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1,\
    \ 2, 3, 2, 4]));\n", "    let uniqueNumbers: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n", "    let unique_numbers: number[] = [];\n   \
    \ for (let i: number = 0; i < numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1) {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n\
    \    return unique_numbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n",
  "    let result: number[] = [];\n    let unique: number[] = [];\n    for (let i:\
    \ number = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    let result: number[] = [];\n\
    \    for (let i: number = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n", "    let\
    \ unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n", "    let unique: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n            unique.push(numbers[i]);\n\
    \        }\n    }\n    return unique;\n}\n", "    let result: number[] = [];\n\
    \    numbers.forEach(function (value) {\n        if (result.indexOf(value) ===\
    \ -1) {\n            result.push(value);\n        }\n    });\n    return result;\n\
    }\n", "    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) == -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    let uniqueNumbers: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n",
  "    let unique: number[] = [];\n    numbers.forEach(function (number) {\n     \
    \   if (unique.indexOf(number) === -1) {\n            unique.push(number);\n \
    \       }\n    });\n    return unique;\n}\n", "    let uniqueNumbers: number[]\
    \ = [];\n    numbers.forEach(function (number) {\n        if (uniqueNumbers.indexOf(number)\
    \ === -1) {\n            uniqueNumbers.push(number);\n        }\n    });\n   \
    \ return uniqueNumbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n",
  "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function (number) {\n\
    \        if (uniqueNumbers.indexOf(number) === -1) {\n            uniqueNumbers.push(number);\n\
    \        }\n    });\n    return uniqueNumbers;\n}\n", "    let result: number[]\
    \ = [];\n    for (let i: number = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "    let uniqueNumbers: number[] = [];\n    for (let i: number\
    \ = 0; i < numbers.length; i++) {\n        if (uniqueNumbers.indexOf(numbers[i])\
    \ === -1) {\n            uniqueNumbers.push(numbers[i]);\n        }\n    }\n \
    \   return uniqueNumbers;\n}\n", "    let result: number[] = [];\n    for (let\
    \ i: number = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "    let uniqueNumbers: number[] = [];\n    numbers.forEach(function\
    \ (number) {\n        if (uniqueNumbers.indexOf(number) === -1) {\n          \
    \  uniqueNumbers.push(number);\n        }\n    });\n    return uniqueNumbers;\n\
    }\n", "    return numbers.filter((number, index) => numbers.indexOf(number) ===\
    \ index);\n}\n", "    let unique: number[] = [];\n    for (let i: number = 0;\
    \ i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i]) === -1) {\n\
    \            unique.push(numbers[i]);\n        }\n    }\n    return unique;\n\
    }\n", "    let unique_numbers: number[] = [];\n    for (let i: number = 0; i <\
    \ numbers.length; i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1)\
    \ {\n            unique_numbers.push(numbers[i]);\n        }\n    }\n    return\
    \ unique_numbers;\n}\n\nconsole.log(remove_duplicates([1, 2, 3, 2, 4]));\n", " \
    \   let unique_numbers: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (unique_numbers.indexOf(numbers[i]) === -1) {\n         \
    \   unique_numbers.push(numbers[i]);\n        }\n    }\n    return unique_numbers;\n\
    }\n", "    let result: number[] = [];\n    for (let i: number = 0; i < numbers.length;\
    \ i++) {\n        if (result.indexOf(numbers[i]) === -1) {\n            result.push(numbers[i]);\n\
    \        }\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

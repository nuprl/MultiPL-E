name: HumanEval_19_sort_numbers
language: ts
prompt: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
  \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest to\
  \ largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\nfunction\
  \ sort_numbers(numbers: string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\
  \");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
  three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five zero\
  \ four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
  six five four three two one zero\"),\"zero one two three four five six\");\n}\n\n\
  test();"
completions: ["  const nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a,\
    \ b) => {\n    return num_to_int(a) - num_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n", "    const nums: string[] = numbers.split(' ');\n    const nums_sorted:\
    \ string[] = nums.sort((a, b) => {\n        const num_a: number = numeral_to_number(a);\n\
    \        const num_b: number = numeral_to_number(b);\n        return num_a - num_b;\n\
    \    });\n    return nums_sorted.join(' ');\n}\n", "  const numeral_map = {\n\
    \    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five:\
    \ 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums\
    \ = numbers.split(\" \");\n  const nums_int = nums.map((num) => numeral_map[num]);\n\
    \  const sorted_nums = nums_int.sort((a, b) => a - b);\n  const sorted_nums_str\
    \ = sorted_nums.map((num) => {\n    for (const [key, value] of Object.entries(numeral_map))\
    \ {\n      if (value === num) {\n        return key;\n      }\n    }\n  });\n\
    \  return sorted_nums_str.join(\" \");\n}\n", "  const nums = numbers.split(\"\
    \ \");\n  const numsSorted = nums.sort((a, b) => {\n    return numsToNums[a] -\
    \ numsToNums[b];\n  });\n  return numsSorted.join(\" \");\n}\n", "  const nums\
    \ = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n    const\
    \ num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n   \
    \ return num_a - num_b;\n  });\n  return nums_sorted.join(\" \");\n}\n", "  const\
    \ nums = numbers.split(\" \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numsMap[a]\
    \ - numsMap[b]);\n  return sorted.join(\" \");\n}\n", "  const nums = numbers.split(\"\
    \ \");\n  const nums_int = nums.map(num => num_to_int(num));\n  const sorted_nums\
    \ = nums_int.sort((a, b) => a - b);\n  const sorted_nums_str = sorted_nums.map(num\
    \ => int_to_num(num));\n  return sorted_nums_str.join(\" \");\n}\n", "  const\
    \ numeralMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n\
    \  };\n  const nums = numbers.split(\" \");\n  const numsSorted = nums.sort((a,\
    \ b) => numeralMap[a] - numeralMap[b]);\n  return numsSorted.join(\" \");\n}\n",
  "  const nums = numbers.split(\" \");\n  const numMap = {\n    zero: 0,\n    one:\
    \ 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n  \
    \  seven: 7,\n    eight: 8,\n    nine: 9\n  };\n  const sortedNums = nums.sort((a,\
    \ b) => numMap[a] - numMap[b]);\n  return sortedNums.join(\" \");\n}\n", "   \
    \ const numeral_map = {\n        zero: 0,\n        one: 1,\n        two: 2,\n\
    \        three: 3,\n        four: 4,\n        five: 5,\n        six: 6,\n    \
    \    seven: 7,\n        eight: 8,\n        nine: 9\n    };\n    const nums = numbers.split(\"\
    \ \").map(num => numeral_map[num]);\n    const sorted_nums = nums.sort((a, b)\
    \ => a - b);\n    const sorted_numbers = sorted_nums.map(num => Object.keys(numeral_map).find(key\
    \ => numeral_map[key] === num));\n    return sorted_numbers.join(\" \");\n}\n",
  "    let nums: number[] = numbers.split(\" \").map(n => number_to_numeral(n));\n\
    \    nums.sort((a, b) => a - b);\n    return nums.map(n => numeral_to_number(n)).join(\"\
    \ \");\n}\n", "    const nums: number[] = numbers.split(' ').map(num => {\n  \
    \      switch (num) {\n            case 'zero':\n                return 0;\n \
    \           case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \            default:\n                return -1;\n        }\n    });\n    nums.sort((a,\
    \ b) => a - b);\n    return nums.map(num => {\n        switch (num) {\n      \
    \      case 0:\n                return 'zero';\n            case 1:\n        \
    \        return 'one';\n            case 2:\n                return 'two';\n \
    \           case 3:\n                return 'three';\n            case 4:\n  \
    \              return 'four';\n            case 5:\n                return 'five';\n\
    \            case 6:\n                return 'six';\n            case 7:\n   \
    \             return 'seven';\n            case 8:\n                return 'eight';\n\
    \            case 9:\n                return 'nine';\n            default:\n \
    \               return 'invalid';\n        }\n    }).join(' ');\n}\n", "  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return nums_to_numbers[a] - nums_to_numbers[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n", "  const nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a,\
    \ b) => {\n    return nums_to_numbers[a] - nums_to_numbers[b];\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n", "  const nums = numbers.split(\" \");\n  const\
    \ numsMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four:\
    \ 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9\n \
    \ };\n  const numsSorted = nums.sort((a, b) => numsMap[a] - numsMap[b]);\n  return\
    \ numsSorted.join(\" \");\n}\n", "  const numeralMap = {\n    zero: 0,\n    one:\
    \ 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n  \
    \  seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums = numbers.split(\"\
    \ \");\n  const numsSorted = nums.sort((a, b) => {\n    return numeralMap[a] -\
    \ numeralMap[b];\n  });\n  return numsSorted.join(\" \");\n}\n", "  const numeralToNumber\
    \ = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n \
    \   five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n\
    \  const numberToNumeral = {\n    0: \"zero\",\n    1: \"one\",\n    2: \"two\"\
    ,\n    3: \"three\",\n    4: \"four\",\n    5: \"five\",\n    6: \"six\",\n  \
    \  7: \"seven\",\n    8: \"eight\",\n    9: \"nine\",\n  };\n  const numeralArray\
    \ = numbers.split(\" \");\n  const numberArray = numeralArray.map((numeral) =>\
    \ numeralToNumber[numeral]);\n  const sortedNumberArray = numberArray.sort((a,\
    \ b) => a - b);\n  const sortedNumeralArray = sortedNumberArray.map((number) =>\
    \ numberToNumeral[number]);\n  return sortedNumeralArray.join(\" \");\n}\n", " \
    \ const nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) =>\
    \ {\n    const nums_map = {\n      zero: 0,\n      one: 1,\n      two: 2,\n  \
    \    three: 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven: 7,\n\
    \      eight: 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n", "    let nums = numbers.split(\"\
    \ \");\n    let nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n    \
    \    \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\"\
    : 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n    \
    \    \"nine\": 9\n    };\n    let nums_int = nums.map(num => nums_map[num]);\n\
    \    nums_int.sort((a, b) => a - b);\n    let nums_str = nums_int.map(num => {\n\
    \        for (let key in nums_map) {\n            if (nums_map[key] === num) {\n\
    \                return key;\n            }\n        }\n    });\n    return nums_str.join(\"\
    \ \");\n}\n", "  const nums = numbers.split(\" \");\n  const nums_map = {\n  \
    \  zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five:\
    \ 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted\
    \ = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\"\
    \ \");\n}\n", "    const nums = numbers.split(' ');\n    const nums_map = {\n\
    \        zero: 0,\n        one: 1,\n        two: 2,\n        three: 3,\n     \
    \   four: 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n        eight:\
    \ 8,\n        nine: 9\n    };\n    const nums_sorted = nums.sort((a, b) => {\n\
    \        return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n", "  const numeralMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n\
    \    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight:\
    \ 8,\n    nine: 9,\n  };\n  const nums = numbers.split(\" \");\n  const numsAsNumbers\
    \ = nums.map((num) => numeralMap[num]);\n  const sorted = numsAsNumbers.sort((a,\
    \ b) => a - b);\n  const sortedAsNumerals = sorted.map((num) => {\n    for (const\
    \ [key, value] of Object.entries(numeralMap)) {\n      if (value === num) {\n\
    \        return key;\n      }\n    }\n  });\n  return sortedAsNumerals.join(\"\
    \ \");\n}\n", "  const nums = numbers.split(\" \");\n  const numsMap = {\n   \
    \ zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n\
    \    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9\n  };\n  const numsSorted\
    \ = nums.sort((a, b) => numsMap[a] - numsMap[b]);\n  return numsSorted.join(\"\
    \ \");\n}\n", "  const nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a,\
    \ b) => {\n    return number_to_numeral(a) - number_to_numeral(b);\n  });\n  return\
    \ nums_sorted.join(\" \");\n}\n", "  const nums = numbers.split(\" \");\n  const\
    \ nums_sorted = nums.sort((a, b) => {\n    const num_a = numeral_to_number(a);\n\
    \    const num_b = numeral_to_number(b);\n    return num_a - num_b;\n  });\n \
    \ return nums_sorted.join(\" \");\n}\n", "  const nums = numbers.split(\" \");\n\
    \  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n      zero:\
    \ 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n      five:\
    \ 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine: 9\n    };\n\
    \    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\" \"\
    );\n}\n", "  const number_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n  \
    \  three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight:\
    \ 8,\n    nine: 9,\n  };\n  const num_array = numbers.split(\" \");\n  const num_array_int\
    \ = num_array.map((num) => number_map[num]);\n  const sorted_array = num_array_int.sort((a,\
    \ b) => a - b);\n  const sorted_string = sorted_array.map((num) => {\n    for\
    \ (const key in number_map) {\n      if (number_map[key] === num) {\n        return\
    \ key;\n      }\n    }\n  });\n  return sorted_string.join(\" \");\n}\n", "  const\
    \ nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a, b) => {\n\
    \    return nums_to_int(a) - nums_to_int(b);\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n", "  const nums = numbers.split(\" \");\n  const nums_sorted = nums.sort((a,\
    \ b) => {\n    const num_a = numeral_to_number(a);\n    const num_b = numeral_to_number(b);\n\
    \    return num_a - num_b;\n  });\n  return nums_sorted.join(\" \");\n}\n", " \
    \ const nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n   \
    \ one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n\
    \    seven: 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a,\
    \ b) => nums_map[a] - nums_map[b]);\n  return sorted.join(\" \");\n}\n", "   \
    \ const nums = numbers.split(' ').map(num => {\n        switch (num) {\n     \
    \       case 'zero':\n                return 0;\n            case 'one':\n   \
    \             return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    });\n\
    \    nums.sort((a, b) => a - b);\n    return nums.map(num => {\n        switch\
    \ (num) {\n            case 0:\n                return 'zero';\n            case\
    \ 1:\n                return 'one';\n            case 2:\n                return\
    \ 'two';\n            case 3:\n                return 'three';\n            case\
    \ 4:\n                return 'four';\n            case 5:\n                return\
    \ 'five';\n            case 6:\n                return 'six';\n            case\
    \ 7:\n                return 'seven';\n            case 8:\n                return\
    \ 'eight';\n            case 9:\n                return 'nine';\n        }\n \
    \   }).join(' ');\n}\n", "  const nums = numbers.split(\" \");\n  const nums_sorted\
    \ = nums.sort((a, b) => num_to_numeral(a) - num_to_numeral(b));\n  return nums_sorted.join(\"\
    \ \");\n}\n", "  const nums = numbers.split(\" \");\n  const numsSorted = nums.sort((a,\
    \ b) => {\n    return numToNumeral(a) - numToNumeral(b);\n  });\n  return numsSorted.join(\"\
    \ \");\n}\n", "    let nums = numbers.split(\" \");\n    let nums_sorted = nums.sort((a,\
    \ b) => {\n        return nums_to_numbers[a] - nums_to_numbers[b];\n    });\n\
    \    return nums_sorted.join(\" \");\n}\n", "  const nums = numbers.split(\" \"\
    );\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n\
    \    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine:\
    \ 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n", "    let nums: string[] = numbers.split(\"\
    \ \");\n    let nums_int: number[] = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        switch (nums[i]) {\n            case \"zero\":\n           \
    \     nums_int.push(0);\n                break;\n            case \"one\":\n \
    \               nums_int.push(1);\n                break;\n            case \"\
    two\":\n                nums_int.push(2);\n                break;\n          \
    \  case \"three\":\n                nums_int.push(3);\n                break;\n\
    \            case \"four\":\n                nums_int.push(4);\n             \
    \   break;\n            case \"five\":\n                nums_int.push(5);\n  \
    \              break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function (a, b) {\
    \ return a - b });\n    for (let i = 0; i < nums_int.length; i++) {\n        switch\
    \ (nums_int[i]) {\n            case 0:\n                nums[i] = \"zero\";\n\
    \                break;\n            case 1:\n                nums[i] = \"one\"\
    ;\n                break;\n            case 2:\n                nums[i] = \"two\"\
    ;\n                break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n                break;\n            case 9:\n", "  const numeralMap = {\n \
    \   zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five:\
    \ 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums\
    \ = numbers.split(\" \");\n  const numsArr = nums.map((num) => numeralMap[num]);\n\
    \  const sortedNums = numsArr.sort((a, b) => a - b);\n  const sortedNumsStr =\
    \ sortedNums.map((num) => Object.keys(numeralMap).find((key) => numeralMap[key]\
    \ === num));\n  return sortedNumsStr.join(\" \");\n}\n", "  const numeral_map\
    \ = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n \
    \   five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n\
    \  const nums = numbers.split(\" \");\n  const nums_int = nums.map((num) => numeral_map[num]);\n\
    \  const sorted_nums = nums_int.sort((a, b) => a - b);\n  const sorted_nums_str\
    \ = sorted_nums.map((num) => {\n    for (const [key, value] of Object.entries(numeral_map))\
    \ {\n      if (value === num) {\n        return key;\n      }\n    }\n  });\n\
    \  return sorted_nums_str.join(\" \");\n}\n", "  let nums = numbers.split(\" \"\
    );\n  let nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n\
    \    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine:\
    \ 9\n  };\n  let nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n", "  const nums = numbers.split(\" \"\
    );\n  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n    \
    \  zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n \
    \     five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine: 9\n\
    \    };\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n", "  const nums = numbers.split(\" \");\n  const numMap = {\n    zero:\
    \ 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n  \
    \  six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted =\
    \ nums.sort((a, b) => numMap[a] - numMap[b]);\n  return sorted.join(\" \");\n\
    }\n", "  const nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n\
    \    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six:\
    \ 6,\n    seven: 7,\n    eight: 8,\n    nine: 9\n  };\n  const sorted = nums.sort((a,\
    \ b) => nums_map[a] - nums_map[b]);\n  return sorted.join(\" \");\n}\n", "   \
    \ const nums = numbers.split(' ');\n    const nums_map = {\n        'zero': 0,\n\
    \        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    const sorted = nums.sort((a, b) => nums_map[a]\
    \ - nums_map[b]);\n    return sorted.join(' ');\n}\n", "    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        return num_to_int(a)\
    \ - num_to_int(b);\n    });\n    return nums_sorted.join(' ');\n}\n", "  const\
    \ nums = numbers.split(\" \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n\
    \    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven:\
    \ 7,\n    eight: 8,\n    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b)\
    \ => nums_map[a] - nums_map[b]);\n  return nums_sorted.join(\" \");\n}\n", " \
    \   const nums = numbers.split(' ');\n    const nums_map = {\n        'zero':\
    \ 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four':\
    \ 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    const nums_sorted = nums.sort((a, b) => nums_map[a]\
    \ - nums_map[b]);\n    return nums_sorted.join(' ');\n}\n", "  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted_nums = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return sorted_nums.join(\" \");\n}\n", "  const nums = numbers.split(\" \"\
    );\n  const nums_sorted = nums.sort((a, b) => {\n    const num_a = numeral_to_number(a);\n\
    \    const num_b = numeral_to_number(b);\n    return num_a - num_b;\n  });\n \
    \ return nums_sorted.join(\" \");\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

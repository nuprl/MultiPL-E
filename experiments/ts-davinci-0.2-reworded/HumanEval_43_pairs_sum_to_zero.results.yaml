language: ts
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // Your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmptui0bhol.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmptui0bhol.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let result:\
    \ boolean = false;\n    for (let i = 0; i < l.length; i++) {\n        for (let\
    \ j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n    \
    \            result = true;\n            }\n        }\n    }\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (s.includes(-l[i]))\
    \ {\n            return true;\n        }\n        s.push(l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw_kkurt0.ts(17,15): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let s = new Set<number>();\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (s.has(l[i])) {\n      return\
    \ true;\n    }\n    s.add(-l[i]);\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8rqasn43.ts(15,15): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // YOUR CODE HERE\n\
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwyyid_fh.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwyyid_fh.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // your code here\n\
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmppo1k8sa6.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppo1k8sa6.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  for (let i = 0;\
    \ i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if\
    \ (l[i] + l[j] === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let i: number\
    \ = 0;\n  let j: number = 0;\n  let k: number = 0;\n  let m: number = 0;\n  let\
    \ n: number = 0;\n  let o: number = 0;\n  let p: number = 0;\n  let q: number\
    \ = 0;\n  let r: number = 0;\n  let s: number = 0;\n  let t: number = 0;\n  let\
    \ u: number = 0;\n  let v: number = 0;\n  let w: number = 0;\n  let x: number\
    \ = 0;\n  let y: number = 0;\n  let z: number = 0;\n  let aa: number = 0;\n  let\
    \ ab: number = 0;\n  let ac: number = 0;\n  let ad: number = 0;\n  let ae: number\
    \ = 0;\n  let af: number = 0;\n  let ag: number = 0;\n  let ah: number = 0;\n\
    \  let ai: number = 0;\n  let aj: number = 0;\n  let ak: number = 0;\n  let al:\
    \ number = 0;\n  let am: number = 0;\n  let an: number = 0;\n  let ao: number\
    \ = 0;\n  let ap: number = 0;\n  let aq: number = 0;\n  let ar: number = 0;\n\
    \  let as: number = 0;\n  let at: number = 0;\n  let au: number = 0;\n  let av:\
    \ number = 0;\n  let aw: number = 0;\n  let ax: number = 0;\n  let ay: number\
    \ = 0;\n  let az: number = 0;\n  let ba: number = 0;\n  let bb: number = 0;\n\
    \  let bc: number = 0;\n  let bd: number = 0;\n  let be: number = 0;\n  let bf:\
    \ number = 0;\n  let bg: number = 0;\n  let bh: number = 0;\n  let bi: number\
    \ = 0;\n  let bj: number = 0;\n  let bk: number = 0;\n  let bl: number = 0;\n\
    \  let b\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj_hntp78.ts(88,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    for (let i =\
    \ 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n\
    \            if (l[i] + l[j] === 0) {\n                return true;\n        \
    \    }\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i: number;\n\
    \    let j: number;\n    let k: number;\n    let l_length: number = l.length;\n\
    \    for (i = 0; i < l_length; i++) {\n        for (j = i + 1; j < l_length; j++)\
    \ {\n            if (l[i] + l[j] === 0) {\n                return true;\n    \
    \        }\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // TODO: implement\
    \ this function\n  return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp02n9ppgv.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp02n9ppgv.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (s.includes(-l[i]))\
    \ {\n            return true;\n        }\n        s.push(l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw_kkurt0.ts(17,15): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i = 0;\n\
    \    let j = 0;\n    for (i = 0; i < l.length; i++) {\n        for (j = i + 1;\
    \ j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n               \
    \ return true;\n            }\n        }\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3,\
    \ 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set(l);\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(-l[i]))\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3,\
    \ 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8b2q3sq7.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let dict: {\
    \ [key: number]: number } = {};\n    for (let i = 0; i < l.length; i++) {\n  \
    \      if (dict[-l[i]]) {\n            return true;\n        }\n        dict[l[i]]\
    \ = 1;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd8dyzodv.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd8dyzodv.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (s.indexOf(-l[i])\
    \ != -1) {\n            return true;\n        }\n        s.push(l[i]);\n    }\n\
    \    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    for (let i =\
    \ 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n\
    \            if (l[i] + l[j] === 0) {\n                return true;\n        \
    \    }\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (s.indexOf(-l[i])\
    \ != -1) {\n            return true;\n        }\n        s.push(l[i]);\n    }\n\
    \    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i: number\
    \ = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let sum: number =\
    \ 0;\n    let len: number = l.length;\n    for (i = 0; i < len; i++) {\n     \
    \   for (j = i + 1; j < len; j++) {\n            sum = l[i] + l[j];\n        \
    \    if (sum === 0) {\n                return true;\n            }\n        }\n\
    \    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i = 0;\n\
    \    let j = 0;\n    let sum = 0;\n    while (i < l.length) {\n        j = i +\
    \ 1;\n        while (j < l.length) {\n            sum = l[i] + l[j];\n       \
    \     if (sum === 0) {\n                return true;\n            }\n        \
    \    j += 1;\n        }\n        i += 1;\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3,\
    \ 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let i = 0;\n \
    \ let j = l.length - 1;\n  while (i < j) {\n    if (l[i] + l[j] === 0) {\n   \
    \   return true;\n    } else if (l[i] + l[j] > 0) {\n      j--;\n    } else {\n\
    \      i++;\n    }\n  }\n  return false;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpoqifrp5w.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpoqifrp5w.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i: number\
    \ = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let l_length: number\
    \ = l.length;\n    while (i < l_length) {\n        j = i + 1;\n        while (j\
    \ < l_length) {\n            if (l[i] + l[j] === 0) {\n                return\
    \ true;\n            }\n            j = j + 1;\n        }\n        i = i + 1;\n\
    \    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // your code here\n\
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmppo1k8sa6.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppo1k8sa6.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i: number\
    \ = 0;\n    let j: number = 0;\n    while (i < l.length) {\n        j = i + 1;\n\
    \        while (j < l.length) {\n            if (l[i] + l[j] === 0) {\n      \
    \          return true;\n            }\n            j = j + 1;\n        }\n  \
    \      i = i + 1;\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd8dyzodv.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (s.has(l[i])) {\n\
    \            return true;\n        }\n        s.add(-l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_fp40h82.ts(15,17): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    for (let i =\
    \ 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n\
    \            if (l[i] + l[j] === 0) {\n                return true;\n        \
    \    }\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let pairs: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1;\
    \ j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n               \
    \ pairs.push(l[i]);\n                pairs.push(l[j]);\n            }\n      \
    \  }\n    }\n    if (pairs.length === 0) {\n        return false;\n    } else\
    \ {\n        return true;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i = 0;\n\
    \    let j = 0;\n    for (i = 0; i < l.length; i++) {\n        for (j = i + 1;\
    \ j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n               \
    \ return true;\n            }\n        }\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3,\
    \ 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  for (let i = 0;\
    \ i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if\
    \ (l[i] + l[j] === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd8dyzodv.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let set = new\
    \ Set<number>();\n  for (let i = 0; i < l.length; i++) {\n    if (set.has(l[i]))\
    \ {\n      return true;\n    }\n    set.add(-l[i]);\n  }\n  return false;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzgoti6zd.ts(15,17): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd8dyzodv.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1;\
    \ j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n               \
    \ return true;\n            }\n        }\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3,\
    \ 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // your code here\n\
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmppo1k8sa6.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppo1k8sa6.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i: number\
    \ = 0;\n    let j: number = 0;\n    for (i = 0; i < l.length; i++) {\n       \
    \ for (j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set: Set<number>\
    \ = new Set();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0swoh96h.ts(15,14): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp0swoh96h.ts(15,32): error TS2552: Cannot find name ''Set''.
    Did you mean ''set''?

    '
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: Set<number>\
    \ = new Set();\n    for (let i = 0; i < l.length; i++) {\n        if (s.has(l[i]))\
    \ {\n            return true;\n        }\n        s.add(-l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5b9idnqn.ts(15,12): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp5b9idnqn.ts(15,30): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // YOUR CODE HERE\n\
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwyyid_fh.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwyyid_fh.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: Set<number>\
    \ = new Set();\n    for (let i = 0; i < l.length; i++) {\n        if (seen.has(-l[i]))\
    \ {\n            return true;\n        }\n        seen.add(l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmposrtnraf.ts(15,15): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmposrtnraf.ts(15,33): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd8dyzodv.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        let current = l[i];\n\
    \        if (seen.includes(-current)) {\n            return true;\n        }\n\
    \        seen.push(current);\n    }\n    return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpf25l2pyg.ts(18,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set: Set<number>\
    \ = new Set();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0swoh96h.ts(15,14): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp0swoh96h.ts(15,32): error TS2552: Cannot find name ''Set''.
    Did you mean ''set''?

    '
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9opsuqr2.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9opsuqr2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: Set<number>\
    \ = new Set();\n    for (let i = 0; i < l.length; i++) {\n        if (s.has(l[i]))\
    \ {\n            return true;\n        }\n        s.add(-l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5b9idnqn.ts(15,12): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp5b9idnqn.ts(15,30): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    // throw new Error(\"Method not implemented.\");\n    let i: number\
    \ = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let sum: number =\
    \ 0;\n    let result: boolean = false;\n    for (i = 0; i < l.length; i++) {\n\
    \        for (j = i + 1; j < l.length; j++) {\n            sum = l[i] + l[j];\n\
    \            if (sum === 0) {\n                result = true;\n              \
    \  break;\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5,\
    \ 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (s.includes(-l[i]))\
    \ {\n            return true;\n        }\n        s.push(l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw_kkurt0.ts(17,15): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let result = false;\n\
    \  let i = 0;\n  while (i < l.length) {\n    let j = i + 1;\n    while (j < l.length)\
    \ {\n      if (l[i] + l[j] === 0) {\n        result = true;\n      }\n      j\
    \ = j + 1;\n    }\n    i = i + 1;\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1;\
    \ j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n               \
    \ return true;\n            }\n        }\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3,\
    \ 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let result = false;\n\
    \  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        result = true;\n      }\n  \
    \  }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    if (l.length\
    \ < 2) {\n        return false;\n    }\n    let s = new Set();\n    for (let i\
    \ = 0; i < l.length; i++) {\n        if (s.has(l[i])) {\n            return true;\n\
    \        }\n        s.add(-l[i]);\n    }\n    return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5,\
    \ 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpawecnxjv.ts(18,17): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let s = new Set();\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (s.has(l[i])) {\n      return\
    \ true;\n    }\n    s.add(-l[i]);\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0u16216g.ts(15,15): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // your code here\n\
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmppo1k8sa6.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppo1k8sa6.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let s = new Set<number>();\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (s.has(l[i])) {\n      return\
    \ true;\n    }\n    s.add(-l[i]);\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8rqasn43.ts(15,15): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (s.includes(-l[i]))\
    \ {\n            return true;\n        }\n        s.push(l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw_kkurt0.ts(17,15): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i = 0;\n\
    \    let j = l.length - 1;\n    while (i < j) {\n        if (l[i] + l[j] === 0)\
    \ {\n            return true;\n        } else if (l[i] + l[j] > 0) {\n       \
    \     j--;\n        } else {\n            i++;\n        }\n    }\n    return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwp0iwgal.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwp0iwgal.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set<number>();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv3yeb_g8.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd8dyzodv.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let s = new Set();\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (s.has(l[i])) {\n      return\
    \ true;\n    }\n    s.add(-l[i]);\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0u16216g.ts(15,15): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  if (l.length <\
    \ 2) {\n    return false;\n  }\n  let seen: number[] = [];\n  for (let i = 0;\
    \ i < l.length; i++) {\n    if (seen.includes(-l[i])) {\n      return true;\n\
    \    }\n    seen.push(l[i]);\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3kuni1i5.ts(20,14): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let set = new\
    \ Set();\n  for (let i = 0; i < l.length; i++) {\n    if (set.has(l[i])) {\n \
    \     return true;\n    }\n    set.add(-l[i]);\n  }\n  return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3,\
    \ 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1t6mvoon.ts(15,17): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let i = 0;\n \
    \ let j = 0;\n  let k = 0;\n  let sum = 0;\n  for (i = 0; i < l.length; i++) {\n\
    \    for (j = i + 1; j < l.length; j++) {\n      sum = l[i] + l[j];\n      if\
    \ (sum === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  const seen: number[]\
    \ = [];\n  for (const n of l) {\n    if (seen.includes(-n)) {\n      return true;\n\
    \    }\n    seen.push(n);\n  }\n  return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp08v_2ovr.ts(17,14): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // YOUR CODE HERE\n\
    \  // You may not use any built-in functions.\n  // You may not use any built-in\
    \ functions.\n  // You may not use any built-in functions.\n  // You may not use\
    \ any built-in functions.\n  // You may not use any built-in functions.\n  //\
    \ You may not use any built-in functions.\n  // You may not use any built-in functions.\n\
    \  // You may not use any built-in functions.\n  // You may not use any built-in\
    \ functions.\n  // You may not use any built-in functions.\n  // You may not use\
    \ any built-in functions.\n  // You may not use any built-in functions.\n  //\
    \ You may not use any built-in functions.\n  // You may not use any built-in functions.\n\
    \  // You may not use any built-in functions.\n  // You may not use any built-in\
    \ functions.\n  // You may not use any built-in functions.\n  // You may not use\
    \ any built-in functions.\n  // You may not use any built-in functions.\n  //\
    \ You may not use any built-in functions.\n  // You may not use any built-in functions.\n\
    \  // You may not use any built-in functions.\n  // You may not use any built-in\
    \ functions.\n  // You may not use any built-in functions.\n  // You may not use\
    \ any built-in functions.\n  // You may not use any built-in functions.\n  //\
    \ You may not use any built-in functions.\n  // You may not use any built-in functions.\n\
    \  // You may not use any built-in functions.\n  // You may not use any built-in\
    \ functions.\n  // You may not use any built-in functions.\n  // You may not use\
    \ any built-in functions.\n  // You may not use any built-in functions.\n  //\
    \ You may not use any built-in functions.\n  // You may not use any built-in functions.\n\
    \  // You may not use any built-in functions.\n  // You may not use any built-in\
    \ functions.\n  // You may not use any built-in functions.\n  // You may not use\
    \ any built-in functions\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj3za5p5i.ts(72,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738689
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (s.has(l[i])) {\n\
    \            return true;\n        }\n        s.add(-l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_fp40h82.ts(15,17): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let result:\
    \ boolean = false;\n    for (let i: number = 0; i < l.length; i++) {\n       \
    \ for (let j: number = i + 1; j < l.length; j++) {\n            if (l[i] + l[j]\
    \ === 0) {\n                result = true;\n            }\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738689
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (s.has(l[i])) {\n\
    \            return true;\n        }\n        s.add(-l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_fp40h82.ts(15,17): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let result = false;\n\
    \  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        result = true;\n      }\n  \
    \  }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  for (let i = 0;\
    \ i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if\
    \ (l[i] + l[j] === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd8dyzodv.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        let num = l[i];\n \
    \       if (seen.includes(-num)) {\n            return true;\n        }\n    \
    \    seen.push(num);\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphqtsolyq.ts(18,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738689
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // YOUR CODE HERE\n\
    \  throw new Error(\"Not implemented\");\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp7g6nitnr.js:16\n    throw new Error(\"Not implemented\");\n   \
    \ ^\n\nError: Not implemented\n    at pairs_sum_to_zero (/tmp/tmp7g6nitnr.js:16:11)\n\
    \    at test (/tmp/tmp7g6nitnr.js:21:22)\n    at Object.<anonymous> (/tmp/tmp7g6nitnr.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738689
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // YOUR CODE HERE\n\
    \  throw new Error(\"Not implemented\");\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp7g6nitnr.js:16\n    throw new Error(\"Not implemented\");\n   \
    \ ^\n\nError: Not implemented\n    at pairs_sum_to_zero (/tmp/tmp7g6nitnr.js:16:11)\n\
    \    at test (/tmp/tmp7g6nitnr.js:21:22)\n    at Object.<anonymous> (/tmp/tmp7g6nitnr.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738689
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s = new\
    \ Set<number>();\n    for (let i = 0; i < l.length; i++) {\n        if (s.has(l[i]))\
    \ {\n            return true;\n        }\n        s.add(-l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9wbwqd7b.ts(15,17): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738689
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let s = new Set();\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (s.has(l[i])) {\n      return\
    \ true;\n    }\n    s.add(-l[i]);\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0u16216g.ts(15,15): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // TODO: implement\
    \ this function\n  return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp02n9ppgv.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp02n9ppgv.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // YOUR CODE HERE\n\
    \  throw new Error(\"Not implemented\");\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp7g6nitnr.js:16\n    throw new Error(\"Not implemented\");\n   \
    \ ^\n\nError: Not implemented\n    at pairs_sum_to_zero (/tmp/tmp7g6nitnr.js:16:11)\n\
    \    at test (/tmp/tmp7g6nitnr.js:21:22)\n    at Object.<anonymous> (/tmp/tmp7g6nitnr.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738689
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: Set<number>\
    \ = new Set();\n    for (let i = 0; i < l.length; i++) {\n        if (s.has(l[i]))\
    \ {\n            return true;\n        }\n        s.add(-l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5b9idnqn.ts(15,12): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp5b9idnqn.ts(15,30): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // your code here\n\
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmppo1k8sa6.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppo1k8sa6.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    for (let i =\
    \ 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n\
    \            if (l[i] + l[j] === 0) {\n                return true;\n        \
    \    }\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    const set =\
    \ new Set();\n    for (const n of l) {\n        if (set.has(n)) {\n          \
    \  return true;\n        }\n        set.add(-n);\n    }\n    return false;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4pwv_cl6.ts(15,21): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738690
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let set: Set<number>\
    \ = new Set();\n  for (let i = 0; i < l.length; i++) {\n    if (set.has(l[i]))\
    \ {\n      return true;\n    }\n    set.add(-l[i]);\n  }\n  return false;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7ju9rveu.ts(15,12): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp7ju9rveu.ts(15,30): error TS2552: Cannot find name ''Set''.
    Did you mean ''set''?

    '
  timestamp: 1659738689
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set<number>();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv3yeb_g8.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // Your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmptui0bhol.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmptui0bhol.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (s.has(l[i])) {\n\
    \            return true;\n        }\n        s.add(-l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_fp40h82.ts(15,17): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let s = new Set();\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (s.has(l[i])) {\n      return\
    \ true;\n    }\n    s.add(-l[i]);\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0u16216g.ts(15,15): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // YOUR CODE HERE\n\
    \  throw new Error(\"Not implemented\");\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp7g6nitnr.js:16\n    throw new Error(\"Not implemented\");\n   \
    \ ^\n\nError: Not implemented\n    at pairs_sum_to_zero (/tmp/tmp7g6nitnr.js:16:11)\n\
    \    at test (/tmp/tmp7g6nitnr.js:21:22)\n    at Object.<anonymous> (/tmp/tmp7g6nitnr.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738689
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // YOUR CODE HERE\n\
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwyyid_fh.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwyyid_fh.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd8dyzodv.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd8dyzodv.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (s.has(l[i])) {\n\
    \            return true;\n        }\n        s.add(-l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_fp40h82.ts(15,17): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let seen: number[]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    if (seen.includes(-l[i]))\
    \ {\n      return true;\n    }\n    seen.push(l[i]);\n  }\n  return false;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgh0w7sbb.ts(17,14): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738689
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // YOUR CODE HERE\n\
    \  throw new Error(\"Not implemented\");\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp7g6nitnr.js:16\n    throw new Error(\"Not implemented\");\n   \
    \ ^\n\nError: Not implemented\n    at pairs_sum_to_zero (/tmp/tmp7g6nitnr.js:16:11)\n\
    \    at test (/tmp/tmp7g6nitnr.js:21:22)\n    at Object.<anonymous> (/tmp/tmp7g6nitnr.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738689
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9opsuqr2.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9opsuqr2.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let seen = new\
    \ Set();\n  for (let i = 0; i < l.length; i++) {\n    if (seen.has(-l[i])) {\n\
    \      return true;\n    }\n    seen.add(l[i]);\n  }\n  return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3,\
    \ 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1abysml9.ts(15,18): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738690
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let result:\
    \ boolean = false;\n    for (let i: number = 0; i < l.length; i++) {\n       \
    \ for (let j: number = i + 1; j < l.length; j++) {\n            if (l[i] + l[j]\
    \ === 0) {\n                result = true;\n            }\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738689
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let seen: number[]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    if (seen.includes(-l[i]))\
    \ {\n      return true;\n    }\n    seen.push(l[i]);\n  }\n  return false;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgh0w7sbb.ts(17,14): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738689
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1;\
    \ j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n               \
    \ return true;\n            }\n        }\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3,\
    \ 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: Set<number>\
    \ = new Set();\n    for (let i = 0; i < l.length; i++) {\n        if (s.has(l[i]))\
    \ {\n            return true;\n        }\n        s.add(-l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5b9idnqn.ts(15,12): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp5b9idnqn.ts(15,30): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let result = false;\n\
    \  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        result = true;\n      }\n  \
    \  }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let dict: { [key:\
    \ number]: number } = {};\n  for (let i = 0; i < l.length; i++) {\n    if (dict[l[i]])\
    \ {\n      return true;\n    } else {\n      dict[-l[i]] = 1;\n    }\n  }\n  return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738690
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    const s = new\
    \ Set();\n    for (const i of l) {\n        if (s.has(-i)) {\n            return\
    \ true;\n        }\n        s.add(i);\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3,\
    \ 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcqu4jq0r.ts(15,19): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738690
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let result = false;\n\
    \  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length;\
    \ j++) {\n      if (l[i] + l[j] === 0) {\n        result = true;\n      }\n  \
    \  }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let set = new\
    \ Set(l);\n  for (let i = 0; i < l.length; i++) {\n    if (set.has(-l[i])) {\n\
    \      return true;\n    }\n  }\n  return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_bsj6tsy.ts(15,17): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738690
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let i = 0;\n \
    \ let j = l.length - 1;\n  while (i < j) {\n    if (l[i] + l[j] === 0) {\n   \
    \   return true;\n    } else if (l[i] + l[j] > 0) {\n      j -= 1;\n    } else\
    \ {\n      i += 1;\n    }\n  }\n  return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpsdm4n0zs.js:36:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpsdm4n0zs.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738690
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set(l);\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(-l[i]))\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3,\
    \ 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8b2q3sq7.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // YOUR CODE HERE\n\
    \  // You may not use any built-in functions.\n  // You may not use any built-in\
    \ functions.\n  // You may not use any built-in functions.\n  // You may not use\
    \ any built-in functions.\n  // You may not use any built-in functions.\n  //\
    \ You may not use any built-in functions.\n  // You may not use any built-in functions.\n\
    \  // You may not use any built-in functions.\n  // You may not use any built-in\
    \ functions.\n  // You may not use any built-in functions.\n  // You may not use\
    \ any built-in functions.\n  // You may not use any built-in functions.\n  //\
    \ You may not use any built-in functions.\n  // You may not use any built-in functions.\n\
    \  // You may not use any built-in functions.\n  // You may not use any built-in\
    \ functions.\n  // You may not use any built-in functions.\n  // You may not use\
    \ any built-in functions.\n  // You may not use any built-in functions.\n  //\
    \ You may not use any built-in functions.\n  // You may not use any built-in functions.\n\
    \  // You may not use any built-in functions.\n  // You may not use any built-in\
    \ functions.\n  // You may not use any built-in functions.\n  // You may not use\
    \ any built-in functions.\n  // You may not use any built-in functions.\n  //\
    \ You may not use any built-in functions.\n  // You may not use any built-in functions.\n\
    \  // You may not use any built-in functions.\n  // You may not use any built-in\
    \ functions.\n  // You may not use any built-in functions.\n  // You may not use\
    \ any built-in functions.\n  // You may not use any built-in functions.\n  //\
    \ You may not use any built-in functions.\n  // You may not use any built-in functions.\n\
    \  // You may not use any built-in functions.\n  // You may not use any built-in\
    \ functions.\n  // You may not use any built-in functions.\n  // You may not use\
    \ any built-in functions\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj3za5p5i.ts(72,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738689
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let seen: number[]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    if (seen.includes(-l[i]))\
    \ {\n      return true;\n    }\n    seen.push(l[i]);\n  }\n  return false;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgh0w7sbb.ts(17,14): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738689
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set<number>();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv3yeb_g8.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // TODO: implement\
    \ this function\n  return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp02n9ppgv.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp02n9ppgv.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let seen: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (seen.includes(-l[i]))\
    \ {\n            return true;\n        }\n        seen.push(l[i]);\n    }\n  \
    \  return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsigjoajn.ts(17,18): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    for (let i =\
    \ 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n\
    \            if (l[i] + l[j] === 0) {\n                return true;\n        \
    \    }\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let s = new Set();\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (s.has(l[i])) {\n      return\
    \ true;\n    }\n    s.add(-l[i]);\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0u16216g.ts(15,15): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // YOUR CODE\
    \ HERE\n    throw new Error(\"Not implemented yet.\");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmplhqy0252.js:16\n    throw new Error(\"Not implemented yet.\");\n\
    \    ^\n\nError: Not implemented yet.\n    at pairs_sum_to_zero (/tmp/tmplhqy0252.js:16:11)\n\
    \    at test (/tmp/tmplhqy0252.js:21:22)\n    at Object.<anonymous> (/tmp/tmplhqy0252.js:31:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return undefined;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\nfalse\n    at test (/tmp/tmp36zmsjbc.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmp36zmsjbc.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738690
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let s = new Set();\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (s.has(l[i])) {\n      return\
    \ true;\n    }\n    s.add(-l[i]);\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0u16216g.ts(15,15): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i = 0;\n\
    \    let j = 0;\n    let k = 0;\n    let sum = 0;\n    for (i = 0; i < l.length;\
    \ i++) {\n        for (j = i + 1; j < l.length; j++) {\n            sum = l[i]\
    \ + l[j];\n            if (sum === 0) {\n                return true;\n      \
    \      }\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738690
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i = 0;\n\
    \    let j = l.length - 1;\n    l.sort();\n    while (i < j) {\n        if (l[i]\
    \ + l[j] === 0) {\n            return true;\n        } else if (l[i] + l[j] >\
    \ 0) {\n            j -= 1;\n        } else {\n            i += 1;\n        }\n\
    \    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp875vwpj6.js:39:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp875vwpj6.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738690
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let hash: {\
    \ [key: number]: number } = {};\n    for (let i = 0; i < l.length; i++) {\n  \
    \      if (hash[l[i]]) {\n            return true;\n        } else {\n       \
    \     hash[-l[i]] = 1;\n        }\n    }\n    return false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5,\
    \ 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738690
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let s = new Set();\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (s.has(l[i])) {\n      return\
    \ true;\n    }\n    s.add(-l[i]);\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0u16216g.ts(15,15): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i: number\
    \ = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let m: number = 0;\n\
    \    let n: number = 0;\n    let o: number = 0;\n    let p: number = 0;\n    let\
    \ q: number = 0;\n    let r: number = 0;\n    let s: number = 0;\n    let t: number\
    \ = 0;\n    let u: number = 0;\n    let v: number = 0;\n    let w: number = 0;\n\
    \    let x: number = 0;\n    let y: number = 0;\n    let z: number = 0;\n    let\
    \ aa: number = 0;\n    let ab: number = 0;\n    let ac: number = 0;\n    let ad:\
    \ number = 0;\n    let ae: number = 0;\n    let af: number = 0;\n    let ag: number\
    \ = 0;\n    let ah: number = 0;\n    let ai: number = 0;\n    let aj: number =\
    \ 0;\n    let ak: number = 0;\n    let al: number = 0;\n    let am: number = 0;\n\
    \    let an: number = 0;\n    let ao: number = 0;\n    let ap: number = 0;\n \
    \   let aq: number = 0;\n    let ar: number = 0;\n    let as: number = 0;\n  \
    \  let at: number = 0;\n    let au: number = 0;\n    let av: number = 0;\n   \
    \ let aw: number = 0;\n    let ax: number = 0;\n    let ay: number = 0;\n    let\
    \ az: number = 0;\n    let ba: number = 0;\n    let bb: number = 0;\n    let bc:\
    \ number = 0;\n    let bd: number = 0;\n    let be: number = 0;\n    let bf: number\
    \ = 0;\n    let bg: number = 0;\n    let bh: number = 0;\n    let bi: number =\
    \ 0;\n    let bj: number = 0;\n    let bk: number = 0;\n    let bl: number = 0;\n\
    \    let b\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp81yypm6v.ts(88,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738690
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let seen: number[]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    let num = l[i];\n    if (seen.includes(-num))\
    \ {\n      return true;\n    } else {\n      seen.push(num);\n    }\n  }\n  return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd4sswneb.ts(18,14): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738690
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    for (let i =\
    \ 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n\
    \            if (l[i] + l[j] === 0) {\n                return true;\n        \
    \    }\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd8dyzodv.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i: number\
    \ = 0;\n    let j: number = 0;\n    let sum: number = 0;\n    let result: boolean\
    \ = false;\n    for (i = 0; i < l.length; i++) {\n        for (j = 0; j < l.length;\
    \ j++) {\n            if (i !== j) {\n                sum = l[i] + l[j];\n   \
    \             if (sum === 0) {\n                    result = true;\n         \
    \       }\n            }\n        }\n    }\n    return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5,\
    \ 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738690
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let set = new\
    \ Set<number>();\n    for (let i = 0; i < l.length; i++) {\n        if (set.has(l[i]))\
    \ {\n            return true;\n        }\n        set.add(-l[i]);\n    }\n   \
    \ return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv3yeb_g8.ts(15,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1659738687
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  // TODO: implement\
    \ this function\n  return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp02n9ppgv.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp02n9ppgv.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  const seen: Set<number>\
    \ = new Set();\n  for (const n of l) {\n    if (seen.has(-n)) {\n      return\
    \ true;\n    }\n    seen.add(n);\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsz0x9vdo.ts(15,15): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpsz0x9vdo.ts(15,33): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659738690
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let seen: number[]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    if (seen.includes(-l[i]))\
    \ {\n      return true;\n    }\n    seen.push(l[i]);\n  }\n  return false;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgh0w7sbb.ts(17,14): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738689
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s = new\
    \ Set();\n    for (let i = 0; i < l.length; i++) {\n        if (s.has(l[i])) {\n\
    \            return true;\n        }\n        s.add(-l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_fp40h82.ts(15,17): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  for (let i = 0;\
    \ i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if\
    \ (l[i] + l[j] === 0) {\n        return true;\n      }\n    }\n  }\n  return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    for (let i =\
    \ 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n\
    \            if (l[i] + l[j] === 0) {\n                return true;\n        \
    \    }\n        }\n    }\n    return false;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let s: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        if (s.includes(-l[i]))\
    \ {\n            return true;\n        }\n        s.push(l[i]);\n    }\n    return\
    \ false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw_kkurt0.ts(17,15): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738685
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // TODO: implement\
    \ this function\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n\
    \  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1,\
    \ 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2,\
    \ 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvfc5jj8a.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvfc5jj8a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i: number\
    \ = 0;\n    let j: number = 0;\n    let k: number = 0;\n    let sum: number =\
    \ 0;\n    for (i = 0; i < l.length; i++) {\n        for (j = i + 1; j < l.length;\
    \ j++) {\n            sum = l[i] + l[j];\n            if (sum === 0) {\n     \
    \           return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738690
- exit_code: 1
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    // your code\
    \ here\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp98pdtmy4.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp98pdtmy4.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738685
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let s = new Set();\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (s.has(l[i])) {\n      return\
    \ true;\n    }\n    s.add(-l[i]);\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n \
    \ assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0u16216g.ts(15,15): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659738687
- exit_code: 2
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n  let seen: number[]\
    \ = [];\n  for (let i = 0; i < l.length; i++) {\n    if (seen.includes(-l[i]))\
    \ {\n      return true;\n    }\n    seen.push(l[i]);\n  }\n  return false;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgh0w7sbb.ts(17,14): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1659738689
- exit_code: 0
  program: "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns\
    \ true if there are two distinct elements in the array that\n// sum to zero, and\
    \ false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1,\
    \ 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>>\
    \ pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n\
    // false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n    let i: number\
    \ = 0;\n    let j: number = 0;\n    for (i = 0; i < l.length; i++) {\n       \
    \ for (j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1,\
    \ 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n\
    \  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n\
    \  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3,\
    \ 9, -1, 4, 2, 31]),false);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738687

name: HumanEval_153_Strongest_Extension
language: ts
prompt: "//You will be given the name of a class (a string) and an array of extensions.\n\
  // The extensions are to be used to load additional classes to the class. The\n\
  // strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  // letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n// in the extension's name, the strength is given by the fraction CAP - SM.\
  \ \n// You should find the strongest extension and return a string in this \n//\
  \ format: ClassName.StrongestExtensionName.\n// If there are two or more extensions\
  \ with the same strength, you should\n// choose the one that comes first in the\
  \ array.\n// For example, if you are given \"Slices\" as the class and an array\
  \ of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
  // return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
  \ \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"my_class\"\
  , [\"AA\", \"Be\", \"CC\"])\n// \"my_class.AA\"\nfunction Strongest_Extension(class_name:\
  \ string, extensions: string[]): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = Strongest_Extension;\n  assert.deepEqual(candidate(\"\
  Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]),\"Watashi.eIGHt8OKe\");\n  assert.deepEqual(candidate(\"\
  Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]),\"Boku123.YEs.WeCaNe\"\
  );\n  assert.deepEqual(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\"\
  , \"zeR00\", \"NuLl__\", \"123NoooneB321\"]),\"__YESIMHERE.NuLl__\");\n  assert.deepEqual(candidate(\"\
  K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]),\"K.TAR\");\n  assert.deepEqual(candidate(\"\
  __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]),\"__HAHA.123\");\n  assert.deepEqual(candidate(\"\
  YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]),\"YameRore.okIWILL123\"\
  );\n  assert.deepEqual(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"\
  WoW\"]),\"finNNalLLly.WoW\");\n  assert.deepEqual(candidate(\"_\", [\"Bb\", \"91245\"\
  ]),\"_.Bb\");\n  assert.deepEqual(candidate(\"Sp\", [\"671235\", \"Bb\"]),\"Sp.671235\"\
  );\n}\n\ntest();"
completions: ["    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char === char.toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest: string = \"\";\n    let strongest_strength: number = 0;\n \
    \   for (let i = 0; i < extensions.length; i++) {\n        let strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest: string = \"\";\n\
    \    let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char >= 'A' && char <= 'Z') {\n                extension_strength++;\n\
    \            } else if (char >= 'a' && char <= 'z') {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = extension;\n            strongest_extension_strength\
    \ = extension_strength;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = \"\";\n    let strongest_extension_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension: string =\
    \ \"\";\n    let strongest_strength: number = 0;\n    for (let i: number = 0;\
    \ i < extensions.length; i++) {\n        let extension: string = extensions[i];\n\
    \        let strength: number = 0;\n        for (let j: number = 0; j < extension.length;\
    \ j++) {\n            let char: string = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                strength++;\n            } else {\n           \
    \     strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest = extensions[0];\n    let strongest_strength = 0;\n \
    \   for (let i = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++)\
    \ {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                strength += 1;\n            } else {\n        \
    \        strength -= 1;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char == char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let current_extension\
    \ = extensions[i];\n        let current_extension_strength = 0;\n        for (let\
    \ j = 0; j < current_extension.length; j++) {\n            let current_char =\
    \ current_extension[j];\n            if (current_char.toUpperCase() === current_char)\
    \ {\n                current_extension_strength++;\n            } else {\n   \
    \             current_extension_strength--;\n            }\n        }\n      \
    \  if (current_extension_strength > strongest_extension_strength) {\n        \
    \    strongest_extension = current_extension;\n            strongest_extension_strength\
    \ = current_extension_strength;\n        }\n    }\n    return class_name + \"\
    .\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ letter = extension[j];\n            if (letter.toUpperCase() === letter) {\n\
    \                extension_strength++;\n            } else {\n               \
    \ extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let extension of extensions) {\n        let strength = 0;\n \
    \       for (let char of extension) {\n            if (char.toUpperCase() ===\
    \ char) {\n                strength++;\n            } else {\n               \
    \ strength--;\n            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let extension of extensions) {\n        let extension_strength\
    \ = 0;\n        for (let letter of extension) {\n            if (letter.toUpperCase()\
    \ === letter) {\n                extension_strength++;\n            } else {\n\
    \                extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n        let\
    \ extension: string = extensions[i];\n        let strength: number = 0;\n    \
    \    for (let j: number = 0; j < extension.length; j++) {\n            let char:\
    \ string = extension[j];\n            if (char == char.toUpperCase()) {\n    \
    \            strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char === char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char === char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_strength\
    \ = 0;\n    extensions.forEach(extension => {\n        let strength = 0;\n   \
    \     for (let i = 0; i < extension.length; i++) {\n            if (extension[i]\
    \ >= 'A' && extension[i] <= 'Z') {\n                strength++;\n            }\
    \ else {\n                strength--;\n            }\n        }\n        if (strength\
    \ > strongest_strength) {\n            strongest_strength = strength;\n      \
    \      strongest_extension = extension;\n        }\n    });\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension: string =\
    \ extensions[0];\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i: number = 0; i < extensions.length; i++) {\n        let extension_strength:\
    \ number = 0;\n        for (let j: number = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                extension_strength++;\n            } else {\n               \
    \ extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n        \
    \        strength++;\n            } else {\n                strength--;\n    \
    \        }\n        }\n        if (strength > strongest_strength) {\n        \
    \    strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    extensions.forEach(extension => {\n        let extension_strength\
    \ = 0;\n        for (let i = 0; i < extension.length; i++) {\n            if (extension[i]\
    \ === extension[i].toUpperCase()) {\n                extension_strength++;\n \
    \           } else {\n                extension_strength--;\n            }\n \
    \       }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    });\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest: string = \"\";\n    let strongest_strength: number =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension:\
    \ string = extensions[i];\n        let strength: number = 0;\n        for (let\
    \ j = 0; j < extension.length; j++) {\n            let char: string = extension[j];\n\
    \            if (char === char.toUpperCase()) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest = extension;\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension: string = \"\";\n \
    \   let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++)\
    \ {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                strength++;\n            } else {\n           \
    \     strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_strength:\
    \ number = 0;\n    for (let extension of extensions) {\n        let strength:\
    \ number = 0;\n        for (let char of extension) {\n            if (char.toUpperCase()\
    \ === char) {\n                strength++;\n            } else {\n           \
    \     strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.match(/[A-Z]/)) {\n                extension_strength++;\n \
    \           } else if (char.match(/[a-z]/)) {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = extension;\n            strongest_extension_strength\
    \ = extension_strength;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let strength: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let strength = 0;\n\
    \        for (let j = 0; j < extension.length; j++) {\n            let char =\
    \ extension[j];\n            if (char === char.toUpperCase()) {\n            \
    \    strength++;\n            } else {\n                strength--;\n        \
    \    }\n        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let extension_strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char.toUpperCase() === char) {\n     \
    \           extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char.toUpperCase() === char) {\n     \
    \           extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension: string =\
    \ \"\";\n    let strongest_extension_strength: number = 0;\n    extensions.forEach(extension\
    \ => {\n        let extension_strength: number = 0;\n        for (let i = 0; i\
    \ < extension.length; i++) {\n            if (extension[i] === extension[i].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension = extension;\n\
    \            strongest_extension_strength = extension_strength;\n        }\n \
    \   });\n    return class_name + \".\" + strongest_extension;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            if (extension[j] === extension[j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension = extension;\n\
    \            strongest_extension_strength = extension_strength;\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let extension of extensions) {\n        let extension_strength\
    \ = 0;\n        for (let i = 0; i < extension.length; i++) {\n            if (extension[i]\
    \ == extension[i].toUpperCase()) {\n                extension_strength++;\n  \
    \          } else {\n                extension_strength--;\n            }\n  \
    \      }\n        if (extension_strength > strongest_extension_strength) {\n \
    \           strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension: string = extensions[i];\n        let extension_strength: number =\
    \ 0;\n        for (let j = 0; j < extension.length; j++) {\n            let char:\
    \ string = extension[j];\n            if (char === char.toUpperCase()) {\n   \
    \             extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = extension;\n            strongest_extension_strength\
    \ = extension_strength;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    extensions.forEach(extension => {\n        let extension_strength\
    \ = extension.split('').reduce((acc, curr) => {\n            if (curr.toUpperCase()\
    \ === curr) {\n                return acc + 1;\n            } else {\n       \
    \         return acc - 1;\n            }\n        }, 0);\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension = extension;\n\
    \            strongest_extension_strength = extension_strength;\n        }\n \
    \   });\n    return `${class_name}.${strongest_extension}`;\n}\n", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i: number = 0; i < extensions.length; i++) {\n        let current_extension_strength:\
    \ number = 0;\n        for (let j: number = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                current_extension_strength++;\n            } else {\n       \
    \         current_extension_strength--;\n            }\n        }\n        if\
    \ (current_extension_strength > strongest_extension_strength) {\n            strongest_extension\
    \ = extensions[i];\n            strongest_extension_strength = current_extension_strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char === char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char === char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = -Infinity;\n\
    \    for (let extension of extensions) {\n        let strength: number = 0;\n\
    \        for (let char of extension) {\n            if (char.toUpperCase() ===\
    \ char) {\n                strength++;\n            } else {\n               \
    \ strength--;\n            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return `${class_name}.${strongest_extension}`;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = \"\";\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest: string = \"\";\n \
    \   let strongest_strength: number = 0;\n    extensions.forEach(extension => {\n\
    \        let strength: number = 0;\n        for (let i: number = 0; i < extension.length;\
    \ i++) {\n            if (extension[i] === extension[i].toUpperCase()) {\n   \
    \             strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extension;\n\
    \        }\n    });\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char === char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let extension of extensions) {\n        let extension_strength\
    \ = 0;\n        for (let char of extension) {\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let current_extension_strength: number = 0;\n        for (let j: number\
    \ = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j] ===\
    \ extensions[i][j].toUpperCase()) {\n                current_extension_strength++;\n\
    \            } else {\n                current_extension_strength--;\n       \
    \     }\n        }\n        if (current_extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = extensions[i];\n            strongest_extension_strength\
    \ = current_extension_strength;\n        }\n    }\n    return class_name + \"\
    .\" + strongest_extension;\n}\n", "    let strongest_extension: string = \"\"\
    ;\n    let strongest_extension_strength: number = 0;\n    for (let i = 0; i <\
    \ extensions.length; i++) {\n        let extension_strength: number = 0;\n   \
    \     for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ current_extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                current_extension_strength++;\n            } else {\n\
    \                current_extension_strength--;\n            }\n        }\n   \
    \     if (current_extension_strength > strongest_extension_strength) {\n     \
    \       strongest_extension_strength = current_extension_strength;\n         \
    \   strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension: string =\
    \ \"\";\n    let strongest_extension_strength: number = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let extension_strength: number = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongestExtension = extensions[0];\n    let strongestExtensionStrength\
    \ = getStrength(strongestExtension);\n    for (let i = 1; i < extensions.length;\
    \ i++) {\n        let currentExtensionStrength = getStrength(extensions[i]);\n\
    \        if (currentExtensionStrength > strongestExtensionStrength) {\n      \
    \      strongestExtension = extensions[i];\n            strongestExtensionStrength\
    \ = currentExtensionStrength;\n        }\n    }\n    return class_name + \".\"\
    \ + strongestExtension;\n}\n", "    let strongest_extension = \"\";\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n            \
    \    strength++;\n            } else {\n                strength--;\n        \
    \    }\n        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    extensions.forEach(extension\
    \ => {\n        let strength = 0;\n        for (let i = 0; i < extension.length;\
    \ i++) {\n            if (extension[i] === extension[i].toUpperCase()) {\n   \
    \             strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    });\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = -Infinity;\n    for (let i = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.match(/[A-Z]/)) {\n                extension_strength++;\n \
    \           } else if (char.match(/[a-z]/)) {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = extension;\n            strongest_extension_strength\
    \ = extension_strength;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char >= 'A' && char <= 'Z') {\n                extension_strength++;\n\
    \            } else if (char >= 'a' && char <= 'z') {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = extension;\n            strongest_extension_strength\
    \ = extension_strength;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let extension of extensions) {\n        let strength = 0;\n \
    \       for (let char of extension) {\n            if (char.toUpperCase() ===\
    \ char) {\n                strength += 1;\n            } else {\n            \
    \    strength -= 1;\n            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = \"\";\n    let strongest_extension_strength = -Infinity;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char === char.toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension = extension;\n\
    \            strongest_extension_strength = extension_strength;\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    extensions.forEach(extension\
    \ => {\n        let strength = 0;\n        for (let i = 0; i < extension.length;\
    \ i++) {\n            if (extension[i] === extension[i].toUpperCase()) {\n   \
    \             strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    });\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char === char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongestExtension = extensions[0];\n    let strongestExtensionStrength\
    \ = 0;\n    extensions.forEach(extension => {\n        let extensionStrength =\
    \ extension.split('').reduce((acc, char) => {\n            if (char === char.toUpperCase())\
    \ {\n                acc += 1;\n            } else {\n                acc -= 1;\n\
    \            }\n            return acc;\n        }, 0);\n        if (extensionStrength\
    \ > strongestExtensionStrength) {\n            strongestExtensionStrength = extensionStrength;\n\
    \            strongestExtension = extension;\n        }\n    });\n    return `${class_name}.${strongestExtension}`;\n\
    }\n", "    let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension: string = extensions[i];\n        let extension_strength: number =\
    \ 0;\n        for (let j = 0; j < extension.length; j++) {\n            let char:\
    \ string = extension[j];\n            if (char === char.toUpperCase()) {\n   \
    \             extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = extension;\n            strongest_extension_strength\
    \ = extension_strength;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest: string = extensions[0];\n    let strongest_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let strength: number = 0;\n        for (let j: number = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let extension of extensions) {\n        let strength = 0;\n   \
    \     for (let i = 0; i < extension.length; i++) {\n            if (extension[i]\
    \ >= 'A' && extension[i] <= 'Z') {\n                strength++;\n            }\
    \ else {\n                strength--;\n            }\n        }\n        if (strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_extension_strength: number = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let extension_strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n            \
    \    extension_strength++;\n            } else if (extensions[i][j] >= \"a\" &&\
    \ extensions[i][j] <= \"z\") {\n                extension_strength--;\n      \
    \      }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ strength: number = 0;\n        for (let j = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ strength: number = 0;\n        for (let j = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n \
    \               strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = \"\";\n    let strongest_extension_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= \"A\" && extensions[i][j] <= \"Z\") {\n                strength++;\n    \
    \        } else {\n                strength--;\n            }\n        }\n   \
    \     if (strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest:\
    \ string = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let strength: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest: string = \"\";\n    let strongest_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ strength: number = 0;\n        for (let j = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ strength++;\n            } else {\n                strength--;\n           \
    \ }\n        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extensions[i];\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension:\
    \ string = extensions[0];\n    let strongest_extension_strength: number = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n        \
    \        extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest: string = \"\";\n \
    \   let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = \"\";\n    let strongest_extension_strength = 0;\n   \
    \ for (let extension of extensions) {\n        let strength = 0;\n        for\
    \ (let letter of extension) {\n            if (letter.toUpperCase() === letter)\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char == char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength += 1;\n            } else {\n        \
    \        extension_strength -= 1;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest = extensions[i];\n\
    \            strongest_strength = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension: string = \"\";\n \
    \   let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char === char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char === char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.match(/[A-Z]/)) {\n                extension_strength++;\n \
    \           } else if (char.match(/[a-z]/)) {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = extension;\n            strongest_extension_strength\
    \ = extension_strength;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = \"\";\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ strength: number = 0;\n        for (let j = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char === char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest: string = \"\";\n    let strongest_strength: number =\
    \ 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j: number = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = \"\";\n    let strongest_extension_strength = 0;\n\
    \    for (let extension of extensions) {\n        let strength = 0;\n        for\
    \ (let letter of extension) {\n            if (letter.toUpperCase() === letter)\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            if (extension[j] === extension[j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension = extension;\n\
    \            strongest_extension_strength = extension_strength;\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension:\
    \ string = extensions[0];\n    let strongest_extension_strength: number = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension: string\
    \ = extensions[i];\n        let extension_strength: number = 0;\n        for (let\
    \ j = 0; j < extension.length; j++) {\n            let char: string = extension[j];\n\
    \            if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension = extension;\n            strongest_extension_strength\
    \ = extension_strength;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let extension of extensions) {\n        let strength = 0;\n \
    \       for (let char of extension) {\n            if (char.toUpperCase() ===\
    \ char) {\n                strength++;\n            } else {\n               \
    \ strength--;\n            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = \"\";\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char.toUpperCase() === char) {\n     \
    \           extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest: number = 0;\n    let\
    \ strongest_extension: string = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap: number = 0;\n        let sm: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap++;\n            }\
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strongest) {\n            strongest = cap - sm;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char === char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let current_extension: string = extensions[i];\n        let current_extension_strength:\
    \ number = 0;\n        for (let j: number = 0; j < current_extension.length; j++)\
    \ {\n            let current_letter: string = current_extension[j];\n        \
    \    if (current_letter === current_letter.toUpperCase()) {\n                current_extension_strength\
    \ += 1;\n            } else {\n                current_extension_strength -= 1;\n\
    \            }\n        }\n        if (current_extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = current_extension;\n            strongest_extension_strength\
    \ = current_extension_strength;\n        }\n    }\n    return class_name + \"\
    .\" + strongest_extension;\n}\n", "    let strongest = extensions[0];\n    let\
    \ strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++) {\n\
    \        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= 'A' && extensions[i][j] <= 'Z')\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++)\
    \ {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                strength++;\n            } else {\n           \
    \     strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest = extension;\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension = extensions[0];\n    let strongest_extension_strength =\
    \ 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char == char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char === char.toUpperCase()) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongestExtension = extensions[0];\n    let strongestExtensionStrength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extensionStrength = 0;\n        for (let j = 0;\
    \ j < extension.length; j++) {\n            let char = extension[j];\n       \
    \     if (char.toUpperCase() === char) {\n                extensionStrength++;\n\
    \            } else {\n                extensionStrength--;\n            }\n \
    \       }\n        if (extensionStrength > strongestExtensionStrength) {\n   \
    \         strongestExtensionStrength = extensionStrength;\n            strongestExtension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongestExtension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension: string = extensions[i];\n        let strength: number = 0;\n    \
    \    for (let j = 0; j < extension.length; j++) {\n            let char: string\
    \ = extension[j];\n            if (char === char.toUpperCase()) {\n          \
    \      strength++;\n            } else {\n                strength--;\n      \
    \      }\n        }\n        if (strength > strongest_strength) {\n          \
    \  strongest_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest: string = \"\";\n    let strongest_strength: number = 0;\n  \
    \  for (let i = 0; i < extensions.length; i++) {\n        let cap: number = 0;\n\
    \        let sm: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                cap++;\n            } else {\n                sm++;\n\
    \            }\n        }\n        let strength: number = cap - sm;\n        if\
    \ (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension: string = \"\";\n \
    \   let strongest_extension_strength: number = 0;\n    extensions.forEach(extension\
    \ => {\n        let strength: number = 0;\n        for (let i: number = 0; i <\
    \ extension.length; i++) {\n            if (extension[i] === extension[i].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    });\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = \"\";\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest: string = \"\";\n \
    \   let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ strength: number = 0;\n        for (let j = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest = extensions[0];\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= 'A' && extensions[i][j] <= 'Z') {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension: string = \"\";\n \
    \   let strongest_strength: number = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension: string = extensions[i];\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extension.length; j++) {\n        \
    \    let char: string = extension[j];\n            if (char.toUpperCase() ===\
    \ char) {\n                strength++;\n            } else {\n               \
    \ strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let strength = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char === char.toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension = \"\";\n    let strongest_strength = 0;\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let strength = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                strength++;\n       \
    \     } else {\n                strength--;\n            }\n        }\n      \
    \  if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = \"\";\n    let strongest_extension_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char.toUpperCase() === char) {\n     \
    \           extension_strength += 1;\n            } else {\n                extension_strength\
    \ -= 1;\n            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension = extension;\n            strongest_extension_strength\
    \ = extension_strength;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let extension_strength = 0;\n        for (let j =\
    \ 0; j < extension.length; j++) {\n            let char = extension[j];\n    \
    \        if (char.toUpperCase() === char) {\n                extension_strength++;\n\
    \            } else {\n                extension_strength--;\n            }\n\
    \        }\n        if (extension_strength > strongest_extension_strength) {\n\
    \            strongest_extension_strength = extension_strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = getStrength(strongest_extension);\n    for (let i = 1; i < extensions.length;\
    \ i++) {\n        let strength = getStrength(extensions[i]);\n        if (strength\
    \ > strongest_extension_strength) {\n            strongest_extension = extensions[i];\n\
    \            strongest_extension_strength = strength;\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension:\
    \ string = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let strength: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == extensions[i][j].toUpperCase()) {\n                strength++;\n        \
    \    } else {\n                strength--;\n            }\n        }\n       \
    \ if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char === char.toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest: string = \"\";\n    let strongest_strength: number = 0;\n   \
    \ for (let i = 0; i < extensions.length; i++) {\n        let strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n               \
    \ strength++;\n            } else {\n                strength--;\n           \
    \ }\n        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest_extension = \"\";\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"\
    Z\") {\n                extension_strength++;\n            } else {\n        \
    \        extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest: string = \"\";\n    let strongest_strength: number = 0;\n \
    \   for (let i = 0; i < extensions.length; i++) {\n        let strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] >= \"A\" && extensions[i][j] <= \"Z\") {\n            \
    \    strength++;\n            } else {\n                strength--;\n        \
    \    }\n        }\n        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest_extension = \"\";\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let extension:\
    \ string = extensions[i];\n        let strength: number = 0;\n        for (let\
    \ j = 0; j < extension.length; j++) {\n            let char: string = extension[j];\n\
    \            if (char == char.toUpperCase()) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char === char.toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n        \
    \        strength++;\n            } else {\n                strength--;\n    \
    \        }\n        }\n        if (strength > strongest_strength) {\n        \
    \    strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    extensions.forEach(extension => {\n        let strength = 0;\n   \
    \     for (let i = 0; i < extension.length; i++) {\n            if (extension[i]\
    \ === extension[i].toUpperCase()) {\n                strength++;\n           \
    \ } else {\n                strength--;\n            }\n        }\n        if\
    \ (strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    });\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                extension_strength++;\n            } else {\n \
    \               extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ current_extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                current_extension_strength++;\n            } else {\n   \
    \             current_extension_strength--;\n            }\n        }\n      \
    \  if (current_extension_strength > strongest_extension_strength) {\n        \
    \    strongest_extension_strength = current_extension_strength;\n            strongest_extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest: string = \"\";\n    let strongest_strength: number = 0;\n \
    \   for (let i = 0; i < extensions.length; i++) {\n        let strength: number\
    \ = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n           \
    \ if (extensions[i][j] == extensions[i][j].toUpperCase()) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_strength) {\n            strongest_strength\
    \ = strength;\n            strongest = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest;\n}\n", "    let strongest_extension = \"\";\n\
    \    let strongest_strength = 0;\n    for (let i = 0; i < extensions.length; i++)\
    \ {\n        let strength = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let\
    \ extension_strength: number = 0;\n        for (let j = 0; j < extensions[i].length;\
    \ j++) {\n            if (extensions[i][j] == extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    extensions.forEach(extension => {\n        let strength: number\
    \ = 0;\n        for (let i: number = 0; i < extension.length; i++) {\n       \
    \     if (extension[i] === extension[i].toUpperCase()) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    });\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension:\
    \ string = extensions[0];\n    let strongest_extension_strength: number = 0;\n\
    \    for (let i: number = 0; i < extensions.length; i++) {\n        let extension_strength:\
    \ number = 0;\n        for (let j: number = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n\
    \                extension_strength++;\n            } else {\n               \
    \ extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = \"\";\n    let strongest_strength = 0;\n    for\
    \ (let extension of extensions) {\n        let strength = 0;\n        for (let\
    \ letter of extension) {\n            if (letter === letter.toUpperCase()) {\n\
    \                strength++;\n            } else {\n                strength--;\n\
    \            }\n        }\n        if (strength > strongest_strength) {\n    \
    \        strongest_strength = strength;\n            strongest_extension = extension;\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest: string = extensions[0];\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n        \
    \        strength++;\n            } else {\n                strength--;\n    \
    \        }\n        }\n        if (strength > strongest_strength) {\n        \
    \    strongest = extensions[i];\n            strongest_strength = strength;\n\
    \        }\n    }\n    return class_name + \".\" + strongest;\n}\n", "    let\
    \ strongest_extension: string = extensions[0];\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension: string = \"\";\n    let strongest_strength: number\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let strength:\
    \ number = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n    \
    \        if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n        \
    \        strength++;\n            } else {\n                strength--;\n    \
    \        }\n        }\n        if (strength > strongest_strength) {\n        \
    \    strongest_strength = strength;\n            strongest_extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n",
  "    let strongest_extension = extensions[0];\n    let strongest_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let strength = 0;\n        for (let j = 0; j < extension.length; j++)\
    \ {\n            let char = extension[j];\n            if (char.toUpperCase()\
    \ === char) {\n                strength++;\n            } else {\n           \
    \     strength--;\n            }\n        }\n        if (strength > strongest_strength)\
    \ {\n            strongest_strength = strength;\n            strongest_extension\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    let strongest_extension = \"\";\n    let strongest_strength = -Infinity;\n\
    \    for (let extension of extensions) {\n        let strength = extension.split(\"\
    \").reduce((acc, curr) => {\n            if (curr.toUpperCase() === curr) {\n\
    \                acc += 1;\n            } else {\n                acc -= 1;\n\
    \            }\n            return acc;\n        }, 0);\n        if (strength\
    \ > strongest_strength) {\n            strongest_strength = strength;\n      \
    \      strongest_extension = extension;\n        }\n    }\n    return `${class_name}.${strongest_extension}`;\n\
    }\n", "    let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = 0;\n    for (let i: number = 0; i < extensions.length; i++) {\n   \
    \     let extension_strength: number = 0;\n        for (let j: number = 0; j <\
    \ extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", " \
    \   let strongest_extension = extensions[0];\n    let strongest_extension_strength\
    \ = 0;\n    extensions.forEach(extension => {\n        let strength = extension.split('').filter(letter\
    \ => letter.match(/[A-Z]/)).length - extension.split('').filter(letter => letter.match(/[a-z]/)).length;\n\
    \        if (strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    });\n\
    \    return `${class_name}.${strongest_extension}`;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let extension\
    \ of extensions) {\n        let strength = 0;\n        for (let char of extension)\
    \ {\n            if (char.toUpperCase() === char) {\n                strength++;\n\
    \            } else {\n                strength--;\n            }\n        }\n\
    \        if (strength > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = strength;\n            strongest_extension = extension;\n        }\n    }\n\
    \    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest_extension\
    \ = extensions[0];\n    let strongest_extension_strength = 0;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            let char = extension[j];\n            if (char === char.toUpperCase())\
    \ {\n                extension_strength++;\n            } else {\n           \
    \     extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension_strength\
    \ = extension_strength;\n            strongest_extension = extension;\n      \
    \  }\n    }\n    return class_name + \".\" + strongest_extension;\n}\n", "   \
    \ let strongest_extension: string = \"\";\n    let strongest_extension_strength:\
    \ number = -Infinity;\n    for (let i = 0; i < extensions.length; i++) {\n   \
    \     let extension: string = extensions[i];\n        let extension_strength:\
    \ number = 0;\n        for (let j = 0; j < extension.length; j++) {\n        \
    \    let char: string = extension[j];\n            if (char.toUpperCase() ===\
    \ char) {\n                extension_strength++;\n            } else {\n     \
    \           extension_strength--;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension = extension;\n\
    \            strongest_extension_strength = extension_strength;\n        }\n \
    \   }\n    return class_name + \".\" + strongest_extension;\n}\n", "    let strongest:\
    \ string = \"\";\n    let strongest_strength: number = 0;\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let strength: number = 0;\n        for\
    \ (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ >= \"A\" && extensions[i][j] <= \"Z\") {\n                strength++;\n    \
    \        } else {\n                strength--;\n            }\n        }\n   \
    \     if (strength > strongest_strength) {\n            strongest_strength = strength;\n\
    \            strongest = extensions[i];\n        }\n    }\n    return class_name\
    \ + \".\" + strongest;\n}\n", "    let strongest_extension = extensions[0];\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension.length; j++) {\n            let\
    \ char = extension[j];\n            if (char === char.toUpperCase()) {\n     \
    \           extension_strength++;\n            } else {\n                extension_strength--;\n\
    \            }\n        }\n        if (extension_strength > strongest_extension_strength)\
    \ {\n            strongest_extension_strength = extension_strength;\n        \
    \    strongest_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

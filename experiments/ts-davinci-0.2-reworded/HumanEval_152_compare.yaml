name: HumanEval_152_compare
language: ts
prompt: "//I think we all remember that feeling when the result of some long-awaited\n\
  // event is finally known. The feelings and thoughts you have at that moment are\n\
  // definitely worth noting down and comparing.\n// Your task is to determine if\
  \ a person correctly guessed the results of a number of matches.\n// You are given\
  \ two arrays of scores and guesses of equal length, where each index shows a match.\
  \ \n// Return an array of the same length denoting how far off each guess was. If\
  \ they have guessed correctly,\n// the value is 0, and if not, the value is the\
  \ absolute difference between the guess and the score.\n// example:\n// >>> compare([1,\
  \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2])\n// [0, 0, 0, 0, 3, 3]\n// >>> compare([0,\
  \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2])\n// [4, 4, 1, 0, 0, 6]\nfunction compare(game:\
  \ number[], guess: number[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = compare;\n  assert.deepEqual(candidate([1, 2, 3, 4,\
  \ 5, 1], [1, 2, 3, 4, 2, -2]),[0, 0, 0, 0, 3, 3]);\n  assert.deepEqual(candidate([0,\
  \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]),[0, 0, 0, 0, 0, 0]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3], [-1, -2, -3]),[2, 4, 6]);\n  assert.deepEqual(candidate([1, 2, 3, 5], [-1,\
  \ 2, 3, 4]),[2, 0, 0, 1]);\n}\n\ntest();"
completions: ["    return game.map((score, i) => Math.abs(score - guess[i]));\n}\n",
  "  let result: number[] = [];\n  for (let i = 0; i < game.length; i++) {\n    if\
    \ (game[i] === guess[i]) {\n      result.push(0);\n    } else {\n      result.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n  }\n  return result;\n}\n", "    let result: number[]\
    \ = [];\n    for (let i = 0; i < game.length; i++) {\n        result.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n    return result;\n}\n", "  let result: number[] = [];\n\
    \  for (let i = 0; i < game.length; i++) {\n    if (game[i] === guess[i]) {\n\
    \      result.push(0);\n    } else {\n      result.push(Math.abs(game[i] - guess[i]));\n\
    \    }\n  }\n  return result;\n}\n", "    let result: number[] = [];\n    for\
    \ (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i]) {\n \
    \           result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    let result:\
    \ number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i]\
    \ === guess[i]) {\n            result.push(0);\n        } else {\n           \
    \ result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n\
    }\n", "  let result: number[] = [];\n  for (let i = 0; i < game.length; i++) {\n\
    \    if (game[i] === guess[i]) {\n      result.push(0);\n    } else {\n      result.push(Math.abs(game[i]\
    \ - guess[i]));\n    }\n  }\n  return result;\n}\n", "    let result: number[]\
    \ = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] ===\
    \ guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    return game.map((score,\
    \ index) => Math.abs(score - guess[index]));\n}\n", "    let result: number[]\
    \ = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i] ===\
    \ guess[i]) {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    return game.map((score,\
    \ i) => {\n        const guessScore = guess[i];\n        return Math.abs(score\
    \ - guessScore);\n    });\n}\n", "  let result: number[] = [];\n  for (let i =\
    \ 0; i < game.length; i++) {\n    if (game[i] === guess[i]) {\n      result.push(0);\n\
    \    } else {\n      result.push(Math.abs(game[i] - guess[i]));\n    }\n  }\n\
    \  return result;\n}\n", "    let result: number[] = [];\n    for (let i = 0;\
    \ i < game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n\
    \        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n  \
    \      }\n    }\n    return result;\n}\n", "    let result: number[] = [];\n \
    \   for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i])\
    \ {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n", "    let result:\
    \ number[] = [];\n    for (let i = 0; i < game.length; i++) {\n        if (game[i]\
    \ === guess[i]) {\n            result.push(0);\n        } else {\n           \
    \ result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n    return result;\n\
    }\n", "    return game.map((score, i) => Math.abs(score - guess[i]));\n}\n", " \
    \   let result: number[] = [];\n    for (let i = 0; i < game.length; i++) {\n\
    \        if (game[i] === guess[i]) {\n            result.push(0);\n        } else\
    \ {\n            result.push(Math.abs(game[i] - guess[i]));\n        }\n    }\n\
    \    return result;\n}\n", "    return game.map((score, i) => Math.abs(score -\
    \ guess[i]));\n}\n", "    let result: number[] = [];\n    for (let i = 0; i <\
    \ game.length; i++) {\n        if (game[i] === guess[i]) {\n            result.push(0);\n\
    \        } else {\n            result.push(Math.abs(game[i] - guess[i]));\n  \
    \      }\n    }\n    return result;\n}\n", "    let result: number[] = [];\n \
    \   for (let i = 0; i < game.length; i++) {\n        if (game[i] === guess[i])\
    \ {\n            result.push(0);\n        } else {\n            result.push(Math.abs(game[i]\
    \ - guess[i]));\n        }\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

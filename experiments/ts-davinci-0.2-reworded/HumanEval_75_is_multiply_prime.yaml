name: HumanEval_75_is_multiply_prime
language: ts
prompt: "//Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n// and false otherwise.\n// Knowing that (a) is less then\
  \ 100. \n// Example:\n// >>> is_multiply_prime(30)\n// true\n// 30 = 2 * 3 * 5\n\
  function is_multiply_prime(a: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = is_multiply_prime;\n  assert.deepEqual(candidate(5),false);\n\
  \  assert.deepEqual(candidate(30),true);\n  assert.deepEqual(candidate(8),true);\n\
  \  assert.deepEqual(candidate(10),false);\n  assert.deepEqual(candidate(125),true);\n\
  \  assert.deepEqual(candidate(105),true);\n  assert.deepEqual(candidate(126),false);\n\
  \  assert.deepEqual(candidate(729),false);\n  assert.deepEqual(candidate(891),false);\n\
  \  assert.deepEqual(candidate(1001),true);\n}\n\ntest();"
completions: ["    let is_prime: boolean = true;\n    let is_multiply_prime: boolean\
    \ = false;\n    let prime_number: number = 0;\n    let prime_number_1: number\
    \ = 0;\n    let prime_number_2: number = 0;\n    for (let i: number = 2; i < a;\
    \ i++) {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j\
    \ == 0) {\n                is_prime = false;\n                break;\n       \
    \     }\n        }\n        if (is_prime) {\n            prime_number = i;\n \
    \           for (let k: number = 2; k < a; k++) {\n                for (let l:\
    \ number = 2; l < k; l++) {\n                    if (k % l == 0) {\n         \
    \               is_prime = false;\n                        break;\n          \
    \          }\n                }\n                if (is_prime) {\n           \
    \         prime_number_1 = k;\n                    for (let m: number = 2; m <\
    \ a; m++) {\n                        for (let n: number = 2; n < m; n++) {\n \
    \                           if (m % n == 0) {\n                              \
    \  is_prime = false;\n                                break;\n               \
    \             }\n                        }\n                        if (is_prime)\
    \ {\n                            prime_number_2 = m;\n                       \
    \     if (prime_number * prime_number_1 * prime_number_2 == a) {\n           \
    \                     is_multiply_prime = true;\n                            \
    \    break;\n                            }\n                        }\n      \
    \                  is_prime = true;\n                    }\n                }\n\
    \                is_prime = true;\n            }\n        }\n        is_prime\
    \ = true;\n    }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n\
    console.log(is_multiply_prime(31));\nconsole.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\n\
    console.log(is_multiply_prime(34));\nconsole.log(is_multiply_prime(35));\nconsole.",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    let primeNumbersLength: number = primeNumbers.length;\n    let\
    \ primeNumbersIndex: number = 0;\n    let primeNumbersIndex2: number = 0;\n  \
    \  let primeNumbersIndex3: number = 0;\n    let primeNumbersIndex4: number = 0;\n\
    \    let primeNumbersIndex5: number = 0;\n    let primeNumbersIndex6: number =\
    \ 0;\n    let primeNumbersIndex7: number = 0;\n    let primeNumbersIndex8: number\
    \ = 0;\n    let primeNumbersIndex9: number = 0;\n    let primeNumbersIndex10:\
    \ number = 0;\n    let primeNumbersIndex11: number = 0;\n    let primeNumbersIndex12:\
    \ number = 0;\n    let primeNumbersIndex13: number = 0;\n    let primeNumbersIndex14:\
    \ number = 0;\n    let primeNumbersIndex15: number = 0;\n    let primeNumbersIndex16:\
    \ number = 0;\n    let primeNumbersIndex17: number = 0;\n    let primeNumbersIndex18:\
    \ number = 0;\n    let primeNumbersIndex19: number = 0;\n    let primeNumbersIndex20:\
    \ number = 0;\n    let primeNumbersIndex21: number = 0;\n    let primeNumbersIndex22:\
    \ number = 0;\n    let primeNumbersIndex23: number = 0;\n    let primeNumbersIndex24:\
    \ number = 0;\n    let primeNumbersIndex25: number = 0;\n    let primeNumbersIndex26:\
    \ number = 0;\n    let primeNumbersIndex27: number = 0;\n    let primeNumbersIndex28:\
    \ number = 0;\n    let primeNumbersIndex29: number = 0;\n    let primeNumbersIndex30:\
    \ number = 0;\n    let primeNumbersIndex31: number = 0;\n    let primeNumbersIndex32:\
    \ number = 0;\n    let primeNumbersIndex33: number = 0;\n    let primeNumbersIndex34:\
    \ number = 0;\n    let primeNumbersIndex35: number = 0;\n    let primeNumbersIndex36:\
    \ number =", "    let isPrime: boolean = true;\n    let isMultiply: boolean =\
    \ false;\n    let counter: number = 0;\n    for (let i: number = 2; i < a; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j == 0)\
    \ {\n                isPrime = false;\n            }\n        }\n        if (isPrime)\
    \ {\n            if (a % i == 0) {\n                counter++;\n            }\n\
    \        }\n        isPrime = true;\n    }\n    if (counter == 3) {\n        isMultiply\
    \ = true;\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n  \
    \  }\n    let isMultiplyPrime: boolean = false;\n    for (let i: number = 0; i\
    \ < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    isMultiplyPrime = true;\n                }\n        \
    \    }\n        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let isMultiply: boolean = false;\n    let\
    \ primeNumbers: number[] = [];\n    let primeNumbersMultiply: number[] = [];\n\
    \    let primeNumbersMultiplySum: number = 0;\n    for (let i: number = 2; i <\
    \ a; i++) {\n        for (let j: number = 2; j < i; j++) {\n            if (i\
    \ % j === 0) {\n                isPrime = false;\n            }\n        }\n \
    \       if (isPrime) {\n            primeNumbers.push(i);\n        }\n       \
    \ isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       primeNumbersMultiply.push(primeNumbers[i] * primeNumbers[j] * primeNumbers[k]);\n\
    \            }\n        }\n    }\n    for (let i: number = 0; i < primeNumbersMultiply.length;\
    \ i++) {\n        if (primeNumbersMultiply[i] === a) {\n            isMultiply\
    \ = true;\n        }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primes: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primes.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primes.length; i++) {\n   \
    \     for (let j: number = 0; j < primes.length; j++) {\n            for (let\
    \ k: number = 0; k < primes.length; k++) {\n                if (primes[i] * primes[j]\
    \ * primes[k] === a) {\n                    result = true;\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "  let result: boolean = false;\n  for (let i: number = 2; i < a; i++) {\n    if\
    \ (a % i === 0) {\n      for (let j: number = 2; j < i; j++) {\n        if (i\
    \ % j === 0) {\n          for (let k: number = 2; k < j; k++) {\n            if\
    \ (j % k === 0) {\n              if (a === i * j * k) {\n                result\
    \ = true;\n              }\n            }\n          }\n        }\n      }\n \
    \   }\n  }\n  return result;\n}\nconsole.log(is_multiply_prime(30));\n", "   \
    \ let is_prime: boolean = true;\n    let prime_numbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j == 0) {\n                is_prime = false;\n      \
    \          break;\n            }\n        }\n        if (is_prime) {\n       \
    \     prime_numbers.push(i);\n        }\n        is_prime = true;\n    }\n   \
    \ let is_multiply: boolean = false;\n    for (let i: number = 0; i < prime_numbers.length;\
    \ i++) {\n        for (let j: number = 0; j < prime_numbers.length; j++) {\n \
    \           for (let k: number = 0; k < prime_numbers.length; k++) {\n       \
    \         if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a) {\n\
    \                    is_multiply = true;\n                }\n            }\n \
    \       }\n    }\n    return is_multiply;\n}\n", "    let isPrime: boolean = true;\n\
    \    let isMultiply: boolean = false;\n    let counter: number = 0;\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (a % i === 0) {\n            isPrime\
    \ = false;\n        }\n    }\n    if (isPrime) {\n        return isMultiply;\n\
    \    }\n    for (let i: number = 2; i < a; i++) {\n        if (a % i === 0) {\n\
    \            for (let j: number = 2; j < a; j++) {\n                if (i % j\
    \ === 0) {\n                    isPrime = false;\n                }\n        \
    \    }\n            if (isPrime) {\n                counter++;\n            }\n\
    \            isPrime = true;\n        }\n    }\n    if (counter === 3) {\n   \
    \     isMultiply = true;\n    }\n    return isMultiply;\n}\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    let i: number = 2;\n    let j: number = 2;\n \
    \   let k: number = 2;\n    for (i; i < a; i++) {\n        if (a % i == 0) {\n\
    \            for (j; j < a; j++) {\n                if (a % j == 0) {\n      \
    \              for (k; k < a; k++) {\n                        if (a % k == 0)\
    \ {\n                            if (i * j * k == a) {\n                     \
    \           return true;\n                            }\n                    \
    \    }\n                    }\n                }\n            }\n        }\n \
    \   }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ isPrime = true;\n    for (let i = 2; i < a; i++) {\n        if (a % i === 0)\
    \ {\n            isPrime = false;\n        }\n    }\n    return isPrime;\n}\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result\
    \ = false;\n    let primeNumbers = [];\n    for (let i = 2; i < a; i++) {\n  \
    \      if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n    }\n\
    \    for (let i = 0; i < primeNumbers.length; i++) {\n        for (let j = 0;\
    \ j < primeNumbers.length; j++) {\n            for (let k = 0; k < primeNumbers.length;\
    \ k++) {\n                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k]\
    \ === a) {\n                    result = true;\n                }\n          \
    \  }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "  let isPrime: boolean = true;\n  for (let i: number = 2; i < a; i++) {\n    if\
    \ (a % i === 0) {\n      isPrime = false;\n    }\n  }\n  return isPrime;\n}\n",
  "    let is_prime = true;\n    for (let i = 2; i < a; i++) {\n        if (a % i\
    \ == 0) {\n            is_prime = false;\n            break;\n        }\n    }\n\
    \    return is_prime;\n}\n", "    let isPrime: boolean = true;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i === 0) {\n            isPrime =\
    \ false;\n        }\n    }\n    return isPrime;\n}\n", "    let result: boolean\
    \ = false;\n    let primeNumbers: number[] = [];\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    let result: boolean = false;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i == 0) {\n            for (let j:\
    \ number = 2; j < a; j++) {\n                if (a % j == 0) {\n             \
    \       for (let k: number = 2; k < a; k++) {\n                        if (a %\
    \ k == 0) {\n                            if (i * j * k == a) {\n             \
    \                   result = true;\n                            }\n          \
    \              }\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let counter: number = 0;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i == 0) {\n            isPrime =\
    \ false;\n            counter++;\n        }\n    }\n    if (counter == 3) {\n\
    \        return true;\n    }\n    else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let counter: number = 0;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        for (let\
    \ j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n              \
    \  isPrime = false;\n                break;\n            }\n        }\n      \
    \  if (isPrime) {\n            primeNumbers.push(i);\n            counter++;\n\
    \        }\n        isPrime = true;\n    }\n    let sum: number = 0;\n    for\
    \ (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let j: number\
    \ = 0; j < primeNumbers.length; j++) {\n            for (let k: number = 0; k\
    \ < primeNumbers.length; k++) {\n                sum = primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k];\n                if (sum == a) {\n                    return\
    \ true;\n                }\n            }\n        }\n    }\n    return false;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let is_multiply_prime: boolean\
    \ = false;\n    let prime_numbers: number[] = [];\n    for (let i: number = 2;\
    \ i < a; i++) {\n        let is_prime: boolean = true;\n        for (let j: number\
    \ = 2; j < i; j++) {\n            if (i % j == 0) {\n                is_prime\
    \ = false;\n            }\n        }\n        if (is_prime) {\n            prime_numbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime_numbers.length; i++)\
    \ {\n        for (let j: number = 0; j < prime_numbers.length; j++) {\n      \
    \      for (let k: number = 0; k < prime_numbers.length; k++) {\n            \
    \    if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a) {\n    \
    \                is_multiply_prime = true;\n                }\n            }\n\
    \        }\n    }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ primeNumbersMultiplied: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\n\n\
    console.log(is_multiply_prime(30));\n", "  let count = 0;\n  for (let i = 2; i\
    \ < a; i++) {\n    if (a % i == 0) {\n      count++;\n    }\n  }\n  if (count\
    \ == 2) {\n    return true;\n  } else {\n    return false;\n  }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = true;\n    let is_multiply_prime: boolean = false;\n\
    \    let counter: number = 0;\n    for (let i: number = 2; i < a; i++) {\n   \
    \     for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n \
    \               is_prime = false;\n                break;\n            }\n   \
    \     }\n        if (is_prime) {\n            if (a % i == 0) {\n            \
    \    counter++;\n            }\n        }\n        is_prime = true;\n    }\n \
    \   if (counter == 3) {\n        is_multiply_prime = true;\n    }\n    return\
    \ is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime:\
    \ number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let i: number = 0;\n    let j: number\
    \ = 0;\n    let k: number = 0;\n    let result: boolean = false;\n    for (i =\
    \ 0; i < prime.length; i++) {\n        for (j = 0; j < prime.length; j++) {\n\
    \            for (k = 0; k < prime.length; k++) {\n                if (prime[i]\
    \ * prime[j] * prime[k] == a) {\n                    result = true;\n        \
    \        }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let isPrime: boolean = true;\n    let isMultiply:\
    \ boolean = false;\n    let counter: number = 0;\n    for (let i: number = 2;\
    \ i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n            if\
    \ (i % j == 0) {\n                isPrime = false;\n            }\n        }\n\
    \        if (isPrime) {\n            if (a % i == 0) {\n                counter++;\n\
    \            }\n        }\n        isPrime = true;\n    }\n    if (counter ==\
    \ 3) {\n        isMultiply = true;\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ i: number = 2;\n    while (i < a) {\n        if (is_prime(i)) {\n          \
    \  primeNumbers.push(i);\n        }\n        i++;\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "  let result: boolean = false;\n  let counter: number = 0;\n  for (let i: number\
    \ = 2; i < a; i++) {\n    if (a % i === 0) {\n      counter++;\n    }\n  }\n \
    \ if (counter === 2) {\n    result = true;\n  }\n  return result;\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let counter: number = 0;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i == 0) {\n            for (let j:\
    \ number = 2; j < i; j++) {\n                if (i % j == 0) {\n             \
    \       counter++;\n                }\n            }\n            if (counter\
    \ == 0) {\n                result = true;\n            }\n        }\n    }\n \
    \   return result;\n}\nconsole.log(is_multiply_prime(30));\n", "  let result:\
    \ boolean = false;\n  let i: number = 2;\n  let j: number = 2;\n  let k: number\
    \ = 2;\n  while (i < a) {\n    while (j < a) {\n      while (k < a) {\n      \
    \  if (i * j * k === a) {\n          result = true;\n        }\n        k++;\n\
    \      }\n      j++;\n    }\n    i++;\n  }\n  return result;\n}\n", "    let is_multiply_prime:\
    \ boolean = false;\n    let prime_numbers: number[] = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   let prime_numbers_length: number = prime_numbers.length;\n    let prime_numbers_index:\
    \ number = 0;\n    let prime_numbers_index_2: number = 0;\n    let prime_numbers_index_3:\
    \ number = 0;\n    let prime_numbers_index_4: number = 0;\n    let prime_numbers_index_5:\
    \ number = 0;\n    let prime_numbers_index_6: number = 0;\n    let prime_numbers_index_7:\
    \ number = 0;\n    let prime_numbers_index_8: number = 0;\n    let prime_numbers_index_9:\
    \ number = 0;\n    let prime_numbers_index_10: number = 0;\n    let prime_numbers_index_11:\
    \ number = 0;\n    let prime_numbers_index_12: number = 0;\n    let prime_numbers_index_13:\
    \ number = 0;\n    let prime_numbers_index_14: number = 0;\n    let prime_numbers_index_15:\
    \ number = 0;\n    let prime_numbers_index_16: number = 0;\n    let prime_numbers_index_17:\
    \ number = 0;\n    let prime_numbers_index_18: number = 0;\n    let prime_numbers_index_19:\
    \ number = 0;\n    let prime_numbers_index_20: number = 0;\n    let prime_numbers_index_21:\
    \ number = 0;\n    let prime_numbers_index_22: number = 0;\n    let prime_numbers_index_23:\
    \ number = 0;\n    let prime_numbers_index_24: number = 0;\n    let prime_numbers_index_25:\
    \ number = 0;\n    let prime_numbers_index_26: number = 0;\n   ", "    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\n", "    let primeNumbers: number[] = [];\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n     \
    \       primeNumbers.push(i);\n        }\n    }\n    for (let i: number = 0; i\
    \ < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n    }\n    return false;\n}\n", "    let is_prime: boolean = true;\n \
    \   let i: number = 2;\n    while (i < a) {\n        if (a % i == 0) {\n     \
    \       is_prime = false;\n            break;\n        }\n        i++;\n    }\n\
    \    return is_prime;\n}\n", "  let isPrime: boolean = true;\n  for (let i: number\
    \ = 2; i < a; i++) {\n    if (a % i === 0) {\n      isPrime = false;\n    }\n\
    \  }\n  return isPrime;\n}\n", "    let prime_numbers: number[] = [2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    let prime_numbers_length: number = prime_numbers.length;\n   \
    \ let prime_numbers_counter: number = 0;\n    let is_multiply_prime: boolean =\
    \ false;\n    for (let i: number = 0; i < prime_numbers_length; i++) {\n     \
    \   if (a % prime_numbers[i] === 0) {\n            prime_numbers_counter++;\n\
    \        }\n    }\n    if (prime_numbers_counter === 3) {\n        is_multiply_prime\
    \ = true;\n    }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let is_prime:\
    \ boolean = false;\n    let prime_numbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n        \
    \    if (i % j === 0) {\n                is_prime = false;\n                break;\n\
    \            } else {\n                is_prime = true;\n            }\n     \
    \   }\n        if (is_prime) {\n            prime_numbers.push(i);\n        }\n\
    \    }\n    let is_multiply: boolean = false;\n    for (let i: number = 0; i <\
    \ prime_numbers.length; i++) {\n        for (let j: number = 0; j < prime_numbers.length;\
    \ j++) {\n            for (let k: number = 0; k < prime_numbers.length; k++) {\n\
    \                if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] ===\
    \ a) {\n                    is_multiply = true;\n                }\n         \
    \   }\n        }\n    }\n    return is_multiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "  let result: boolean = false;\n  let primeNumbers: number[] = [];\n  for (let\
    \ i: number = 2; i < a; i++) {\n    if (is_prime(i)) {\n      primeNumbers.push(i);\n\
    \    }\n  }\n  for (let i: number = 0; i < primeNumbers.length; i++) {\n    for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n      for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n          result = true;\n        }\n      }\n \
    \   }\n  }\n  return result;\n}\n\nconsole.log(is_multiply_prime(30));\n", " \
    \   let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ primeNumbersMultiplied: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                primeNumbersMultiplied.push(primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k]);\n            }\n        }\n    }\n   \
    \ for (let i: number = 0; i < primeNumbersMultiplied.length; i++) {\n        if\
    \ (primeNumbersMultiplied[i] === a) {\n            result = true;\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    let primeNumbersMultiplied:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime:\
    \ boolean = true;\n    let isMultiply: boolean = false;\n    let counter: number\
    \ = 0;\n    let primeNumbers: number[] = [];\n    for (let i: number = 2; i <\
    \ a; i++) {\n        for (let j: number = 2; j < i; j++) {\n            if (i\
    \ % j === 0) {\n                isPrime = false;\n            }\n        }\n \
    \       if (isPrime) {\n            primeNumbers.push(i);\n        }\n       \
    \ isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 isMultiply = true;\n                }\n            }\n     \
    \   }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let result: boolean =\
    \ false;\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n      \
    \  for (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let\
    \ k: number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let isPrime: boolean = true;\n    let isMultiply:\
    \ boolean = false;\n    let counter: number = 0;\n    let primeNumbers: number[]\
    \ = [];\n    for (let i: number = 2; i < a; i++) {\n        for (let j: number\
    \ = 2; j < i; j++) {\n            if (i % j === 0) {\n                isPrime\
    \ = false;\n            }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = i + 1; j < primeNumbers.length; j++) {\n\
    \            for (let k: number = j + 1; k < primeNumbers.length; k++) {\n   \
    \             if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n\
    \                    counter++;\n                }\n            }\n        }\n\
    \    }\n    if (counter > 0) {\n        isMultiply = true;\n    }\n    return\
    \ isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean\
    \ = false;\n    let primes: number[] = [];\n    let counter: number = 0;\n   \
    \ for (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n        \
    \    primes.push(i);\n        }\n    }\n    for (let i: number = 0; i < primes.length;\
    \ i++) {\n        for (let j: number = 0; j < primes.length; j++) {\n        \
    \    for (let k: number = 0; k < primes.length; k++) {\n                if (primes[i]\
    \ * primes[j] * primes[k] === a) {\n                    counter++;\n         \
    \       }\n            }\n        }\n    }\n    if (counter > 0) {\n        result\
    \ = true;\n    }\n    return result;\n}\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\n",
  "    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n  \
    \  }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime = true;\n    for (let i = 2; i < a; i++) {\n        if (a % i ===\
    \ 0) {\n            isPrime = false;\n        }\n    }\n    return isPrime;\n\
    }\n", "    let is_prime: boolean = true;\n    let counter: number = 0;\n    let\
    \ prime_numbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n \
    \       for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n\
    \                is_prime = false;\n            }\n        }\n        if (is_prime)\
    \ {\n            prime_numbers.push(i);\n        }\n        is_prime = true;\n\
    \    }\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n       \
    \ for (let j: number = i + 1; j < prime_numbers.length; j++) {\n            for\
    \ (let k: number = j + 1; k < prime_numbers.length; k++) {\n                if\
    \ (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a) {\n          \
    \          counter++;\n                }\n            }\n        }\n    }\n  \
    \  if (counter > 0) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\nconsole.log(is_multiply_prime(30));\n", "    let is_prime: boolean\
    \ = true;\n    let is_multiply_prime: boolean = false;\n    let prime_numbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        for (let\
    \ j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n              \
    \  is_prime = false;\n            }\n        }\n        if (is_prime) {\n    \
    \        prime_numbers.push(i);\n        }\n        is_prime = true;\n    }\n\
    \    for (let i: number = 0; i < prime_numbers.length; i++) {\n        for (let\
    \ j: number = 0; j < prime_numbers.length; j++) {\n            for (let k: number\
    \ = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let isPrime = true;\n    for (let\
    \ i = 2; i < a; i++) {\n        if (a % i === 0) {\n            isPrime = false;\n\
    \        }\n    }\n    return isPrime;\n}\n", "    let result: boolean = false;\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n      \
    \      for (let j: number = 2; j < a; j++) {\n                if (a % j == 0)\
    \ {\n                    for (let k: number = 2; k < a; k++) {\n             \
    \           if (a % k == 0) {\n                            if (a == i * j * k)\
    \ {\n                                result = true;\n                        \
    \    }\n                        }\n                    }\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j === 0) {\n                isPrime = false;\n      \
    \          break;\n            }\n        }\n        if (isPrime) {\n        \
    \    primeNumbers.push(i);\n        }\n        isPrime = true;\n    }\n    let\
    \ isMultiplyPrime: boolean = false;\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = i; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = j; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 isMultiplyPrime = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let isMultiplyPrime: boolean = false;\n \
    \   let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j ===\
    \ 0) {\n                isPrime = false;\n                break;\n           \
    \ }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n  \
    \      }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 isMultiplyPrime = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let isMultiplyPrime: boolean = false;\n \
    \   let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j ===\
    \ 0) {\n                isPrime = false;\n                break;\n           \
    \ }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n  \
    \      }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 isMultiplyPrime = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let result: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "  let isPrime:\
    \ boolean = true;\n  for (let i: number = 2; i < a; i++) {\n    if (a % i ===\
    \ 0) {\n      isPrime = false;\n    }\n  }\n  return isPrime;\n}\n", "    let\
    \ is_prime = true;\n    for (let i = 2; i < a; i++) {\n        if (a % i == 0)\
    \ {\n            is_prime = false;\n            break;\n        }\n    }\n   \
    \ return is_prime;\n}\n", "    let isPrime: boolean = true;\n    let counter:\
    \ number = 0;\n    for (let i: number = 2; i < a; i++) {\n        if (a % i ==\
    \ 0) {\n            for (let j: number = 2; j < i; j++) {\n                if\
    \ (i % j == 0) {\n                    isPrime = false;\n                }\n  \
    \          }\n            if (isPrime) {\n                counter++;\n       \
    \     }\n            isPrime = true;\n        }\n    }\n    if (counter == 3)\
    \ {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\
    console.log(is_multiply_prime(30));\n", "    let is_prime: boolean = true;\n \
    \   let i: number = 2;\n    while (i < a) {\n        if (a % i == 0) {\n     \
    \       is_prime = false;\n            break;\n        }\n        i++;\n    }\n\
    \    return is_prime;\n}\n", "    let result: boolean = false;\n    let i: number\
    \ = 2;\n    let j: number = 2;\n    let k: number = 2;\n    while (i < a) {\n\
    \        while (j < a) {\n            while (k < a) {\n                if (i *\
    \ j * k == a) {\n                    result = true;\n                }\n     \
    \           k++;\n            }\n            j++;\n        }\n        i++;\n \
    \   }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let is_prime:\
    \ boolean = true;\n    for (let i: number = 2; i < a; i++) {\n        if (a %\
    \ i == 0) {\n            is_prime = false;\n        }\n    }\n    return is_prime;\n\
    }\n", "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n     \
    \       primeNumbers.push(i);\n        }\n    }\n    for (let i: number = 0; i\
    \ < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let is_prime:\
    \ boolean = true;\n    let is_multiply_prime: boolean = false;\n    let prime_numbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        for (let\
    \ j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n              \
    \  is_prime = false;\n            }\n        }\n        if (is_prime) {\n    \
    \        prime_numbers.push(i);\n        }\n        is_prime = true;\n    }\n\
    \    for (let i: number = 0; i < prime_numbers.length; i++) {\n        for (let\
    \ j: number = 0; j < prime_numbers.length; j++) {\n            for (let k: number\
    \ = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let primeNumbersLength:\
    \ number = primeNumbers.length;\n    for (let i: number = 0; i < primeNumbersLength;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbersLength; j++) {\n   \
    \         for (let k: number = 0; k < primeNumbersLength; k++) {\n           \
    \     if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n     \
    \               result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(31));\n\
    console.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\nconsole.log(is_multiply_prime(34));\n\
    console.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\nconsole.log(is_multiply_prime(37));\n\
    console.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\nconsole.log(is_multiply_prime(40));\n\
    console.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\nconsole.log(is_multiply_prime(43));\n\
    console.log(is_multiply_prime(44));\nconsole.log(is_multiply_prime(45));\nconsole.log(is_multiply_prime(46));\n\
    console.log(is_multiply_prime(47));\nconsole.log(is_multiply_prime(48));\nconsole.log(is_multiply_prime(49));\n\
    console.log(is_multiply_prime(50));\nconsole.log", "    let isPrime: boolean =\
    \ true;\n    let primeNumbers: number[] = [];\n    for (let i: number = 2; i <\
    \ a; i++) {\n        for (let j: number = 2; j < i; j++) {\n            if (i\
    \ % j === 0) {\n                isPrime = false;\n                break;\n   \
    \         }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    let isMultiply: boolean = false;\n\
    \    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let\
    \ j: number = 0; j < primeNumbers.length; j++) {\n            for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i] *\
    \ primeNumbers[j] * primeNumbers[k] === a) {\n                    isMultiply =\
    \ true;\n                }\n            }\n        }\n    }\n    return isMultiply;\n\
    }\n\nconsole.log(is_multiply_prime(30));\n", "    let is_prime: boolean = true;\n\
    \    let is_multiply_prime: boolean = false;\n    let prime_numbers: number[]\
    \ = [];\n    let prime_numbers_multiply: number = 1;\n    for (let i: number =\
    \ 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n          \
    \  if (i % j == 0) {\n                is_prime = false;\n                break;\n\
    \            }\n        }\n        if (is_prime) {\n            prime_numbers.push(i);\n\
    \        }\n        is_prime = true;\n    }\n    for (let i: number = 0; i < prime_numbers.length;\
    \ i++) {\n        for (let j: number = i + 1; j < prime_numbers.length; j++) {\n\
    \            for (let k: number = j + 1; k < prime_numbers.length; k++) {\n  \
    \              prime_numbers_multiply = prime_numbers[i] * prime_numbers[j] *\
    \ prime_numbers[k];\n                if (prime_numbers_multiply == a) {\n    \
    \                is_multiply_prime = true;\n                    break;\n     \
    \           }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let isPrime: boolean = true;\n\
    \    let counter: number = 0;\n    for (let i: number = 2; i < a; i++) {\n   \
    \     if (a % i == 0) {\n            isPrime = false;\n            break;\n  \
    \      }\n    }\n    if (isPrime) {\n        counter++;\n    }\n    return counter\
    \ == 3;\n}\n\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean\
    \ = false;\n    let primeNumbers: number[] = [];\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        let isPrime: boolean = true;\n        for (let j:\
    \ number = 2; j < i; j++) {\n            if (i % j == 0) {\n                isPrime\
    \ = false;\n                break;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let isMultiplyPrime: boolean\
    \ = false;\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n    \
    \    for (let j: number = 0; j < primeNumbers.length; j++) {\n            for\
    \ (let k: number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    isMultiplyPrime\
    \ = true;\n                }\n            }\n        }\n    }\n    return isMultiplyPrime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let isPrime: boolean = true;\n\
    \    let isMultiply: boolean = false;\n    let count: number = 0;\n    for (let\
    \ i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n\
    \            if (i % j == 0) {\n                isPrime = false;\n           \
    \     break;\n            }\n        }\n        if (isPrime) {\n            if\
    \ (a % i == 0) {\n                count++;\n            }\n        }\n       \
    \ isPrime = true;\n    }\n    if (count == 3) {\n        isMultiply = true;\n\
    \    }\n    return isMultiply;\n}\n", "    let isPrime: boolean = true;\n    let\
    \ counter: number = 0;\n    for (let i: number = 2; i < a; i++) {\n        if\
    \ (a % i == 0) {\n            for (let j: number = 2; j < i; j++) {\n        \
    \        if (i % j == 0) {\n                    isPrime = false;\n           \
    \     }\n            }\n            if (isPrime) {\n                counter++;\n\
    \            }\n            isPrime = true;\n        }\n    }\n    if (counter\
    \ == 3) {\n        return true;\n    }\n    else {\n        return false;\n  \
    \  }\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime: boolean = true;\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (a % i === 0) {\n     \
    \       isPrime = false;\n        }\n    }\n    return isPrime;\n}\n", "    let\
    \ result: boolean = false;\n    for (let i: number = 2; i < a; i++) {\n      \
    \  if (a % i == 0) {\n            for (let j: number = 2; j < a; j++) {\n    \
    \            if (a % j == 0) {\n                    for (let k: number = 2; k\
    \ < a; k++) {\n                        if (a % k == 0) {\n                   \
    \         if (i * j * k == a) {\n                                result = true;\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n\
    \    for (let i: number = 2; i < a; i++) {\n        let isPrime: boolean = true;\n\
    \        for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n\
    \                isPrime = false;\n                break;\n            }\n   \
    \     }\n        if (isPrime) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] == a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let isPrime: boolean = true;\n    let isMultiply:\
    \ boolean = false;\n    let counter: number = 0;\n    let primeNumbers: number[]\
    \ = [];\n    for (let i: number = 2; i < a; i++) {\n        isPrime = true;\n\
    \        for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n\
    \                isPrime = false;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a)\
    \ {\n                    isMultiply = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let isMultiply: boolean = false;\n    let\
    \ primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n  \
    \      for (let j: number = 2; j < i; j++) {\n            if (i % j === 0) {\n\
    \                isPrime = false;\n            }\n        }\n        if (isPrime)\
    \ {\n            primeNumbers.push(i);\n        }\n        isPrime = true;\n \
    \   }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = i + 1; j < primeNumbers.length; j++) {\n            for (let\
    \ k: number = j + 1; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    isMultiply\
    \ = true;\n                }\n            }\n        }\n    }\n    return isMultiply;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let isPrime: boolean = true;\n\
    \    let isMultiply: boolean = false;\n    let primeNumbers: number[] = [];\n\
    \    for (let i: number = 2; i < a; i++) {\n        isPrime = true;\n        for\
    \ (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n         \
    \       isPrime = false;\n            }\n        }\n        if (isPrime) {\n \
    \           primeNumbers.push(i);\n        }\n    }\n    for (let i: number =\
    \ 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] == a)\
    \ {\n                    isMultiply = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime = true;\n    let counter = 0;\n    for (let i = 2; i < a; i++)\
    \ {\n        if (a % i == 0) {\n            isPrime = false;\n            break;\n\
    \        }\n    }\n    if (isPrime) {\n        return true;\n    }\n    else {\n\
    \        for (let i = 2; i < a; i++) {\n            if (a % i == 0) {\n      \
    \          counter++;\n                if (counter == 3) {\n                 \
    \   return true;\n                }\n            }\n        }\n    }\n    return\
    \ false;\n}\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(31));\n\
    console.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\nconsole.log(is_multiply_prime(34));\n\
    console.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\nconsole.log(is_multiply_prime(37));\n\
    console.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\nconsole.log(is_multiply_prime(40));\n\
    console.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\nconsole.log(is_multiply_prime(43));\n\
    console.log(is_multiply_prime(44));\nconsole.log(is_multiply_prime(45));\nconsole.log(is_multiply_prime(46));\n\
    console.log(is_multiply_prime(47));\nconsole.log(is_multiply_prime(48));\nconsole.log(is_multiply_prime(49));\n\
    console.log(is_multiply_prime(50));\nconsole.log(is_multiply_prime(51));\nconsole.log(is_multiply_prime(52));\n\
    console.log(is_multiply_prime(53));\nconsole.log(is_multip", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime\
    \ = true;\n    for (let i = 2; i < a; i++) {\n        if (a % i === 0) {\n   \
    \         isPrime = false;\n        }\n    }\n    return isPrime;\n}\n", "   \
    \ let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n  \
    \  }\n    let result: boolean = false;\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ result: boolean = false;\n    for (let i: number = 2; i < a; i++) {\n      \
    \  if (a % i == 0) {\n            for (let j: number = 2; j < i; j++) {\n    \
    \            if (i % j == 0) {\n                    for (let k: number = 2; k\
    \ < j; k++) {\n                        if (j % k == 0) {\n                   \
    \         if (a == i * j * k) {\n                                result = true;\n\
    \                            }\n                        }\n                  \
    \  }\n                }\n            }\n        }\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers: number[] = [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let isMultiplyPrime: boolean = false;\n    for (let i:\
    \ number = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0;\
    \ j < primeNumbers.length; j++) {\n            for (let k: number = 0; k < primeNumbers.length;\
    \ k++) {\n                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k]\
    \ === a) {\n                    isMultiplyPrime = true;\n                }\n \
    \           }\n        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let b: number = 2;\n    while (b < a) {\n\
    \        if (a % b == 0) {\n            isPrime = false;\n            break;\n\
    \        }\n        b++;\n    }\n    return isPrime;\n}", "    let isPrime: boolean\
    \ = true;\n    for (let i: number = 2; i < a; i++) {\n        if (a % i === 0)\
    \ {\n            isPrime = false;\n        }\n    }\n    return isPrime;\n}\n",
  "    let primeNumbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let result: boolean =\
    \ false;\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n      \
    \  for (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let\
    \ k: number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let counter: number = 0;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i == 0) {\n            counter++;\n\
    \        }\n    }\n    if (counter == 2) {\n        result = true;\n    }\n  \
    \  return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime_numbers:\
    \ number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_factors: number[] = [];\n  \
    \  let prime_factors_count: number = 0;\n    for (let i: number = 0; i < prime_numbers.length;\
    \ i++) {\n        if (a % prime_numbers[i] == 0) {\n            prime_factors.push(prime_numbers[i]);\n\
    \            prime_factors_count++;\n        }\n    }\n    if (prime_factors_count\
    \ == 3) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let is_prime: boolean = true;\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n      \
    \      is_prime = false;\n        }\n    }\n    return is_prime;\n}\n", "    let\
    \ prime_numbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_multiply:\
    \ number[] = [];\n    let prime_numbers_multiply_2: number[] = [];\n    let prime_numbers_multiply_3:\
    \ number[] = [];\n    let prime_numbers_multiply_4: number[] = [];\n    let prime_numbers_multiply_5:\
    \ number[] = [];\n    let prime_numbers_multiply_6: number[] = [];\n    let prime_numbers_multiply_7:\
    \ number[] = [];\n    let prime_numbers_multiply_8: number[] = [];\n    let prime_numbers_multiply_9:\
    \ number[] = [];\n    let prime_numbers_multiply_10: number[] = [];\n    let prime_numbers_multiply_11:\
    \ number[] = [];\n    let prime_numbers_multiply_12: number[] = [];\n    let prime_numbers_multiply_13:\
    \ number[] = [];\n    let prime_numbers_multiply_14: number[] = [];\n    let prime_numbers_multiply_15:\
    \ number[] = [];\n    let prime_numbers_multiply_16: number[] = [];\n    let prime_numbers_multiply_17:\
    \ number[] = [];\n    let prime_numbers_multiply_18: number[] = [];\n    let prime_numbers_multiply_19:\
    \ number[] = [];\n    let prime_numbers_multiply_20: number[] = [];\n    let prime_numbers_multiply_21:\
    \ number[] = [];\n    let prime_numbers_multiply_22: number[] = [];\n    let prime_numbers_multiply_23:\
    \ number[] = [];\n    let prime_numbers_multiply_24: number[] = [];\n    let prime_numbers_multiply_25:\
    \ number[] = [];\n   ", "    let is_multiply_prime: boolean = false;\n    let\
    \ prime_numbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (is_prime(i)) {\n            prime_numbers.push(i);\n        }\n  \
    \  }\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n        for\
    \ (let j: number = 0; j < prime_numbers.length; j++) {\n            for (let k:\
    \ number = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let is_multiply_prime: boolean\
    \ = false;\n    let prime_numbers: number[] = [];\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (is_prime(i)) {\n            prime_numbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime_numbers.length; i++)\
    \ {\n        for (let j: number = 0; j < prime_numbers.length; j++) {\n      \
    \      for (let k: number = 0; k < prime_numbers.length; k++) {\n            \
    \    if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] === a) {\n   \
    \                 is_multiply_prime = true;\n                }\n            }\n\
    \        }\n    }\n    return is_multiply_prime;\n}\n", "    let result: boolean\
    \ = false;\n    let primeNumbers: number[] = [];\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    let isMultiplyPrime:\
    \ boolean = false;\n    for (let i: number = 0; i < primeNumbers.length; i++)\
    \ {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n       \
    \     for (let k: number = 0; k < primeNumbers.length; k++) {\n              \
    \  if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n        \
    \            isMultiplyPrime = true;\n                }\n            }\n     \
    \   }\n    }\n    return isMultiplyPrime;\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ primeNumbersMultiply: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n  \
    \  }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let counter: number = 0;\n    for (let i: number = 2; i < a; i++) {\n     \
    \   if (a % i == 0) {\n            counter++;\n        }\n    }\n    if (counter\
    \ == 2) {\n        return true;\n    }\n    else {\n        return false;\n  \
    \  }\n}\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n      \
    \      for (let j: number = 2; j < a; j++) {\n                if (a % j == 0)\
    \ {\n                    for (let k: number = 2; k < a; k++) {\n             \
    \           if (a % k == 0) {\n                            if (a == i * j * k)\
    \ {\n                                result = true;\n                        \
    \    }\n                        }\n                    }\n                }\n\
    \            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime_numbers: number[] = [];\n    let is_prime: boolean = true;\n    for\
    \ (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j == 0) {\n                is_prime = false;\n      \
    \      }\n        }\n        if (is_prime) {\n            prime_numbers.push(i);\n\
    \        }\n        is_prime = true;\n    }\n    let counter: number = 0;\n  \
    \  for (let i: number = 0; i < prime_numbers.length; i++) {\n        for (let\
    \ j: number = i; j < prime_numbers.length; j++) {\n            for (let k: number\
    \ = j; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    counter++;\n\
    \                }\n            }\n        }\n    }\n    if (counter > 0) {\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "  let result: boolean = false;\n  let primeNumbers: number[] = [];\n  for (let\
    \ i: number = 2; i < a; i++) {\n    if (is_prime(i)) {\n      primeNumbers.push(i);\n\
    \    }\n  }\n  for (let i: number = 0; i < primeNumbers.length; i++) {\n    for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n      for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n          result = true;\n        }\n      }\n \
    \   }\n  }\n  return result;\n}\n\nconsole.log(is_multiply_prime(30));\n", " \
    \   let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    let primeNumbers: number[] = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    let primeNumbers2: number[] = [];\n    let primeNumbers3: number[]\
    \ = [];\n    let primeNumbers4: number[] = [];\n    let primeNumbers5: number[]\
    \ = [];\n    let primeNumbers6: number[] = [];\n    let primeNumbers7: number[]\
    \ = [];\n    let primeNumbers8: number[] = [];\n    let primeNumbers9: number[]\
    \ = [];\n    let primeNumbers10: number[] = [];\n    let primeNumbers11: number[]\
    \ = [];\n    let primeNumbers12: number[] = [];\n    let primeNumbers13: number[]\
    \ = [];\n    let primeNumbers14: number[] = [];\n    let primeNumbers15: number[]\
    \ = [];\n    let primeNumbers16: number[] = [];\n    let primeNumbers17: number[]\
    \ = [];\n    let primeNumbers18: number[] = [];\n    let primeNumbers19: number[]\
    \ = [];\n    let primeNumbers20: number[] = [];\n    let primeNumbers21: number[]\
    \ = [];\n    let primeNumbers22: number[] = [];\n    let primeNumbers23: number[]\
    \ = [];\n    let primeNumbers24: number[] = [];\n    let primeNumbers25: number[]\
    \ = [];\n    let primeNumbers26: number[] = [];\n    let primeNumbers27: number[]\
    \ = [];\n    let primeNumbers28: number[] = [];\n    let primeNumbers29: number[]\
    \ = [];\n    let primeNumbers30: number[] = [];\n    let primeNumbers31: number[]\
    \ = [];\n    let primeNumbers32: number[] = [];\n    let primeNumbers33: number[]\
    \ = [];\n    let primeNumbers34: number[] = [];\n    let primeNumbers35: number[]\
    \ = [];\n    let primeNumbers36: number[] = [];\n    let primeNumbers37: number[]\
    \ = [];\n    let primeNumbers38: number[] = [];\n    let primeNumbers39: number[]\
    \ = [];\n    let primeNumbers40: number[] = [];\n    let primeNumbers41: number[]\
    \ = [];\n    let primeNumbers42: number[] = [];\n", "    let isPrime: boolean\
    \ = true;\n    for (let i: number = 2; i < a; i++) {\n        if (a % i === 0)\
    \ {\n            isPrime = false;\n        }\n    }\n    return isPrime;\n}\n",
  "    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n  \
    \  }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        let isPrime: boolean = true;\n  \
    \      for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n\
    \                isPrime = false;\n                break;\n            }\n   \
    \     }\n        if (isPrime) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] == a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = true;\n    let is_multiply_prime: boolean = false;\n\
    \    let prime_numbers: number[] = [];\n    let prime_numbers_multiply: number\
    \ = 1;\n    for (let i: number = 2; i < a; i++) {\n        for (let j: number\
    \ = 2; j < i; j++) {\n            if (i % j == 0) {\n                is_prime\
    \ = false;\n                break;\n            }\n        }\n        if (is_prime)\
    \ {\n            prime_numbers.push(i);\n        }\n        is_prime = true;\n\
    \    }\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n       \
    \ for (let j: number = i + 1; j < prime_numbers.length; j++) {\n            for\
    \ (let k: number = j + 1; k < prime_numbers.length; k++) {\n                prime_numbers_multiply\
    \ = prime_numbers[i] * prime_numbers[j] * prime_numbers[k];\n                if\
    \ (prime_numbers_multiply == a) {\n                    is_multiply_prime = true;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \ }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ primeNumbersCount: number = 0;\n    let primeNumbersMultiply: number = 1;\n\
    \    for (let i: number = 2; i < 100; i++) {\n        for (let j: number = 2;\
    \ j < i; j++) {\n            if (i % j == 0) {\n                break;\n     \
    \       }\n            if (j == i - 1) {\n                primeNumbers.push(i);\n\
    \            }\n        }\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        if (a % primeNumbers[i] == 0) {\n            primeNumbersCount++;\n\
    \            primeNumbersMultiply *= primeNumbers[i];\n        }\n    }\n    if\
    \ (primeNumbersCount == 3 && primeNumbersMultiply == a) {\n        result = true;\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ is_multiply_prime: boolean = false;\n    let prime_numbers: number[] = [2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    let prime_numbers_length: number = prime_numbers.length;\n\
    \    let prime_numbers_counter: number = 0;\n    let prime_numbers_sum: number\
    \ = 0;\n    let prime_numbers_sum_counter: number = 0;\n    let prime_numbers_sum_counter_length:\
    \ number = 0;\n    let prime_numbers_sum_counter_length_counter: number = 0;\n\
    \    let prime_numbers_sum_counter_length_counter_length: number = 0;\n    let\
    \ prime_numbers_sum_counter_length_counter_length_counter: number = 0;\n    let\
    \ prime_numbers_sum_counter_length_counter_length_counter_length: number = 0;\n\
    \    let prime_numbers_sum_counter_length_counter_length_counter_length_counter:\
    \ number = 0;\n    let prime_numbers_sum_counter_length_counter_length_counter_length_counter_length:\
    \ number = 0;\n    let prime_numbers_sum_counter_length_counter_length_counter_length_counter_length_counter:\
    \ number = 0;\n    let prime_numbers_sum_counter_length_counter_length_counter_length_counter_length_counter_length:\
    \ number = 0;\n    let prime_numbers_sum_counter_length_counter_length_counter_length_counter_length_counter_length_counter:\
    \ number = 0;\n    let prime_numbers_sum_counter_length_counter_length_counter_length_counter_length_counter_length_counter_length:\
    \ number = 0;\n    let prime_numbers_sum_counter_length_counter_length_counter_length_counter_length_counter_length_counter_length_counter:\
    \ number = 0;\n    let prime_numbers_sum_counter_length_counter_length_counter_length_counter_",
  "    let prime_numbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_count:\
    \ number = 0;\n    let prime_numbers_sum: number = 0;\n    for (let i: number\
    \ = 0; i < prime_numbers.length; i++) {\n        if (a % prime_numbers[i] == 0)\
    \ {\n            prime_numbers_count++;\n            prime_numbers_sum += prime_numbers[i];\n\
    \        }\n    }\n    if (prime_numbers_count == 3 && prime_numbers_sum == a)\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    for (let i = 2; i < a; i++) {\n        if (a % i === 0) {\n            for\
    \ (let j = 2; j < a; j++) {\n                if (a % j === 0) {\n            \
    \        for (let k = 2; k < a; k++) {\n                        if (a % k ===\
    \ 0) {\n                            return true;\n                        }\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return false;\n}\nconsole.log(is_multiply_prime(30));\n", "  let result: boolean\
    \ = false;\n  let primeNumbers: number[] = [];\n  let primeNumbersMultiplied:\
    \ number[] = [];\n  for (let i: number = 2; i < a; i++) {\n    if (is_prime(i))\
    \ {\n      primeNumbers.push(i);\n    }\n  }\n  for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n    for (let j: number = 0; j < primeNumbers.length; j++) {\n      for\
    \ (let k: number = 0; k < primeNumbers.length; k++) {\n        primeNumbersMultiplied.push(primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k]);\n      }\n    }\n  }\n  for (let i: number\
    \ = 0; i < primeNumbersMultiplied.length; i++) {\n    if (primeNumbersMultiplied[i]\
    \ === a) {\n      result = true;\n    }\n  }\n  return result;\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        let isPrime: boolean = true;\n  \
    \      for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n\
    \                isPrime = false;\n                break;\n            }\n   \
    \     }\n        if (isPrime) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] == a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "  let isPrime: boolean = true;\n  let isMultiplyPrime: boolean = false;\n  let\
    \ primeNumbers: number[] = [];\n  for (let i: number = 2; i < a; i++) {\n    for\
    \ (let j: number = 2; j < i; j++) {\n      if (i % j === 0) {\n        isPrime\
    \ = false;\n      }\n    }\n    if (isPrime) {\n      primeNumbers.push(i);\n\
    \    }\n    isPrime = true;\n  }\n  for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n    for (let j: number = 0; j < primeNumbers.length; j++) {\n      for\
    \ (let k: number = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n          isMultiplyPrime = true;\n\
    \        }\n      }\n    }\n  }\n  return isMultiplyPrime;\n}\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    let primeNumbersMultiplied:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime_numbers:\
    \ number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_length: number = prime_numbers.length;\n\
    \    let is_multiply_prime: boolean = false;\n    for (let i: number = 0; i <\
    \ prime_numbers_length; i++) {\n        for (let j: number = 0; j < prime_numbers_length;\
    \ j++) {\n            for (let k: number = 0; k < prime_numbers_length; k++) {\n\
    \                if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] ===\
    \ a) {\n                    is_multiply_prime = true;\n                }\n   \
    \         }\n        }\n    }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    let primeNumbersLength: number = primeNumbers.length;\n\
    \    for (let i: number = 0; i < primeNumbersLength; i++) {\n        for (let\
    \ j: number = 0; j < primeNumbersLength; j++) {\n            for (let k: number\
    \ = 0; k < primeNumbersLength; k++) {\n                if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n                    result = true;\n           \
    \     }\n            }\n        }\n    }\n    return result;\n}\n", "    let result:\
    \ boolean = false;\n    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    let isPrime: boolean = true;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        for (let\
    \ j: number = 2; j < i; j++) {\n            if (i % j === 0) {\n             \
    \   isPrime = false;\n                break;\n            }\n        }\n     \
    \   if (isPrime) {\n            primeNumbers.push(i);\n        }\n        isPrime\
    \ = true;\n    }\n    let isMultiplyPrime: boolean = false;\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    isMultiplyPrime = true;\n                }\n        \
    \    }\n        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n  \
    \  }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let result: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\n", "    let is_prime: boolean = true;\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n      \
    \      is_prime = false;\n        }\n    }\n    return is_prime;\n}\n", "    let\
    \ is_prime: boolean = true;\n    let is_multiply_prime: boolean = false;\n   \
    \ let prime_numbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n\
    \        for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n\
    \                is_prime = false;\n            }\n        }\n        if (is_prime)\
    \ {\n            prime_numbers.push(i);\n        }\n        is_prime = true;\n\
    \    }\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n       \
    \ for (let j: number = 0; j < prime_numbers.length; j++) {\n            for (let\
    \ k: number = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers: number[] = [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let result: boolean = false;\n    for (let i: number =\
    \ 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime:\
    \ number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let isPrime: boolean = false;\n    for\
    \ (let i: number = 0; i < prime.length; i++) {\n        if (a % prime[i] === 0)\
    \ {\n            isPrime = true;\n        }\n    }\n    return isPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime_numbers: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let prime_numbers_length:\
    \ number = prime_numbers.length;\n    let prime_numbers_counter: number = 0;\n\
    \    for (let i: number = 0; i < prime_numbers_length; i++) {\n        if (a %\
    \ prime_numbers[i] === 0) {\n            prime_numbers_counter++;\n        }\n\
    \    }\n    if (prime_numbers_counter === 3) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime = true;\n    let i = 2;\n    while (i < a) {\n        if (a % i\
    \ === 0) {\n            isPrime = false;\n            break;\n        }\n    \
    \    i++;\n    }\n    return isPrime;\n}\n", "    let primeNumbers: number[] =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    let isMultiplyPrime: boolean = false;\n    for (let\
    \ i: number = 0; i < primeNumbers.length; i++) {\n        for (let j: number =\
    \ 0; j < primeNumbers.length; j++) {\n            for (let k: number = 0; k <\
    \ primeNumbers.length; k++) {\n                if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n                    isMultiplyPrime = true;\n  \
    \              }\n            }\n        }\n    }\n    return isMultiplyPrime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let isPrime: boolean = true;\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (a % i === 0) {\n     \
    \       isPrime = false;\n        }\n    }\n    return isPrime;\n}\n", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let prime:\
    \ boolean = true;\n    let i: number = 2;\n    while (i < a) {\n        if (a\
    \ % i == 0) {\n            if (is_prime(i)) {\n                if (is_prime(a\
    \ / i)) {\n                    return true;\n                }\n            }\n\
    \        }\n        i++;\n    }\n    return false;\n}\n", "    let result: boolean\
    \ = false;\n    let primeNumbers: number[] = [];\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let is_prime:\
    \ boolean = true;\n    for (let i: number = 2; i < a; i++) {\n        if (a %\
    \ i == 0) {\n            is_prime = false;\n        }\n    }\n    return is_prime;\n\
    }\n", "    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a;\
    \ i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n    \
    \    }\n    }\n    let result: boolean = false;\n    for (let i: number = 0; i\
    \ < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let i: number = 2;\n    while (i < a) {\n\
    \        if (a % i == 0) {\n            isPrime = false;\n            break;\n\
    \        }\n        i++;\n    }\n    return isPrime;\n}\n", "    let result: boolean\
    \ = false;\n    let primeNumbers: number[] = [];\n    for (let i: number = 2;\
    \ i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    let result: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    let\
    \ primeNumbersMultiplied: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        let isPrime: boolean = true;\n        for (let j: number = 2; j <\
    \ i; j++) {\n            if (i % j == 0) {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if (isPrime) {\n  \
    \          primeNumbers.push(i);\n        }\n    }\n    for (let i: number = 0;\
    \ i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                primeNumbersMultiplied.push(primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k]);\n            }\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbersMultiplied.length; i++) {\n        if (primeNumbersMultiplied[i]\
    \ == a) {\n            result = true;\n        }\n    }\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let prime_numbers: number[] =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    let prime_numbers_multiply: number[] = [];\n    let\
    \ prime_numbers_multiply_sum: number = 0;\n    let prime_numbers_multiply_sum_string:\
    \ string = '';\n    let prime_numbers_multiply_sum_string_reverse: string = '';\n\
    \    let prime_numbers_multiply_sum_string_reverse_number: number = 0;\n    let\
    \ prime_numbers_multiply_sum_string_reverse_number_string: string = '';\n    let\
    \ prime_numbers_multiply_sum_string_reverse_number_string_reverse: string = '';\n\
    \    let prime_numbers_multiply_sum_string_reverse_number_string_reverse_number:\
    \ number = 0;\n    let prime_numbers_multiply_sum_string_reverse_number_string_reverse_number_string:\
    \ string = '';\n    let prime_numbers_multiply_sum_string_reverse_number_string_reverse_number_string_reverse:\
    \ string = '';\n    let prime_numbers_multiply_sum_string_reverse_number_string_reverse_number_string_reverse_number:\
    \ number = 0;\n    let prime_numbers_multiply_sum_string_reverse_number_string_reverse_number_string_reverse_number_string:\
    \ string = '';\n    let prime_numbers_multiply_sum_string_reverse_number_string_reverse_number_string_reverse_number_string_reverse:\
    \ string = '';\n    let prime_numbers_multiply_sum_string_reverse_number_string_reverse_number_string_reverse_number_string_reverse_number:\
    \ number = 0;\n    let prime_numbers_multiply_sum_string_reverse_number_string_reverse_number_string_reverse_number_string_reverse_number_string:\
    \ string = '';", "    let isPrime: boolean = true;\n    let result: boolean =\
    \ false;\n    let primeNumbers: number[] = [];\n    for (let i: number = 2; i\
    \ < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n            if (i\
    \ % j === 0) {\n                isPrime = false;\n                break;\n   \
    \         }\n        }\n        if (isPrime) {\n            primeNumbers.push(i);\n\
    \        }\n        isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ is_prime: boolean = true;\n    let is_multiply_prime: boolean = false;\n   \
    \ let prime_numbers: number[] = [];\n    let counter: number = 0;\n    for (let\
    \ i: number = 2; i < a; i++) {\n        is_prime = true;\n        for (let j:\
    \ number = 2; j < i; j++) {\n            if (i % j == 0) {\n                is_prime\
    \ = false;\n            }\n        }\n        if (is_prime) {\n            prime_numbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime_numbers.length; i++)\
    \ {\n        for (let j: number = 0; j < prime_numbers.length; j++) {\n      \
    \      for (let k: number = 0; k < prime_numbers.length; k++) {\n            \
    \    if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a) {\n    \
    \                is_multiply_prime = true;\n                }\n            }\n\
    \        }\n    }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let result:\
    \ boolean = false;\n    let prime_numbers: number[] = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n \
    \   let prime_numbers_length: number = prime_numbers.length;\n    for (let i:\
    \ number = 0; i < prime_numbers_length; i++) {\n        for (let j: number = 0;\
    \ j < prime_numbers_length; j++) {\n            for (let k: number = 0; k < prime_numbers_length;\
    \ k++) {\n                if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k]\
    \ === a) {\n                    result = true;\n                }\n          \
    \  }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j === 0) {\n                isPrime = false;\n      \
    \          break;\n            }\n        }\n        if (isPrime) {\n        \
    \    primeNumbers.push(i);\n        }\n        isPrime = true;\n    }\n    let\
    \ isMultiplyPrime: boolean = false;\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 isMultiplyPrime = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let prime_numbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            prime_numbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime_numbers.length; i++)\
    \ {\n        for (let j: number = 0; j < prime_numbers.length; j++) {\n      \
    \      for (let k: number = 0; k < prime_numbers.length; k++) {\n            \
    \    if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] === a) {\n   \
    \                 result = true;\n                }\n            }\n        }\n\
    \    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ is_prime: boolean = true;\n    let is_multiply_prime: boolean = false;\n   \
    \ let prime_numbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n\
    \        for (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n\
    \                is_prime = false;\n            }\n        }\n        if (is_prime)\
    \ {\n            prime_numbers.push(i);\n        }\n        is_prime = true;\n\
    \    }\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n       \
    \ for (let j: number = 0; j < prime_numbers.length; j++) {\n            for (let\
    \ k: number = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let isPrime: boolean = true;\n\
    \    for (let i: number = 2; i < a; i++) {\n        if (a % i === 0) {\n     \
    \       isPrime = false;\n        }\n    }\n    return isPrime;\n}\n", "    let\
    \ isPrime: boolean = true;\n    let isMultiply: boolean = false;\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n            isPrime\
    \ = false;\n        }\n    }\n    if (isPrime) {\n        return isMultiply;\n\
    \    }\n    for (let i: number = 2; i < a; i++) {\n        if (a % i == 0) {\n\
    \            for (let j: number = 2; j < a; j++) {\n                if (a % j\
    \ == 0) {\n                    for (let k: number = 2; k < a; k++) {\n       \
    \                 if (a % k == 0) {\n                            if (a == i *\
    \ j * k) {\n                                isMultiply = true;\n             \
    \               }\n                        }\n                    }\n        \
    \        }\n            }\n        }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let counter: number = 0;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i == 0) {\n            counter++;\n\
    \        }\n    }\n    if (counter == 2) {\n        result = true;\n    }\n  \
    \  return result;\n}\n", "  let isPrime: boolean = true;\n  let counter: number\
    \ = 0;\n  for (let i: number = 2; i < a; i++) {\n    if (a % i === 0) {\n    \
    \  isPrime = false;\n      counter++;\n    }\n  }\n  if (counter === 3) {\n  \
    \  return true;\n  } else {\n    return false;\n  }\n}\n\nconsole.log(is_multiply_prime(30));\n",
  "  let result: boolean = false;\n  let primeNumbers: number[] = [];\n  for (let\
    \ i: number = 2; i < a; i++) {\n    if (is_prime(i)) {\n      primeNumbers.push(i);\n\
    \    }\n  }\n  for (let i: number = 0; i < primeNumbers.length; i++) {\n    for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n      for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i] * primeNumbers[j]\
    \ * primeNumbers[k] === a) {\n          result = true;\n        }\n      }\n \
    \   }\n  }\n  return result;\n}\nconsole.log(is_multiply_prime(30));\n", "   \
    \ let is_prime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i == 0) {\n            is_prime = false;\n        }\n    }\n \
    \   return is_prime;\n}", "    let is_prime: boolean = true;\n    let prime_numbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        for (let\
    \ j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n              \
    \  is_prime = false;\n                break;\n            }\n        }\n     \
    \   if (is_prime) {\n            prime_numbers.push(i);\n        }\n        is_prime\
    \ = true;\n    }\n    let is_multiply: boolean = false;\n    for (let i: number\
    \ = 0; i < prime_numbers.length; i++) {\n        for (let j: number = 0; j < prime_numbers.length;\
    \ j++) {\n            for (let k: number = 0; k < prime_numbers.length; k++) {\n\
    \                if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] ==\
    \ a) {\n                    is_multiply = true;\n                }\n         \
    \   }\n        }\n    }\n    return is_multiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n\
    \        if (a % i == 0) {\n            is_prime = false;\n        }\n    }\n\
    \    return is_prime;\n}\n", "    let is_prime: boolean = true;\n    let is_multiply_prime:\
    \ boolean = false;\n    let prime_numbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++) {\n        \
    \    if (i % j == 0) {\n                is_prime = false;\n            }\n   \
    \     }\n        if (is_prime) {\n            prime_numbers.push(i);\n       \
    \ }\n        is_prime = true;\n    }\n    for (let i: number = 0; i < prime_numbers.length;\
    \ i++) {\n        for (let j: number = 0; j < prime_numbers.length; j++) {\n \
    \           for (let k: number = 0; k < prime_numbers.length; k++) {\n       \
    \         if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a) {\n\
    \                    is_multiply_prime = true;\n                }\n          \
    \  }\n        }\n    }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let prime: number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let result: boolean = false;\n\
    \    for (let i: number = 0; i < prime.length; i++) {\n        for (let j: number\
    \ = 0; j < prime.length; j++) {\n            for (let k: number = 0; k < prime.length;\
    \ k++) {\n                if (prime[i] * prime[j] * prime[k] == a) {\n       \
    \             result = true;\n                }\n            }\n        }\n  \
    \  }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ result: boolean = false;\n    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime:\
    \ boolean = true;\n    let counter: number = 0;\n    for (let i: number = 2; i\
    \ < a; i++) {\n        if (a % i == 0) {\n            for (let j: number = 2;\
    \ j < i; j++) {\n                if (i % j == 0) {\n                    isPrime\
    \ = false;\n                }\n            }\n            if (isPrime) {\n   \
    \             counter++;\n            }\n            isPrime = true;\n       \
    \ }\n    }\n    if (counter == 3) {\n        return true;\n    }\n    else {\n\
    \        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(31));\n\
    console.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\nconsole.log(is_multiply_prime(34));\n\
    console.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\nconsole.log(is_multiply_prime(37));\n\
    console.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\nconsole.log(is_multiply_prime(40));\n\
    console.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\nconsole.log(is_multiply_prime(43));\n\
    console.log(is_multiply_prime(44));\nconsole.log(is_multiply_prime(45));\nconsole.log(is_multiply_prime(46));\n\
    console.log(is_multiply_prime(47));\nconsole.log(is_multiply_prime(48));\nconsole.log(is_multiply_prime(49));\n\
    console.log(is_multiply_prime(50));\nconsole.log(is_multiply_prime(51));\nconsole.log(is_multiply_prime(52));\n\
    console.log(is_multiply_prime(53));\nconsole.", "    if (a < 2) {\n        return\
    \ false;\n    }\n    let i = 2;\n    while (i <= Math.sqrt(a)) {\n        if (a\
    \ % i == 0) {\n            return false;\n        }\n        i++;\n    }\n   \
    \ return true;\n}", "    let primeNumbers: number[] = [];\n    for (let i: number\
    \ = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        return true;\n                }\n            }\n        }\n    }\n  \
    \  return false;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime:\
    \ boolean = true;\n    let isMultiply: boolean = false;\n    let counter: number\
    \ = 0;\n    let primeNumbers: number[] = [];\n    for (let i: number = 2; i <\
    \ a; i++) {\n        for (let j: number = 2; j < i; j++) {\n            if (i\
    \ % j === 0) {\n                isPrime = false;\n            }\n        }\n \
    \       if (isPrime) {\n            primeNumbers.push(i);\n        }\n       \
    \ isPrime = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 isMultiply = true;\n                }\n            }\n     \
    \   }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_multiply_prime: boolean = false;\n    let prime_numbers: number[] =\
    \ [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\n    let prime_numbers_length: number = prime_numbers.length;\n\
    \    for (let i: number = 0; i < prime_numbers_length; i++) {\n        for (let\
    \ j: number = 0; j < prime_numbers_length; j++) {\n            for (let k: number\
    \ = 0; k < prime_numbers_length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] === a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "  let result: boolean = false;\n \
    \ let primeNumbers: number[] = [];\n  let primeNumbersMultiplied: number[] = [];\n\
    \  for (let i: number = 2; i < a; i++) {\n    if (is_prime(i)) {\n      primeNumbers.push(i);\n\
    \    }\n  }\n  for (let i: number = 0; i < primeNumbers.length; i++) {\n    for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n      for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n        primeNumbersMultiplied.push(primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k]);\n      }\n    }\n  }\n  for (let i: number\
    \ = 0; i < primeNumbersMultiplied.length; i++) {\n    if (primeNumbersMultiplied[i]\
    \ === a) {\n      result = true;\n    }\n  }\n  return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = false;\n    let prime_numbers: number[] = [];\n   \
    \ for (let i: number = 2; i < a; i++) {\n        is_prime = true;\n        for\
    \ (let j: number = 2; j < i; j++) {\n            if (i % j == 0) {\n         \
    \       is_prime = false;\n                break;\n            }\n        }\n\
    \        if (is_prime) {\n            prime_numbers.push(i);\n        }\n    }\n\
    \    let is_multiply_prime: boolean = false;\n    for (let i: number = 0; i <\
    \ prime_numbers.length; i++) {\n        for (let j: number = 0; j < prime_numbers.length;\
    \ j++) {\n            for (let k: number = 0; k < prime_numbers.length; k++) {\n\
    \                if (prime_numbers[i] * prime_numbers[j] * prime_numbers[k] ==\
    \ a) {\n                    is_multiply_prime = true;\n                }\n   \
    \         }\n        }\n    }\n    return is_multiply_prime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "  let result: boolean = false;\n  let primeNumbers: number[] = [];\n  for (let\
    \ i: number = 2; i < a; i++) {\n    let isPrime: boolean = true;\n    for (let\
    \ j: number = 2; j < i; j++) {\n      if (i % j === 0) {\n        isPrime = false;\n\
    \      }\n    }\n    if (isPrime) {\n      primeNumbers.push(i);\n    }\n  }\n\
    \  for (let i: number = 0; i < primeNumbers.length; i++) {\n    for (let j: number\
    \ = i; j < primeNumbers.length; j++) {\n      for (let k: number = j; k < primeNumbers.length;\
    \ k++) {\n        if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] ===\
    \ a) {\n          result = true;\n        }\n      }\n    }\n  }\n  return result;\n\
    }\n\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        for (let j: number = 2; j < i; j++)\
    \ {\n            if (i % j === 0) {\n                isPrime = false;\n      \
    \          break;\n            }\n        }\n        if (isPrime) {\n        \
    \    primeNumbers.push(i);\n        }\n        isPrime = true;\n    }\n    let\
    \ isMultiplyPrime: boolean = false;\n    for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n        for (let j: number = 0; j < primeNumbers.length; j++) {\n  \
    \          for (let k: number = 0; k < primeNumbers.length; k++) {\n         \
    \       if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n   \
    \                 isMultiplyPrime = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let primeNumbers:\
    \ number[] = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let primeNumbersLength: number = primeNumbers.length;\n\
    \    let counter: number = 0;\n    for (let i: number = 0; i < primeNumbersLength;\
    \ i++) {\n        if (a % primeNumbers[i] === 0) {\n            counter++;\n \
    \       }\n    }\n    if (counter === 3) {\n        return true;\n    } else {\n\
    \        return false;\n    }\n}\nconsole.log(is_multiply_prime(30));\nconsole.log(is_multiply_prime(31));\n\
    console.log(is_multiply_prime(32));\nconsole.log(is_multiply_prime(33));\nconsole.log(is_multiply_prime(34));\n\
    console.log(is_multiply_prime(35));\nconsole.log(is_multiply_prime(36));\nconsole.log(is_multiply_prime(37));\n\
    console.log(is_multiply_prime(38));\nconsole.log(is_multiply_prime(39));\nconsole.log(is_multiply_prime(40));\n\
    console.log(is_multiply_prime(41));\nconsole.log(is_multiply_prime(42));\nconsole.log(is_multiply_prime(43));\n\
    console.log(is_multiply_prime(44));\nconsole.log(is_multiply_prime(45));\nconsole.log(is_multiply_prime(46));\n\
    console.log(is_multiply_prime(47));\nconsole.log(is_multiply_prime(48));\nconsole.log(is_multiply_prime(49));\n\
    console.log(is_multiply_prime(50));\nconsole.log(is_multiply_prime(51));\nconsole.log(is_multiply_prime(52));\n\
    console.log(is_multiply", "    let result: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        if (is_prime(i))\
    \ {\n            primeNumbers.push(i);\n        }\n    }\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    result = true;\n                }\n            }\n  \
    \      }\n    }\n    return result;\n}\n", "    let result: boolean = false;\n\
    \    let primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n\
    \    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for\
    \ (let j: number = 0; j < primeNumbers.length; j++) {\n            for (let k:\
    \ number = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n                    result = true;\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\nconsole.log(is_multiply_prime(30));\n", "    let isPrime:\
    \ boolean = true;\n    let isMultiplyPrime: boolean = false;\n    let primeNumbers:\
    \ number[] = [];\n    for (let i: number = 2; i < a; i++) {\n        for (let\
    \ j: number = 2; j < i; j++) {\n            if (i % j === 0) {\n             \
    \   isPrime = false;\n                break;\n            }\n        }\n     \
    \   if (isPrime) {\n            primeNumbers.push(i);\n        }\n        isPrime\
    \ = true;\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        isMultiplyPrime = true;\n                }\n            }\n        }\n\
    \    }\n    return isMultiplyPrime;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    let counter: number = 0;\n    for (let i:\
    \ number = 2; i < a; i++) {\n        if (a % i == 0) {\n            isPrime =\
    \ false;\n            break;\n        }\n    }\n    if (isPrime) {\n        counter++;\n\
    \    }\n    return counter;\n}\nconsole.log(is_multiply_prime(30));\n", "    let\
    \ primeNumbers: number[] = [];\n    for (let i: number = 2; i < a; i++) {\n  \
    \      if (is_prime(i)) {\n            primeNumbers.push(i);\n        }\n    }\n\
    \    for (let i: number = 0; i < primeNumbers.length; i++) {\n        for (let\
    \ j: number = 0; j < primeNumbers.length; j++) {\n            for (let k: number\
    \ = 0; k < primeNumbers.length; k++) {\n                if (primeNumbers[i] *\
    \ primeNumbers[j] * primeNumbers[k] === a) {\n                    return true;\n\
    \                }\n            }\n        }\n    }\n    return false;\n}\n",
  "    let result: boolean = false;\n    let primeNumbers: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < primeNumbers.length; i++) {\n\
    \        for (let j: number = 0; j < primeNumbers.length; j++) {\n           \
    \ for (let k: number = 0; k < primeNumbers.length; k++) {\n                if\
    \ (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a) {\n            \
    \        result = true;\n                }\n            }\n        }\n    }\n\
    \    return result;\n}\n", "  let result: boolean = false;\n  let primeNumbers:\
    \ number[] = [];\n  for (let i: number = 2; i < a; i++) {\n    if (is_prime(i))\
    \ {\n      primeNumbers.push(i);\n    }\n  }\n  for (let i: number = 0; i < primeNumbers.length;\
    \ i++) {\n    for (let j: number = 0; j < primeNumbers.length; j++) {\n      for\
    \ (let k: number = 0; k < primeNumbers.length; k++) {\n        if (primeNumbers[i]\
    \ * primeNumbers[j] * primeNumbers[k] === a) {\n          result = true;\n   \
    \     }\n      }\n    }\n  }\n  return result;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let isPrime: boolean = true;\n    for (let i: number = 2; i < a; i++) {\n \
    \       if (a % i === 0) {\n            isPrime = false;\n        }\n    }\n \
    \   return isPrime;\n}\n", "    let primeNumbers: number[] = [];\n    for (let\
    \ i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            primeNumbers.push(i);\n\
    \        }\n    }\n    let isMultiply: boolean = false;\n    for (let i: number\
    \ = 0; i < primeNumbers.length; i++) {\n        for (let j: number = 0; j < primeNumbers.length;\
    \ j++) {\n            for (let k: number = 0; k < primeNumbers.length; k++) {\n\
    \                if (primeNumbers[i] * primeNumbers[j] * primeNumbers[k] === a)\
    \ {\n                    isMultiply = true;\n                }\n            }\n\
    \        }\n    }\n    return isMultiply;\n}\nconsole.log(is_multiply_prime(30));\n",
  "    let is_prime: boolean = true;\n    let is_multiply_prime: boolean = false;\n\
    \    let prime_numbers: number[] = [];\n    for (let i: number = 2; i < a; i++)\
    \ {\n        for (let j: number = 2; j < i; j++) {\n            if (i % j == 0)\
    \ {\n                is_prime = false;\n            }\n        }\n        if (is_prime)\
    \ {\n            prime_numbers.push(i);\n        }\n        is_prime = true;\n\
    \    }\n    for (let i: number = 0; i < prime_numbers.length; i++) {\n       \
    \ for (let j: number = 0; j < prime_numbers.length; j++) {\n            for (let\
    \ k: number = 0; k < prime_numbers.length; k++) {\n                if (prime_numbers[i]\
    \ * prime_numbers[j] * prime_numbers[k] == a) {\n                    is_multiply_prime\
    \ = true;\n                }\n            }\n        }\n    }\n    return is_multiply_prime;\n\
    }\nconsole.log(is_multiply_prime(30));\n", "    let result: boolean = false;\n\
    \    let prime: number[] = [];\n    let prime_multiply: number[] = [];\n    for\
    \ (let i: number = 2; i < a; i++) {\n        if (is_prime(i)) {\n            prime.push(i);\n\
    \        }\n    }\n    for (let i: number = 0; i < prime.length; i++) {\n    \
    \    for (let j: number = 0; j < prime.length; j++) {\n            for (let k:\
    \ number = 0; k < prime.length; k++) {\n                if (prime[i] * prime[j]\
    \ * prime[k] === a) {\n                    result = true;\n                  \
    \  prime_multiply.push(prime[i], prime[j], prime[k]);\n                }\n   \
    \         }\n        }\n    }\n    console.log(prime_multiply);\n    return result;\n\
    }\nconsole.log(is_multiply_prime(30));\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

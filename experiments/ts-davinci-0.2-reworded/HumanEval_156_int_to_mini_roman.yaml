name: HumanEval_156_int_to_mini_roman
language: ts
prompt: "//Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  // and return it in lowercase.\n// Restrictions: 1 <= num <= 1000\n// Examples:\n\
  // >>> int_to_mini_roman(19)\n// \"xix\"\n// >>> int_to_mini_roman(152)\n// \"clii\"\
  \n// >>> int_to_mini_roman(426)\n// \"cdxxvi\"\nfunction int_to_mini_roman(number:\
  \ number): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = int_to_mini_roman;\n  assert.deepEqual(candidate(19),\"\
  xix\");\n  assert.deepEqual(candidate(152),\"clii\");\n  assert.deepEqual(candidate(251),\"\
  ccli\");\n  assert.deepEqual(candidate(426),\"cdxxvi\");\n  assert.deepEqual(candidate(500),\"\
  d\");\n  assert.deepEqual(candidate(1),\"i\");\n  assert.deepEqual(candidate(4),\"\
  iv\");\n  assert.deepEqual(candidate(43),\"xliii\");\n  assert.deepEqual(candidate(90),\"\
  xc\");\n  assert.deepEqual(candidate(94),\"xciv\");\n  assert.deepEqual(candidate(532),\"\
  dxxxii\");\n  assert.deepEqual(candidate(900),\"cm\");\n  assert.deepEqual(candidate(994),\"\
  cmxciv\");\n  assert.deepEqual(candidate(1000),\"m\");\n}\n\ntest();"
completions: ["    const roman_numerals = {\n        1: \"i\",\n        5: \"v\",\n\
    \        10: \"x\",\n        50: \"l\",\n        100: \"c\",\n        500: \"\
    d\",\n        1000: \"m\",\n    };\n    let result = \"\";\n    let num = number;\n\
    \    while (num > 0) {\n        if (num >= 1000) {\n            result += roman_numerals[1000];\n\
    \            num -= 1000;\n        } else if (num >= 500) {\n            result\
    \ += roman_numerals[500];\n            num -= 500;\n        } else if (num >=\
    \ 100) {\n            result += roman_numerals[100];\n            num -= 100;\n\
    \        } else if (num >= 50) {\n            result += roman_numerals[50];\n\
    \            num -= 50;\n        } else if (num >= 10) {\n            result +=\
    \ roman_numerals[10];\n            num -= 10;\n        } else if (num >= 5) {\n\
    \            result += roman_numerals[5];\n            num -= 5;\n        } else\
    \ if (num >= 1) {\n            result += roman_numerals[1];\n            num -=\
    \ 1;\n        }\n    }\n    return result;\n}\n", "    let result = \"\";\n  \
    \  let num = number;\n    while (num >= 1000) {\n        result += \"m\";\n  \
    \      num -= 1000;\n    }\n    if (num >= 900) {\n        result += \"cm\";\n\
    \        num -= 900;\n    }\n    if (num >= 500) {\n        result += \"d\";\n\
    \        num -= 500;\n    }\n    if (num >= 400) {\n        result += \"cd\";\n\
    \        num -= 400;\n    }\n    while (num >= 100) {\n        result += \"c\"\
    ;\n        num -= 100;\n    }\n    if (num >= 90) {\n        result += \"xc\"\
    ;\n        num -= 90;\n    }\n    if (num >= 50) {\n        result += \"l\";\n\
    \        num -= 50;\n    }\n    if (num >= 40) {\n        result += \"xl\";\n\
    \        num -= 40;\n    }\n    while (num >= 10) {\n        result += \"x\";\n\
    \        num -= 10;\n    }\n    if (num >= 9) {\n        result += \"ix\";\n \
    \       num -= 9;\n    }\n    if (num >= 5) {\n        result += \"v\";\n    \
    \    num -= 5;\n    }\n    if (num >= 4) {\n        result += \"iv\";\n      \
    \  num -= 4;\n    }\n    while (num >= 1) {\n        result += \"i\";\n      \
    \  num -= 1;\n    }\n    return result;\n}\n", "    let result = \"\";\n    const\
    \ roman_numerals = {\n        1: \"i\",\n        4: \"iv\",\n        5: \"v\"\
    ,\n        9: \"ix\",\n        10: \"x\",\n        40: \"xl\",\n        50: \"\
    l\",\n        90: \"xc\",\n        100: \"c\",\n        400: \"cd\",\n       \
    \ 500: \"d\",\n        900: \"cm\",\n        1000: \"m\"\n    };\n    const roman_numerals_keys\
    \ = Object.keys(roman_numerals).reverse();\n    for (let i = 0; i < roman_numerals_keys.length;\
    \ i++) {\n        const roman_numeral_key = parseInt(roman_numerals_keys[i]);\n\
    \        const roman_numeral_value = roman_numerals[roman_numeral_key];\n    \
    \    while (number >= roman_numeral_key) {\n            result += roman_numeral_value;\n\
    \            number -= roman_numeral_key;\n        }\n    }\n    return result;\n\
    }\n", "  let result = \"\";\n  let num = number;\n  let roman = {\n    M: 1000,\n\
    \    CM: 900,\n    D: 500,\n    CD: 400,\n    C: 100,\n    XC: 90,\n    L: 50,\n\
    \    XL: 40,\n    X: 10,\n    IX: 9,\n    V: 5,\n    IV: 4,\n    I: 1\n  };\n\
    \  for (let key in roman) {\n    if (num >= roman[key]) {\n      let q = Math.floor(num\
    \ / roman[key]);\n      num -= q * roman[key];\n      result += key.repeat(q);\n\
    \    }\n  }\n  return result;\n}\n", "    if (number < 1 || number > 1000) {\n\
    \        throw new Error(\"Number out of range\");\n    }\n    let result = \"\
    \";\n    let num = number;\n    while (num >= 1000) {\n        result += \"m\"\
    ;\n        num -= 1000;\n    }\n    while (num >= 900) {\n        result += \"\
    cm\";\n        num -= 900;\n    }\n    while (num >= 500) {\n        result +=\
    \ \"d\";\n        num -= 500;\n    }\n    while (num >= 400) {\n        result\
    \ += \"cd\";\n        num -= 400;\n    }\n    while (num >= 100) {\n        result\
    \ += \"c\";\n        num -= 100;\n    }\n    while (num >= 90) {\n        result\
    \ += \"xc\";\n        num -= 90;\n    }\n    while (num >= 50) {\n        result\
    \ += \"l\";\n        num -= 50;\n    }\n    while (num >= 40) {\n        result\
    \ += \"xl\";\n        num -= 40;\n    }\n    while (num >= 10) {\n        result\
    \ += \"x\";\n        num -= 10;\n    }\n    while (num >= 9) {\n        result\
    \ += \"ix\";\n        num -= 9;\n    }\n    while (num >= 5) {\n        result\
    \ += \"v\";\n        num -= 5;\n    }\n    while (num >= 4) {\n        result\
    \ += \"iv\";\n        num -= 4;\n    }\n    while (num >= 1) {\n        result\
    \ += \"i\";\n        num -= 1;\n    }\n    return result;\n}\n", "    // your\
    \ code here\n    let result = \"\";\n    let num = number;\n    let roman = [\n\
    \        [\"\", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\"\
    , \"ix\"],\n        [\"\", \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\"\
    , \"lxxx\", \"xc\"],\n        [\"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"\
    dc\", \"dcc\", \"dccc\", \"cm\"],\n        [\"\", \"m\", \"mm\", \"mmm\", \"mv\"\
    , \"v\", \"vm\", \"vmm\", \"vmmm\", \"mx\"],\n    ];\n    let i = 0;\n    while\
    \ (num > 0) {\n        let digit = num % 10;\n        result = roman[i][digit]\
    \ + result;\n        num = Math.floor(num / 10);\n        i++;\n    }\n    return\
    \ result;\n}\n", "  let roman = \"\";\n  let num = number;\n  while (num > 0)\
    \ {\n    if (num >= 1000) {\n      roman += \"m\";\n      num -= 1000;\n    }\
    \ else if (num >= 900) {\n      roman += \"cm\";\n      num -= 900;\n    } else\
    \ if (num >= 500) {\n      roman += \"d\";\n      num -= 500;\n    } else if (num\
    \ >= 400) {\n      roman += \"cd\";\n      num -= 400;\n    } else if (num >=\
    \ 100) {\n      roman += \"c\";\n      num -= 100;\n    } else if (num >= 90)\
    \ {\n      roman += \"xc\";\n      num -= 90;\n    } else if (num >= 50) {\n \
    \     roman += \"l\";\n      num -= 50;\n    } else if (num >= 40) {\n      roman\
    \ += \"xl\";\n      num -= 40;\n    } else if (num >= 10) {\n      roman += \"\
    x\";\n      num -= 10;\n    } else if (num >= 9) {\n      roman += \"ix\";\n \
    \     num -= 9;\n    } else if (num >= 5) {\n      roman += \"v\";\n      num\
    \ -= 5;\n    } else if (num >= 4) {\n      roman += \"iv\";\n      num -= 4;\n\
    \    } else if (num >= 1) {\n      roman += \"i\";\n      num -= 1;\n    }\n \
    \ }\n  return roman;\n}\n", "    let result: string = '';\n    let roman: string[]\
    \ = ['i', 'v', 'x', 'l', 'c', 'd', 'm'];\n    let i: number = 0;\n    while (number\
    \ > 0) {\n        let digit: number = number % 10;\n        if (digit < 4) {\n\
    \            result = roman[i].repeat(digit) + result;\n        } else if (digit\
    \ === 4) {\n            result = roman[i] + roman[i + 1] + result;\n        }\
    \ else if (digit === 5) {\n            result = roman[i + 1] + result;\n     \
    \   } else if (digit < 9) {\n            result = roman[i + 1] + roman[i].repeat(digit\
    \ - 5) + result;\n        } else {\n            result = roman[i] + roman[i +\
    \ 2] + result;\n        }\n        number = Math.floor(number / 10);\n       \
    \ i += 2;\n    }\n    return result;\n}\n", "    let result = '';\n    let roman\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let key in roman) {\n        if (number >= roman[key]) {\n          \
    \  result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n    \
    \        number -= roman[key] * Math.floor(number / roman[key]);\n        }\n\
    \    }\n    return result;\n}\n", "    let result: string = '';\n    let roman:\
    \ string[] = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv',\
    \ 'i'];\n    let decimal: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n    for (let i = 0; i < decimal.length; i++) {\n        while\
    \ (number % decimal[i] < number) {\n            result += roman[i];\n        \
    \    number -= decimal[i];\n        }\n    }\n    return result;\n}\n", "    let\
    \ result = \"\";\n    let num = number;\n    let roman = [\"m\", \"cm\", \"d\"\
    , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n\
    \    let decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n \
    \   for (let i = 0; i < decimal.length; i++) {\n        while (num % decimal[i]\
    \ < num) {\n            result += roman[i];\n            num -= decimal[i];\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ roman_numerals = {\n        1: \"i\",\n        5: \"v\",\n        10: \"x\"\
    ,\n        50: \"l\",\n        100: \"c\",\n        500: \"d\",\n        1000:\
    \ \"m\"\n    };\n    let numbers = [1000, 500, 100, 50, 10, 5, 1];\n    for (let\
    \ i = 0; i < numbers.length; i++) {\n        let num = numbers[i];\n        let\
    \ numeral = roman_numerals[num];\n        if (number >= num) {\n            let\
    \ count = Math.floor(number / num);\n            for (let j = 0; j < count; j++)\
    \ {\n                result += numeral;\n            }\n            number = number\
    \ % num;\n        }\n    }\n    return result;\n}\n", "  let result = \"\";\n\
    \  const roman = [\n    [\"\", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\",\
    \ \"vii\", \"viii\", \"ix\"],\n    [\"\", \"x\", \"xx\", \"xxx\", \"xl\", \"l\"\
    , \"lx\", \"lxx\", \"lxxx\", \"xc\"],\n    [\"\", \"c\", \"cc\", \"ccc\", \"cd\"\
    , \"d\", \"dc\", \"dcc\", \"dccc\", \"cm\"],\n    [\"\", \"m\", \"mm\", \"mmm\"\
    , \"mv\", \"v\", \"vm\", \"vmm\", \"vmmm\", \"mx\"],\n  ];\n  let num = number;\n\
    \  for (let i = 0; i < roman.length; i++) {\n    result = roman[i][num % 10] +\
    \ result;\n    num = Math.floor(num / 10);\n  }\n  return result;\n}\n", "   \
    \ const roman_numerals = {\n        1: \"i\",\n        4: \"iv\",\n        5:\
    \ \"v\",\n        9: \"ix\",\n        10: \"x\",\n        40: \"xl\",\n      \
    \  50: \"l\",\n        90: \"xc\",\n        100: \"c\",\n        400: \"cd\",\n\
    \        500: \"d\",\n        900: \"cm\",\n        1000: \"m\"\n    };\n    let\
    \ result = \"\";\n    let remainder = number;\n    let current_value = 1000;\n\
    \    while (remainder > 0) {\n        while (remainder >= current_value) {\n \
    \           result += roman_numerals[current_value];\n            remainder -=\
    \ current_value;\n        }\n        current_value = Math.floor(current_value\
    \ / 10);\n    }\n    return result;\n}\n", "    let result = \"\";\n    let roman\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let key in roman) {\n        if (number >= roman[key]) {\n          \
    \  result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n    \
    \        number -= roman[key] * Math.floor(number / roman[key]);\n        }\n\
    \    }\n    return result;\n}\n", "    let roman = '';\n    const romanNumList\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   let a;\n    if (number < 1 || number > 1000) {\n        return 'out of range';\n\
    \    }\n    for (let key in romanNumList) {\n        a = Math.floor(number / romanNumList[key]);\n\
    \        if (a >= 0) {\n            for (let i = 0; i < a; i++) {\n          \
    \      roman += key;\n            }\n        }\n        number = number % romanNumList[key];\n\
    \    }\n    return roman;\n}\n", "    let result = \"\";\n    let roman = {\n\
    \        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n     \
    \   C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n\
    \        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for\
    \ (let key in roman) {\n        while (number >= roman[key]) {\n            result\
    \ += key;\n            number -= roman[key];\n        }\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let roman = {\n        M: 1000,\n        CM:\
    \ 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n\
    \        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n\
    \        IV: 4,\n        I: 1\n    };\n    for (let key in roman) {\n        if\
    \ (number >= roman[key]) {\n            result += key.toLowerCase().repeat(Math.floor(number\
    \ / roman[key]));\n            number -= roman[key] * Math.floor(number / roman[key]);\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    const\
    \ roman_numerals = {\n        1: \"i\",\n        5: \"v\",\n        10: \"x\"\
    ,\n        50: \"l\",\n        100: \"c\",\n        500: \"d\",\n        1000:\
    \ \"m\"\n    };\n    const roman_numerals_keys = Object.keys(roman_numerals).reverse();\n\
    \    for (let i = 0; i < roman_numerals_keys.length; i++) {\n        const key\
    \ = roman_numerals_keys[i];\n        const value = roman_numerals[key];\n    \
    \    const number_of_times = Math.floor(number / parseInt(key));\n        if (number_of_times\
    \ > 0) {\n            result += value.repeat(number_of_times);\n            number\
    \ -= number_of_times * parseInt(key);\n        }\n    }\n    return result;\n\
    }\n", "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"\
    cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n  \
    \  let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n   \
    \ for (let i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i])\
    \ {\n            roman += romanNumeral[i];\n            number -= numbers[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    let result = \"\";\n    let i\
    \ = 0;\n    while (number > 0) {\n        if (number >= 1000) {\n            result\
    \ += \"m\";\n            number -= 1000;\n        } else if (number >= 900) {\n\
    \            result += \"cm\";\n            number -= 900;\n        } else if\
    \ (number >= 500) {\n            result += \"d\";\n            number -= 500;\n\
    \        } else if (number >= 400) {\n            result += \"cd\";\n        \
    \    number -= 400;\n        } else if (number >= 100) {\n            result +=\
    \ \"c\";\n            number -= 100;\n        } else if (number >= 90) {\n   \
    \         result += \"xc\";\n            number -= 90;\n        } else if (number\
    \ >= 50) {\n            result += \"l\";\n            number -= 50;\n        }\
    \ else if (number >= 40) {\n            result += \"xl\";\n            number\
    \ -= 40;\n        } else if (number >= 10) {\n            result += \"x\";\n \
    \           number -= 10;\n        } else if (number >= 9) {\n            result\
    \ += \"ix\";\n            number -= 9;\n        } else if (number >= 5) {\n  \
    \          result += \"v\";\n            number -= 5;\n        } else if (number\
    \ >= 4) {\n            result += \"iv\";\n            number -= 4;\n        }\
    \ else if (number >= 1) {\n            result += \"i\";\n            number -=\
    \ 1;\n        }\n    }\n    return result;\n}\n", "    const roman_numerals =\
    \ {\n        1: \"i\",\n        4: \"iv\",\n        5: \"v\",\n        9: \"ix\"\
    ,\n        10: \"x\",\n        40: \"xl\",\n        50: \"l\",\n        90: \"\
    xc\",\n        100: \"c\",\n        400: \"cd\",\n        500: \"d\",\n      \
    \  900: \"cm\",\n        1000: \"m\"\n    };\n    let result = \"\";\n    let\
    \ remaining = number;\n    for (let i = 1000; i > 0; i = i / 10) {\n        const\
    \ digit = Math.floor(remaining / i);\n        if (digit > 0) {\n            if\
    \ (digit === 4 || digit === 9) {\n                result += roman_numerals[i *\
    \ digit];\n            } else {\n                result += roman_numerals[i *\
    \ 5];\n                for (let j = 0; j < digit % 5; j++) {\n               \
    \     result += roman_numerals[i];\n                }\n            }\n       \
    \ }\n        remaining = remaining % i;\n    }\n    return result;\n}\n", "  \
    \  let result = \"\";\n    let num = number;\n    while (num > 0) {\n        if\
    \ (num >= 1000) {\n            result += \"m\";\n            num -= 1000;\n  \
    \      } else if (num >= 900) {\n            result += \"cm\";\n            num\
    \ -= 900;\n        } else if (num >= 500) {\n            result += \"d\";\n  \
    \          num -= 500;\n        } else if (num >= 400) {\n            result +=\
    \ \"cd\";\n            num -= 400;\n        } else if (num >= 100) {\n       \
    \     result += \"c\";\n            num -= 100;\n        } else if (num >= 90)\
    \ {\n            result += \"xc\";\n            num -= 90;\n        } else if\
    \ (num >= 50) {\n            result += \"l\";\n            num -= 50;\n      \
    \  } else if (num >= 40) {\n            result += \"xl\";\n            num -=\
    \ 40;\n        } else if (num >= 10) {\n            result += \"x\";\n       \
    \     num -= 10;\n        } else if (num >= 9) {\n            result += \"ix\"\
    ;\n            num -= 9;\n        } else if (num >= 5) {\n            result +=\
    \ \"v\";\n            num -= 5;\n        } else if (num >= 4) {\n            result\
    \ += \"iv\";\n            num -= 4;\n        } else if (num >= 1) {\n        \
    \    result += \"i\";\n            num -= 1;\n        }\n    }\n    return result;\n\
    }\n", "    let roman = \"\";\n    let romanNumeral = [\"m\", \"cm\", \"d\", \"\
    cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n  \
    \  let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n   \
    \ for (let i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i])\
    \ {\n            roman += romanNumeral[i];\n            number -= numbers[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    let result = \"\";\n    let roman\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let key in roman) {\n        if (number >= roman[key]) {\n          \
    \  result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n    \
    \        number -= roman[key] * Math.floor(number / roman[key]);\n        }\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    let num = number;\n\
    \    while (num > 0) {\n        if (num >= 1000) {\n            result += \"m\"\
    ;\n            num -= 1000;\n        } else if (num >= 900) {\n            result\
    \ += \"cm\";\n            num -= 900;\n        } else if (num >= 500) {\n    \
    \        result += \"d\";\n            num -= 500;\n        } else if (num >=\
    \ 400) {\n            result += \"cd\";\n            num -= 400;\n        } else\
    \ if (num >= 100) {\n            result += \"c\";\n            num -= 100;\n \
    \       } else if (num >= 90) {\n            result += \"xc\";\n            num\
    \ -= 90;\n        } else if (num >= 50) {\n            result += \"l\";\n    \
    \        num -= 50;\n        } else if (num >= 40) {\n            result += \"\
    xl\";\n            num -= 40;\n        } else if (num >= 10) {\n            result\
    \ += \"x\";\n            num -= 10;\n        } else if (num >= 9) {\n        \
    \    result += \"ix\";\n            num -= 9;\n        } else if (num >= 5) {\n\
    \            result += \"v\";\n            num -= 5;\n        } else if (num >=\
    \ 4) {\n            result += \"iv\";\n            num -= 4;\n        } else if\
    \ (num >= 1) {\n            result += \"i\";\n            num -= 1;\n        }\n\
    \    }\n    return result;\n}\n", "    let result = '';\n    let roman_numerals\
    \ = {\n        1: 'i',\n        5: 'v',\n        10: 'x',\n        50: 'l',\n\
    \        100: 'c',\n        500: 'd',\n        1000: 'm'\n    };\n    let keys\
    \ = Object.keys(roman_numerals).reverse();\n    for (let i = 0; i < keys.length;\
    \ i++) {\n        let key = parseInt(keys[i]);\n        let value = roman_numerals[key];\n\
    \        while (number >= key) {\n            result += value;\n            number\
    \ -= key;\n        }\n    }\n    return result;\n}\n", "    let roman: string\
    \ = \"\";\n    while (number > 0) {\n        if (number >= 1000) {\n         \
    \   roman += \"m\";\n            number -= 1000;\n        } else if (number >=\
    \ 900) {\n            roman += \"cm\";\n            number -= 900;\n        }\
    \ else if (number >= 500) {\n            roman += \"d\";\n            number -=\
    \ 500;\n        } else if (number >= 400) {\n            roman += \"cd\";\n  \
    \          number -= 400;\n        } else if (number >= 100) {\n            roman\
    \ += \"c\";\n            number -= 100;\n        } else if (number >= 90) {\n\
    \            roman += \"xc\";\n            number -= 90;\n        } else if (number\
    \ >= 50) {\n            roman += \"l\";\n            number -= 50;\n        }\
    \ else if (number >= 40) {\n            roman += \"xl\";\n            number -=\
    \ 40;\n        } else if (number >= 10) {\n            roman += \"x\";\n     \
    \       number -= 10;\n        } else if (number >= 9) {\n            roman +=\
    \ \"ix\";\n            number -= 9;\n        } else if (number >= 5) {\n     \
    \       roman += \"v\";\n            number -= 5;\n        } else if (number >=\
    \ 4) {\n            roman += \"iv\";\n            number -= 4;\n        } else\
    \ if (number >= 1) {\n            roman += \"i\";\n            number -= 1;\n\
    \        }\n    }\n    return roman;\n}\n", "    let result = \"\";\n    let roman\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let i of Object.keys(roman)) {\n        let q = Math.floor(number / roman[i]);\n\
    \        number -= q * roman[i];\n        result += i.repeat(q);\n    }\n    return\
    \ result;\n}\n", "    let result: string = \"\";\n    let num: number = number;\n\
    \    while (num >= 1000) {\n        result += \"m\";\n        num -= 1000;\n \
    \   }\n    while (num >= 500) {\n        result += \"d\";\n        num -= 500;\n\
    \    }\n    while (num >= 100) {\n        result += \"c\";\n        num -= 100;\n\
    \    }\n    while (num >= 50) {\n        result += \"l\";\n        num -= 50;\n\
    \    }\n    while (num >= 10) {\n        result += \"x\";\n        num -= 10;\n\
    \    }\n    while (num >= 5) {\n        result += \"v\";\n        num -= 5;\n\
    \    }\n    while (num >= 1) {\n        result += \"i\";\n        num -= 1;\n\
    \    }\n    return result;\n}\n", "    let result = '';\n    let num = number;\n\
    \    while (num > 0) {\n        if (num >= 1000) {\n            result += 'm';\n\
    \            num -= 1000;\n        } else if (num >= 900) {\n            result\
    \ += 'cm';\n            num -= 900;\n        } else if (num >= 500) {\n      \
    \      result += 'd';\n            num -= 500;\n        } else if (num >= 400)\
    \ {\n            result += 'cd';\n            num -= 400;\n        } else if (num\
    \ >= 100) {\n            result += 'c';\n            num -= 100;\n        } else\
    \ if (num >= 90) {\n            result += 'xc';\n            num -= 90;\n    \
    \    } else if (num >= 50) {\n            result += 'l';\n            num -= 50;\n\
    \        } else if (num >= 40) {\n            result += 'xl';\n            num\
    \ -= 40;\n        } else if (num >= 10) {\n            result += 'x';\n      \
    \      num -= 10;\n        } else if (num >= 9) {\n            result += 'ix';\n\
    \            num -= 9;\n        } else if (num >= 5) {\n            result +=\
    \ 'v';\n            num -= 5;\n        } else if (num >= 4) {\n            result\
    \ += 'iv';\n            num -= 4;\n        } else if (num >= 1) {\n          \
    \  result += 'i';\n            num -= 1;\n        }\n    }\n    return result;\n\
    }\n", "    let result: string = \"\";\n    let numeral: string[] = [\"m\", \"\
    cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\"\
    , \"i\"];\n    let value: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n    for (let i: number = 0; i < value.length; i++) {\n       \
    \ while (number >= value[i]) {\n            number -= value[i];\n            result\
    \ += numeral[i];\n        }\n    }\n    return result;\n}\n", "    let result:\
    \ string = \"\";\n    let roman_numerals: string[] = [\"i\", \"v\", \"x\", \"\
    l\", \"c\", \"d\", \"m\"];\n    let num_to_convert: number = number;\n    let\
    \ digit: number = 0;\n    while (num_to_convert > 0) {\n        let digit_value:\
    \ number = num_to_convert % 10;\n        num_to_convert = Math.floor(num_to_convert\
    \ / 10);\n        if (digit_value < 4) {\n            result = roman_numerals[digit\
    \ * 2].repeat(digit_value) + result;\n        } else if (digit_value === 4) {\n\
    \            result = roman_numerals[digit * 2] + roman_numerals[digit * 2 + 1]\
    \ + result;\n        } else if (digit_value === 5) {\n            result = roman_numerals[digit\
    \ * 2 + 1] + result;\n        } else if (digit_value < 9) {\n            result\
    \ = roman_numerals[digit * 2 + 1] + roman_numerals[digit * 2].repeat(digit_value\
    \ - 5) + result;\n        } else {\n            result = roman_numerals[digit\
    \ * 2] + roman_numerals[digit * 2 + 2] + result;\n        }\n        digit++;\n\
    \    }\n    return result;\n}\n", "    let result = '';\n    const roman_numerals\
    \ = {\n        1: 'i',\n        5: 'v',\n        10: 'x',\n        50: 'l',\n\
    \        100: 'c',\n        500: 'd',\n        1000: 'm'\n    };\n    const roman_numerals_keys\
    \ = Object.keys(roman_numerals).reverse();\n    for (let i = 0; i < roman_numerals_keys.length;\
    \ i++) {\n        const key = roman_numerals_keys[i];\n        const value = roman_numerals[key];\n\
    \        const next_key = roman_numerals_keys[i + 1];\n        const next_value\
    \ = roman_numerals[next_key];\n        const next_next_key = roman_numerals_keys[i\
    \ + 2];\n        const next_next_value = roman_numerals[next_next_key];\n    \
    \    const key_int = parseInt(key);\n        const next_key_int = parseInt(next_key);\n\
    \        const next_next_key_int = parseInt(next_next_key);\n        const number_int\
    \ = parseInt(number);\n        if (number_int >= key_int) {\n            const\
    \ number_of_times = Math.floor(number_int / key_int);\n            for (let j\
    \ = 0; j < number_of_times; j++) {\n                result += value;\n       \
    \     }\n            number_int -= number_of_times * key_int;\n        }\n   \
    \     if (number_int >= next_key_int - key_int) {\n            result += next_value\
    \ + value;\n            number_int -= next_key_int - key_int;\n        }\n   \
    \     if (number_int >= next_next_key_int - key_int) {\n            result +=\
    \ next_next_value + value;\n            number_int -= next_next_key_int - key_int;\n\
    \        }\n    }\n    return result;\n}\n", "    const roman_numerals = {\n \
    \       1: \"i\",\n        4: \"iv\",\n        5: \"v\",\n        9: \"ix\",\n\
    \        10: \"x\",\n        40: \"xl\",\n        50: \"l\",\n        90: \"xc\"\
    ,\n        100: \"c\",\n        400: \"cd\",\n        500: \"d\",\n        900:\
    \ \"cm\",\n        1000: \"m\"\n    };\n    let result = \"\";\n    let keys =\
    \ Object.keys(roman_numerals).reverse();\n    for (let i = 0; i < keys.length;\
    \ i++) {\n        let key = keys[i];\n        while (number >= parseInt(key))\
    \ {\n            result += roman_numerals[key];\n            number -= parseInt(key);\n\
    \        }\n    }\n    return result;\n}\n", "    let result = '';\n    let roman_numerals\
    \ = {\n        1: 'i',\n        5: 'v',\n        10: 'x',\n        50: 'l',\n\
    \        100: 'c',\n        500: 'd',\n        1000: 'm'\n    };\n    let roman_numerals_keys\
    \ = Object.keys(roman_numerals).reverse();\n    let roman_numerals_values = Object.values(roman_numerals);\n\
    \    let roman_numerals_keys_length = roman_numerals_keys.length;\n    for (let\
    \ i = 0; i < roman_numerals_keys_length; i++) {\n        let current_key = roman_numerals_keys[i];\n\
    \        let current_value = roman_numerals_values[i];\n        let next_key =\
    \ roman_numerals_keys[i + 1];\n        let next_value = roman_numerals_values[i\
    \ + 1];\n        let next_next_key = roman_numerals_keys[i + 2];\n        let\
    \ next_next_value = roman_numerals_values[i + 2];\n        let current_key_int\
    \ = parseInt(current_key);\n        let next_key_int = parseInt(next_key);\n \
    \       let next_next_key_int = parseInt(next_next_key);\n        if (number >=\
    \ current_key_int) {\n            let current_key_int_length = current_key_int.toString().length;\n\
    \            let current_key_int_length_minus_one = current_key_int_length - 1;\n\
    \            let current_key_int_length_minus_two = current_key_int_length - 2;\n\
    \            let current_key_int_length_minus_three = current_key_int_length -\
    \ 3;\n            let current_key_int_length_minus_four = current_key_int_length\
    \ - 4;\n            let current_key_int_length_minus_five = current_key_int_length\
    \ - 5;\n            let current_key_int_length_minus_six", "  let result = \"\"\
    ;\n  const roman_numerals = {\n    M: 1000,\n    CM: 900,\n    D: 500,\n    CD:\
    \ 400,\n    C: 100,\n    XC: 90,\n    L: 50,\n    XL: 40,\n    X: 10,\n    IX:\
    \ 9,\n    V: 5,\n    IV: 4,\n    I: 1\n  };\n  for (let key in roman_numerals)\
    \ {\n    while (number >= roman_numerals[key]) {\n      result += key;\n     \
    \ number -= roman_numerals[key];\n    }\n  }\n  return result;\n}\n", "  let result\
    \ = \"\";\n  let num = number;\n  while (num > 0) {\n    if (num >= 1000) {\n\
    \      result += \"m\";\n      num -= 1000;\n    } else if (num >= 900) {\n  \
    \    result += \"cm\";\n      num -= 900;\n    } else if (num >= 500) {\n    \
    \  result += \"d\";\n      num -= 500;\n    } else if (num >= 400) {\n      result\
    \ += \"cd\";\n      num -= 400;\n    } else if (num >= 100) {\n      result +=\
    \ \"c\";\n      num -= 100;\n    } else if (num >= 90) {\n      result += \"xc\"\
    ;\n      num -= 90;\n    } else if (num >= 50) {\n      result += \"l\";\n   \
    \   num -= 50;\n    } else if (num >= 40) {\n      result += \"xl\";\n      num\
    \ -= 40;\n    } else if (num >= 10) {\n      result += \"x\";\n      num -= 10;\n\
    \    } else if (num >= 9) {\n      result += \"ix\";\n      num -= 9;\n    } else\
    \ if (num >= 5) {\n      result += \"v\";\n      num -= 5;\n    } else if (num\
    \ >= 4) {\n      result += \"iv\";\n      num -= 4;\n    } else if (num >= 1)\
    \ {\n      result += \"i\";\n      num -= 1;\n    }\n  }\n  return result;\n}\n",
  "    let roman: string = \"\";\n    let romanNumeral: string[] = [\"m\", \"cm\"\
    , \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"\
    i\"];\n    let numbers: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n        while\
    \ (number >= numbers[i]) {\n            roman += romanNumeral[i];\n          \
    \  number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", "    let\
    \ result = \"\";\n    let roman = [\n        [\"m\", 1000],\n        [\"cm\",\
    \ 900],\n        [\"d\", 500],\n        [\"cd\", 400],\n        [\"c\", 100],\n\
    \        [\"xc\", 90],\n        [\"l\", 50],\n        [\"xl\", 40],\n        [\"\
    x\", 10],\n        [\"ix\", 9],\n        [\"v\", 5],\n        [\"iv\", 4],\n \
    \       [\"i\", 1]\n    ];\n    for (let i = 0; i < roman.length; i++) {\n   \
    \     while (number >= roman[i][1]) {\n            result += roman[i][0];\n  \
    \          number -= roman[i][1];\n        }\n    }\n    return result;\n}\n",
  "    let result = '';\n    const roman = {\n        M: 1000,\n        CM: 900,\n\
    \        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n       \
    \ L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n   \
    \     IV: 4,\n        I: 1\n    };\n    for (let key in roman) {\n        if (number\
    \ >= roman[key]) {\n            result += key.toLowerCase().repeat(Math.floor(number\
    \ / roman[key]));\n            number -= roman[key] * Math.floor(number / roman[key]);\n\
    \        }\n    }\n    return result;\n}\n", "    let roman = \"\";\n    let romanNumeral\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \ let result = \"\";\n  let num = number;\n  let roman = {\n    M: 1000,\n   \
    \ CM: 900,\n    D: 500,\n    CD: 400,\n    C: 100,\n    XC: 90,\n    L: 50,\n\
    \    XL: 40,\n    X: 10,\n    IX: 9,\n    V: 5,\n    IV: 4,\n    I: 1\n  };\n\
    \  for (let key in roman) {\n    if (num >= roman[key]) {\n      let count = Math.floor(num\
    \ / roman[key]);\n      num -= roman[key] * count;\n      result += key.repeat(count);\n\
    \    }\n  }\n  return result;\n}\n", "    let result = '';\n    let num = number;\n\
    \    while (num > 0) {\n        if (num >= 1000) {\n            result += 'm';\n\
    \            num -= 1000;\n        } else if (num >= 900) {\n            result\
    \ += 'cm';\n            num -= 900;\n        } else if (num >= 500) {\n      \
    \      result += 'd';\n            num -= 500;\n        } else if (num >= 400)\
    \ {\n            result += 'cd';\n            num -= 400;\n        } else if (num\
    \ >= 100) {\n            result += 'c';\n            num -= 100;\n        } else\
    \ if (num >= 90) {\n            result += 'xc';\n            num -= 90;\n    \
    \    } else if (num >= 50) {\n            result += 'l';\n            num -= 50;\n\
    \        } else if (num >= 40) {\n            result += 'xl';\n            num\
    \ -= 40;\n        } else if (num >= 10) {\n            result += 'x';\n      \
    \      num -= 10;\n        } else if (num >= 9) {\n            result += 'ix';\n\
    \            num -= 9;\n        } else if (num >= 5) {\n            result +=\
    \ 'v';\n            num -= 5;\n        } else if (num >= 4) {\n            result\
    \ += 'iv';\n            num -= 4;\n        } else if (num >= 1) {\n          \
    \  result += 'i';\n            num -= 1;\n        }\n    }\n    return result;\n\
    }\n", "    let result: string = \"\";\n    let numeral: string = \"\";\n    let\
    \ numeral_value: number = 0;\n    let numeral_index: number = 0;\n    let numeral_length:\
    \ number = 0;\n    let numeral_count: number = 0;\n    let numeral_remainder:\
    \ number = 0;\n    let numeral_remainder_value: number = 0;\n    let numeral_remainder_index:\
    \ number = 0;\n    let numeral_remainder_length: number = 0;\n    let numeral_remainder_count:\
    \ number = 0;\n    let numeral_remainder_remainder: number = 0;\n    let numeral_remainder_remainder_value:\
    \ number = 0;\n    let numeral_remainder_remainder_index: number = 0;\n    let\
    \ numeral_remainder_remainder_length: number = 0;\n    let numeral_remainder_remainder_count:\
    \ number = 0;\n    let numeral_remainder_remainder_remainder: number = 0;\n  \
    \  let numeral_remainder_remainder_remainder_value: number = 0;\n    let numeral_remainder_remainder_remainder_index:\
    \ number = 0;\n    let numeral_remainder_remainder_remainder_length: number =\
    \ 0;\n    let numeral_remainder_remainder_remainder_count: number = 0;\n    let\
    \ numeral_remainder_remainder_remainder_remainder: number = 0;\n    let numeral_remainder_remainder_remainder_remainder_value:\
    \ number = 0;\n    let numeral_remainder_remainder_remainder_remainder_index:\
    \ number = 0;\n    let numeral_remainder_remainder_remainder_remainder_length:\
    \ number = 0;\n    let numeral_remainder_remainder_remainder_remainder_count:\
    \ number = 0;\n    let numeral_remainder_remainder", "    const roman_numerals\
    \ = {\n        1: \"i\",\n        4: \"iv\",\n        5: \"v\",\n        9: \"\
    ix\",\n        10: \"x\",\n        40: \"xl\",\n        50: \"l\",\n        90:\
    \ \"xc\",\n        100: \"c\",\n        400: \"cd\",\n        500: \"d\",\n  \
    \      900: \"cm\",\n        1000: \"m\"\n    };\n    let result = \"\";\n   \
    \ let keys = Object.keys(roman_numerals).reverse();\n    for (let i = 0; i < keys.length;\
    \ i++) {\n        let key = keys[i];\n        while (number >= parseInt(key))\
    \ {\n            result += roman_numerals[key];\n            number -= parseInt(key);\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ roman = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD:\
    \ 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n  \
    \      X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n \
    \   };\n    for (let key in roman) {\n        if (number >= roman[key]) {\n  \
    \          result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n\
    \            number -= roman[key] * Math.floor(number / roman[key]);\n       \
    \ }\n    }\n    return result;\n}\n", "    let result = '';\n    let roman = ['m',\
    \ 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i'];\n    let\
    \ decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let\
    \ i = 0; i < decimal.length; i++) {\n        while (number % decimal[i] < number)\
    \ {\n            result += roman[i];\n            number -= decimal[i];\n    \
    \    }\n    }\n    return result;\n}\n", "    let result = '';\n    const roman_numerals\
    \ = {\n        1: 'i',\n        5: 'v',\n        10: 'x',\n        50: 'l',\n\
    \        100: 'c',\n        500: 'd',\n        1000: 'm'\n    };\n    const roman_numerals_keys\
    \ = Object.keys(roman_numerals).reverse();\n    for (let i = 0; i < roman_numerals_keys.length;\
    \ i++) {\n        const current_key = roman_numerals_keys[i];\n        const current_value\
    \ = roman_numerals[current_key];\n        const next_key = roman_numerals_keys[i\
    \ + 1];\n        const next_value = roman_numerals[next_key];\n        const next_next_key\
    \ = roman_numerals_keys[i + 2];\n        const next_next_value = roman_numerals[next_next_key];\n\
    \        if (number >= parseInt(current_key)) {\n            const number_of_current_value\
    \ = Math.floor(number / parseInt(current_key));\n            if (number_of_current_value\
    \ === 4) {\n                result += current_value + next_value;\n          \
    \  } else if (number_of_current_value === 9) {\n                result += current_value\
    \ + next_next_value;\n            } else {\n                for (let j = 0; j\
    \ < number_of_current_value; j++) {\n                    result += current_value;\n\
    \                }\n            }\n            number -= number_of_current_value\
    \ * parseInt(current_key);\n        }\n    }\n    return result;\n}\n", "    let\
    \ result: string = \"\";\n    let num: number = number;\n    while (num > 0) {\n\
    \        if (num >= 1000) {\n            result += \"m\";\n            num -=\
    \ 1000;\n        } else if (num >= 900) {\n            result += \"cm\";\n   \
    \         num -= 900;\n        } else if (num >= 500) {\n            result +=\
    \ \"d\";\n            num -= 500;\n        } else if (num >= 400) {\n        \
    \    result += \"cd\";\n            num -= 400;\n        } else if (num >= 100)\
    \ {\n            result += \"c\";\n            num -= 100;\n        } else if\
    \ (num >= 90) {\n            result += \"xc\";\n            num -= 90;\n     \
    \   } else if (num >= 50) {\n            result += \"l\";\n            num -=\
    \ 50;\n        } else if (num >= 40) {\n            result += \"xl\";\n      \
    \      num -= 40;\n        } else if (num >= 10) {\n            result += \"x\"\
    ;\n            num -= 10;\n        } else if (num >= 9) {\n            result\
    \ += \"ix\";\n            num -= 9;\n        } else if (num >= 5) {\n        \
    \    result += \"v\";\n            num -= 5;\n        } else if (num >= 4) {\n\
    \            result += \"iv\";\n            num -= 4;\n        } else if (num\
    \ >= 1) {\n            result += \"i\";\n            num -= 1;\n        }\n  \
    \  }\n    return result;\n}\n", "    let roman = \"\";\n    let romanNumerals\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let key in romanNumerals) {\n        while (number >= romanNumerals[key])\
    \ {\n            roman += key;\n            number -= romanNumerals[key];\n  \
    \      }\n    }\n    return roman.toLowerCase();\n}\n", "    let result = \"\"\
    ;\n    let roman = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n  \
    \      CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL:\
    \ 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n       \
    \ I: 1\n    };\n    for (let key in roman) {\n        if (number >= roman[key])\
    \ {\n            result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n\
    \            number %= roman[key];\n        }\n    }\n    return result;\n}\n",
  "    let result: string = \"\";\n    let num: number = number;\n    while (num >=\
    \ 1000) {\n        result += \"m\";\n        num -= 1000;\n    }\n    while (num\
    \ >= 900) {\n        result += \"cm\";\n        num -= 900;\n    }\n    while\
    \ (num >= 500) {\n        result += \"d\";\n        num -= 500;\n    }\n    while\
    \ (num >= 400) {\n        result += \"cd\";\n        num -= 400;\n    }\n    while\
    \ (num >= 100) {\n        result += \"c\";\n        num -= 100;\n    }\n    while\
    \ (num >= 90) {\n        result += \"xc\";\n        num -= 90;\n    }\n    while\
    \ (num >= 50) {\n        result += \"l\";\n        num -= 50;\n    }\n    while\
    \ (num >= 40) {\n        result += \"xl\";\n        num -= 40;\n    }\n    while\
    \ (num >= 10) {\n        result += \"x\";\n        num -= 10;\n    }\n    while\
    \ (num >= 9) {\n        result += \"ix\";\n        num -= 9;\n    }\n    while\
    \ (num >= 5) {\n        result += \"v\";\n        num -= 5;\n    }\n    while\
    \ (num >= 4) {\n        result += \"iv\";\n        num -= 4;\n    }\n    while\
    \ (num >= 1) {\n        result += \"i\";\n        num -= 1;\n    }\n    return\
    \ result;\n}\n", "    let result: string = \"\";\n    let num: number = number;\n\
    \    let roman: string[] = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\"\
    , \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal: number[] = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i: number = 0;\
    \ i < decimal.length; i++) {\n        while (num % decimal[i] < num) {\n     \
    \       result += roman[i];\n            num -= decimal[i];\n        }\n    }\n\
    \    return result;\n}\n", "    let result = '';\n    const romanNumerals = {\n\
    \        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n     \
    \   C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n\
    \        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for\
    \ (let key in romanNumerals) {\n        while (number >= romanNumerals[key]) {\n\
    \            result += key;\n            number -= romanNumerals[key];\n     \
    \   }\n    }\n    return result;\n}\n", "    let result = \"\";\n    let num =\
    \ number;\n    while (num > 0) {\n        if (num >= 1000) {\n            result\
    \ += \"m\";\n            num -= 1000;\n        } else if (num >= 900) {\n    \
    \        result += \"cm\";\n            num -= 900;\n        } else if (num >=\
    \ 500) {\n            result += \"d\";\n            num -= 500;\n        } else\
    \ if (num >= 400) {\n            result += \"cd\";\n            num -= 400;\n\
    \        } else if (num >= 100) {\n            result += \"c\";\n            num\
    \ -= 100;\n        } else if (num >= 90) {\n            result += \"xc\";\n  \
    \          num -= 90;\n        } else if (num >= 50) {\n            result +=\
    \ \"l\";\n            num -= 50;\n        } else if (num >= 40) {\n          \
    \  result += \"xl\";\n            num -= 40;\n        } else if (num >= 10) {\n\
    \            result += \"x\";\n            num -= 10;\n        } else if (num\
    \ >= 9) {\n            result += \"ix\";\n            num -= 9;\n        } else\
    \ if (num >= 5) {\n            result += \"v\";\n            num -= 5;\n     \
    \   } else if (num >= 4) {\n            result += \"iv\";\n            num -=\
    \ 4;\n        } else if (num >= 1) {\n            result += \"i\";\n         \
    \   num -= 1;\n        }\n    }\n    return result;\n}\n", "    let result = \"\
    \";\n    let romanNumerals = [\n        [\"m\", 1000],\n        [\"cm\", 900],\n\
    \        [\"d\", 500],\n        [\"cd\", 400],\n        [\"c\", 100],\n      \
    \  [\"xc\", 90],\n        [\"l\", 50],\n        [\"xl\", 40],\n        [\"x\"\
    , 10],\n        [\"ix\", 9],\n        [\"v\", 5],\n        [\"iv\", 4],\n    \
    \    [\"i\", 1]\n    ];\n    for (let i = 0; i < romanNumerals.length; i++) {\n\
    \        while (number >= romanNumerals[i][1]) {\n            result += romanNumerals[i][0];\n\
    \            number -= romanNumerals[i][1];\n        }\n    }\n    return result;\n\
    }\n", "  let result = '';\n  const romanNumerals = [\n    {\n      value: 1000,\n\
    \      symbol: 'm',\n    },\n    {\n      value: 900,\n      symbol: 'cm',\n \
    \   },\n    {\n      value: 500,\n      symbol: 'd',\n    },\n    {\n      value:\
    \ 400,\n      symbol: 'cd',\n    },\n    {\n      value: 100,\n      symbol: 'c',\n\
    \    },\n    {\n      value: 90,\n      symbol: 'xc',\n    },\n    {\n      value:\
    \ 50,\n      symbol: 'l',\n    },\n    {\n      value: 40,\n      symbol: 'xl',\n\
    \    },\n    {\n      value: 10,\n      symbol: 'x',\n    },\n    {\n      value:\
    \ 9,\n      symbol: 'ix',\n    },\n    {\n      value: 5,\n      symbol: 'v',\n\
    \    },\n    {\n      value: 4,\n      symbol: 'iv',\n    },\n    {\n      value:\
    \ 1,\n      symbol: 'i',\n    },\n  ];\n\n  for (let i = 0; i < romanNumerals.length;\
    \ i++) {\n    while (number >= romanNumerals[i].value) {\n      result += romanNumerals[i].symbol;\n\
    \      number -= romanNumerals[i].value;\n    }\n  }\n\n  return result;\n}\n",
  "    let result = '';\n    let num = number;\n    let roman = {\n        M: 1000,\n\
    \        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n      \
    \  XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n\
    \        V: 5,\n        IV: 4,\n        I: 1\n    };\n\n    for (let i in roman)\
    \ {\n        while (num >= roman[i]) {\n            result += i;\n           \
    \ num -= roman[i];\n        }\n    }\n\n    return result;\n}\n", "    let result\
    \ = \"\";\n    let num = number;\n    while (num >= 1000) {\n        result +=\
    \ \"m\";\n        num -= 1000;\n    }\n    if (num >= 900) {\n        result +=\
    \ \"cm\";\n        num -= 900;\n    }\n    if (num >= 500) {\n        result +=\
    \ \"d\";\n        num -= 500;\n    }\n    if (num >= 400) {\n        result +=\
    \ \"cd\";\n        num -= 400;\n    }\n    while (num >= 100) {\n        result\
    \ += \"c\";\n        num -= 100;\n    }\n    if (num >= 90) {\n        result\
    \ += \"xc\";\n        num -= 90;\n    }\n    if (num >= 50) {\n        result\
    \ += \"l\";\n        num -= 50;\n    }\n    if (num >= 40) {\n        result +=\
    \ \"xl\";\n        num -= 40;\n    }\n    while (num >= 10) {\n        result\
    \ += \"x\";\n        num -= 10;\n    }\n    if (num >= 9) {\n        result +=\
    \ \"ix\";\n        num -= 9;\n    }\n    if (num >= 5) {\n        result += \"\
    v\";\n        num -= 5;\n    }\n    if (num >= 4) {\n        result += \"iv\"\
    ;\n        num -= 4;\n    }\n    while (num >= 1) {\n        result += \"i\";\n\
    \        num -= 1;\n    }\n    return result;\n}\n", "    let result = '';\n \
    \   const roman_numerals = {\n        1: 'i',\n        5: 'v',\n        10: 'x',\n\
    \        50: 'l',\n        100: 'c',\n        500: 'd',\n        1000: 'm'\n \
    \   };\n    const roman_numerals_keys = Object.keys(roman_numerals).map(Number).reverse();\n\
    \    for (let i = 0; i < roman_numerals_keys.length; i++) {\n        const key\
    \ = roman_numerals_keys[i];\n        const value = roman_numerals[key];\n    \
    \    const next_key = roman_numerals_keys[i + 1];\n        const next_value =\
    \ roman_numerals[next_key];\n        const next_next_key = roman_numerals_keys[i\
    \ + 2];\n        const next_next_value = roman_numerals[next_next_key];\n    \
    \    if (number >= key) {\n            const num_of_key = Math.floor(number /\
    \ key);\n            if (num_of_key === 4) {\n                result += value\
    \ + next_value;\n            } else if (num_of_key === 9) {\n                result\
    \ += value + next_next_value;\n            } else {\n                result +=\
    \ value.repeat(num_of_key);\n            }\n            number -= key * num_of_key;\n\
    \        }\n    }\n    return result;\n}\n", "    let result = '';\n    let num\
    \ = number;\n    while (num >= 1000) {\n        result += 'm';\n        num -=\
    \ 1000;\n    }\n    if (num >= 900) {\n        result += 'cm';\n        num -=\
    \ 900;\n    }\n    if (num >= 500) {\n        result += 'd';\n        num -= 500;\n\
    \    }\n    if (num >= 400) {\n        result += 'cd';\n        num -= 400;\n\
    \    }\n    while (num >= 100) {\n        result += 'c';\n        num -= 100;\n\
    \    }\n    if (num >= 90) {\n        result += 'xc';\n        num -= 90;\n  \
    \  }\n    if (num >= 50) {\n        result += 'l';\n        num -= 50;\n    }\n\
    \    if (num >= 40) {\n        result += 'xl';\n        num -= 40;\n    }\n  \
    \  while (num >= 10) {\n        result += 'x';\n        num -= 10;\n    }\n  \
    \  if (num >= 9) {\n        result += 'ix';\n        num -= 9;\n    }\n    if\
    \ (num >= 5) {\n        result += 'v';\n        num -= 5;\n    }\n    if (num\
    \ >= 4) {\n        result += 'iv';\n        num -= 4;\n    }\n    while (num >=\
    \ 1) {\n        result += 'i';\n        num -= 1;\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let romanNumerals = {\n        1: \"i\",\n\
    \        5: \"v\",\n        10: \"x\",\n        50: \"l\",\n        100: \"c\"\
    ,\n        500: \"d\",\n        1000: \"m\"\n    };\n    let keys = Object.keys(romanNumerals).reverse();\n\
    \    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n   \
    \     let value = romanNumerals[key];\n        let div = Math.floor(number / parseInt(key));\n\
    \        if (div > 0) {\n            for (let j = 0; j < div; j++) {\n       \
    \         result += value;\n            }\n            number -= div * parseInt(key);\n\
    \        }\n    }\n    return result;\n}\n", "    let result: string = \"\";\n\
    \    let num: number = number;\n    let roman: string[] = [\"m\", \"cm\", \"d\"\
    , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n\
    \    let decimal: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1];\n    for (let i: number = 0; i < decimal.length; i++) {\n        while\
    \ (num % decimal[i] < num) {\n            result += roman[i];\n            num\
    \ -= decimal[i];\n        }\n    }\n    return result;\n}\n", "  const roman_numerals\
    \ = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\",\n    50: \"l\",\n    100:\
    \ \"c\",\n    500: \"d\",\n    1000: \"m\"\n  };\n  let result = \"\";\n  let\
    \ number_string = number.toString();\n  let number_string_length = number_string.length;\n\
    \  for (let i = 0; i < number_string_length; i++) {\n    let digit = parseInt(number_string[i]);\n\
    \    let digit_place = number_string_length - i;\n    let digit_place_value =\
    \ Math.pow(10, digit_place - 1);\n    let digit_place_value_5 = digit_place_value\
    \ * 5;\n    let digit_place_value_10 = digit_place_value * 10;\n    if (digit\
    \ < 4) {\n      result += roman_numerals[digit_place_value].repeat(digit);\n \
    \   } else if (digit === 4) {\n      result += roman_numerals[digit_place_value]\
    \ + roman_numerals[digit_place_value_5];\n    } else if (digit === 5) {\n    \
    \  result += roman_numerals[digit_place_value_5];\n    } else if (digit > 5 &&\
    \ digit < 9) {\n      result += roman_numerals[digit_place_value_5] + roman_numerals[digit_place_value].repeat(digit\
    \ - 5);\n    } else if (digit === 9) {\n      result += roman_numerals[digit_place_value]\
    \ + roman_numerals[digit_place_value_10];\n    }\n  }\n  return result;\n}\n",
  "    let result = \"\";\n    let num = number;\n    while (num >= 1000) {\n    \
    \    result += \"m\";\n        num -= 1000;\n    }\n    if (num >= 900) {\n  \
    \      result += \"cm\";\n        num -= 900;\n    }\n    if (num >= 500) {\n\
    \        result += \"d\";\n        num -= 500;\n    }\n    if (num >= 400) {\n\
    \        result += \"cd\";\n        num -= 400;\n    }\n    while (num >= 100)\
    \ {\n        result += \"c\";\n        num -= 100;\n    }\n    if (num >= 90)\
    \ {\n        result += \"xc\";\n        num -= 90;\n    }\n    if (num >= 50)\
    \ {\n        result += \"l\";\n        num -= 50;\n    }\n    if (num >= 40) {\n\
    \        result += \"xl\";\n        num -= 40;\n    }\n    while (num >= 10) {\n\
    \        result += \"x\";\n        num -= 10;\n    }\n    if (num >= 9) {\n  \
    \      result += \"ix\";\n        num -= 9;\n    }\n    if (num >= 5) {\n    \
    \    result += \"v\";\n        num -= 5;\n    }\n    if (num >= 4) {\n       \
    \ result += \"iv\";\n        num -= 4;\n    }\n    while (num >= 1) {\n      \
    \  result += \"i\";\n        num -= 1;\n    }\n    return result;\n}\n", "   \
    \ let result = \"\";\n    let roman_numerals = [\n        [\"m\", 1000],\n   \
    \     [\"cm\", 900],\n        [\"d\", 500],\n        [\"cd\", 400],\n        [\"\
    c\", 100],\n        [\"xc\", 90],\n        [\"l\", 50],\n        [\"xl\", 40],\n\
    \        [\"x\", 10],\n        [\"ix\", 9],\n        [\"v\", 5],\n        [\"\
    iv\", 4],\n        [\"i\", 1]\n    ];\n    for (let i = 0; i < roman_numerals.length;\
    \ i++) {\n        while (number >= roman_numerals[i][1]) {\n            result\
    \ += roman_numerals[i][0];\n            number -= roman_numerals[i][1];\n    \
    \    }\n    }\n    return result;\n}\n", "    const roman_numerals = {\n     \
    \   1: \"i\",\n        5: \"v\",\n        10: \"x\",\n        50: \"l\",\n   \
    \     100: \"c\",\n        500: \"d\",\n        1000: \"m\",\n    };\n    let\
    \ result = \"\";\n    let num = number;\n    let i = 0;\n    while (num > 0) {\n\
    \        let digit = num % 10;\n        if (digit === 4) {\n            result\
    \ = roman_numerals[Math.pow(10, i)] + roman_numerals[5 * Math.pow(10, i)] + result;\n\
    \        } else if (digit === 9) {\n            result = roman_numerals[Math.pow(10,\
    \ i)] + roman_numerals[10 * Math.pow(10, i)] + result;\n        } else {\n   \
    \         let roman_digit = \"\";\n            if (digit >= 5) {\n           \
    \     roman_digit += roman_numerals[5 * Math.pow(10, i)];\n                digit\
    \ -= 5;\n            }\n            for (let j = 0; j < digit; j++) {\n      \
    \          roman_digit += roman_numerals[Math.pow(10, i)];\n            }\n  \
    \          result = roman_digit + result;\n        }\n        num = Math.floor(num\
    \ / 10);\n        i++;\n    }\n    return result;\n}\n", "    let result = '';\n\
    \    const roman = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v',\
    \ 'iv', 'i'];\n    const decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n    for (let i = 0; i < roman.length; i++) {\n        while (number\
    \ >= decimal[i]) {\n            result += roman[i];\n            number -= decimal[i];\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    const\
    \ symbols = [\n        [\"m\", 1000],\n        [\"cm\", 900],\n        [\"d\"\
    , 500],\n        [\"cd\", 400],\n        [\"c\", 100],\n        [\"xc\", 90],\n\
    \        [\"l\", 50],\n        [\"xl\", 40],\n        [\"x\", 10],\n        [\"\
    ix\", 9],\n        [\"v\", 5],\n        [\"iv\", 4],\n        [\"i\", 1],\n  \
    \  ];\n    for (const [symbol, value] of symbols) {\n        while (number >=\
    \ value) {\n            result += symbol;\n            number -= value;\n    \
    \    }\n    }\n    return result;\n}\n", "    let result = '';\n    const roman\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let key in roman) {\n        while (number >= roman[key]) {\n       \
    \     result += key;\n            number -= roman[key];\n        }\n    }\n  \
    \  return result;\n}\n", "    const roman = {\n        M: 1000,\n        CM: 900,\n\
    \        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n       \
    \ L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n   \
    \     IV: 4,\n        I: 1\n    };\n    let result = \"\";\n    for (let key in\
    \ roman) {\n        if (number >= roman[key]) {\n            result += key.toLowerCase().repeat(Math.floor(number\
    \ / roman[key]));\n            number %= roman[key];\n        }\n    }\n    return\
    \ result;\n}\n", "    let result = '';\n    const romanNumerals = [\n        {\n\
    \            value: 1000,\n            numeral: 'm',\n        },\n        {\n\
    \            value: 900,\n            numeral: 'cm',\n        },\n        {\n\
    \            value: 500,\n            numeral: 'd',\n        },\n        {\n \
    \           value: 400,\n            numeral: 'cd',\n        },\n        {\n \
    \           value: 100,\n            numeral: 'c',\n        },\n        {\n  \
    \          value: 90,\n            numeral: 'xc',\n        },\n        {\n   \
    \         value: 50,\n            numeral: 'l',\n        },\n        {\n     \
    \       value: 40,\n            numeral: 'xl',\n        },\n        {\n      \
    \      value: 10,\n            numeral: 'x',\n        },\n        {\n        \
    \    value: 9,\n            numeral: 'ix',\n        },\n        {\n          \
    \  value: 5,\n            numeral: 'v',\n        },\n        {\n            value:\
    \ 4,\n            numeral: 'iv',\n        },\n        {\n            value: 1,\n\
    \            numeral: 'i',\n        },\n    ];\n\n    romanNumerals.forEach((item)\
    \ => {\n        while (number >= item.value) {\n            result += item.numeral;\n\
    \            number -= item.value;\n        }\n    });\n\n    return result;\n\
    }\n", "  if (number < 1 || number > 1000) {\n    throw new Error(\"Number out\
    \ of range\");\n  }\n  const roman: string[] = [];\n  const romanNumerals = [\n\
    \    [\"m\", 1000],\n    [\"cm\", 900],\n    [\"d\", 500],\n    [\"cd\", 400],\n\
    \    [\"c\", 100],\n    [\"xc\", 90],\n    [\"l\", 50],\n    [\"xl\", 40],\n \
    \   [\"x\", 10],\n    [\"ix\", 9],\n    [\"v\", 5],\n    [\"iv\", 4],\n    [\"\
    i\", 1],\n  ];\n  for (let i = 0; i < romanNumerals.length; i++) {\n    const\
    \ [romanNumeral, decimal] = romanNumerals[i];\n    while (number >= decimal) {\n\
    \      roman.push(romanNumeral);\n      number -= decimal;\n    }\n  }\n  return\
    \ roman.join(\"\");\n}\n", "    let result = \"\";\n    let roman_numerals = {\n\
    \        1: \"i\",\n        5: \"v\",\n        10: \"x\",\n        50: \"l\",\n\
    \        100: \"c\",\n        500: \"d\",\n        1000: \"m\"\n    };\n    let\
    \ roman_numerals_keys = Object.keys(roman_numerals).reverse();\n    let roman_numerals_values\
    \ = Object.values(roman_numerals).reverse();\n    let roman_numerals_keys_length\
    \ = roman_numerals_keys.length;\n    for (let i = 0; i < roman_numerals_keys_length;\
    \ i++) {\n        let current_key = roman_numerals_keys[i];\n        let current_value\
    \ = roman_numerals_values[i];\n        if (number >= current_key) {\n        \
    \    let quotient = Math.floor(number / current_key);\n            let remainder\
    \ = number % current_key;\n            if (quotient === 4) {\n               \
    \ if (i + 1 < roman_numerals_keys_length) {\n                    let next_key\
    \ = roman_numerals_keys[i + 1];\n                    let next_value = roman_numerals_values[i\
    \ + 1];\n                    result += current_value + next_value;\n         \
    \       }\n            } else {\n                for (let j = 0; j < quotient;\
    \ j++) {\n                    result += current_value;\n                }\n  \
    \          }\n            number = remainder;\n        }\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    const roman = {\n        M: 1000,\n       \
    \ CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n\
    \        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n\
    \        IV: 4,\n        I: 1\n    };\n    for (let key in roman) {\n        while\
    \ (number >= roman[key]) {\n            result += key;\n            number -=\
    \ roman[key];\n        }\n    }\n    return result;\n}\n", "    let result = \"\
    \";\n    let roman = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n\
    \        CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL:\
    \ 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n       \
    \ I: 1\n    };\n    for (let key in roman) {\n        while (number >= roman[key])\
    \ {\n            result += key;\n            number -= roman[key];\n        }\n\
    \    }\n    return result;\n}\n", "    let result = '';\n    const roman = {\n\
    \        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n     \
    \   C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n\
    \        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for\
    \ (let key in roman) {\n        while (number >= roman[key]) {\n            result\
    \ += key;\n            number -= roman[key];\n        }\n    }\n    return result;\n\
    }\n", "    let result: string = \"\";\n    let num: number = number;\n    let\
    \ roman: string[] = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\"\
    , \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal: number[] = [1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i: number = 0; i <\
    \ decimal.length; i++) {\n        while (num % decimal[i] < num) {\n         \
    \   result += roman[i];\n            num -= decimal[i];\n        }\n    }\n  \
    \  return result;\n}\n", "    let result = \"\";\n    let num = number;\n    let\
    \ roman = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\",\
    \ \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal = [1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < decimal.length; i++) {\n\
    \        while (num % decimal[i] < num) {\n            result += roman[i];\n \
    \           num -= decimal[i];\n        }\n    }\n    return result;\n}\n", " \
    \   let result = '';\n    let roman = {\n        M: 1000,\n        CM: 900,\n\
    \        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n       \
    \ L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n   \
    \     IV: 4,\n        I: 1\n    };\n    for (let key in roman) {\n        if (number\
    \ >= roman[key]) {\n            result += key.toLowerCase().repeat(Math.floor(number\
    \ / roman[key]));\n            number -= roman[key] * Math.floor(number / roman[key]);\n\
    \        }\n    }\n    return result;\n}\n", "    let roman = \"\";\n    const\
    \ romanNumList = [\n        \"c\", \"cc\", \"ccc\", \"cd\", \"d\",\n        \"\
    dc\", \"dcc\", \"dccc\", \"cm\",\n        \"m\", \"mc\", \"mcc\", \"mccc\", \"\
    mcdd\",\n        \"md\", \"mdc\", \"mdcc\", \"mdccc\"\n    ];\n    roman = romanNumList[number\
    \ - 1];\n    return roman;\n}\n", "    let roman: string = \"\";\n    let romanNumeral:\
    \ string[] = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\"\
    , \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers: number[] = [1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    let result = '';\n    let i = 0;\n    while (number > 0) {\n        if (number\
    \ >= 1000) {\n            result += 'm';\n            number -= 1000;\n      \
    \  } else if (number >= 900) {\n            result += 'cm';\n            number\
    \ -= 900;\n        } else if (number >= 500) {\n            result += 'd';\n \
    \           number -= 500;\n        } else if (number >= 400) {\n            result\
    \ += 'cd';\n            number -= 400;\n        } else if (number >= 100) {\n\
    \            result += 'c';\n            number -= 100;\n        } else if (number\
    \ >= 90) {\n            result += 'xc';\n            number -= 90;\n        }\
    \ else if (number >= 50) {\n            result += 'l';\n            number -=\
    \ 50;\n        } else if (number >= 40) {\n            result += 'xl';\n     \
    \       number -= 40;\n        } else if (number >= 10) {\n            result\
    \ += 'x';\n            number -= 10;\n        } else if (number >= 9) {\n    \
    \        result += 'ix';\n            number -= 9;\n        } else if (number\
    \ >= 5) {\n            result += 'v';\n            number -= 5;\n        } else\
    \ if (number >= 4) {\n            result += 'iv';\n            number -= 4;\n\
    \        } else if (number >= 1) {\n            result += 'i';\n            number\
    \ -= 1;\n        }\n    }\n    return result;\n}\n", "    let result = '';\n \
    \   let num = number;\n    while (num >= 1000) {\n        result += 'm';\n   \
    \     num -= 1000;\n    }\n    if (num >= 900) {\n        result += 'cm';\n  \
    \      num -= 900;\n    }\n    if (num >= 500) {\n        result += 'd';\n   \
    \     num -= 500;\n    }\n    if (num >= 400) {\n        result += 'cd';\n   \
    \     num -= 400;\n    }\n    while (num >= 100) {\n        result += 'c';\n \
    \       num -= 100;\n    }\n    if (num >= 90) {\n        result += 'xc';\n  \
    \      num -= 90;\n    }\n    if (num >= 50) {\n        result += 'l';\n     \
    \   num -= 50;\n    }\n    if (num >= 40) {\n        result += 'xl';\n       \
    \ num -= 40;\n    }\n    while (num >= 10) {\n        result += 'x';\n       \
    \ num -= 10;\n    }\n    if (num >= 9) {\n        result += 'ix';\n        num\
    \ -= 9;\n    }\n    if (num >= 5) {\n        result += 'v';\n        num -= 5;\n\
    \    }\n    if (num >= 4) {\n        result += 'iv';\n        num -= 4;\n    }\n\
    \    while (num >= 1) {\n        result += 'i';\n        num -= 1;\n    }\n  \
    \  return result;\n}\n", "    let result = \"\";\n    let num = number;\n    while\
    \ (num > 0) {\n        if (num >= 1000) {\n            result += \"m\";\n    \
    \        num -= 1000;\n        } else if (num >= 900) {\n            result +=\
    \ \"cm\";\n            num -= 900;\n        } else if (num >= 500) {\n       \
    \     result += \"d\";\n            num -= 500;\n        } else if (num >= 400)\
    \ {\n            result += \"cd\";\n            num -= 400;\n        } else if\
    \ (num >= 100) {\n            result += \"c\";\n            num -= 100;\n    \
    \    } else if (num >= 90) {\n            result += \"xc\";\n            num -=\
    \ 90;\n        } else if (num >= 50) {\n            result += \"l\";\n       \
    \     num -= 50;\n        } else if (num >= 40) {\n            result += \"xl\"\
    ;\n            num -= 40;\n        } else if (num >= 10) {\n            result\
    \ += \"x\";\n            num -= 10;\n        } else if (num >= 9) {\n        \
    \    result += \"ix\";\n            num -= 9;\n        } else if (num >= 5) {\n\
    \            result += \"v\";\n            num -= 5;\n        } else if (num >=\
    \ 4) {\n            result += \"iv\";\n            num -= 4;\n        } else if\
    \ (num >= 1) {\n            result += \"i\";\n            num -= 1;\n        }\n\
    \    }\n    return result;\n}\n", "    let roman = \"\";\n    let num = number;\n\
    \    while (num > 0) {\n        if (num >= 1000) {\n            roman += \"m\"\
    ;\n            num -= 1000;\n        } else if (num >= 900) {\n            roman\
    \ += \"cm\";\n            num -= 900;\n        } else if (num >= 500) {\n    \
    \        roman += \"d\";\n            num -= 500;\n        } else if (num >= 400)\
    \ {\n            roman += \"cd\";\n            num -= 400;\n        } else if\
    \ (num >= 100) {\n            roman += \"c\";\n            num -= 100;\n     \
    \   } else if (num >= 90) {\n            roman += \"xc\";\n            num -=\
    \ 90;\n        } else if (num >= 50) {\n            roman += \"l\";\n        \
    \    num -= 50;\n        } else if (num >= 40) {\n            roman += \"xl\"\
    ;\n            num -= 40;\n        } else if (num >= 10) {\n            roman\
    \ += \"x\";\n            num -= 10;\n        } else if (num >= 9) {\n        \
    \    roman += \"ix\";\n            num -= 9;\n        } else if (num >= 5) {\n\
    \            roman += \"v\";\n            num -= 5;\n        } else if (num >=\
    \ 4) {\n            roman += \"iv\";\n            num -= 4;\n        } else if\
    \ (num >= 1) {\n            roman += \"i\";\n            num -= 1;\n        }\n\
    \    }\n    return roman;\n}\n", "    let result = \"\";\n    let roman = {\n\
    \        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n     \
    \   C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n\
    \        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for\
    \ (let key in roman) {\n        while (number >= roman[key]) {\n            result\
    \ += key;\n            number -= roman[key];\n        }\n    }\n    return result;\n\
    }\n", "    let roman: string = \"\";\n    let romanNumeral: string[] = [\"m\"\
    , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
    iv\", \"i\"];\n    let numbers: number[] = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let roman: string = \"\";\n    let romanNumerals: string[] = [\"i\", \"v\"\
    , \"x\", \"l\", \"c\", \"d\", \"m\"];\n    let numberArray: number[] = number.toString().split(\"\
    \").map(Number);\n    let numberArrayLength: number = numberArray.length;\n  \
    \  for (let i: number = 0; i < numberArrayLength; i++) {\n        let digit: number\
    \ = numberArray[i];\n        let romanDigit: string = \"\";\n        if (digit\
    \ === 9) {\n            romanDigit = romanNumerals[i * 2] + romanNumerals[i *\
    \ 2 + 2];\n        } else if (digit === 4) {\n            romanDigit = romanNumerals[i\
    \ * 2] + romanNumerals[i * 2 + 1];\n        } else {\n            if (digit >=\
    \ 5) {\n                romanDigit += romanNumerals[i * 2 + 1];\n            \
    \    digit -= 5;\n            }\n            for (let j: number = 0; j < digit;\
    \ j++) {\n                romanDigit += romanNumerals[i * 2];\n            }\n\
    \        }\n        roman = romanDigit + roman;\n    }\n    return roman;\n}\n",
  "    let roman: string = \"\";\n    let romanNumeral: string[] = [\"m\", \"cm\"\
    , \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"\
    i\"];\n    let numbers: number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10,\
    \ 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n        while\
    \ (number >= numbers[i]) {\n            roman += romanNumeral[i];\n          \
    \  number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", "    let\
    \ result = '';\n    const roman = {\n        M: 1000,\n        CM: 900,\n    \
    \    D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n\
    \        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n\
    \        I: 1\n    };\n    for (let key in roman) {\n        if (number >= roman[key])\
    \ {\n            result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n\
    \            number -= roman[key] * Math.floor(number / roman[key]);\n       \
    \ }\n    }\n    return result;\n}\n", "    let roman = \"\";\n    const romanNumList\
    \ = [\n        \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\"\
    , \"ix\",\n        \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"\
    lxxx\", \"xc\",\n        \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\"\
    , \"dccc\", \"cm\",\n        \"m\", \"mm\", \"mmm\", \"mmv\", \"mv\", \"mvi\"\
    , \"mvii\", \"mviii\", \"mix\",\n        \"mx\", \"mxx\", \"mxxx\", \"mxl\", \"\
    ml\", \"mlx\", \"mlxx\", \"mlxxx\", \"mxc\",\n        \"mc\", \"mcc\", \"mccc\"\
    , \"mcd\", \"md\", \"mdc\", \"mdcc\", \"mdccc\", \"mcm\"\n    ];\n    return romanNumList[number\
    \ - 1];\n}\n", "    let result = \"\";\n    let num = number;\n    while (num\
    \ > 0) {\n        if (num >= 1000) {\n            result += \"m\";\n         \
    \   num -= 1000;\n        } else if (num >= 900) {\n            result += \"cm\"\
    ;\n            num -= 900;\n        } else if (num >= 500) {\n            result\
    \ += \"d\";\n            num -= 500;\n        } else if (num >= 400) {\n     \
    \       result += \"cd\";\n            num -= 400;\n        } else if (num >=\
    \ 100) {\n            result += \"c\";\n            num -= 100;\n        } else\
    \ if (num >= 90) {\n            result += \"xc\";\n            num -= 90;\n  \
    \      } else if (num >= 50) {\n            result += \"l\";\n            num\
    \ -= 50;\n        } else if (num >= 40) {\n            result += \"xl\";\n   \
    \         num -= 40;\n        } else if (num >= 10) {\n            result += \"\
    x\";\n            num -= 10;\n        } else if (num >= 9) {\n            result\
    \ += \"ix\";\n            num -= 9;\n        } else if (num >= 5) {\n        \
    \    result += \"v\";\n            num -= 5;\n        } else if (num >= 4) {\n\
    \            result += \"iv\";\n            num -= 4;\n        } else if (num\
    \ >= 1) {\n            result += \"i\";\n            num -= 1;\n        }\n  \
    \  }\n    return result;\n}\n", "    let result: string = \"\";\n    let num:\
    \ number = number;\n    let roman: string[] = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal:\
    \ number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for\
    \ (let i: number = 0; i < decimal.length; i++) {\n        while (num % decimal[i]\
    \ < num) {\n            result += roman[i];\n            num -= decimal[i];\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    const\
    \ roman_numerals = [\n        [\"m\", 1000],\n        [\"cm\", 900],\n       \
    \ [\"d\", 500],\n        [\"cd\", 400],\n        [\"c\", 100],\n        [\"xc\"\
    , 90],\n        [\"l\", 50],\n        [\"xl\", 40],\n        [\"x\", 10],\n  \
    \      [\"ix\", 9],\n        [\"v\", 5],\n        [\"iv\", 4],\n        [\"i\"\
    , 1],\n    ];\n    for (let i = 0; i < roman_numerals.length; i++) {\n       \
    \ while (number >= roman_numerals[i][1]) {\n            result += roman_numerals[i][0];\n\
    \            number -= roman_numerals[i][1];\n        }\n    }\n    return result;\n\
    }\n", "    let result = '';\n    let num = number;\n    while (num > 0) {\n  \
    \      if (num >= 1000) {\n            result += 'm';\n            num -= 1000;\n\
    \        } else if (num >= 900) {\n            result += 'cm';\n            num\
    \ -= 900;\n        } else if (num >= 500) {\n            result += 'd';\n    \
    \        num -= 500;\n        } else if (num >= 400) {\n            result +=\
    \ 'cd';\n            num -= 400;\n        } else if (num >= 100) {\n         \
    \   result += 'c';\n            num -= 100;\n        } else if (num >= 90) {\n\
    \            result += 'xc';\n            num -= 90;\n        } else if (num >=\
    \ 50) {\n            result += 'l';\n            num -= 50;\n        } else if\
    \ (num >= 40) {\n            result += 'xl';\n            num -= 40;\n       \
    \ } else if (num >= 10) {\n            result += 'x';\n            num -= 10;\n\
    \        } else if (num >= 9) {\n            result += 'ix';\n            num\
    \ -= 9;\n        } else if (num >= 5) {\n            result += 'v';\n        \
    \    num -= 5;\n        } else if (num >= 4) {\n            result += 'iv';\n\
    \            num -= 4;\n        } else if (num >= 1) {\n            result +=\
    \ 'i';\n            num -= 1;\n        }\n    }\n    return result;\n}\n", " \
    \ let result = \"\";\n  let roman_numerals = [\n    [\"m\", 1000],\n    [\"cm\"\
    , 900],\n    [\"d\", 500],\n    [\"cd\", 400],\n    [\"c\", 100],\n    [\"xc\"\
    , 90],\n    [\"l\", 50],\n    [\"xl\", 40],\n    [\"x\", 10],\n    [\"ix\", 9],\n\
    \    [\"v\", 5],\n    [\"iv\", 4],\n    [\"i\", 1]\n  ];\n  for (let i = 0; i\
    \ < roman_numerals.length; i++) {\n    while (number >= roman_numerals[i][1])\
    \ {\n      result += roman_numerals[i][0];\n      number -= roman_numerals[i][1];\n\
    \    }\n  }\n  return result;\n}\n", "  let result = '';\n  const roman = [\n\
    \    ['m', 1000],\n    ['cm', 900],\n    ['d', 500],\n    ['cd', 400],\n    ['c',\
    \ 100],\n    ['xc', 90],\n    ['l', 50],\n    ['xl', 40],\n    ['x', 10],\n  \
    \  ['ix', 9],\n    ['v', 5],\n    ['iv', 4],\n    ['i', 1],\n  ];\n  for (let\
    \ i = 0; i < roman.length; i++) {\n    while (number >= roman[i][1]) {\n     \
    \ result += roman[i][0];\n      number -= roman[i][1];\n    }\n  }\n  return result;\n\
    }\n", "    let roman: string = \"\";\n    let romanNumeral: string[] = [\"m\"\
    , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
    iv\", \"i\"];\n    let numbers: number[] = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let result = '';\n    const roman_numerals = {\n        1: 'i',\n        5:\
    \ 'v',\n        10: 'x',\n        50: 'l',\n        100: 'c',\n        500: 'd',\n\
    \        1000: 'm'\n    };\n    const roman_numerals_keys = Object.keys(roman_numerals).reverse();\n\
    \    for (let i = 0; i < roman_numerals_keys.length; i++) {\n        const current_key\
    \ = roman_numerals_keys[i];\n        const current_value = roman_numerals[current_key];\n\
    \        const next_key = roman_numerals_keys[i + 1];\n        const next_value\
    \ = roman_numerals[next_key];\n        const current_number = parseInt(current_key);\n\
    \        const next_number = parseInt(next_key);\n        const number_of_current_numerals\
    \ = Math.floor(number / current_number);\n        const number_of_next_numerals\
    \ = Math.floor(number / next_number);\n        if (number_of_current_numerals\
    \ === 4) {\n            result += current_value + next_value;\n            number\
    \ -= current_number * number_of_current_numerals;\n        } else if (number_of_current_numerals\
    \ > 0) {\n            result += current_value.repeat(number_of_current_numerals);\n\
    \            number -= current_number * number_of_current_numerals;\n        }\
    \ else if (number_of_next_numerals === 4) {\n            result += next_value\
    \ + current_value;\n            number -= next_number * number_of_next_numerals;\n\
    \        }\n    }\n    return result;\n}\n", "    let result = '';\n    let num\
    \ = number;\n    while (num > 0) {\n        if (num >= 1000) {\n            result\
    \ += 'm';\n            num -= 1000;\n        } else if (num >= 900) {\n      \
    \      result += 'cm';\n            num -= 900;\n        } else if (num >= 500)\
    \ {\n            result += 'd';\n            num -= 500;\n        } else if (num\
    \ >= 400) {\n            result += 'cd';\n            num -= 400;\n        } else\
    \ if (num >= 100) {\n            result += 'c';\n            num -= 100;\n   \
    \     } else if (num >= 90) {\n            result += 'xc';\n            num -=\
    \ 90;\n        } else if (num >= 50) {\n            result += 'l';\n         \
    \   num -= 50;\n        } else if (num >= 40) {\n            result += 'xl';\n\
    \            num -= 40;\n        } else if (num >= 10) {\n            result +=\
    \ 'x';\n            num -= 10;\n        } else if (num >= 9) {\n            result\
    \ += 'ix';\n            num -= 9;\n        } else if (num >= 5) {\n          \
    \  result += 'v';\n            num -= 5;\n        } else if (num >= 4) {\n   \
    \         result += 'iv';\n            num -= 4;\n        } else if (num >= 1)\
    \ {\n            result += 'i';\n            num -= 1;\n        }\n    }\n   \
    \ return result;\n}\n", "    let result = '';\n    let num = number;\n    while\
    \ (num >= 1000) {\n        result += 'm';\n        num -= 1000;\n    }\n    if\
    \ (num >= 900) {\n        result += 'cm';\n        num -= 900;\n    }\n    if\
    \ (num >= 500) {\n        result += 'd';\n        num -= 500;\n    }\n    if (num\
    \ >= 400) {\n        result += 'cd';\n        num -= 400;\n    }\n    while (num\
    \ >= 100) {\n        result += 'c';\n        num -= 100;\n    }\n    if (num >=\
    \ 90) {\n        result += 'xc';\n        num -= 90;\n    }\n    if (num >= 50)\
    \ {\n        result += 'l';\n        num -= 50;\n    }\n    if (num >= 40) {\n\
    \        result += 'xl';\n        num -= 40;\n    }\n    while (num >= 10) {\n\
    \        result += 'x';\n        num -= 10;\n    }\n    if (num >= 9) {\n    \
    \    result += 'ix';\n        num -= 9;\n    }\n    if (num >= 5) {\n        result\
    \ += 'v';\n        num -= 5;\n    }\n    if (num >= 4) {\n        result += 'iv';\n\
    \        num -= 4;\n    }\n    while (num >= 1) {\n        result += 'i';\n  \
    \      num -= 1;\n    }\n    return result;\n}\n", "    let result: string = \"\
    \";\n    let roman: string[] = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"\
    l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal: number[]\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < decimal.length; i++) {\n        while (number % decimal[i] < number)\
    \ {\n            result += roman[i];\n            number -= decimal[i];\n    \
    \    }\n    }\n    return result;\n}\n", "    if (number < 1 || number > 1000)\
    \ {\n        throw new Error(\"Number must be between 1 and 1000\");\n    }\n\
    \    let roman = \"\";\n    let num = number;\n    while (num >= 1000) {\n   \
    \     roman += \"m\";\n        num -= 1000;\n    }\n    while (num >= 900) {\n\
    \        roman += \"cm\";\n        num -= 900;\n    }\n    while (num >= 500)\
    \ {\n        roman += \"d\";\n        num -= 500;\n    }\n    while (num >= 400)\
    \ {\n        roman += \"cd\";\n        num -= 400;\n    }\n    while (num >= 100)\
    \ {\n        roman += \"c\";\n        num -= 100;\n    }\n    while (num >= 90)\
    \ {\n        roman += \"xc\";\n        num -= 90;\n    }\n    while (num >= 50)\
    \ {\n        roman += \"l\";\n        num -= 50;\n    }\n    while (num >= 40)\
    \ {\n        roman += \"xl\";\n        num -= 40;\n    }\n    while (num >= 10)\
    \ {\n        roman += \"x\";\n        num -= 10;\n    }\n    while (num >= 9)\
    \ {\n        roman += \"ix\";\n        num -= 9;\n    }\n    while (num >= 5)\
    \ {\n        roman += \"v\";\n        num -= 5;\n    }\n    while (num >= 4) {\n\
    \        roman += \"iv\";\n        num -= 4;\n    }\n    while (num >= 1) {\n\
    \        roman += \"i\";\n        num -= 1;\n    }\n    return roman;\n}\n", " \
    \   let result = \"\";\n    let roman = {\n        M: 1000,\n        CM: 900,\n\
    \        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n       \
    \ L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n   \
    \     IV: 4,\n        I: 1\n    };\n    for (let key in roman) {\n        if (number\
    \ >= roman[key]) {\n            result += key.toLowerCase().repeat(Math.floor(number\
    \ / roman[key]));\n            number -= roman[key] * Math.floor(number / roman[key]);\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ roman_numeral_map = [\n        { \"1\": \"i\" },\n        { \"5\": \"v\" },\n\
    \        { \"10\": \"x\" },\n        { \"50\": \"l\" },\n        { \"100\": \"\
    c\" },\n        { \"500\": \"d\" },\n        { \"1000\": \"m\" }\n    ];\n   \
    \ let roman_numeral_map_reverse = [\n        { \"i\": \"1\" },\n        { \"v\"\
    : \"5\" },\n        { \"x\": \"10\" },\n        { \"l\": \"50\" },\n        {\
    \ \"c\": \"100\" },\n        { \"d\": \"500\" },\n        { \"m\": \"1000\" }\n\
    \    ];\n    let roman_numeral_map_reverse_keys = Object.keys(roman_numeral_map_reverse);\n\
    \    let roman_numeral_map_keys = Object.keys(roman_numeral_map);\n    let roman_numeral_map_values\
    \ = Object.values(roman_numeral_map);\n    let roman_numeral_map_reverse_values\
    \ = Object.values(roman_numeral_map_reverse);\n    let roman_numeral_map_reverse_values_int\
    \ = roman_numeral_map_reverse_values.map(Number);\n    let roman_numeral_map_values_int\
    \ = roman_numeral_map_values.map(Number);\n    let roman_numeral_map_reverse_values_int_sorted\
    \ = roman_numeral_map_reverse_values_int.sort((a, b) => b - a);\n    let roman_numeral_map_values_int_sorted\
    \ = roman_numeral_map_values_int.sort((a, b) => b - a);\n    let roman_numeral_map_reverse_values_int_sorted_string\
    \ = roman_numeral_map_reverse_values_int_sorted.map(String);\n    let roman_numeral_map_values_int_sorted_string\
    \ = roman_numeral_map_values_int_sorted.map(String", "    let result = '';\n \
    \   let roman = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n     \
    \   CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n\
    \        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n\
    \    };\n    for (let i of Object.keys(roman)) {\n        let q = Math.floor(number\
    \ / roman[i]);\n        number -= q * roman[i];\n        result += i.repeat(q);\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    while (number >\
    \ 0) {\n        if (number >= 1000) {\n            result += \"m\";\n        \
    \    number -= 1000;\n        } else if (number >= 900) {\n            result\
    \ += \"cm\";\n            number -= 900;\n        } else if (number >= 500) {\n\
    \            result += \"d\";\n            number -= 500;\n        } else if (number\
    \ >= 400) {\n            result += \"cd\";\n            number -= 400;\n     \
    \   } else if (number >= 100) {\n            result += \"c\";\n            number\
    \ -= 100;\n        } else if (number >= 90) {\n            result += \"xc\";\n\
    \            number -= 90;\n        } else if (number >= 50) {\n            result\
    \ += \"l\";\n            number -= 50;\n        } else if (number >= 40) {\n \
    \           result += \"xl\";\n            number -= 40;\n        } else if (number\
    \ >= 10) {\n            result += \"x\";\n            number -= 10;\n        }\
    \ else if (number >= 9) {\n            result += \"ix\";\n            number -=\
    \ 9;\n        } else if (number >= 5) {\n            result += \"v\";\n      \
    \      number -= 5;\n        } else if (number >= 4) {\n            result +=\
    \ \"iv\";\n            number -= 4;\n        } else if (number >= 1) {\n     \
    \       result += \"i\";\n            number -= 1;\n        }\n    }\n    return\
    \ result;\n}\n", "  let result = \"\";\n  let num = number;\n  while (num > 0)\
    \ {\n    if (num >= 1000) {\n      result += \"m\";\n      num -= 1000;\n    }\
    \ else if (num >= 900) {\n      result += \"cm\";\n      num -= 900;\n    } else\
    \ if (num >= 500) {\n      result += \"d\";\n      num -= 500;\n    } else if\
    \ (num >= 400) {\n      result += \"cd\";\n      num -= 400;\n    } else if (num\
    \ >= 100) {\n      result += \"c\";\n      num -= 100;\n    } else if (num >=\
    \ 90) {\n      result += \"xc\";\n      num -= 90;\n    } else if (num >= 50)\
    \ {\n      result += \"l\";\n      num -= 50;\n    } else if (num >= 40) {\n \
    \     result += \"xl\";\n      num -= 40;\n    } else if (num >= 10) {\n     \
    \ result += \"x\";\n      num -= 10;\n    } else if (num >= 9) {\n      result\
    \ += \"ix\";\n      num -= 9;\n    } else if (num >= 5) {\n      result += \"\
    v\";\n      num -= 5;\n    } else if (num >= 4) {\n      result += \"iv\";\n \
    \     num -= 4;\n    } else if (num >= 1) {\n      result += \"i\";\n      num\
    \ -= 1;\n    }\n  }\n  return result;\n}\n", "  const roman_numerals = {\n   \
    \ 1: \"i\",\n    4: \"iv\",\n    5: \"v\",\n    9: \"ix\",\n    10: \"x\",\n \
    \   40: \"xl\",\n    50: \"l\",\n    90: \"xc\",\n    100: \"c\",\n    400: \"\
    cd\",\n    500: \"d\",\n    900: \"cm\",\n    1000: \"m\"\n  };\n  let result\
    \ = \"\";\n  let remaining = number;\n  while (remaining > 0) {\n    for (let\
    \ i = 1000; i > 0; i = i / 10) {\n      if (remaining >= i) {\n        result\
    \ += roman_numerals[i];\n        remaining -= i;\n        break;\n      }\n  \
    \  }\n  }\n  return result;\n}\n", "  let result = \"\";\n  let num = number;\n\
    \  let roman = [\n    [\"m\", 1000],\n    [\"cm\", 900],\n    [\"d\", 500],\n\
    \    [\"cd\", 400],\n    [\"c\", 100],\n    [\"xc\", 90],\n    [\"l\", 50],\n\
    \    [\"xl\", 40],\n    [\"x\", 10],\n    [\"ix\", 9],\n    [\"v\", 5],\n    [\"\
    iv\", 4],\n    [\"i\", 1]\n  ];\n  for (let i = 0; i < roman.length; i++) {\n\
    \    while (num >= roman[i][1]) {\n      result += roman[i][0];\n      num -=\
    \ roman[i][1];\n    }\n  }\n  return result;\n}\n", "    let result = '';\n  \
    \  const roman = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n    \
    \    CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n\
    \        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n\
    \    };\n    for (let key in roman) {\n        if (number >= roman[key]) {\n \
    \           result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n\
    \            number -= roman[key] * Math.floor(number / roman[key]);\n       \
    \ }\n    }\n    return result;\n}\n", "    let roman: string = \"\";\n    let\
    \ romanNumeral: string[] = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\"\
    , \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers: number[] = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "  const roman_numerals = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\",\n    50:\
    \ \"l\",\n    100: \"c\",\n    500: \"d\",\n    1000: \"m\"\n  };\n  let result\
    \ = \"\";\n  let num = number;\n  let i = 0;\n  while (num > 0) {\n    const digit\
    \ = num % 10;\n    const digit_string = digit_to_mini_roman(digit, i);\n    result\
    \ = digit_string + result;\n    num = Math.floor(num / 10);\n    i++;\n  }\n \
    \ return result;\n}\n", "    let result = '';\n    const roman_numerals = {\n\
    \        1: 'i',\n        5: 'v',\n        10: 'x',\n        50: 'l',\n      \
    \  100: 'c',\n        500: 'd',\n        1000: 'm'\n    };\n    const roman_numerals_keys\
    \ = Object.keys(roman_numerals).reverse();\n    for (let i = 0; i < roman_numerals_keys.length;\
    \ i++) {\n        const key = roman_numerals_keys[i];\n        const value = roman_numerals[key];\n\
    \        const num = parseInt(key);\n        if (number >= num) {\n          \
    \  const count = Math.floor(number / num);\n            number -= count * num;\n\
    \            result += value.repeat(count);\n        }\n    }\n    return result;\n\
    }\n", "    let roman = \"\";\n    let romanNumList = [\n        \"i\", \"ii\"\
    , \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\", \"ix\",\n        \"x\", \"\
    xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\",\n        \"c\"\
    , \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"cm\",\n       \
    \ \"m\", \"mm\", \"mmm\", \"mv\", \"v\", \"vm\", \"vmm\", \"vmmm\", \"mx\",\n\
    \        \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"\
    xc\",\n        \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\"\
    , \"cm\",\n        \"m\", \"mm\", \"mmm\", \"mv\", \"v\", \"vm\", \"vmm\", \"\
    vmmm\", \"mx\",\n        \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\"\
    , \"lxxx\", \"xc\",\n        \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"\
    dcc\", \"dccc\", \"cm\",\n        \"m\", \"mm\", \"mmm\", \"mv\", \"v\", \"vm\"\
    , \"vmm\", \"vmmm\", \"mx\",\n        \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"\
    lx\", \"lxx\", \"lxxx\", \"xc\",\n        \"c\", \"cc\", \"ccc\", \"cd\", \"d\"\
    , \"dc\", \"dcc\", \"dccc\", \"cm\",\n        \"m\", \"mm\", \"mmm\", \"mv\",\
    \ \"v\", \"vm\", \"vmm\", \"vmmm\", \"mx\",\n        \"x\", \"xx\", \"xxx\", \"\
    xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\",\n        \"c\", \"cc\", \"ccc\"\
    , \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"cm\",\n        \"m\", \"", "   \
    \ let result: string = \"\";\n    let num: number = number;\n    let roman: string[]\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let decimal: number[] = [1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i: number = 0; i < decimal.length;\
    \ i++) {\n        while (num % decimal[i] < num) {\n            result += roman[i];\n\
    \            num -= decimal[i];\n        }\n    }\n    return result;\n}\n", " \
    \   let result = \"\";\n    let roman_numerals = [\n        [\"\", \"i\", \"ii\"\
    , \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\", \"ix\"],\n        [\"\",\
    \ \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\"],\n\
    \        [\"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\"\
    , \"cm\"],\n        [\"\", \"m\", \"mm\", \"mmm\", \"mv\", \"v\", \"vm\", \"vmm\"\
    , \"vmmm\", \"mx\"],\n    ];\n    let digits = number.toString().split(\"\").reverse();\n\
    \    for (let i = 0; i < digits.length; i++) {\n        result = roman_numerals[i][parseInt(digits[i])]\
    \ + result;\n    }\n    return result;\n}\n", "  let result = \"\";\n  let num\
    \ = number;\n  while (num > 0) {\n    if (num >= 1000) {\n      result += \"m\"\
    ;\n      num -= 1000;\n    } else if (num >= 900) {\n      result += \"cm\";\n\
    \      num -= 900;\n    } else if (num >= 500) {\n      result += \"d\";\n   \
    \   num -= 500;\n    } else if (num >= 400) {\n      result += \"cd\";\n     \
    \ num -= 400;\n    } else if (num >= 100) {\n      result += \"c\";\n      num\
    \ -= 100;\n    } else if (num >= 90) {\n      result += \"xc\";\n      num -=\
    \ 90;\n    } else if (num >= 50) {\n      result += \"l\";\n      num -= 50;\n\
    \    } else if (num >= 40) {\n      result += \"xl\";\n      num -= 40;\n    }\
    \ else if (num >= 10) {\n      result += \"x\";\n      num -= 10;\n    } else\
    \ if (num >= 9) {\n      result += \"ix\";\n      num -= 9;\n    } else if (num\
    \ >= 5) {\n      result += \"v\";\n      num -= 5;\n    } else if (num >= 4) {\n\
    \      result += \"iv\";\n      num -= 4;\n    } else if (num >= 1) {\n      result\
    \ += \"i\";\n      num -= 1;\n    }\n  }\n  return result;\n}\n", "    const roman\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   let result = \"\";\n    for (let key in roman) {\n        if (number >= roman[key])\
    \ {\n            result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n\
    \            number -= roman[key] * Math.floor(number / roman[key]);\n       \
    \ }\n    }\n    return result;\n}\n", "    let result: string = \"\";\n    let\
    \ roman: string[] = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\"\
    , \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal: number[] = [1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < roman.length;\
    \ i++) {\n        while (number >= decimal[i]) {\n            result += roman[i];\n\
    \            number -= decimal[i];\n        }\n    }\n    return result;\n}\n",
  "    let result = \"\";\n    let num = number;\n    while (num >= 1000) {\n    \
    \    result += \"m\";\n        num -= 1000;\n    }\n    if (num >= 900) {\n  \
    \      result += \"cm\";\n        num -= 900;\n    }\n    if (num >= 500) {\n\
    \        result += \"d\";\n        num -= 500;\n    }\n    if (num >= 400) {\n\
    \        result += \"cd\";\n        num -= 400;\n    }\n    while (num >= 100)\
    \ {\n        result += \"c\";\n        num -= 100;\n    }\n    if (num >= 90)\
    \ {\n        result += \"xc\";\n        num -= 90;\n    }\n    if (num >= 50)\
    \ {\n        result += \"l\";\n        num -= 50;\n    }\n    if (num >= 40) {\n\
    \        result += \"xl\";\n        num -= 40;\n    }\n    while (num >= 10) {\n\
    \        result += \"x\";\n        num -= 10;\n    }\n    if (num >= 9) {\n  \
    \      result += \"ix\";\n        num -= 9;\n    }\n    if (num >= 5) {\n    \
    \    result += \"v\";\n        num -= 5;\n    }\n    if (num >= 4) {\n       \
    \ result += \"iv\";\n        num -= 4;\n    }\n    while (num >= 1) {\n      \
    \  result += \"i\";\n        num -= 1;\n    }\n    return result;\n}\n", "   \
    \ let result = \"\";\n    let romanNumerals = [\n        [\"m\", 1000],\n    \
    \    [\"cm\", 900],\n        [\"d\", 500],\n        [\"cd\", 400],\n        [\"\
    c\", 100],\n        [\"xc\", 90],\n        [\"l\", 50],\n        [\"xl\", 40],\n\
    \        [\"x\", 10],\n        [\"ix\", 9],\n        [\"v\", 5],\n        [\"\
    iv\", 4],\n        [\"i\", 1]\n    ];\n    for (let i = 0; i < romanNumerals.length;\
    \ i++) {\n        while (number >= romanNumerals[i][1]) {\n            result\
    \ += romanNumerals[i][0];\n            number -= romanNumerals[i][1];\n      \
    \  }\n    }\n    return result;\n}\n", "    let result = '';\n    let num = number;\n\
    \    while (num > 0) {\n        if (num >= 1000) {\n            result += 'm';\n\
    \            num -= 1000;\n        } else if (num >= 900) {\n            result\
    \ += 'cm';\n            num -= 900;\n        } else if (num >= 500) {\n      \
    \      result += 'd';\n            num -= 500;\n        } else if (num >= 400)\
    \ {\n            result += 'cd';\n            num -= 400;\n        } else if (num\
    \ >= 100) {\n            result += 'c';\n            num -= 100;\n        } else\
    \ if (num >= 90) {\n            result += 'xc';\n            num -= 90;\n    \
    \    } else if (num >= 50) {\n            result += 'l';\n            num -= 50;\n\
    \        } else if (num >= 40) {\n            result += 'xl';\n            num\
    \ -= 40;\n        } else if (num >= 10) {\n            result += 'x';\n      \
    \      num -= 10;\n        } else if (num >= 9) {\n            result += 'ix';\n\
    \            num -= 9;\n        } else if (num >= 5) {\n            result +=\
    \ 'v';\n            num -= 5;\n        } else if (num >= 4) {\n            result\
    \ += 'iv';\n            num -= 4;\n        } else if (num >= 1) {\n          \
    \  result += 'i';\n            num -= 1;\n        }\n    }\n    return result;\n\
    }\n", "    let result = '';\n    const romanNumerals = {\n        1: 'i',\n  \
    \      5: 'v',\n        10: 'x',\n        50: 'l',\n        100: 'c',\n      \
    \  500: 'd',\n        1000: 'm'\n    };\n    const keys = Object.keys(romanNumerals).reverse();\n\
    \    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n \
    \       const value = romanNumerals[key];\n        const nextKey = keys[i + 1];\n\
    \        const nextValue = romanNumerals[nextKey];\n        const nextNextKey\
    \ = keys[i + 2];\n        const nextNextValue = romanNumerals[nextNextKey];\n\
    \        const numberOfKey = Math.floor(number / parseInt(key));\n        if (numberOfKey\
    \ > 0) {\n            if (numberOfKey === 4) {\n                result += value\
    \ + nextValue;\n            } else if (numberOfKey === 9) {\n                result\
    \ += value + nextNextValue;\n            } else {\n                result += value.repeat(numberOfKey);\n\
    \            }\n            number = number % parseInt(key);\n        }\n    }\n\
    \    return result;\n}\n", "    let roman = \"\";\n    let num = number;\n   \
    \ let romanNumList = [\n        \"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"\
    l\", \"xl\",\n        \"x\", \"ix\", \"v\", \"iv\", \"i\"\n    ];\n    let decimalNumList\
    \ = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i =\
    \ 0; i < decimalNumList.length; i++) {\n        while (num % decimalNumList[i]\
    \ < num) {\n            roman += romanNumList[i];\n            num -= decimalNumList[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    let result = \"\";\n    let roman_numerals\
    \ = {\n        1: \"i\",\n        5: \"v\",\n        10: \"x\",\n        50: \"\
    l\",\n        100: \"c\",\n        500: \"d\",\n        1000: \"m\"\n    };\n\
    \    let roman_numerals_keys = Object.keys(roman_numerals).map(function (key)\
    \ {\n        return parseInt(key);\n    });\n    roman_numerals_keys.sort(function\
    \ (a, b) {\n        return b - a;\n    });\n    while (number > 0) {\n       \
    \ for (let i = 0; i < roman_numerals_keys.length; i++) {\n            if (number\
    \ >= roman_numerals_keys[i]) {\n                result += roman_numerals[roman_numerals_keys[i]];\n\
    \                number -= roman_numerals_keys[i];\n                break;\n \
    \           }\n        }\n    }\n    return result;\n}\n", "    let result = '';\n\
    \    let roman = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n    \
    \    CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n\
    \        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n\
    \    };\n    for (let i of Object.keys(roman)) {\n        let q = Math.floor(number\
    \ / roman[i]);\n        number -= q * roman[i];\n        result += i.repeat(q);\n\
    \    }\n    return result;\n}\n", "    let result = '';\n    const roman = {\n\
    \        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n     \
    \   C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n\
    \        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for\
    \ (let key in roman) {\n        if (number >= roman[key]) {\n            result\
    \ += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n            number\
    \ -= roman[key] * Math.floor(number / roman[key]);\n        }\n    }\n    return\
    \ result;\n}\n", "    let result = \"\";\n    let num = number;\n    let roman\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let i in roman) {\n        while (num >= roman[i]) {\n            result\
    \ += i;\n            num -= roman[i];\n        }\n    }\n    return result;\n\
    }\n", "    let roman = \"\";\n    let romanNumerals = [\"m\", \"cm\", \"d\", \"\
    cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n  \
    \  let numbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n   \
    \ for (let i = 0; i < numbers.length; i++) {\n        while (number >= numbers[i])\
    \ {\n            roman += romanNumerals[i];\n            number -= numbers[i];\n\
    \        }\n    }\n    return roman;\n}\n", "  let roman = \"\";\n  let num =\
    \ number;\n  let romanNumeral = [\n    [\"m\", 1000],\n    [\"cm\", 900],\n  \
    \  [\"d\", 500],\n    [\"cd\", 400],\n    [\"c\", 100],\n    [\"xc\", 90],\n \
    \   [\"l\", 50],\n    [\"xl\", 40],\n    [\"x\", 10],\n    [\"ix\", 9],\n    [\"\
    v\", 5],\n    [\"iv\", 4],\n    [\"i\", 1]\n  ];\n\n  for (let i = 0; i < romanNumeral.length;\
    \ i++) {\n    while (num >= romanNumeral[i][1]) {\n      roman += romanNumeral[i][0];\n\
    \      num -= romanNumeral[i][1];\n    }\n  }\n  return roman;\n}\n", "    let\
    \ result = \"\";\n    const roman = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\"\
    , \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    const decimal = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < decimal.length;\
    \ i++) {\n        while (number % decimal[i] < number) {\n            result +=\
    \ roman[i];\n            number -= decimal[i];\n        }\n    }\n    return result;\n\
    }\n", "    let roman = \"\";\n    let num = number;\n    while (num > 0) {\n \
    \       if (num >= 1000) {\n            roman += \"m\";\n            num -= 1000;\n\
    \        } else if (num >= 900) {\n            roman += \"cm\";\n            num\
    \ -= 900;\n        } else if (num >= 500) {\n            roman += \"d\";\n   \
    \         num -= 500;\n        } else if (num >= 400) {\n            roman +=\
    \ \"cd\";\n            num -= 400;\n        } else if (num >= 100) {\n       \
    \     roman += \"c\";\n            num -= 100;\n        } else if (num >= 90)\
    \ {\n            roman += \"xc\";\n            num -= 90;\n        } else if (num\
    \ >= 50) {\n            roman += \"l\";\n            num -= 50;\n        } else\
    \ if (num >= 40) {\n            roman += \"xl\";\n            num -= 40;\n   \
    \     } else if (num >= 10) {\n            roman += \"x\";\n            num -=\
    \ 10;\n        } else if (num >= 9) {\n            roman += \"ix\";\n        \
    \    num -= 9;\n        } else if (num >= 5) {\n            roman += \"v\";\n\
    \            num -= 5;\n        } else if (num >= 4) {\n            roman += \"\
    iv\";\n            num -= 4;\n        } else if (num >= 1) {\n            roman\
    \ += \"i\";\n            num -= 1;\n        }\n    }\n    return roman;\n}\n",
  "    let roman = \"\";\n    let num = number;\n    let romanNumeral = [\n      \
    \  { M: 1000 },\n        { CM: 900 },\n        { D: 500 },\n        { CD: 400\
    \ },\n        { C: 100 },\n        { XC: 90 },\n        { L: 50 },\n        {\
    \ XL: 40 },\n        { X: 10 },\n        { IX: 9 },\n        { V: 5 },\n     \
    \   { IV: 4 },\n        { I: 1 }\n    ];\n\n    for (let i = 0; i < romanNumeral.length;\
    \ i++) {\n        for (let key in romanNumeral[i]) {\n            while (num >=\
    \ romanNumeral[i][key]) {\n                roman += key;\n                num\
    \ -= romanNumeral[i][key];\n            }\n        }\n    }\n    return roman.toLowerCase();\n\
    }\n", "    // your code here\n    let result: string = '';\n    let num: number\
    \ = number;\n    let roman: string[] = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l',\
    \ 'xl', 'x', 'ix', 'v', 'iv', 'i'];\n    let decimal: number[] = [1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i: number = 0; i < decimal.length;\
    \ i++) {\n        while (num % decimal[i] < num) {\n            result += roman[i];\n\
    \            num -= decimal[i];\n        }\n    }\n    return result;\n}\n", " \
    \   let roman = \"\";\n    let romanNumList = [\n        \"m\", \"cm\", \"d\"\
    , \"cd\", \"c\", \"xc\", \"l\", \"xl\",\n        \"x\", \"ix\", \"v\", \"iv\"\
    , \"i\"\n    ];\n    let decimalNumList = [1000, 900, 500, 400, 100, 90, 50, 40,\
    \ 10, 9, 5, 4, 1];\n    for (let i = 0; i < decimalNumList.length; i++) {\n  \
    \      while (number % decimalNumList[i] < number) {\n            roman += romanNumList[i];\n\
    \            number -= decimalNumList[i];\n        }\n    }\n    return roman;\n\
    }\n", "    let result = \"\";\n    let roman = [\n        [\"m\", 1000],\n   \
    \     [\"cm\", 900],\n        [\"d\", 500],\n        [\"cd\", 400],\n        [\"\
    c\", 100],\n        [\"xc\", 90],\n        [\"l\", 50],\n        [\"xl\", 40],\n\
    \        [\"x\", 10],\n        [\"ix\", 9],\n        [\"v\", 5],\n        [\"\
    iv\", 4],\n        [\"i\", 1]\n    ];\n    for (let i = 0; i < roman.length; i++)\
    \ {\n        while (number >= roman[i][1]) {\n            result += roman[i][0];\n\
    \            number -= roman[i][1];\n        }\n    }\n    return result;\n}\n",
  "    let roman = \"\";\n    let romanNumList = [\n        \"i\", \"ii\", \"iii\"\
    , \"iv\", \"v\", \"vi\", \"vii\", \"viii\", \"ix\",\n        \"x\", \"xx\", \"\
    xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\",\n        \"c\", \"cc\"\
    , \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"cm\",\n        \"m\", \"\
    mm\", \"mmm\", \"mv\", \"v\", \"vm\", \"vmm\", \"vmmm\", \"mx\"\n    ];\n    return\
    \ romanNumList[number - 1];\n}\n", "    let roman: string = \"\";\n    let num:\
    \ number = number;\n    while (num > 0) {\n        if (num >= 1000) {\n      \
    \      roman += \"m\";\n            num -= 1000;\n        } else if (num >= 900)\
    \ {\n            roman += \"cm\";\n            num -= 900;\n        } else if\
    \ (num >= 500) {\n            roman += \"d\";\n            num -= 500;\n     \
    \   } else if (num >= 400) {\n            roman += \"cd\";\n            num -=\
    \ 400;\n        } else if (num >= 100) {\n            roman += \"c\";\n      \
    \      num -= 100;\n        } else if (num >= 90) {\n            roman += \"xc\"\
    ;\n            num -= 90;\n        } else if (num >= 50) {\n            roman\
    \ += \"l\";\n            num -= 50;\n        } else if (num >= 40) {\n       \
    \     roman += \"xl\";\n            num -= 40;\n        } else if (num >= 10)\
    \ {\n            roman += \"x\";\n            num -= 10;\n        } else if (num\
    \ >= 9) {\n            roman += \"ix\";\n            num -= 9;\n        } else\
    \ if (num >= 5) {\n            roman += \"v\";\n            num -= 5;\n      \
    \  } else if (num >= 4) {\n            roman += \"iv\";\n            num -= 4;\n\
    \        } else if (num >= 1) {\n            roman += \"i\";\n            num\
    \ -= 1;\n        }\n    }\n    return roman;\n}\n", "    let result = \"\";\n\
    \    let roman = [\n        [\"m\", 1000],\n        [\"cm\", 900],\n        [\"\
    d\", 500],\n        [\"cd\", 400],\n        [\"c\", 100],\n        [\"xc\", 90],\n\
    \        [\"l\", 50],\n        [\"xl\", 40],\n        [\"x\", 10],\n        [\"\
    ix\", 9],\n        [\"v\", 5],\n        [\"iv\", 4],\n        [\"i\", 1]\n   \
    \ ];\n    for (let i = 0; i < roman.length; i++) {\n        while (number >= roman[i][1])\
    \ {\n            result += roman[i][0];\n            number -= roman[i][1];\n\
    \        }\n    }\n    return result;\n}\n", "    let result = '';\n    let i\
    \ = 0;\n    while (number > 0) {\n        if (number >= 1000) {\n            result\
    \ += 'm';\n            number -= 1000;\n        } else if (number >= 900) {\n\
    \            result += 'cm';\n            number -= 900;\n        } else if (number\
    \ >= 500) {\n            result += 'd';\n            number -= 500;\n        }\
    \ else if (number >= 400) {\n            result += 'cd';\n            number -=\
    \ 400;\n        } else if (number >= 100) {\n            result += 'c';\n    \
    \        number -= 100;\n        } else if (number >= 90) {\n            result\
    \ += 'xc';\n            number -= 90;\n        } else if (number >= 50) {\n  \
    \          result += 'l';\n            number -= 50;\n        } else if (number\
    \ >= 40) {\n            result += 'xl';\n            number -= 40;\n        }\
    \ else if (number >= 10) {\n            result += 'x';\n            number -=\
    \ 10;\n        } else if (number >= 9) {\n            result += 'ix';\n      \
    \      number -= 9;\n        } else if (number >= 5) {\n            result +=\
    \ 'v';\n            number -= 5;\n        } else if (number >= 4) {\n        \
    \    result += 'iv';\n            number -= 4;\n        } else if (number >= 1)\
    \ {\n            result += 'i';\n            number -= 1;\n        }\n    }\n\
    \    return result;\n}\n", "    let result = '';\n    let roman_numerals = {\n\
    \        1000: 'm',\n        900: 'cm',\n        500: 'd',\n        400: 'cd',\n\
    \        100: 'c',\n        90: 'xc',\n        50: 'l',\n        40: 'xl',\n \
    \       10: 'x',\n        9: 'ix',\n        5: 'v',\n        4: 'iv',\n      \
    \  1: 'i'\n    };\n    for (let key in roman_numerals) {\n        while (number\
    \ >= parseInt(key)) {\n            result += roman_numerals[key];\n          \
    \  number -= parseInt(key);\n        }\n    }\n    return result;\n}\n", "   \
    \ let result = '';\n    let num = number;\n    while (num > 0) {\n        if (num\
    \ >= 1000) {\n            result += 'm';\n            num -= 1000;\n        }\
    \ else if (num >= 900) {\n            result += 'cm';\n            num -= 900;\n\
    \        } else if (num >= 500) {\n            result += 'd';\n            num\
    \ -= 500;\n        } else if (num >= 400) {\n            result += 'cd';\n   \
    \         num -= 400;\n        } else if (num >= 100) {\n            result +=\
    \ 'c';\n            num -= 100;\n        } else if (num >= 90) {\n           \
    \ result += 'xc';\n            num -= 90;\n        } else if (num >= 50) {\n \
    \           result += 'l';\n            num -= 50;\n        } else if (num >=\
    \ 40) {\n            result += 'xl';\n            num -= 40;\n        } else if\
    \ (num >= 10) {\n            result += 'x';\n            num -= 10;\n        }\
    \ else if (num >= 9) {\n            result += 'ix';\n            num -= 9;\n \
    \       } else if (num >= 5) {\n            result += 'v';\n            num -=\
    \ 5;\n        } else if (num >= 4) {\n            result += 'iv';\n          \
    \  num -= 4;\n        } else if (num >= 1) {\n            result += 'i';\n   \
    \         num -= 1;\n        }\n    }\n    return result;\n}\n", "    let result\
    \ = \"\";\n    const roman = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"\
    l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    const decimal = [1000,\
    \ 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < decimal.length;\
    \ i++) {\n        while (number % decimal[i] < number) {\n            result +=\
    \ roman[i];\n            number -= decimal[i];\n        }\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let roman = [\n        [\"\", \"i\", \"ii\"\
    , \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\", \"ix\"],\n        [\"\",\
    \ \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\"],\n\
    \        [\"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\"\
    , \"cm\"],\n        [\"\", \"m\", \"mm\", \"mmm\", \"mv\", \"v\", \"vm\", \"vmm\"\
    , \"vmmm\", \"mx\"],\n    ];\n    let num = number;\n    let digit = 0;\n    while\
    \ (num > 0) {\n        let remainder = num % 10;\n        result = roman[digit][remainder]\
    \ + result;\n        digit += 1;\n        num = Math.floor(num / 10);\n    }\n\
    \    return result;\n}\n", "    let roman = \"\";\n    let num = number;\n   \
    \ while (num > 0) {\n        if (num >= 1000) {\n            roman += \"m\";\n\
    \            num -= 1000;\n        } else if (num >= 900) {\n            roman\
    \ += \"cm\";\n            num -= 900;\n        } else if (num >= 500) {\n    \
    \        roman += \"d\";\n            num -= 500;\n        } else if (num >= 400)\
    \ {\n            roman += \"cd\";\n            num -= 400;\n        } else if\
    \ (num >= 100) {\n            roman += \"c\";\n            num -= 100;\n     \
    \   } else if (num >= 90) {\n            roman += \"xc\";\n            num -=\
    \ 90;\n        } else if (num >= 50) {\n            roman += \"l\";\n        \
    \    num -= 50;\n        } else if (num >= 40) {\n            roman += \"xl\"\
    ;\n            num -= 40;\n        } else if (num >= 10) {\n            roman\
    \ += \"x\";\n            num -= 10;\n        } else if (num >= 9) {\n        \
    \    roman += \"ix\";\n            num -= 9;\n        } else if (num >= 5) {\n\
    \            roman += \"v\";\n            num -= 5;\n        } else if (num >=\
    \ 4) {\n            roman += \"iv\";\n            num -= 4;\n        } else if\
    \ (num >= 1) {\n            roman += \"i\";\n            num -= 1;\n        }\n\
    \    }\n    return roman;\n}\n", "    let roman: string = \"\";\n    let romanNumeral:\
    \ string[] = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\"\
    , \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers: number[] = [1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    let result = \"\";\n    let num = number;\n    let roman = {\n        M: 1000,\n\
    \        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n      \
    \  XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n\
    \        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for (let key in roman)\
    \ {\n        if (num >= roman[key]) {\n            result += key.toLowerCase().repeat(Math.floor(num\
    \ / roman[key]));\n            num -= roman[key] * Math.floor(num / roman[key]);\n\
    \        }\n    }\n    return result;\n}\n", "  let result = \"\";\n  let i =\
    \ 0;\n  while (number > 0) {\n    if (number >= 1000) {\n      result += \"m\"\
    ;\n      number -= 1000;\n    } else if (number >= 900) {\n      result += \"\
    cm\";\n      number -= 900;\n    } else if (number >= 500) {\n      result +=\
    \ \"d\";\n      number -= 500;\n    } else if (number >= 400) {\n      result\
    \ += \"cd\";\n      number -= 400;\n    } else if (number >= 100) {\n      result\
    \ += \"c\";\n      number -= 100;\n    } else if (number >= 90) {\n      result\
    \ += \"xc\";\n      number -= 90;\n    } else if (number >= 50) {\n      result\
    \ += \"l\";\n      number -= 50;\n    } else if (number >= 40) {\n      result\
    \ += \"xl\";\n      number -= 40;\n    } else if (number >= 10) {\n      result\
    \ += \"x\";\n      number -= 10;\n    } else if (number >= 9) {\n      result\
    \ += \"ix\";\n      number -= 9;\n    } else if (number >= 5) {\n      result\
    \ += \"v\";\n      number -= 5;\n    } else if (number >= 4) {\n      result +=\
    \ \"iv\";\n      number -= 4;\n    } else if (number >= 1) {\n      result +=\
    \ \"i\";\n      number -= 1;\n    }\n  }\n  return result;\n}\n", "    let result:\
    \ string = \"\";\n    let roman: string[] = [\"m\", \"cm\", \"d\", \"cd\", \"\
    c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal:\
    \ number[] = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for\
    \ (let i = 0; i < decimal.length; i++) {\n        while (number % decimal[i] <\
    \ number) {\n            result += roman[i];\n            number -= decimal[i];\n\
    \        }\n    }\n    return result;\n}\n", "    let result = \"\";\n    let\
    \ roman_numerals = {\n        1: \"i\",\n        5: \"v\",\n        10: \"x\"\
    ,\n        50: \"l\",\n        100: \"c\",\n        500: \"d\",\n        1000:\
    \ \"m\"\n    };\n    let roman_numerals_keys = Object.keys(roman_numerals).reverse();\n\
    \    for (let i = 0; i < roman_numerals_keys.length; i++) {\n        let key =\
    \ roman_numerals_keys[i];\n        let value = roman_numerals[key];\n        let\
    \ quotient = Math.floor(number / parseInt(key));\n        if (quotient > 0) {\n\
    \            if (quotient === 4) {\n                result += value + roman_numerals[parseInt(roman_numerals_keys[i\
    \ - 1])];\n            } else {\n                result += value.repeat(quotient);\n\
    \            }\n            number = number % parseInt(key);\n        }\n    }\n\
    \    return result;\n}\n", "    let result = \"\";\n    let roman = {\n      \
    \  M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n\
    \        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n        IX:\
    \ 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for (let key in\
    \ roman) {\n        while (number >= roman[key]) {\n            result += key;\n\
    \            number -= roman[key];\n        }\n    }\n    return result;\n}\n",
  "  let result = \"\";\n  let num = number;\n  while (num > 0) {\n    if (num >=\
    \ 1000) {\n      result += \"m\";\n      num -= 1000;\n    } else if (num >= 900)\
    \ {\n      result += \"cm\";\n      num -= 900;\n    } else if (num >= 500) {\n\
    \      result += \"d\";\n      num -= 500;\n    } else if (num >= 400) {\n   \
    \   result += \"cd\";\n      num -= 400;\n    } else if (num >= 100) {\n     \
    \ result += \"c\";\n      num -= 100;\n    } else if (num >= 90) {\n      result\
    \ += \"xc\";\n      num -= 90;\n    } else if (num >= 50) {\n      result += \"\
    l\";\n      num -= 50;\n    } else if (num >= 40) {\n      result += \"xl\";\n\
    \      num -= 40;\n    } else if (num >= 10) {\n      result += \"x\";\n     \
    \ num -= 10;\n    } else if (num >= 9) {\n      result += \"ix\";\n      num -=\
    \ 9;\n    } else if (num >= 5) {\n      result += \"v\";\n      num -= 5;\n  \
    \  } else if (num >= 4) {\n      result += \"iv\";\n      num -= 4;\n    } else\
    \ if (num >= 1) {\n      result += \"i\";\n      num -= 1;\n    }\n  }\n  return\
    \ result;\n}\n", "  let result = '';\n  const romanNumerals = {\n    M: 1000,\n\
    \    CM: 900,\n    D: 500,\n    CD: 400,\n    C: 100,\n    XC: 90,\n    L: 50,\n\
    \    XL: 40,\n    X: 10,\n    IX: 9,\n    V: 5,\n    IV: 4,\n    I: 1,\n  };\n\
    \  for (const key in romanNumerals) {\n    while (number >= romanNumerals[key])\
    \ {\n      result += key;\n      number -= romanNumerals[key];\n    }\n  }\n \
    \ return result;\n}\n", "  let result = \"\";\n  let roman = {\n    M: 1000,\n\
    \    CM: 900,\n    D: 500,\n    CD: 400,\n    C: 100,\n    XC: 90,\n    L: 50,\n\
    \    XL: 40,\n    X: 10,\n    IX: 9,\n    V: 5,\n    IV: 4,\n    I: 1\n  };\n\
    \  for (let i of Object.keys(roman)) {\n    let q = Math.floor(number / roman[i]);\n\
    \    number -= q * roman[i];\n    result += i.repeat(q);\n  }\n  return result;\n\
    }\n", "  let result = \"\";\n  const romanNumeralMap = {\n    M: 1000,\n    CM:\
    \ 900,\n    D: 500,\n    CD: 400,\n    C: 100,\n    XC: 90,\n    L: 50,\n    XL:\
    \ 40,\n    X: 10,\n    IX: 9,\n    V: 5,\n    IV: 4,\n    I: 1\n  };\n  for (let\
    \ key in romanNumeralMap) {\n    while (number >= romanNumeralMap[key]) {\n  \
    \    result += key;\n      number -= romanNumeralMap[key];\n    }\n  }\n  return\
    \ result;\n}\n", "    let result = \"\";\n    let roman: string[] = [\"i\", \"\
    v\", \"x\", \"l\", \"c\", \"d\", \"m\"];\n    let i = 0;\n    while (number >\
    \ 0) {\n        let digit = number % 10;\n        if (digit < 4) {\n         \
    \   result = roman[i].repeat(digit) + result;\n        } else if (digit === 4)\
    \ {\n            result = roman[i] + roman[i + 1] + result;\n        } else if\
    \ (digit === 5) {\n            result = roman[i + 1] + result;\n        } else\
    \ if (digit < 9) {\n            result = roman[i + 1] + roman[i].repeat(digit\
    \ - 5) + result;\n        } else {\n            result = roman[i] + roman[i +\
    \ 2] + result;\n        }\n        number = Math.floor(number / 10);\n       \
    \ i += 2;\n    }\n    return result;\n}\n", "  let roman = \"\";\n  let num =\
    \ number;\n  while (num > 0) {\n    if (num >= 1000) {\n      roman += \"m\";\n\
    \      num -= 1000;\n    } else if (num >= 900) {\n      roman += \"cm\";\n  \
    \    num -= 900;\n    } else if (num >= 500) {\n      roman += \"d\";\n      num\
    \ -= 500;\n    } else if (num >= 400) {\n      roman += \"cd\";\n      num -=\
    \ 400;\n    } else if (num >= 100) {\n      roman += \"c\";\n      num -= 100;\n\
    \    } else if (num >= 90) {\n      roman += \"xc\";\n      num -= 90;\n    }\
    \ else if (num >= 50) {\n      roman += \"l\";\n      num -= 50;\n    } else if\
    \ (num >= 40) {\n      roman += \"xl\";\n      num -= 40;\n    } else if (num\
    \ >= 10) {\n      roman += \"x\";\n      num -= 10;\n    } else if (num >= 9)\
    \ {\n      roman += \"ix\";\n      num -= 9;\n    } else if (num >= 5) {\n   \
    \   roman += \"v\";\n      num -= 5;\n    } else if (num >= 4) {\n      roman\
    \ += \"iv\";\n      num -= 4;\n    } else if (num >= 1) {\n      roman += \"i\"\
    ;\n      num -= 1;\n    }\n  }\n  return roman;\n}\n", "    let roman = \"\";\n\
    \    let romanNumerals = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\",\
    \ \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let numbers = [1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        while (number >= numbers[i]) {\n            roman += romanNumerals[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    let result = \"\";\n    const roman_numerals = {\n        1: \"i\",\n     \
    \   5: \"v\",\n        10: \"x\",\n        50: \"l\",\n        100: \"c\",\n \
    \       500: \"d\",\n        1000: \"m\"\n    };\n    const roman_numerals_keys\
    \ = Object.keys(roman_numerals);\n    const roman_numerals_values = Object.values(roman_numerals);\n\
    \    const roman_numerals_keys_length = roman_numerals_keys.length;\n    let i\
    \ = 0;\n    let digit = 0;\n    let digit_value = 0;\n    let digit_value_str\
    \ = \"\";\n    let digit_value_str_length = 0;\n    let digit_value_str_length_minus_one\
    \ = 0;\n    let digit_value_str_length_minus_two = 0;\n    let digit_value_str_length_minus_three\
    \ = 0;\n    let digit_value_str_length_minus_four = 0;\n    let digit_value_str_length_minus_five\
    \ = 0;\n    let digit_value_str_length_minus_six = 0;\n    let digit_value_str_length_minus_seven\
    \ = 0;\n    let digit_value_str_length_minus_eight = 0;\n    let digit_value_str_length_minus_nine\
    \ = 0;\n    let digit_value_str_length_minus_ten = 0;\n    let digit_value_str_length_minus_eleven\
    \ = 0;\n    let digit_value_str_length_minus_twelve = 0;\n    let digit_value_str_length_minus_thirteen\
    \ = 0;\n    let digit_value_str_length_minus_fourteen = 0;\n    let digit_value_str_length_minus_fifteen\
    \ = 0;\n    let digit_value_str_length_minus_sixteen = 0;\n    let digit_value_str_length_minus_seventeen\
    \ = 0;\n    let digit_value_str_length_minus_eighteen = 0;\n    let digit_value_str_length_",
  "    let result = '';\n    const roman = {\n        M: 1000,\n        CM: 900,\n\
    \        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n       \
    \ L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n   \
    \     IV: 4,\n        I: 1\n    };\n    for (let key in roman) {\n        if (number\
    \ >= roman[key]) {\n            result += key.toLowerCase().repeat(Math.floor(number\
    \ / roman[key]));\n            number -= roman[key] * Math.floor(number / roman[key]);\n\
    \        }\n    }\n    return result;\n}\n", "    let roman = \"\";\n    let numeral\
    \ = [\n        [\"m\", 1000],\n        [\"cm\", 900],\n        [\"d\", 500],\n\
    \        [\"cd\", 400],\n        [\"c\", 100],\n        [\"xc\", 90],\n      \
    \  [\"l\", 50],\n        [\"xl\", 40],\n        [\"x\", 10],\n        [\"ix\"\
    , 9],\n        [\"v\", 5],\n        [\"iv\", 4],\n        [\"i\", 1]\n    ];\n\
    \    for (let i = 0; i < numeral.length; i++) {\n        while (number >= numeral[i][1])\
    \ {\n            roman += numeral[i][0];\n            number -= numeral[i][1];\n\
    \        }\n    }\n    return roman;\n}\n", "    const roman_numerals = {\n  \
    \      1: \"i\",\n        5: \"v\",\n        10: \"x\",\n        50: \"l\",\n\
    \        100: \"c\",\n        500: \"d\",\n        1000: \"m\",\n    };\n    let\
    \ result = \"\";\n    let num = number;\n    let i = 1;\n    while (num > 0) {\n\
    \        const digit = num % 10;\n        if (digit === 4) {\n            result\
    \ = roman_numerals[i] + roman_numerals[i * 5] + result;\n        } else if (digit\
    \ === 9) {\n            result = roman_numerals[i] + roman_numerals[i * 10] +\
    \ result;\n        } else {\n            if (digit >= 5) {\n                result\
    \ = roman_numerals[i * 5] + result;\n                digit -= 5;\n           \
    \ }\n            result = roman_numerals[i].repeat(digit) + result;\n        }\n\
    \        num = Math.floor(num / 10);\n        i *= 10;\n    }\n    return result;\n\
    }\n", "    let result = '';\n    const roman = {\n        M: 1000,\n        CM:\
    \ 900,\n        D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n\
    \        L: 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n\
    \        IV: 4,\n        I: 1\n    };\n    for (let i of Object.keys(roman)) {\n\
    \        const q = Math.floor(number / roman[i]);\n        number -= q * roman[i];\n\
    \        result += i.repeat(q);\n    }\n    return result;\n}\n", "    let result\
    \ = '';\n    let num = number;\n    while (num > 0) {\n        if (num >= 1000)\
    \ {\n            result += 'm';\n            num -= 1000;\n        } else if (num\
    \ >= 900) {\n            result += 'cm';\n            num -= 900;\n        } else\
    \ if (num >= 500) {\n            result += 'd';\n            num -= 500;\n   \
    \     } else if (num >= 400) {\n            result += 'cd';\n            num -=\
    \ 400;\n        } else if (num >= 100) {\n            result += 'c';\n       \
    \     num -= 100;\n        } else if (num >= 90) {\n            result += 'xc';\n\
    \            num -= 90;\n        } else if (num >= 50) {\n            result +=\
    \ 'l';\n            num -= 50;\n        } else if (num >= 40) {\n            result\
    \ += 'xl';\n            num -= 40;\n        } else if (num >= 10) {\n        \
    \    result += 'x';\n            num -= 10;\n        } else if (num >= 9) {\n\
    \            result += 'ix';\n            num -= 9;\n        } else if (num >=\
    \ 5) {\n            result += 'v';\n            num -= 5;\n        } else if (num\
    \ >= 4) {\n            result += 'iv';\n            num -= 4;\n        } else\
    \ if (num >= 1) {\n            result += 'i';\n            num -= 1;\n       \
    \ }\n    }\n    return result;\n}\n", "    let result = \"\";\n    let num = number;\n\
    \    while (num > 0) {\n        if (num >= 1000) {\n            result += \"m\"\
    ;\n            num -= 1000;\n        } else if (num >= 900) {\n            result\
    \ += \"cm\";\n            num -= 900;\n        } else if (num >= 500) {\n    \
    \        result += \"d\";\n            num -= 500;\n        } else if (num >=\
    \ 400) {\n            result += \"cd\";\n            num -= 400;\n        } else\
    \ if (num >= 100) {\n            result += \"c\";\n            num -= 100;\n \
    \       } else if (num >= 90) {\n            result += \"xc\";\n            num\
    \ -= 90;\n        } else if (num >= 50) {\n            result += \"l\";\n    \
    \        num -= 50;\n        } else if (num >= 40) {\n            result += \"\
    xl\";\n            num -= 40;\n        } else if (num >= 10) {\n            result\
    \ += \"x\";\n            num -= 10;\n        } else if (num >= 9) {\n        \
    \    result += \"ix\";\n            num -= 9;\n        } else if (num >= 5) {\n\
    \            result += \"v\";\n            num -= 5;\n        } else if (num >=\
    \ 4) {\n            result += \"iv\";\n            num -= 4;\n        } else if\
    \ (num >= 1) {\n            result += \"i\";\n            num -= 1;\n        }\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    let roman = [\n\
    \        [\"\", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\"\
    , \"ix\"],\n        [\"\", \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\"\
    , \"lxxx\", \"xc\"],\n        [\"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"\
    dc\", \"dcc\", \"dccc\", \"cm\"],\n        [\"\", \"m\", \"mm\", \"mmm\", \"mv\"\
    , \"v\", \"vm\", \"vmm\", \"vmmm\", \"mx\"],\n    ];\n    let num = number.toString();\n\
    \    for (let i = 0; i < num.length; i++) {\n        result = roman[num.length\
    \ - i - 1][parseInt(num[i])] + result;\n    }\n    return result;\n}\n", "  let\
    \ result = \"\";\n  let num = number;\n  while (num > 0) {\n    if (num >= 1000)\
    \ {\n      result += \"m\";\n      num -= 1000;\n    } else if (num >= 900) {\n\
    \      result += \"cm\";\n      num -= 900;\n    } else if (num >= 500) {\n  \
    \    result += \"d\";\n      num -= 500;\n    } else if (num >= 400) {\n     \
    \ result += \"cd\";\n      num -= 400;\n    } else if (num >= 100) {\n      result\
    \ += \"c\";\n      num -= 100;\n    } else if (num >= 90) {\n      result += \"\
    xc\";\n      num -= 90;\n    } else if (num >= 50) {\n      result += \"l\";\n\
    \      num -= 50;\n    } else if (num >= 40) {\n      result += \"xl\";\n    \
    \  num -= 40;\n    } else if (num >= 10) {\n      result += \"x\";\n      num\
    \ -= 10;\n    } else if (num >= 9) {\n      result += \"ix\";\n      num -= 9;\n\
    \    } else if (num >= 5) {\n      result += \"v\";\n      num -= 5;\n    } else\
    \ if (num >= 4) {\n      result += \"iv\";\n      num -= 4;\n    } else if (num\
    \ >= 1) {\n      result += \"i\";\n      num -= 1;\n    }\n  }\n  return result;\n\
    }\n", "    let roman = \"\";\n    let romanNumList = [\"m\", \"cm\", \"d\", \"\
    cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n  \
    \  let numList = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n   \
    \ for (let i = 0; i < numList.length; i++) {\n        while (number >= numList[i])\
    \ {\n            roman += romanNumList[i];\n            number -= numList[i];\n\
    \        }\n    }\n    return roman;\n}\n", "    let result = '';\n    let num\
    \ = number;\n    let roman = {\n        M: 1000,\n        CM: 900,\n        D:\
    \ 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n        L: 50,\n \
    \       XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n\
    \        I: 1\n    };\n\n    for (let key in roman) {\n        if (num >= roman[key])\
    \ {\n            result += key.repeat(Math.floor(num / roman[key]));\n       \
    \     num -= roman[key] * Math.floor(num / roman[key]);\n        }\n    }\n  \
    \  return result;\n}\n", "    let result = \"\";\n    let num = number;\n    let\
    \ roman_numerals = [\n        [\"m\", 1000],\n        [\"cm\", 900],\n       \
    \ [\"d\", 500],\n        [\"cd\", 400],\n        [\"c\", 100],\n        [\"xc\"\
    , 90],\n        [\"l\", 50],\n        [\"xl\", 40],\n        [\"x\", 10],\n  \
    \      [\"ix\", 9],\n        [\"v\", 5],\n        [\"iv\", 4],\n        [\"i\"\
    , 1]\n    ];\n    for (let i = 0; i < roman_numerals.length; i++) {\n        while\
    \ (num >= roman_numerals[i][1]) {\n            result += roman_numerals[i][0];\n\
    \            num -= roman_numerals[i][1];\n        }\n    }\n    return result;\n\
    }\n", "    let roman = \"\";\n    let num = number;\n    while (num >= 1000) {\n\
    \        roman += \"m\";\n        num -= 1000;\n    }\n    while (num >= 900)\
    \ {\n        roman += \"cm\";\n        num -= 900;\n    }\n    while (num >= 500)\
    \ {\n        roman += \"d\";\n        num -= 500;\n    }\n    while (num >= 400)\
    \ {\n        roman += \"cd\";\n        num -= 400;\n    }\n    while (num >= 100)\
    \ {\n        roman += \"c\";\n        num -= 100;\n    }\n    while (num >= 90)\
    \ {\n        roman += \"xc\";\n        num -= 90;\n    }\n    while (num >= 50)\
    \ {\n        roman += \"l\";\n        num -= 50;\n    }\n    while (num >= 40)\
    \ {\n        roman += \"xl\";\n        num -= 40;\n    }\n    while (num >= 10)\
    \ {\n        roman += \"x\";\n        num -= 10;\n    }\n    while (num >= 9)\
    \ {\n        roman += \"ix\";\n        num -= 9;\n    }\n    while (num >= 5)\
    \ {\n        roman += \"v\";\n        num -= 5;\n    }\n    while (num >= 4) {\n\
    \        roman += \"iv\";\n        num -= 4;\n    }\n    while (num >= 1) {\n\
    \        roman += \"i\";\n        num -= 1;\n    }\n    return roman;\n}\n", " \
    \ let result = \"\";\n  let num = number;\n  while (num > 0) {\n    if (num >=\
    \ 1000) {\n      result += \"m\";\n      num -= 1000;\n    } else if (num >= 900)\
    \ {\n      result += \"cm\";\n      num -= 900;\n    } else if (num >= 500) {\n\
    \      result += \"d\";\n      num -= 500;\n    } else if (num >= 400) {\n   \
    \   result += \"cd\";\n      num -= 400;\n    } else if (num >= 100) {\n     \
    \ result += \"c\";\n      num -= 100;\n    } else if (num >= 90) {\n      result\
    \ += \"xc\";\n      num -= 90;\n    } else if (num >= 50) {\n      result += \"\
    l\";\n      num -= 50;\n    } else if (num >= 40) {\n      result += \"xl\";\n\
    \      num -= 40;\n    } else if (num >= 10) {\n      result += \"x\";\n     \
    \ num -= 10;\n    } else if (num >= 9) {\n      result += \"ix\";\n      num -=\
    \ 9;\n    } else if (num >= 5) {\n      result += \"v\";\n      num -= 5;\n  \
    \  } else if (num >= 4) {\n      result += \"iv\";\n      num -= 4;\n    } else\
    \ if (num >= 1) {\n      result += \"i\";\n      num -= 1;\n    }\n  }\n  return\
    \ result;\n}\n", "    let result = \"\";\n    let roman = [\"m\", \"cm\", \"d\"\
    , \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n\
    \    let decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n \
    \   for (let i = 0; i < roman.length; i++) {\n        while (number >= decimal[i])\
    \ {\n            result += roman[i];\n            number -= decimal[i];\n    \
    \    }\n    }\n    return result;\n}\n", "    let result = \"\";\n    let roman\
    \ = [\n        [\"m\", 1000],\n        [\"cm\", 900],\n        [\"d\", 500],\n\
    \        [\"cd\", 400],\n        [\"c\", 100],\n        [\"xc\", 90],\n      \
    \  [\"l\", 50],\n        [\"xl\", 40],\n        [\"x\", 10],\n        [\"ix\"\
    , 9],\n        [\"v\", 5],\n        [\"iv\", 4],\n        [\"i\", 1]\n    ];\n\
    \    for (let i = 0; i < roman.length; i++) {\n        while (number >= roman[i][1])\
    \ {\n            result += roman[i][0];\n            number -= roman[i][1];\n\
    \        }\n    }\n    return result;\n}\n", "    let roman = \"\";\n    const\
    \ romanNumList = [\n        \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"\
    vii\", \"viii\", \"ix\",\n        \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\"\
    , \"lxx\", \"lxxx\", \"xc\",\n        \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"\
    dc\", \"dcc\", \"dccc\", \"cm\",\n        \"m\", \"mm\", \"mmm\", \"mmv\", \"\
    mv\", \"mvv\", \"mvvv\", \"mvvvv\", \"mx\",\n        \"x\", \"xx\", \"xxx\", \"\
    xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\",\n        \"c\", \"cc\", \"ccc\"\
    , \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"cm\",\n        \"m\", \"mm\", \"\
    mmm\", \"mmv\", \"mv\", \"mvv\", \"mvvv\", \"mvvvv\", \"mx\",\n        \"x\",\
    \ \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\",\n       \
    \ \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"cm\",\n\
    \        \"m\", \"mm\", \"mmm\", \"mmv\", \"mv\", \"mvv\", \"mvvv\", \"mvvvv\"\
    , \"mx\",\n        \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"\
    lxxx\", \"xc\",\n        \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\"\
    , \"dccc\", \"cm\",\n        \"m\", \"mm\", \"mmm\", \"mmv\", \"mv\", \"mvv\"\
    , \"mvvv\", \"mvvvv\", \"mx\",\n        \"x\", \"xx\", \"xxx\", \"xl\", \"l\"\
    , \"lx\", \"lxx\", \"lxxx\", \"xc\",\n        \"c\", \"cc\", \"ccc\", \"cd\",\
    \ \"d\", \"dc\", \"d", "    let result = \"\";\n    let roman_numerals = {\n \
    \       1: \"i\",\n        5: \"v\",\n        10: \"x\",\n        50: \"l\",\n\
    \        100: \"c\",\n        500: \"d\",\n        1000: \"m\"\n    };\n    let\
    \ keys = Object.keys(roman_numerals).reverse();\n    let values = Object.values(roman_numerals).reverse();\n\
    \    let digits = number.toString().split(\"\").reverse();\n    for (let i = 0;\
    \ i < digits.length; i++) {\n        let digit = parseInt(digits[i]);\n      \
    \  if (digit < 4) {\n            result += values[i].repeat(digit);\n        }\
    \ else if (digit == 4) {\n            result += values[i] + values[i - 1];\n \
    \       } else if (digit == 5) {\n            result += values[i - 1];\n     \
    \   } else if (digit < 9) {\n            result += values[i - 1] + values[i].repeat(digit\
    \ - 5);\n        } else if (digit == 9) {\n            result += values[i] + values[i\
    \ - 2];\n        }\n    }\n    return result.split(\"\").reverse().join(\"\");\n\
    }\n", "    let result: string = \"\";\n    let num: number = number;\n    let\
    \ roman: string[] = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\"\
    , \"x\", \"ix\", \"v\", \"iv\", \"i\"];\n    let decimal: number[] = [1000, 900,\
    \ 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i: number = 0; i <\
    \ decimal.length; i++) {\n        while (num % decimal[i] < num) {\n         \
    \   result += roman[i];\n            num -= decimal[i];\n        }\n    }\n  \
    \  return result;\n}\n", "    let result = \"\";\n    let roman = [\n        [\"\
    \", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\", \"ix\"],\n\
    \        [\"\", \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\"\
    , \"xc\"],\n        [\"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\"\
    , \"dccc\", \"cm\"],\n        [\"\", \"m\", \"mm\", \"mmm\", \"mv\", \"v\", \"\
    vm\", \"vmm\", \"vmmm\", \"mx\"],\n    ];\n    let digits = number.toString().split(\"\
    \").reverse();\n    for (let i = 0; i < digits.length; i++) {\n        result\
    \ = roman[i][parseInt(digits[i])] + result;\n    }\n    return result;\n}\n",
  "  let result = \"\";\n  let roman = [\n    [\"m\", 1000],\n    [\"cm\", 900],\n\
    \    [\"d\", 500],\n    [\"cd\", 400],\n    [\"c\", 100],\n    [\"xc\", 90],\n\
    \    [\"l\", 50],\n    [\"xl\", 40],\n    [\"x\", 10],\n    [\"ix\", 9],\n   \
    \ [\"v\", 5],\n    [\"iv\", 4],\n    [\"i\", 1]\n  ];\n  for (let i = 0; i < roman.length;\
    \ i++) {\n    while (number >= roman[i][1]) {\n      result += roman[i][0];\n\
    \      number -= roman[i][1];\n    }\n  }\n  return result;\n}\n", "  let result\
    \ = \"\";\n  let num = number;\n  while (num > 0) {\n    if (num >= 1000) {\n\
    \      result += \"m\";\n      num -= 1000;\n    } else if (num >= 900) {\n  \
    \    result += \"cm\";\n      num -= 900;\n    } else if (num >= 500) {\n    \
    \  result += \"d\";\n      num -= 500;\n    } else if (num >= 400) {\n      result\
    \ += \"cd\";\n      num -= 400;\n    } else if (num >= 100) {\n      result +=\
    \ \"c\";\n      num -= 100;\n    } else if (num >= 90) {\n      result += \"xc\"\
    ;\n      num -= 90;\n    } else if (num >= 50) {\n      result += \"l\";\n   \
    \   num -= 50;\n    } else if (num >= 40) {\n      result += \"xl\";\n      num\
    \ -= 40;\n    } else if (num >= 10) {\n      result += \"x\";\n      num -= 10;\n\
    \    } else if (num >= 9) {\n      result += \"ix\";\n      num -= 9;\n    } else\
    \ if (num >= 5) {\n      result += \"v\";\n      num -= 5;\n    } else if (num\
    \ >= 4) {\n      result += \"iv\";\n      num -= 4;\n    } else if (num >= 1)\
    \ {\n      result += \"i\";\n      num -= 1;\n    }\n  }\n  return result;\n}\n",
  "    let result = \"\";\n    let num = number;\n    while (num > 0) {\n        if\
    \ (num >= 1000) {\n            result += \"m\";\n            num -= 1000;\n  \
    \      } else if (num >= 900) {\n            result += \"cm\";\n            num\
    \ -= 900;\n        } else if (num >= 500) {\n            result += \"d\";\n  \
    \          num -= 500;\n        } else if (num >= 400) {\n            result +=\
    \ \"cd\";\n            num -= 400;\n        } else if (num >= 100) {\n       \
    \     result += \"c\";\n            num -= 100;\n        } else if (num >= 90)\
    \ {\n            result += \"xc\";\n            num -= 90;\n        } else if\
    \ (num >= 50) {\n            result += \"l\";\n            num -= 50;\n      \
    \  } else if (num >= 40) {\n            result += \"xl\";\n            num -=\
    \ 40;\n        } else if (num >= 10) {\n            result += \"x\";\n       \
    \     num -= 10;\n        } else if (num >= 9) {\n            result += \"ix\"\
    ;\n            num -= 9;\n        } else if (num >= 5) {\n            result +=\
    \ \"v\";\n            num -= 5;\n        } else if (num >= 4) {\n            result\
    \ += \"iv\";\n            num -= 4;\n        } else if (num >= 1) {\n        \
    \    result += \"i\";\n            num -= 1;\n        }\n    }\n    return result;\n\
    }\n", "    let result = \"\";\n    let roman_numerals = [\n        [\"m\", 1000],\n\
    \        [\"cm\", 900],\n        [\"d\", 500],\n        [\"cd\", 400],\n     \
    \   [\"c\", 100],\n        [\"xc\", 90],\n        [\"l\", 50],\n        [\"xl\"\
    , 40],\n        [\"x\", 10],\n        [\"ix\", 9],\n        [\"v\", 5],\n    \
    \    [\"iv\", 4],\n        [\"i\", 1]\n    ];\n    for (let i = 0; i < roman_numerals.length;\
    \ i++) {\n        while (number >= roman_numerals[i][1]) {\n            result\
    \ += roman_numerals[i][0];\n            number -= roman_numerals[i][1];\n    \
    \    }\n    }\n    return result;\n}\n", "    let result = '';\n    let num =\
    \ number;\n    while (num > 0) {\n        if (num >= 1000) {\n            result\
    \ += 'm';\n            num -= 1000;\n        } else if (num >= 900) {\n      \
    \      result += 'cm';\n            num -= 900;\n        } else if (num >= 500)\
    \ {\n            result += 'd';\n            num -= 500;\n        } else if (num\
    \ >= 400) {\n            result += 'cd';\n            num -= 400;\n        } else\
    \ if (num >= 100) {\n            result += 'c';\n            num -= 100;\n   \
    \     } else if (num >= 90) {\n            result += 'xc';\n            num -=\
    \ 90;\n        } else if (num >= 50) {\n            result += 'l';\n         \
    \   num -= 50;\n        } else if (num >= 40) {\n            result += 'xl';\n\
    \            num -= 40;\n        } else if (num >= 10) {\n            result +=\
    \ 'x';\n            num -= 10;\n        } else if (num >= 9) {\n            result\
    \ += 'ix';\n            num -= 9;\n        } else if (num >= 5) {\n          \
    \  result += 'v';\n            num -= 5;\n        } else if (num >= 4) {\n   \
    \         result += 'iv';\n            num -= 4;\n        } else if (num >= 1)\
    \ {\n            result += 'i';\n            num -= 1;\n        }\n    }\n   \
    \ return result;\n}\n", "    let result = '';\n    const roman_numerals = {\n\
    \        1: 'i',\n        5: 'v',\n        10: 'x',\n        50: 'l',\n      \
    \  100: 'c',\n        500: 'd',\n        1000: 'm'\n    };\n    const roman_numerals_keys\
    \ = Object.keys(roman_numerals).reverse();\n    for (let i = 0; i < roman_numerals_keys.length;\
    \ i++) {\n        const key = roman_numerals_keys[i];\n        const value = roman_numerals[key];\n\
    \        const num = Number(key);\n        if (number >= num) {\n            const\
    \ count = Math.floor(number / num);\n            result += value.repeat(count);\n\
    \            number -= count * num;\n        }\n    }\n    return result;\n}\n",
  "    let result = '';\n    let roman = {\n        M: 1000,\n        CM: 900,\n \
    \       D: 500,\n        CD: 400,\n        C: 100,\n        XC: 90,\n        L:\
    \ 50,\n        XL: 40,\n        X: 10,\n        IX: 9,\n        V: 5,\n      \
    \  IV: 4,\n        I: 1\n    };\n    for (let key in roman) {\n        if (number\
    \ >= roman[key]) {\n            result += key.toLowerCase().repeat(Math.floor(number\
    \ / roman[key]));\n            number -= roman[key] * Math.floor(number / roman[key]);\n\
    \        }\n    }\n    return result;\n}\n", "    let result = '';\n    let roman\
    \ = {\n        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n\
    \        C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X:\
    \ 10,\n        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n \
    \   for (let key in roman) {\n        if (number >= roman[key]) {\n          \
    \  result += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n    \
    \        number -= roman[key] * Math.floor(number / roman[key]);\n        }\n\
    \    }\n    return result;\n}\n", "  let result = '';\n  const roman = {\n   \
    \ M: 1000,\n    CM: 900,\n    D: 500,\n    CD: 400,\n    C: 100,\n    XC: 90,\n\
    \    L: 50,\n    XL: 40,\n    X: 10,\n    IX: 9,\n    V: 5,\n    IV: 4,\n    I:\
    \ 1,\n  };\n  for (const key in roman) {\n    if (roman.hasOwnProperty(key)) {\n\
    \      const element = roman[key];\n      while (number >= element) {\n      \
    \  result += key;\n        number -= element;\n      }\n    }\n  }\n  return result;\n\
    }\n", "    let result = \"\";\n    const romanNumerals = [\n        {\n      \
    \      num: 1000,\n            roman: \"m\",\n        },\n        {\n        \
    \    num: 900,\n            roman: \"cm\",\n        },\n        {\n          \
    \  num: 500,\n            roman: \"d\",\n        },\n        {\n            num:\
    \ 400,\n            roman: \"cd\",\n        },\n        {\n            num: 100,\n\
    \            roman: \"c\",\n        },\n        {\n            num: 90,\n    \
    \        roman: \"xc\",\n        },\n        {\n            num: 50,\n       \
    \     roman: \"l\",\n        },\n        {\n            num: 40,\n           \
    \ roman: \"xl\",\n        },\n        {\n            num: 10,\n            roman:\
    \ \"x\",\n        },\n        {\n            num: 9,\n            roman: \"ix\"\
    ,\n        },\n        {\n            num: 5,\n            roman: \"v\",\n   \
    \     },\n        {\n            num: 4,\n            roman: \"iv\",\n       \
    \ },\n        {\n            num: 1,\n            roman: \"i\",\n        },\n\
    \    ];\n    for (let i = 0; i < romanNumerals.length; i++) {\n        while (number\
    \ >= romanNumerals[i].num) {\n            result += romanNumerals[i].roman;\n\
    \            number -= romanNumerals[i].num;\n        }\n    }\n    return result;\n\
    }\n", "    let roman: string = \"\";\n    let romanNumeral: string[] = [\"m\"\
    , \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"\
    iv\", \"i\"];\n    let numbers: number[] = [1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n     \
    \   while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n  \
    \          number -= numbers[i];\n        }\n    }\n    return roman;\n}\n", " \
    \   let result = \"\";\n    let num = number;\n    while (num > 0) {\n       \
    \ if (num >= 1000) {\n            result += \"m\";\n            num -= 1000;\n\
    \        } else if (num >= 900) {\n            result += \"cm\";\n           \
    \ num -= 900;\n        } else if (num >= 500) {\n            result += \"d\";\n\
    \            num -= 500;\n        } else if (num >= 400) {\n            result\
    \ += \"cd\";\n            num -= 400;\n        } else if (num >= 100) {\n    \
    \        result += \"c\";\n            num -= 100;\n        } else if (num >=\
    \ 90) {\n            result += \"xc\";\n            num -= 90;\n        } else\
    \ if (num >= 50) {\n            result += \"l\";\n            num -= 50;\n   \
    \     } else if (num >= 40) {\n            result += \"xl\";\n            num\
    \ -= 40;\n        } else if (num >= 10) {\n            result += \"x\";\n    \
    \        num -= 10;\n        } else if (num >= 9) {\n            result += \"\
    ix\";\n            num -= 9;\n        } else if (num >= 5) {\n            result\
    \ += \"v\";\n            num -= 5;\n        } else if (num >= 4) {\n         \
    \   result += \"iv\";\n            num -= 4;\n        } else if (num >= 1) {\n\
    \            result += \"i\";\n            num -= 1;\n        }\n    }\n    return\
    \ result;\n}\n", "    let roman: string = \"\";\n    let romanNumeral: string[]\
    \ = [\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\"];\n    let numbers: number[] = [1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1];\n    for (let i = 0; i < numbers.length; i++) {\n\
    \        while (number >= numbers[i]) {\n            roman += romanNumeral[i];\n\
    \            number -= numbers[i];\n        }\n    }\n    return roman;\n}\n",
  "    let result = \"\";\n    const roman_numerals = {\n        1: \"i\",\n     \
    \   4: \"iv\",\n        5: \"v\",\n        9: \"ix\",\n        10: \"x\",\n  \
    \      40: \"xl\",\n        50: \"l\",\n        90: \"xc\",\n        100: \"c\"\
    ,\n        400: \"cd\",\n        500: \"d\",\n        900: \"cm\",\n        1000:\
    \ \"m\"\n    };\n    const keys = Object.keys(roman_numerals).reverse();\n   \
    \ for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i]);\n\
    \        while (number >= key) {\n            result += roman_numerals[key];\n\
    \            number -= key;\n        }\n    }\n    return result;\n}\n", "   \
    \ let result: string = \"\";\n    let roman: string[] = [\"i\", \"v\", \"x\",\
    \ \"l\", \"c\", \"d\", \"m\"];\n    let num: number[] = [1, 5, 10, 50, 100, 500,\
    \ 1000];\n    for (let i = 6; i >= 0; i--) {\n        while (number >= num[i])\
    \ {\n            result += roman[i];\n            number -= num[i];\n        }\n\
    \    }\n    return result;\n}\n", "    let result = \"\";\n    let roman = {\n\
    \        M: 1000,\n        CM: 900,\n        D: 500,\n        CD: 400,\n     \
    \   C: 100,\n        XC: 90,\n        L: 50,\n        XL: 40,\n        X: 10,\n\
    \        IX: 9,\n        V: 5,\n        IV: 4,\n        I: 1\n    };\n    for\
    \ (let key in roman) {\n        if (number >= roman[key]) {\n            result\
    \ += key.toLowerCase().repeat(Math.floor(number / roman[key]));\n            number\
    \ -= roman[key] * Math.floor(number / roman[key]);\n        }\n    }\n    return\
    \ result;\n}\n", "    let result = '';\n    let num = number;\n    while (num\
    \ > 0) {\n        if (num >= 1000) {\n            result += 'm';\n           \
    \ num -= 1000;\n        } else if (num >= 900) {\n            result += 'cm';\n\
    \            num -= 900;\n        } else if (num >= 500) {\n            result\
    \ += 'd';\n            num -= 500;\n        } else if (num >= 400) {\n       \
    \     result += 'cd';\n            num -= 400;\n        } else if (num >= 100)\
    \ {\n            result += 'c';\n            num -= 100;\n        } else if (num\
    \ >= 90) {\n            result += 'xc';\n            num -= 90;\n        } else\
    \ if (num >= 50) {\n            result += 'l';\n            num -= 50;\n     \
    \   } else if (num >= 40) {\n            result += 'xl';\n            num -= 40;\n\
    \        } else if (num >= 10) {\n            result += 'x';\n            num\
    \ -= 10;\n        } else if (num >= 9) {\n            result += 'ix';\n      \
    \      num -= 9;\n        } else if (num >= 5) {\n            result += 'v';\n\
    \            num -= 5;\n        } else if (num >= 4) {\n            result +=\
    \ 'iv';\n            num -= 4;\n        } else if (num >= 1) {\n            result\
    \ += 'i';\n            num -= 1;\n        }\n    }\n    return result;\n}\n",
  "    let roman = \"\";\n    let romanNumeral = [\n        { M: 1000 },\n       \
    \ { CM: 900 },\n        { D: 500 },\n        { CD: 400 },\n        { C: 100 },\n\
    \        { XC: 90 },\n        { L: 50 },\n        { XL: 40 },\n        { X: 10\
    \ },\n        { IX: 9 },\n        { V: 5 },\n        { IV: 4 },\n        { I:\
    \ 1 }\n    ];\n\n    for (let i = 0; i < romanNumeral.length; i++) {\n       \
    \ for (let key in romanNumeral[i]) {\n            while (number >= romanNumeral[i][key])\
    \ {\n                roman += key;\n                number -= romanNumeral[i][key];\n\
    \            }\n        }\n    }\n    return roman.toLowerCase();\n}\n", "   \
    \ const roman_numerals = {\n        1: \"i\",\n        4: \"iv\",\n        5:\
    \ \"v\",\n        9: \"ix\",\n        10: \"x\",\n        40: \"xl\",\n      \
    \  50: \"l\",\n        90: \"xc\",\n        100: \"c\",\n        400: \"cd\",\n\
    \        500: \"d\",\n        900: \"cm\",\n        1000: \"m\"\n    };\n    let\
    \ result = \"\";\n    let keys = Object.keys(roman_numerals).reverse();\n    for\
    \ (let i = 0; i < keys.length; i++) {\n        while (number >= parseInt(keys[i]))\
    \ {\n            result += roman_numerals[keys[i]];\n            number -= parseInt(keys[i]);\n\
    \        }\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

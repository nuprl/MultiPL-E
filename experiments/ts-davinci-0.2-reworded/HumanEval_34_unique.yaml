name: HumanEval_34_unique
language: ts
prompt: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3,\
  \ 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2,\
  \ 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
completions: ["    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) =>\
    \ a - b);\n}\n", "    return l.sort().filter((item, index, array) => {\n     \
    \   return !index || item !== array[index - 1];\n    });\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return Array.from(new\
    \ Set(l));\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.sort().filter((e, i, a) => e !== a[i - 1]);\n\
    }\n", "    return l.sort().filter((v, i, a) => a.indexOf(v) === i);\n}\n", " \
    \   return l.sort().filter((v, i, a) => v !== a[i - 1]);\n}\n", "    return l.sort().filter((e,\
    \ i, a) => i === 0 || e !== a[i - 1]);\n}\n", "    return l.sort().filter((e,\
    \ i, a) => e !== a[i - 1]);\n}\n", "    return l.sort().filter((e, i, a) => e\
    \ !== a[i - 1]);\n}\n", "  return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.sort().filter((v, i, a) => v !== a[i - 1]);\n\
    }\n", "    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);\n}\n",
  "    return l.sort().filter((e, i, a) => e !== a[i - 1]);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((e,\
    \ i, a) => e !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((e, i, a) =>\
    \ e !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.sort().filter((v, i, a) => a.indexOf(v) ===\
    \ i);\n}\n", "  return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) =>\
    \ a - b);\n}\n", "    return l.sort().filter((v, i, a) => a.indexOf(v) === i);\n\
    }\n", "    return Array.from(new Set(l));\n}\n", "    return l.filter((v, i, a)\
    \ => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.filter((e,\
    \ i) => l.indexOf(e) === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((v,\
    \ i, a) => v !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((e, i, a) =>\
    \ i === 0 || e !== a[i - 1]);\n}\n", "    return l.sort().filter((e, i, a) =>\
    \ i === 0 || e !== a[i - 1]);\n}\n", "    return l.sort().filter((v, i, a) =>\
    \ v !== a[i - 1]);\n}\n", "  return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.sort().filter((v, i, a) => v !== a[i - 1]);\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a -\
    \ b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b)\
    \ => a - b);\n}\n", "    return l.sort().filter((e, i, l) => i === 0 || e !==\
    \ l[i - 1]);\n}\n", "    return l.sort().filter((e, i, a) => i === 0 || e !==\
    \ a[i - 1]);\n}\n", "    return Array.from(new Set(l));\n}\n", "    return l.sort().filter((el,\
    \ i, a) => i === 0 || el !== a[i - 1]);\n}\n", "    let result: number[] = [];\n\
    \    for (let i = 0; i < l.length; i++) {\n        if (result.indexOf(l[i]) ===\
    \ -1) {\n            result.push(l[i]);\n        }\n    }\n    return result.sort((a,\
    \ b) => a - b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.filter((e, i) => l.indexOf(e) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.sort().filter((e, i, a) => i === 0 || e !==\
    \ a[i - 1]);\n}\n", "    return l.sort().filter((e, i, a) => i === 0 || e !==\
    \ a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.sort().filter((a, b) => a !== l[b - 1]);\n\
    }\n", "  return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n\
    }\n", "    return l.sort().filter((v, i, a) => v !== a[i - 1]);\n}\n", "    return\
    \ l.sort().filter((v, i, a) => v !== a[i - 1]);\n}\n", "    return l.sort().filter((v,\
    \ i, a) => v !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((e, i, a) =>\
    \ i == 0 || e != a[i - 1]);\n}\n", "    return l.sort().filter((v, i, a) => a.indexOf(v)\
    \ === i);\n}\n", "    return l.sort().filter((e, i, a) => i === 0 || e !== a[i\
    \ - 1]);\n}\n", "    return l.sort().filter((v, i, a) => v !== a[i - 1]);\n}\n",
  "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n",
  "    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);\n}\n", "  \
    \  return Array.from(new Set(l));\n}\n", "    return l.sort().filter((x, i, a)\
    \ => !i || x != a[i - 1]);\n}\n", "    return [...new Set(l)];\n}\n", "    return\
    \ l.sort().filter((v, i, a) => v !== a[i - 1]);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((v,\
    \ i, a) => v !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "  return l.sort().filter((e, i, a) =>\
    \ i === 0 || e !== a[i - 1]);\n}\n", "    return Array.from(new Set(l));\n}\n",
  "    return l.filter((x, i) => l.indexOf(x) === i).sort();\n}\n", "    return l.sort().filter((e,\
    \ i, a) => e !== a[i - 1]);\n}\n", "    return l.sort().filter((el, i, a) => i\
    \ === 0 || el !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.filter((e, i) => l.indexOf(e)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((e, i, a) =>\
    \ i === 0 || e !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.filter((e, i) => l.indexOf(e)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((e, i, a) =>\
    \ i === 0 || e !== a[i - 1]);\n}\n", "    return l.sort().filter((v, i, a) =>\
    \ v !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.sort().filter((v, i, a) => a.indexOf(v) ===\
    \ i);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b)\
    \ => a - b);\n}\n", "    return l.filter((x, i) => l.indexOf(x) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.sort().filter((e, i, a) => i == 0 || e !=\
    \ a[i - 1]);\n}\n", "    return l.sort().filter((v, i, a) => v !== a[i - 1]);\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a -\
    \ b);\n}\n", "    return l.sort().filter((v, i, a) => v !== a[i - 1]);\n}\n",
  "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n",
  "    return l.sort().filter((e, i, a) => e != a[i - 1]);\n}\n", "    var u = [];\n\
    \    for (var i = 0; i < l.length; i++) {\n        if (u.indexOf(l[i]) < 0) {\n\
    \            u.push(l[i]);\n        }\n    }\n    return u;\n}\n", "    return\
    \ l.sort().filter((v, i, a) => v !== a[i - 1]);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((e,\
    \ i, a) => i === 0 || e !== a[i - 1]);\n}\n", "    return l.sort().filter((v,\
    \ i, a) => v !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((v, i, a) =>\
    \ v !== a[i - 1]);\n}\n", "    return l.sort().filter((el, i, arr) => i === 0\
    \ || el !== arr[i - 1]);\n}\n", "    return Array.from(new Set(l));\n}\n", " \
    \   return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a -\
    \ b);\n}\n", "    return l.sort().filter((v, i, a) => v !== a[i - 1]);\n}\n",
  "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n",
  "    return l.sort().filter((e, i, a) => e !== a[i - 1]);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((v,\
    \ i, a) => v !== a[i - 1]);\n}\n", "    return Array.from(new Set(l));\n}\n",
  "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n",
  "    return l.sort().filter((e, i, a) => a[i - 1] !== e);\n}\n", "    return l.sort().filter((e,\
    \ i, a) => a[i - 1] !== e);\n}\n", "    return [...new Set(l)];\n}\n", "    return\
    \ l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);\n}\n", "    return\
    \ l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "  \
    \  return l.sort().filter((x, i, a) => !i || x != a[i - 1]);\n}\n", "    return\
    \ l.sort().filter((e, i, a) => e !== a[i - 1]);\n}\n", "    return l.sort().filter((e,\
    \ i, a) => e !== a[i - 1]);\n}\n", "    return l.sort().filter((v, i, a) => v\
    \ !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.sort().filter((e, i, a) => i === 0 || e !==\
    \ a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.sort().filter((v, i, a) => v !== a[i - 1]);\n\
    }\n", "    return l.sort().filter((e, i, a) => i === 0 || e !== a[i - 1]);\n}\n",
  "    return l.sort().filter((v, i, a) => a.indexOf(v) === i);\n}\n", "    return\
    \ l.sort().filter((v, i, a) => a.indexOf(v) === i);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((v,\
    \ i, a) => v !== a[i - 1]);\n}\n", "    return l.sort().filter((e, i, a) => i\
    \ === 0 || e !== a[i - 1]);\n}\n", "    return l.sort().filter((e, i, a) => i\
    \ === 0 || e !== a[i - 1]);\n}\n", "    return l.sort().filter((e, i, a) => i\
    \ === 0 || e !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((v, i, a) =>\
    \ v !== a[i - 1]);\n}\n", "    return l.sort().filter((v, i, a) => a.indexOf(v)\
    \ === i);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return Array.from(new Set(l));\n}\n", "    return\
    \ l.sort().filter((v, i, a) => v !== a[i + 1]);\n}\n", "    return l.filter((x,\
    \ i) => l.indexOf(x) === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((v,\
    \ i, a) => v !== a[i - 1]);\n}\n", "    return l.sort().filter((e, i, a) => i\
    \ === 0 || e !== a[i - 1]);\n}\n", "    return l.sort().filter((e, i, l) => i\
    \ === 0 || e !== l[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((v, i, a) =>\
    \ v !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.sort().filter((v, i, a) => v !== a[i - 1]);\n\
    }\n", "    return Array.from(new Set(l));\n}\n", "    return l.sort().filter((value,\
    \ index, array) => {\n        return !index || value != array[index - 1];\n  \
    \  });\n}\n", "    return l.sort().filter((v, i, a) => v !== a[i - 1]);\n}\n",
  "    return l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);\n}\n", " \
    \   return l.sort().filter((e, i, a) => e != a[i + 1]);\n}\n", "    return l.sort().filter((v,\
    \ i, a) => v !== a[i - 1]);\n}\n", "    return l.sort().filter((e, i, a) => e\
    \ !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.sort().filter((el, i, a) => i === 0 || el\
    \ !== a[i - 1]);\n}\n", "    return l.sort().filter((e, i, a) => i === 0 || e\
    \ !== a[i - 1]);\n}\n", "    return l.sort().filter((x, i, a) => x !== a[i - 1]);\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a -\
    \ b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b)\
    \ => a - b);\n}\n", "    return l.sort().filter((item, index, array) => {\n  \
    \      return !index || item !== array[index - 1];\n    });\n}\n", "    return\
    \ l.sort().filter((el, i, a) => i === 0 || el !== a[i - 1]);\n}\n", "    return\
    \ l.sort().filter((x, i, a) => x !== a[i - 1]);\n}\n", "    return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((v,\
    \ i, a) => v !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((e, i, a) =>\
    \ i == 0 || e != a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((v, i, a) =>\
    \ v !== a[i - 1]);\n}\n", "    return l.sort().filter((item, index, array) =>\
    \ {\n        return !index || item !== array[index - 1];\n    });\n}\n", "  return\
    \ Array.from(new Set(l));\n}\n", "    return l.sort().filter((e, i, a) => i ===\
    \ 0 || e !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v)\
    \ === i).sort((a, b) => a - b);\n}\n", "    return l.sort().filter((v, i, a) =>\
    \ v !== a[i - 1]);\n}\n", "    return l.sort().filter((e, i, a) => e !== a[i -\
    \ 1]);\n}\n", "    return l.filter((e, i) => l.indexOf(e) === i).sort((a, b) =>\
    \ a - b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a,\
    \ b) => a - b);\n}\n", "  return Array.from(new Set(l));\n}\n", "  return l.filter((v,\
    \ i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n", "    return Array.from(new\
    \ Set(l));\n}\n", "    return l.sort().filter((e, i, a) => i === 0 || e !== a[i\
    \ - 1]);\n}\n", "  return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return Array.from(new Set(l));\n}\n", "    return l.sort().filter((v,\
    \ i, a) => v !== a[i - 1]);\n}\n", "    return l.sort().filter((v, i, a) => v\
    \ !== a[i - 1]);\n}\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort();\n\
    }\n", "    return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a -\
    \ b);\n}\n", "    return l.sort().filter((e, i, a) => e !== a[i - 1]);\n}\n",
  "    return l.sort().filter((e, i, a) => e !== a[i - 1]);\n}\n", "    return l.sort().filter((e,\
    \ i, a) => e !== a[i - 1]);\n}\n", "    return l.sort().filter((e, i, a) => e\
    \ !== a[i - 1]);\n}\n", "    return l.sort().filter((v, i, a) => v !== a[i - 1]);\n\
    }\n", "  return l.sort().filter((x, i, a) => !i || x != a[i - 1]);\n}\n", "  \
    \  return l.filter((v, i, a) => a.indexOf(v) === i).sort((a, b) => a - b);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_4_mean_absolute_deviation
language: ts
prompt: "//For a given array of input numbers, calculate Mean Absolute Deviation\n\
  // around the mean of this dataset.\n// Mean Absolute Deviation is the average absolute\
  \ difference between each\n// element and a centerpoint (mean in this case):\n//\
  \ MAD = average | x - x_mean |\n// >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n\
  // 1.0\nfunction mean_absolute_deviation(numbers: number[]): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = mean_absolute_deviation;\n  assert.deepEqual(candidate([1.0,\
  \ 2.0]),0.5);\n  assert.deepEqual(candidate([1.0, 2.0, 3.0, 4.0]),1.0);\n  assert.deepEqual(candidate([1.0,\
  \ 2.0, 3.0, 4.0, 5.0]),1.2);\n}\n\ntest();"
completions: ["  const mean = mean_of_numbers(numbers);\n  const absolute_deviations\
    \ = numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "    const mean = mean_of_numbers(numbers);\n    const absolute_deviations\
    \ = numbers.map(n => Math.abs(n - mean));\n    return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(x => Math.abs(x - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_array(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_array(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "    let mean = mean_of_array(numbers);\n    let sum = 0;\n    for (let i = 0; i\
    \ < numbers.length; i++) {\n        sum += Math.abs(numbers[i] - mean);\n    }\n\
    \    return sum / numbers.length;\n}\n", "  const mean = mean_of_numbers(numbers);\n\
    \  const absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return\
    \ mean_of_numbers(absolute_deviations);\n}\n", "  const mean = mean_of_array(numbers);\n\
    \  const absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return\
    \ mean_of_array(absolute_deviations);\n}\n", "  const mean = mean_of_array(numbers);\n\
    \  const absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return\
    \ mean_of_array(absolute_deviations);\n}\n", "  const mean = mean_of_numbers(numbers);\n\
    \  const absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return\
    \ mean_of_numbers(absolute_deviations);\n}\n", "  const mean = mean_of_numbers(numbers);\n\
    \  const absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return\
    \ mean_of_numbers(absolute_deviations);\n}\n", "  const mean = mean_of_numbers(numbers);\n\
    \  const absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return\
    \ mean_of_numbers(absolute_deviations);\n}\n", "  const mean = mean_of_numbers(numbers);\n\
    \  const absolute_deviations = numbers.map(x => Math.abs(x - mean));\n  return\
    \ mean_of_numbers(absolute_deviations);\n}\n", "  const mean = mean_of_numbers(numbers);\n\
    \  const absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return\
    \ mean_of_numbers(absolute_deviations);\n}\n", "  const mean = mean_of_numbers(numbers);\n\
    \  const absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return\
    \ mean_of_numbers(absolute_deviations);\n}\n", "  let mean = mean_of_numbers(numbers);\n\
    \  let absolute_deviations = numbers.map(function(num) {\n    return Math.abs(num\
    \ - mean);\n  });\n  return mean_of_numbers(absolute_deviations);\n}\n", "  const\
    \ mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  return mean_of_numbers(numbers.map(n\
    \ => Math.abs(n - mean)));\n}\n", "  const mean = mean_of_numbers(numbers);\n\
    \  const absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return\
    \ mean_of_numbers(absolute_deviations);\n}\n", "  const mean = mean_of_numbers(numbers);\n\
    \  const absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return\
    \ mean_of_numbers(absolute_deviations);\n}\n", "  const mean = mean_of_numbers(numbers);\n\
    \  const absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return\
    \ mean_of_numbers(absolute_deviations);\n}\n", "  const mean = mean_of_numbers(numbers);\n\
    \  const absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return\
    \ mean_of_numbers(absolute_deviations);\n}\n", "  const mean = mean_of_numbers(numbers);\n\
    \  const deviations = numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_array(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_array(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_array(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_array(absolute_deviations);\n}\n",
  "  let mean = mean_of_array(numbers);\n  let absolute_deviations = numbers.map(function(n)\
    \ {\n    return Math.abs(n - mean);\n  });\n  return mean_of_array(absolute_deviations);\n\
    }\n", "  const mean = mean_of_array(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_array(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(function(number)\
    \ {\n    return Math.abs(number - mean);\n  });\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "    const mean = mean_of_numbers(numbers);\n    const absolute_deviations\
    \ = numbers.map(n => Math.abs(n - mean));\n    return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(deviations);\n}\n", "  const\
    \ mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(x\
    \ => Math.abs(x - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  let mean = mean_of_numbers(numbers);\n  let absolute_deviations = numbers.map(x\
    \ => Math.abs(x - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_array(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_array(absolute_deviations);\n}\n",
  "  let mean = mean_of_numbers(numbers);\n  let absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  let mean = mean_of_numbers(numbers);\n  let absolute_deviations = numbers.map(x\
    \ => Math.abs(x - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  let mean = mean_of_numbers(numbers);\n  let absolute_deviations = numbers.map(function(number)\
    \ {\n    return Math.abs(number - mean);\n  });\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  return mean_of_numbers(numbers.map(n\
    \ => Math.abs(n - mean)));\n}\n", "  let mean = mean_of_numbers(numbers);\n  let\
    \ absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "    let mean = mean_of_array(numbers);\n    let absolute_deviations = numbers.map(function(x)\
    \ {\n        return Math.abs(x - mean);\n    });\n    return mean_of_array(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(x => Math.abs(x - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_differences\
    \ = numbers.map(function(n) {\n    return Math.abs(n - mean);\n  });\n  return\
    \ mean_of_numbers(absolute_differences);\n}\n", "  const mean = mean_of_numbers(numbers);\n\
    \  const absolute_deviations = numbers.map(n => Math.abs(n - mean));\n  return\
    \ mean_of_numbers(absolute_deviations);\n}\n", "  var mean = mean_of_numbers(numbers);\n\
    \  var absolute_deviations = numbers.map(function(n) {\n    return Math.abs(n\
    \ - mean);\n  });\n  return mean_of_numbers(absolute_deviations);\n}\n", "  const\
    \ mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(number\
    \ => Math.abs(number - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  let mean = mean_of_numbers(numbers);\n  let absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n",
  "  const mean = mean_of_numbers(numbers);\n  let sum = 0;\n  for (let i = 0; i <\
    \ numbers.length; i++) {\n    sum += Math.abs(numbers[i] - mean);\n  }\n  return\
    \ sum / numbers.length;\n}\n", "  const mean = mean_of_array(numbers);\n  const\
    \ absolute_deviations = numbers.map(x => Math.abs(x - mean));\n  return mean_of_array(absolute_deviations);\n\
    }\n", "    const mean = mean_of_numbers(numbers);\n    const absolute_deviations\
    \ = numbers.map(x => Math.abs(x - mean));\n    return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  const mean = mean_of_numbers(numbers);\n  const absolute_deviations =\
    \ numbers.map(n => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n\
    }\n", "  let mean = mean_of_numbers(numbers);\n  let absolute_deviations = numbers.map(n\
    \ => Math.abs(n - mean));\n  return mean_of_numbers(absolute_deviations);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_84_solve
language: ts
prompt: "//Given a positive integer N, return the total sum of its digits in binary.\n\
  // Example\n// >>> solve(1000)\n// \"1\"\n// >>> solve(150)\n// \"110\"\n// >>>\
  \ solve(147)\n// \"1100\"\n// Variables:\n// @N integer\n// Constraints: 0 \u2264\
  \ N \u2264 10000.\n// Output:\n// a string of binary number\nfunction solve(N: number):\
  \ string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(1000),\"1\");\n\
  \  assert.deepEqual(candidate(150),\"110\");\n  assert.deepEqual(candidate(147),\"\
  1100\");\n  assert.deepEqual(candidate(333),\"1001\");\n  assert.deepEqual(candidate(963),\"\
  10010\");\n}\n\ntest();"
completions: ["  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  // convert N to binary\n  let binary = N.toString(2);\n  // convert binary to\
    \ array\n  let binaryArray = binary.split(\"\");\n  // reduce binary array to\
    \ sum of digits\n  let sum = binaryArray.reduce((acc, curr) => {\n    return acc\
    \ + parseInt(curr);\n  }, 0);\n  // return sum\n  return sum.toString();\n}\n\n\
    console.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  let binary = N.toString(2);\n  let sum = 0;\n  for\
    \ (let i = 0; i < binary.length; i++) {\n    sum += parseInt(binary[i]);\n  }\n\
    \  return sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  let bin = N.toString(2);\n  let sum = 0;\n  for\
    \ (let i = 0; i < bin.length; i++) {\n    sum += parseInt(bin[i]);\n  }\n  return\
    \ sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return (N >>> 0).toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "    return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  let result = \"\";\n  while (N > 0) {\n    result\
    \ = (N % 2).toString() + result;\n    N = Math.floor(N / 2);\n  }\n  return result;\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let result = \"\";\n \
    \ while (N > 0) {\n    result = (N % 2) + result;\n    N = Math.floor(N / 2);\n\
    \  }\n  return result;\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let binary = N.toString(2);\n\
    \  let sum = 0;\n  for (let i = 0; i < binary.length; i++) {\n    sum += parseInt(binary[i]);\n\
    \  }\n  return sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for (let i = 0; i < binary.length; i++) {\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  let result = \"\";\n  while (N > 0) {\n    result\
    \ = (N % 2) + result;\n    N = Math.floor(N / 2);\n  }\n  return result;\n}\n\n\
    console.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "    return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  let binary = N.toString(2);\n  let sum = 0;\n  for (let i = 0; i < binary.length;\
    \ i++) {\n    sum += parseInt(binary[i]);\n  }\n  return sum.toString();\n}\n\n\
    console.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  let binary = N.toString(2);\n  let sum = 0;\n  for (let i = 0; i < binary.length;\
    \ i++) {\n    sum += parseInt(binary[i]);\n  }\n  return sum.toString();\n}\n\n\
    console.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "    return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let result = \"\";\n \
    \ let remainder = 0;\n  while (N > 0) {\n    remainder = N % 2;\n    N = Math.floor(N\
    \ / 2);\n    result = remainder + result;\n  }\n  return result;\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  let binary = N.toString(2);\n  let sum = 0;\n  for\
    \ (let i = 0; i < binary.length; i++) {\n    sum += parseInt(binary[i]);\n  }\n\
    \  return sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "    return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    let binary = N.toString(2);\n    let sum = 0;\n    for (let i = 0; i < binary.length;\
    \ i++) {\n        sum += parseInt(binary[i]);\n    }\n    return sum.toString();\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  let result = \"\";\n  let num = N;\n  while (num > 0) {\n    result = (num %\
    \ 2).toString() + result;\n    num = Math.floor(num / 2);\n  }\n  return result;\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return (N >>> 0).toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let binary = N.toString(2);\n\
    \  let sum = 0;\n  for (let i = 0; i < binary.length; i++) {\n    sum += parseInt(binary[i]);\n\
    \  }\n  return sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let binary = N.toString(2);\n\
    \  let sum = 0;\n  for (let i = 0; i < binary.length; i++) {\n    sum += parseInt(binary[i]);\n\
    \  }\n  return sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let result = \"\";\n \
    \ while (N > 0) {\n    result = (N % 2).toString() + result;\n    N = Math.floor(N\
    \ / 2);\n  }\n  return result;\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  let result = \"\";\n  while (N > 0) {\n    result\
    \ = (N % 2).toString() + result;\n    N = Math.floor(N / 2);\n  }\n  return result;\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  const binary = N.toString(2);\n  let sum = 0;\n  for (let i = 0; i < binary.length;\
    \ i++) {\n    sum += parseInt(binary[i]);\n  }\n  return sum.toString();\n}\n\n\
    console.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  let binary = N.toString(2);\n  let sum = 0;\n  for (let i = 0; i < binary.length;\
    \ i++) {\n    sum += parseInt(binary[i]);\n  }\n  return sum.toString();\n}\n\n\
    console.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let result = '';\n  let\
    \ remainder = 0;\n  while (N > 0) {\n    remainder = N % 2;\n    N = Math.floor(N\
    \ / 2);\n    result = remainder + result;\n  }\n  return result;\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let binary = N.toString(2);\n\
    \  let sum = 0;\n  for (let i = 0; i < binary.length; i++) {\n    sum += parseInt(binary[i]);\n\
    \  }\n  return sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  let binary = N.toString(2);\n  let sum = 0;\n  for\
    \ (let i = 0; i < binary.length; i++) {\n    sum += parseInt(binary[i]);\n  }\n\
    \  return sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  let binary = N.toString(2);\n  let sum = 0;\n  for (let i = 0; i < binary.length;\
    \ i++) {\n    sum += parseInt(binary[i]);\n  }\n  return sum.toString();\n}\n\n\
    console.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    let binary: string = \"\";\n    let remainder:\
    \ number = 0;\n    while (N > 0) {\n        remainder = N % 2;\n        N = Math.floor(N\
    \ / 2);\n        binary = remainder + binary;\n    }\n    return binary;\n}\n\n\
    console.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let binary: string = \"\
    \";\n  let num: number = N;\n  while (num > 0) {\n    binary = (num % 2).toString()\
    \ + binary;\n    num = Math.floor(num / 2);\n  }\n  return binary;\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let binary = N.toString(2);\n\
    \  let sum = 0;\n  for (let i = 0; i < binary.length; i++) {\n    sum += parseInt(binary[i]);\n\
    \  }\n  return sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "    let result: string =\
    \ '';\n    let remainder: number = 0;\n    while (N > 0) {\n        remainder\
    \ = N % 2;\n        N = Math.floor(N / 2);\n        result = remainder + result;\n\
    \    }\n    return result;\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "    return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "    return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let result = \"\";\n \
    \ while (N > 0) {\n    result = (N % 2) + result;\n    N = Math.floor(N / 2);\n\
    \  }\n  return result;\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let binary = N.toString(2);\n\
    \  let sum = 0;\n  for (let i = 0; i < binary.length; i++) {\n    sum += parseInt(binary[i]);\n\
    \  }\n  return sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    let result: string = \"\";\n    let remainder:\
    \ number = 0;\n    let quotient: number = N;\n    while (quotient > 0) {\n   \
    \     remainder = quotient % 2;\n        quotient = Math.floor(quotient / 2);\n\
    \        result = remainder + result;\n    }\n    return result;\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let binary: string = \"\
    \";\n  let sum: number = 0;\n  while (N > 0) {\n    binary = (N % 2).toString()\
    \ + binary;\n    N = Math.floor(N / 2);\n  }\n  for (let i = 0; i < binary.length;\
    \ i++) {\n    sum += parseInt(binary[i]);\n  }\n  return sum.toString();\n}\n\n\
    console.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let binary = \"\";\n \
    \ while (N > 0) {\n    binary = (N % 2) + binary;\n    N = Math.floor(N / 2);\n\
    \  }\n  return binary;\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  let result = '';\n  let remainder = 0;\n  while\
    \ (N > 0) {\n    remainder = N % 2;\n    N = Math.floor(N / 2);\n    result =\
    \ remainder + result;\n  }\n  return result;\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  let binary = N.toString(2);\n  let sum = 0;\n  for (let i = 0; i < binary.length;\
    \ i++) {\n    sum += parseInt(binary[i]);\n  }\n  return sum.toString();\n}\n\n\
    console.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "    return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  let binary = '';\n  let sum = 0;\n  while (N > 0)\
    \ {\n    binary = (N % 2) + binary;\n    N = Math.floor(N / 2);\n  }\n  for (let\
    \ i = 0; i < binary.length; i++) {\n    sum += parseInt(binary[i]);\n  }\n  return\
    \ sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let result = \"\";\n \
    \ while (N > 0) {\n    result = (N % 2) + result;\n    N = Math.floor(N / 2);\n\
    \  }\n  return result;\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "    let binary = N.toString(2);\n\
    \    let sum = 0;\n    for (let i = 0; i < binary.length; i++) {\n        sum\
    \ += parseInt(binary[i]);\n    }\n    return sum.toString();\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "    return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n", "    return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "    return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  let binary = N.toString(2);\n  let sum = 0;\n  for (let i = 0; i < binary.length;\
    \ i++) {\n    sum += parseInt(binary[i]);\n  }\n  return sum.toString();\n}\n\n\
    console.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  let result = \"\";\n \
    \ while (N > 0) {\n    result = (N % 2) + result;\n    N = Math.floor(N / 2);\n\
    \  }\n  return result;\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "    let binary = N.toString(2);\n    let sum = 0;\n\
    \    for (let i = 0; i < binary.length; i++) {\n        sum += parseInt(binary[i]);\n\
    \    }\n    return sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  let binary = N.toString(2);\n  let sum = 0;\n  for\
    \ (let i = 0; i < binary.length; i++) {\n    sum += parseInt(binary[i]);\n  }\n\
    \  return sum.toString();\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));",
  "    return N.toString(2);\n}\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\n\
    console.log(solve(147));", "  return N.toString(2);\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "    // convert N to binary\n\
    \    let binary = N.toString(2);\n    // convert binary to array of strings\n\
    \    let binaryArray = binary.split('');\n    // convert array of strings to array\
    \ of numbers\n    let binaryArrayNumbers = binaryArray.map(Number);\n    // sum\
    \ the array of numbers\n    let sum = binaryArrayNumbers.reduce((a, b) => a +\
    \ b, 0);\n    // return sum as string\n    return sum.toString();\n}\n\nconsole.log(solve(1000));\n\
    console.log(solve(150));\nconsole.log(solve(147));", "  return N.toString(2);\n\
    }\n\nconsole.log(solve(1000));\nconsole.log(solve(150));\nconsole.log(solve(147));"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

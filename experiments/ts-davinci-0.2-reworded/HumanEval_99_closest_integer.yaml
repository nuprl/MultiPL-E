name: HumanEval_99_closest_integer
language: ts
prompt: "//Create a function that takes a value (string) representing a number\n//\
  \ and returns the closest integer to it. If the number is equidistant\n// from two\
  \ integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"10\"\
  )\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away from\
  \ zero means that if the given number is equidistant\n// from two integers, the\
  \ one you should return is the one that is the\n// farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nfunction closest_integer(value: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
  10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
  -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
  0\"),0);\n}\n\ntest();"
completions: ["  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(Number(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = Number(value);\n  return Math.round(num);\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  const num = parseFloat(value);\n\
    \  if (num % 1 === 0) {\n    return num;\n  }\n  return num > 0 ? Math.ceil(num)\
    \ : Math.floor(num);\n}\n", "  const float = parseFloat(value);\n  const int =\
    \ parseInt(value);\n  return float - int >= 0.5 ? int + 1 : int;\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  const num = parseFloat(value);\n  return\
    \ Math.round(num);\n}\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "    return Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diffFloor\
    \ = num - floor;\n  const diffCeil = ceil - num;\n  if (diffFloor === diffCeil)\
    \ {\n    return num > 0 ? ceil : floor;\n  }\n  return diffFloor < diffCeil ?\
    \ floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  const num = parseFloat(value);\n  const\
    \ floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diffFloor\
    \ = num - floor;\n  const diffCeil = ceil - num;\n  if (diffFloor === diffCeil)\
    \ {\n    return num > 0 ? ceil : floor;\n  }\n  return diffFloor < diffCeil ?\
    \ floor : ceil;\n}\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"\
    15.3\"));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"\
    -14.5\"));\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  const diffFloor = num - floor;\n  const diffCeil =\
    \ ceil - num;\n  if (diffFloor === diffCeil) {\n    return num > 0 ? ceil : floor;\n\
    \  }\n  return diffFloor < diffCeil ? floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n\
    \  return Math.round(num);\n}\n", "  return Math.round(parseFloat(value));\n}\n\
    \nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = parseFloat(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diffFloor\
    \ = num - floor;\n  const diffCeil = ceil - num;\n  if (diffFloor === diffCeil)\
    \ {\n    return Math.sign(num) === 1 ? ceil : floor;\n  }\n  return diffFloor\
    \ < diffCeil ? floor : ceil;\n}\n", "  const num = parseFloat(value);\n  const\
    \ floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diffFloor\
    \ = num - floor;\n  const diffCeil = ceil - num;\n  if (diffFloor === diffCeil)\
    \ {\n    return num > 0 ? ceil : floor;\n  }\n  return diffFloor < diffCeil ?\
    \ floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n}\n", "    const\
    \ num = parseFloat(value);\n    const floor = Math.floor(num);\n    const ceil\
    \ = Math.ceil(num);\n    if (num - floor > ceil - num) {\n        return ceil;\n\
    \    } else {\n        return floor;\n    }\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = parseFloat(value);\n  const decimal = num - Math.floor(num);\n\
    \  return decimal < 0.5 ? Math.floor(num) : Math.ceil(num);\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "    const num = Number(value);\n\
    \    const floor = Math.floor(num);\n    const ceil = Math.ceil(num);\n    const\
    \ diffFloor = num - floor;\n    const diffCeil = ceil - num;\n    if (diffFloor\
    \ === diffCeil) {\n        return num > 0 ? ceil : floor;\n    }\n    return diffFloor\
    \ < diffCeil ? floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  if (num - floor >= ceil - num) {\n    return ceil;\n\
    \  } else {\n    return floor;\n  }\n}\n\nconsole.log(closest_integer(\"10\"));\n\
    console.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"14.5\"\
    ));\nconsole.log(closest_integer(\"-14.5\"));", "    const num = Number(value);\n\
    \    const floor = Math.floor(num);\n    const ceil = Math.ceil(num);\n    const\
    \ diffFloor = num - floor;\n    const diffCeil = ceil - num;\n    if (diffFloor\
    \ === diffCeil) {\n        return num > 0 ? ceil : floor;\n    }\n    return diffFloor\
    \ < diffCeil ? floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n\
    \  const decimal = num - Math.floor(num);\n  if (decimal < 0.5) {\n    return\
    \ Math.floor(num);\n  } else {\n    return Math.ceil(num);\n  }\n}\n", "    return\
    \ Math.round(parseFloat(value));\n}\n", "  return Math.round(Number(value));\n\
    }\n", "    return Math.round(parseFloat(value));\n}\n", "    let num = Number(value);\n\
    \    let floor = Math.floor(num);\n    let ceil = Math.ceil(num);\n    if (num\
    \ - floor > ceil - num) {\n        return ceil;\n    } else {\n        return\
    \ floor;\n    }\n}\n", "  return Math.round(parseFloat(value));\n}\n", "  const\
    \ number = parseFloat(value);\n  const integer = Math.floor(number);\n  const\
    \ decimal = number - integer;\n  if (decimal < 0.5) {\n    return integer;\n \
    \ } else {\n    return integer + 1;\n  }\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "    return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  let num = parseFloat(value);\n  return Math.round(num);\n}\n", "  const\
    \ number = Number(value);\n  const floor = Math.floor(number);\n  const ceil =\
    \ Math.ceil(number);\n  const diffFloor = Math.abs(number - floor);\n  const diffCeil\
    \ = Math.abs(number - ceil);\n  return diffFloor < diffCeil ? floor : ceil;\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  const diffFloor = Math.abs(num - floor);\n  const\
    \ diffCeil = Math.abs(num - ceil);\n  return diffFloor < diffCeil ? floor : ceil;\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = parseFloat(value);\n\
    \  return Math.round(num);\n}\n", "  return Math.round(parseFloat(value));\n}\n",
  "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(Number(value));\n\
    }\n", "  const number = parseFloat(value);\n  const floor = Math.floor(number);\n\
    \  const ceil = Math.ceil(number);\n  const diffFloor = Math.abs(number - floor);\n\
    \  const diffCeil = Math.abs(number - ceil);\n  if (diffFloor === diffCeil) {\n\
    \    return number > 0 ? ceil : floor;\n  }\n  return diffFloor < diffCeil ? floor\
    \ : ceil;\n}\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "    return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  let num = Number(value);\n\
    \  let num2 = Math.round(num);\n  if (num2 > num) {\n    return num2 - 1;\n  }\
    \ else {\n    return num2;\n  }\n}\n", "  const num = parseFloat(value);\n  const\
    \ floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diffFloor\
    \ = num - floor;\n  const diffCeil = ceil - num;\n  if (diffFloor < diffCeil)\
    \ {\n    return floor;\n  } else {\n    return ceil;\n  }\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const number = Number(value);\n  const floor = Math.floor(number);\n\
    \  const ceil = Math.ceil(number);\n  const diff = number - floor;\n  return diff\
    \ < 0.5 ? floor : ceil;\n}\n", "    return Math.round(parseFloat(value));\n}\n",
  "  return Math.round(parseFloat(value));\n}\n", "  const number = parseFloat(value);\n\
    \  const decimal = number - Math.floor(number);\n  if (decimal >= 0.5) {\n   \
    \ return Math.ceil(number);\n  } else {\n    return Math.floor(number);\n  }\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "    return Math.round(parseFloat(value));\n\
    }\n", "  const num = parseFloat(value);\n  return Math.round(num);\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "    return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const number = Number(value);\n\
    \  const decimal = number % 1;\n  if (decimal === 0) {\n    return number;\n \
    \ }\n  if (decimal > 0) {\n    return Math.ceil(number);\n  }\n  return Math.floor(number);\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  const diffFloor = num - floor;\n  const diffCeil =\
    \ ceil - num;\n  if (diffFloor === diffCeil) {\n    return num > 0 ? ceil : floor;\n\
    \  }\n  return diffFloor < diffCeil ? floor : ceil;\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  const number = parseFloat(value);\n  const integer = Math.floor(number);\n\
    \  const decimal = number - integer;\n  if (decimal < 0.5) {\n    return integer;\n\
    \  } else {\n    return integer + 1;\n  }\n}\n", "  return Math.round(Number(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = parseFloat(value);\n\
    \  const numFloor = Math.floor(num);\n  const numCeil = Math.ceil(num);\n  const\
    \ numFloorDiff = Math.abs(num - numFloor);\n  const numCeilDiff = Math.abs(num\
    \ - numCeil);\n  return numFloorDiff < numCeilDiff ? numFloor : numCeil;\n}\n",
  "  const num = parseFloat(value);\n  const numFloor = Math.floor(num);\n  const\
    \ numCeil = Math.ceil(num);\n  const numFloorDiff = Math.abs(num - numFloor);\n\
    \  const numCeilDiff = Math.abs(num - numCeil);\n  if (numFloorDiff === numCeilDiff)\
    \ {\n    return num > 0 ? numCeil : numFloor;\n  }\n  return numFloorDiff < numCeilDiff\
    \ ? numFloor : numCeil;\n}\n", "  return Math.round(parseFloat(value));\n}\n",
  "  const num = Number(value);\n  if (num % 1 === 0) {\n    return num;\n  }\n  const\
    \ floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const floorDiff\
    \ = Math.abs(num - floor);\n  const ceilDiff = Math.abs(num - ceil);\n  if (floorDiff\
    \ < ceilDiff) {\n    return floor;\n  }\n  return ceil;\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  if (num - floor < ceil - num) {\n    return floor;\n\
    \  } else {\n    return ceil;\n  }\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = parseFloat(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  if (num -\
    \ floor > ceil - num) {\n    return ceil;\n  } else {\n    return floor;\n  }\n\
    }\n", "  const num: number = parseFloat(value);\n  const numFloor: number = Math.floor(num);\n\
    \  const numCeil: number = Math.ceil(num);\n  const numFloorDiff: number = Math.abs(num\
    \ - numFloor);\n  const numCeilDiff: number = Math.abs(num - numCeil);\n  if (numFloorDiff\
    \ === numCeilDiff) {\n    return num < 0 ? numFloor : numCeil;\n  }\n  return\
    \ numFloorDiff < numCeilDiff ? numFloor : numCeil;\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diffFloor\
    \ = num - floor;\n  const diffCeil = ceil - num;\n  return diffFloor === diffCeil\
    \ ? (num > 0 ? ceil : floor) : (diffFloor < diffCeil ? floor : ceil);\n}\n", " \
    \ return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"10\"\
    ));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"14.5\"\
    ));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(Number(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  return Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"\
    10\"));\nconsole.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"\
    14.5\"));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = parseFloat(value);\n  return Math.round(num);\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n  const\
    \ numFloor = Math.floor(num);\n  const numCeil = Math.ceil(num);\n  const numFloorDiff\
    \ = Math.abs(num - numFloor);\n  const numCeilDiff = Math.abs(num - numCeil);\n\
    \  return numFloorDiff < numCeilDiff ? numFloor : numCeil;\n}\n", "  let num =\
    \ parseFloat(value);\n  let num_int = Math.round(num);\n  let num_int_abs = Math.abs(num_int);\n\
    \  let num_abs = Math.abs(num);\n  let num_int_neg = num_int_abs * -1;\n  if (num_int_abs\
    \ === num_abs) {\n    return num_int;\n  } else {\n    return num_int_neg;\n \
    \ }\n}\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = parseFloat(value);\n\
    \  const numInt = Math.round(num);\n  const numDec = num - numInt;\n  if (numDec\
    \ === 0) {\n    return numInt;\n  } else if (numDec > 0) {\n    return numInt\
    \ + 1;\n  } else {\n    return numInt - 1;\n  }\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const number = parseFloat(value);\n\
    \  const integer = Math.round(number);\n  const decimal = number - integer;\n\
    \  if (decimal === 0) {\n    return integer;\n  }\n  if (decimal > 0) {\n    return\
    \ integer + 1;\n  }\n  return integer - 1;\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = parseFloat(value);\n  return Math.round(num);\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n\nconsole.log(closest_integer(\"10\"));\n\
    console.log(closest_integer(\"15.3\"));\nconsole.log(closest_integer(\"14.5\"\
    ));\nconsole.log(closest_integer(\"-14.5\"));\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  if (num - floor < ceil - num) {\n    return floor;\n\
    \  } else {\n    return ceil;\n  }\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "    return Math.round(parseFloat(value));\n\
    }\n\nconsole.log(closest_integer(\"10\"));\nconsole.log(closest_integer(\"15.3\"\
    ));\nconsole.log(closest_integer(\"14.5\"));\nconsole.log(closest_integer(\"-14.5\"\
    ));\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  const num = Number(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  const diffFloor\
    \ = num - floor;\n  const diffCeil = ceil - num;\n  return diffFloor < diffCeil\
    \ ? floor : ceil;\n}\n", "  const num = parseFloat(value);\n  const floor = Math.floor(num);\n\
    \  const ceil = Math.ceil(num);\n  if (num - floor === 0.5) {\n    return num\
    \ > 0 ? ceil : floor;\n  }\n  return num - floor > 0.5 ? ceil : floor;\n}\n",
  "  const number = Number(value);\n  const decimal = number % 1;\n  if (decimal <\
    \ 0.5) {\n    return Math.floor(number);\n  } else {\n    return Math.ceil(number);\n\
    \  }\n}\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  const diffFloor = num - floor;\n  const diffCeil =\
    \ ceil - num;\n  return diffFloor < diffCeil ? floor : ceil;\n}\n", "  return\
    \ Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  return Math.round(parseFloat(value));\n}\n", "  return Math.round(parseFloat(value));\n\
    }\n", "  const num = parseFloat(value);\n  if (num > 0) {\n    return Math.ceil(num);\n\
    \  } else {\n    return Math.floor(num);\n  }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

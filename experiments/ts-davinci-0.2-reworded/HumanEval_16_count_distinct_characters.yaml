name: HumanEval_16_count_distinct_characters
language: ts
prompt: "//Given a string, find out how many distinct characters (regardless of case)\
  \ does it consist of\n// >>> count_distinct_characters(\"xyzXYZ\")\n// 3\n// >>>\
  \ count_distinct_characters(\"Jerry\")\n// 4\nfunction count_distinct_characters(string:\
  \ string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = count_distinct_characters;\n  assert.deepEqual(candidate(\"\
  \"),0);\n  assert.deepEqual(candidate(\"abcde\"),5);\n  assert.deepEqual(candidate(\"\
  abcdecadeCADE\"),5);\n  assert.deepEqual(candidate(\"aaaaAAAAaaaa\"),1);\n  assert.deepEqual(candidate(\"\
  Jerry jERRY JeRRRY\"),5);\n}\n\ntest();"
completions: ["    let count = 0;\n    let char_set = new Set();\n    for (let char\
    \ of string) {\n        char_set.add(char.toLowerCase());\n    }\n    return char_set.size;\n\
    }\n", "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinct_characters.push(string[i].toLowerCase());\n    \
    \    }\n    }\n    return distinct_characters.length;\n}\n", "    let result:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    return string.toLowerCase().split('').filter((item,\
    \ index, array) => array.indexOf(item) === index).length;\n}\n", "    let result\
    \ = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        char_set.add(string[i].toLowerCase());\n    }\n    result =\
    \ char_set.size;\n    return result;\n}\n", "    let count = 0;\n    let char_set\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string[i].toLowerCase()))\
    \ {\n            char_set.add(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let count: number = 0;\n    let\
    \ char_set: Set<string> = new Set();\n    for (let i = 0; i < string.length; i++)\
    \ {\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n", "    let count: number = 0;\n    let charArray: string[] = string.split(\"\
    \");\n    let uniqueArray: string[] = [];\n    for (let i: number = 0; i < charArray.length;\
    \ i++) {\n        if (uniqueArray.indexOf(charArray[i].toLowerCase()) === -1)\
    \ {\n            uniqueArray.push(charArray[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let count = 0;\n    let chars\
    \ = string.toLowerCase().split('');\n    let unique = chars.filter(function(item,\
    \ i, ar){ return ar.indexOf(item) === i; });\n    return unique.length;\n}\n",
  "    let unique = new Set(string.toLowerCase());\n    return unique.size;\n}\n",
  "    let chars: string[] = string.split('');\n    let distinct_chars: string[] =\
    \ [];\n    for (let i = 0; i < chars.length; i++) {\n        if (distinct_chars.indexOf(chars[i].toLowerCase())\
    \ === -1) {\n            distinct_chars.push(chars[i].toLowerCase());\n      \
    \  }\n    }\n    return distinct_chars.length;\n}\n", "    let count = 0;\n  \
    \  let char_set = new Set();\n    for (let i = 0; i < string.length; i++) {\n\
    \        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let count\
    \ = 0;\n    let chars = string.toLowerCase().split('');\n    let unique = new\
    \ Set(chars);\n    unique.forEach(element => {\n        count++;\n    });\n  \
    \  return count;\n}\n", "    let distinct_characters = new Set();\n    for (let\
    \ i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ == -1) {\n            distinct_characters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let count = 0;\n    let\
    \ characters: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
    \        if (!characters.includes(string[i].toLowerCase())) {\n            characters.push(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "  let count:\
    \ number = 0;\n  let chars: string[] = string.split(\"\");\n  let uniqueChars:\
    \ string[] = [];\n  for (let i = 0; i < chars.length; i++) {\n    if (!uniqueChars.includes(chars[i].toLowerCase()))\
    \ {\n      uniqueChars.push(chars[i].toLowerCase());\n      count++;\n    }\n\
    \  }\n  return count;\n}\n", "    let distinct_characters = new Set();\n    for\
    \ (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let set = new Set(string.toLowerCase());\n\
    \    return set.size;\n}\n", "    let distinct_characters: string[] = [];\n  \
    \  for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return new\
    \ Set(string.toLowerCase()).size;\n}\n", "    const lowerString = string.toLowerCase();\n\
    \    const uniqueCharacters = new Set(lowerString);\n    return uniqueCharacters.size;\n\
    }\n", "  let count = 0;\n  let charSet = new Set();\n  for (let i = 0; i < string.length;\
    \ i++) {\n    if (!charSet.has(string[i].toLowerCase())) {\n      charSet.add(string[i].toLowerCase());\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let char_set: Set<string>\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        char_set.add(string[i]);\n\
    \    }\n    return char_set.size;\n}\n", "    let count = 0;\n    let arr = string.split('');\n\
    \    let unique = [];\n    for (let i = 0; i < arr.length; i++) {\n        if\
    \ (unique.indexOf(arr[i].toLowerCase()) === -1) {\n            unique.push(arr[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    return\
    \ new Set(string.toLowerCase()).size;\n}\n", "    let result = 0;\n    let characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            characters.push(string[i].toLowerCase());\n         \
    \   result++;\n        }\n    }\n    return result;\n}\n", "    let set = new\
    \ Set();\n    for (let i = 0; i < string.length; i++) {\n        set.add(string[i].toLowerCase());\n\
    \    }\n    return set.size;\n}\n", "    let distinctCharacters: string[] = [];\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (distinctCharacters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinctCharacters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinctCharacters.length;\n}\n", "    let charSet\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        charSet.add(string[i].toLowerCase());\n\
    \    }\n    return charSet.size;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinct_characters.push(string[i].toLowerCase());\n    \
    \    }\n    }\n    return distinct_characters.length;\n}\n", "    let result =\
    \ 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length; i++)\
    \ {\n        char_set.add(string[i].toLowerCase());\n    }\n    result = char_set.size;\n\
    \    return result;\n}\n", "    let distinct_characters: string[] = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        let character = string[i];\n\
    \        if (distinct_characters.indexOf(character) === -1) {\n            distinct_characters.push(character);\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set(string.toLowerCase());\n    return distinct_characters.size;\n}\n",
  "    let count = 0;\n    let characters = string.toLowerCase().split('');\n    let\
    \ uniqueCharacters = characters.filter(function(item, i, ar){ return ar.indexOf(item)\
    \ === i; });\n    return uniqueCharacters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let result = 0;\n   \
    \ let char_set = new Set();\n    for (let char of string) {\n        char_set.add(char.toLowerCase());\n\
    \    }\n    result = char_set.size;\n    return result;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let count\
    \ = 0;\n    let chars = string.toLowerCase().split('');\n    let unique = [...new\
    \ Set(chars)];\n    return unique.length;\n}\n", "  const set = new Set(string.toLowerCase());\n\
    \  return set.size;\n}\n", "    let distinct_characters: string[] = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let unique\
    \ = new Set(string.toLowerCase());\n    return unique.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let result: number =\
    \ 0;\n    let char_set: Set<string> = new Set();\n    for (let i: number = 0;\
    \ i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
    \    }\n    result = char_set.size;\n    return result;\n}\n", "  return new Set(string.toLowerCase()).size;\n\
    }\n", "    let distinct_characters = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        distinct_characters.add(string[i].toLowerCase());\n    }\n \
    \   return distinct_characters.size;\n}\n", "    let result: number = 0;\n   \
    \ let lowerCase: string = string.toLowerCase();\n    for (let i: number = 0; i\
    \ < lowerCase.length; i++) {\n        if (lowerCase.indexOf(lowerCase[i]) ===\
    \ i) {\n            result++;\n        }\n    }\n    return result;\n}\n", " \
    \   let count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let result:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let unique_chars = new Set();\n  \
    \  for (let char of string) {\n        unique_chars.add(char.toLowerCase());\n\
    \    }\n    return unique_chars.size;\n}\n", "  let count = 0;\n  let unique =\
    \ \"\";\n  for (let i = 0; i < string.length; i++) {\n    if (unique.indexOf(string[i].toLowerCase())\
    \ === -1) {\n      unique += string[i].toLowerCase();\n      count++;\n    }\n\
    \  }\n  return count;\n}\n", "    let result = 0;\n    let char_set = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
    \    }\n    result = char_set.size;\n    return result;\n}\n", "    let result\
    \ = 0;\n    let charSet = new Set();\n    for (let char of string) {\n       \
    \ charSet.add(char.toLowerCase());\n    }\n    result = charSet.size;\n    return\
    \ result;\n}\n", "    let distinct_characters = new Set();\n    for (let i = 0;\
    \ i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "  let count = 0;\n  let unique\
    \ = \"\";\n  for (let i = 0; i < string.length; i++) {\n    if (unique.indexOf(string[i].toLowerCase())\
    \ === -1) {\n      unique += string[i].toLowerCase();\n      count++;\n    }\n\
    \  }\n  return count;\n}\n", "  let result = 0;\n  let charMap = {};\n  for (let\
    \ i = 0; i < string.length; i++) {\n    if (!charMap[string[i].toLowerCase()])\
    \ {\n      charMap[string[i].toLowerCase()] = true;\n      result++;\n    }\n\
    \  }\n  return result;\n}\n", "    let count = 0;\n    let char_set = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string[i].toLowerCase()))\
    \ {\n            char_set.add(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let result: string[] = [];\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let result = 0;\n    let char_set\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string[i].toLowerCase()))\
    \ {\n            char_set.add(string[i].toLowerCase());\n            result++;\n\
    \        }\n    }\n    return result;\n}\n", "    let distinct_characters = new\
    \ Set(string.toLowerCase());\n    return distinct_characters.size;\n}\n", "  return\
    \ new Set(string.toLowerCase()).size;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "  let result = 0;\n  let charSet = new Set();\n  for (let i = 0; i < string.length;\
    \ i++) {\n    charSet.add(string[i].toLowerCase());\n  }\n  result = charSet.size;\n\
    \  return result;\n}\n", "    let distinct_characters: string[] = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return new\
    \ Set(string.toLowerCase()).size;\n}\n", "    let distinct_characters = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    const lowerCaseString\
    \ = string.toLowerCase();\n    const uniqueCharacters = new Set(lowerCaseString);\n\
    \    return uniqueCharacters.size;\n}\n", "    let count = 0;\n    let char_set\
    \ = new Set();\n    for (let char of string) {\n        char_set.add(char.toLowerCase());\n\
    \    }\n    return char_set.size;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    let count = 0;\n    let set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        set.add(string[i].toLowerCase());\n    }\n    return set.size;\n\
    }\n", "    let count = 0;\n    let char_set = new Set();\n    for (let char of\
    \ string) {\n        char_set.add(char.toLowerCase());\n    }\n    return char_set.size;\n\
    }\n", "  let distinct_characters: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    if (!distinct_characters.includes(string[i].toLowerCase())) {\n\
    \      distinct_characters.push(string[i].toLowerCase());\n    }\n  }\n  return\
    \ distinct_characters.length;\n}\n", "    let distinct_characters = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "  return [...new Set(string.toLowerCase())].length;\n}\n", "    return\
    \ new Set(string.toLowerCase()).size;\n}\n", "    return [...new Set(string.toLowerCase())].length;\n\
    }\n", "  const lowerCaseString = string.toLowerCase();\n  const uniqueChars =\
    \ new Set(lowerCaseString);\n  return uniqueChars.size;\n}\n", "    let unique_chars\
    \ = new Set(string.toLowerCase());\n    return unique_chars.size;\n}\n", "   \
    \ return new Set(string.toLowerCase()).size;\n}\n", "  let count = 0;\n  let char_set\
    \ = new Set();\n  for (let i = 0; i < string.length; i++) {\n    if (!char_set.has(string[i].toLowerCase()))\
    \ {\n      char_set.add(string[i].toLowerCase());\n      count++;\n    }\n  }\n\
    \  return count;\n}\n", "    let distinct_characters: string[] = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let unique\
    \ = new Set(string.toLowerCase());\n    return unique.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let result\
    \ = 0;\n    let charSet = new Set();\n    for (let i = 0; i < string.length; i++)\
    \ {\n        charSet.add(string[i].toLowerCase());\n    }\n    result = charSet.size;\n\
    \    return result;\n}\n", "    let distinct_characters: string[] = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "  const lowerCaseString =\
    \ string.toLowerCase();\n  const uniqueCharacters = new Set(lowerCaseString);\n\
    \  return uniqueCharacters.size;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return string.toLowerCase().split('').filter((char,\
    \ index, array) => array.indexOf(char) === index).length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        let character\
    \ = string[i];\n        if (distinct_characters.indexOf(character) === -1) {\n\
    \            distinct_characters.push(character);\n        }\n    }\n    return\
    \ distinct_characters.length;\n}\n", "    let count = 0;\n    let char_set = new\
    \ Set();\n    for (let i = 0; i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
    \    }\n    return char_set.size;\n}\n", "    let count: number = 0;\n    let\
    \ char_set: Set<string> = new Set();\n    for (let i: number = 0; i < string.length;\
    \ i++) {\n        char_set.add(string[i].toLowerCase());\n    }\n    return char_set.size;\n\
    }\n", "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinct_characters.push(string[i].toLowerCase());\n    \
    \    }\n    }\n    return distinct_characters.length;\n}\n", "    let result:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let result = 0;\n    let charSet =\
    \ new Set();\n    for (let char of string) {\n        charSet.add(char.toLowerCase());\n\
    \    }\n    result = charSet.size;\n    return result;\n}\n", "  return new Set(string.toLowerCase()).size;\n\
    }\n", "    let result: number = 0;\n    let char_set: Set<string> = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
    \    }\n    result = char_set.size;\n    return result;\n}\n", "    let distinct_characters\
    \ = new Set(string.toLowerCase());\n    return distinct_characters.size;\n}\n",
  "    let count = 0;\n    let chars = string.toLowerCase().split('');\n    let unique\
    \ = [...new Set(chars)];\n    count = unique.length;\n    return count;\n}\n",
  "    let result: number = 0;\n    let char_set: Set<string> = new Set();\n    for\
    \ (let char of string) {\n        char_set.add(char.toLowerCase());\n    }\n \
    \   result = char_set.size;\n    return result;\n}\n", "    let distinct_characters\
    \ = new Set(string.toLowerCase());\n    return distinct_characters.size;\n}\n",
  "    const distinct_characters = new Set(string.toLowerCase());\n    return distinct_characters.size;\n\
    }\n", "    return new Set(string.toLowerCase()).size;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    let distinct_characters = new Set(string.toLowerCase());\n    return\
    \ distinct_characters.size;\n}\n", "    let distinct_characters = new Set();\n\
    \    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let count = 0;\n    let\
    \ distinct_characters = [];\n    for (let i = 0; i < string.length; i++) {\n \
    \       if (distinct_characters.indexOf(string[i].toLowerCase()) === -1) {\n \
    \           distinct_characters.push(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let distinct_characters = new\
    \ Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let result = 0;\n   \
    \ for (let i = 0; i < string.length; i++) {\n        if (string.indexOf(string[i])\
    \ === i) {\n            result++;\n        }\n    }\n    return result;\n}\n",
  "    let distinctCharacters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinctCharacters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinctCharacters.push(string[i].toLowerCase());\n     \
    \   }\n    }\n    return distinctCharacters.length;\n}\n", "    let set = new\
    \ Set(string.toLowerCase());\n    return set.size;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    let char_set: Set<string> = new Set();\n    for (let char of string)\
    \ {\n        char_set.add(char.toLowerCase());\n    }\n    return char_set.size;\n\
    }\n", "    let unique_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (unique_characters.indexOf(string[i].toLowerCase()) === -1)\
    \ {\n            unique_characters.push(string[i].toLowerCase());\n        }\n\
    \    }\n    return unique_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return Array.from(new\
    \ Set(string.toLowerCase())).length;\n}\n", "    let unique_characters = new Set(string.toLowerCase());\n\
    \    return unique_characters.size;\n}\n", "    let count = 0;\n    let charMap\
    \ = new Map();\n    for (let i = 0; i < string.length; i++) {\n        if (!charMap.has(string[i].toLowerCase()))\
    \ {\n            charMap.set(string[i].toLowerCase(), 1);\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i: number = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let result\
    \ = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        char_set.add(string[i].toLowerCase());\n    }\n    result =\
    \ char_set.size;\n    return result;\n}\n", "    let result: number = 0;\n   \
    \ let char_set: Set<string> = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        char_set.add(string[i].toLowerCase());\n    }\n    result =\
    \ char_set.size;\n    return result;\n}\n", "    let charSet = new Set();\n  \
    \  for (let i = 0; i < string.length; i++) {\n        charSet.add(string[i].toLowerCase());\n\
    \    }\n    return charSet.size;\n}\n", "    let distinct_characters: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinctCharacters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinctCharacters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinctCharacters.push(string[i].toLowerCase());\n \
    \       }\n    }\n    return distinctCharacters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return string.toLowerCase().split('').filter((value,\
    \ index, self) => {\n        return self.indexOf(value) === index;\n    }).length;\n\
    }\n", "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinct_characters.push(string[i].toLowerCase());\n    \
    \    }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return Array.from(new\
    \ Set(string.toLowerCase())).length;\n}\n", "    return new Set(string.toLowerCase()).size;\n\
    }\n", "    let charSet = new Set();\n    for (let i = 0; i < string.length; i++)\
    \ {\n        charSet.add(string[i].toLowerCase());\n    }\n    return charSet.size;\n\
    }\n", "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinct_characters.push(string[i].toLowerCase());\n    \
    \    }\n    }\n    return distinct_characters.length;\n}\n", "    let count =\
    \ 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length; i++)\
    \ {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let count\
    \ = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    const set\
    \ = new Set(string.toLowerCase());\n    return set.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let character of string) {\n        distinct_characters.add(character.toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let result: number =\
    \ 0;\n    let char_set: Set<string> = new Set<string>();\n    for (let i: number\
    \ = 0; i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
    \    }\n    result = char_set.size;\n    return result;\n}\n", "    let uniqueChars:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (uniqueChars.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            uniqueChars.push(string[i].toLowerCase());\n        }\n\
    \    }\n    return uniqueChars.length;\n}\n", "    let count = 0;\n    let char_set\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
    \    }\n    return char_set.size;\n}\n", "    let count = 0;\n    let characters\
    \ = string.toLowerCase().split('');\n    for (let i = 0; i < characters.length;\
    \ i++) {\n        if (characters.indexOf(characters[i]) === i) {\n           \
    \ count++;\n        }\n    }\n    return count;\n}\n", "    let count = 0;\n \
    \   let distinct = [];\n    for (let i = 0; i < string.length; i++) {\n      \
    \  if (distinct.indexOf(string[i].toLowerCase()) === -1) {\n            distinct.push(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let result:\
    \ number = 0;\n    let char_set: Set<string> = new Set();\n    for (let i = 0;\
    \ i < string.length; i++) {\n        char_set.add(string[i].toLowerCase());\n\
    \    }\n    result = char_set.size;\n    return result;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set<string>();\n    for (let i = 0; i < string.length; i++) {\n      \
    \  distinct_characters.add(string[i].toLowerCase());\n    }\n    return distinct_characters.size;\n\
    }\n", "    let distinct_characters = new Set(string.toLowerCase());\n    return\
    \ distinct_characters.size;\n}\n", "    let distinct_characters: string[] = [];\n\
    \    for (let i = 0; i < string.length; i++) {\n        let character = string[i];\n\
    \        if (distinct_characters.indexOf(character) === -1) {\n            distinct_characters.push(character);\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let count = 0;\n    let\
    \ unique = [];\n    for (let i = 0; i < string.length; i++) {\n        if (unique.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            unique.push(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let result: string[] = [];\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let count: number = 0;\n    let char_set:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (char_set.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            char_set.push(string[i].toLowerCase());\n           \
    \ count++;\n        }\n    }\n    return count;\n}\n", "    let result = 0;\n\
    \    let characters = string.toLowerCase().split('');\n    let uniqueCharacters\
    \ = new Set(characters);\n    result = uniqueCharacters.size;\n    return result;\n\
    }\n", "    let unique = new Set(string.toLowerCase());\n    return unique.size;\n\
    }\n", "    let distinct_characters: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase()) ===\
    \ -1) {\n            distinct_characters.push(string[i].toLowerCase());\n    \
    \    }\n    }\n    return distinct_characters.length;\n}\n", "    let count =\
    \ 0;\n    let char = '';\n    for (let i = 0; i < string.length; i++) {\n    \
    \    char = string.charAt(i);\n        if (string.indexOf(char) === i) {\n   \
    \         count++;\n        }\n    }\n    return count;\n}\n", "  let set = new\
    \ Set(string.toLowerCase());\n  return set.size;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let distinct_characters\
    \ = new Set();\n    for (let character of string) {\n        distinct_characters.add(character.toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let count = 0;\n    let\
    \ characters: string[] = [];\n    for (let i = 0; i < string.length; i++) {\n\
    \        if (!characters.includes(string[i].toLowerCase())) {\n            characters.push(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    return\
    \ string.length;\n}\n", "    let count: number = 0;\n    let char_set: Set<string>\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string[i]))\
    \ {\n            char_set.add(string[i]);\n            count++;\n        }\n \
    \   }\n    return count;\n}\n", "    let charCount: number = 0;\n    let charArray:\
    \ string[] = string.split('');\n    let charMap: Map<string, number> = new Map();\n\
    \    charArray.forEach(char => {\n        if (!charMap.has(char.toLowerCase()))\
    \ {\n            charMap.set(char.toLowerCase(), 1);\n            charCount++;\n\
    \        }\n    });\n    return charCount;\n}\n", "  const lowerCaseString = string.toLowerCase();\n\
    \  const distinctCharacters = new Set(lowerCaseString);\n  return distinctCharacters.size;\n\
    }\n", "    let distinct_characters = new Set<string>();\n    for (let i = 0; i\
    \ < string.length; i++) {\n        distinct_characters.add(string[i].toLowerCase());\n\
    \    }\n    return distinct_characters.size;\n}\n", "    let count = 0;\n    let\
    \ charMap = {};\n    for (let i = 0; i < string.length; i++) {\n        if (!charMap[string[i].toLowerCase()])\
    \ {\n            charMap[string[i].toLowerCase()] = true;\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let result = 0;\n    let charMap\
    \ = {};\n    for (let i = 0; i < string.length; i++) {\n        let char = string[i].toLowerCase();\n\
    \        if (!charMap[char]) {\n            charMap[char] = true;\n          \
    \  result++;\n        }\n    }\n    return result;\n}\n", "    let distinct =\
    \ new Set();\n    for (let i = 0; i < string.length; i++) {\n        distinct.add(string[i].toLowerCase());\n\
    \    }\n    return distinct.size;\n}\n", "  let result = 0;\n  let chars = string.toLowerCase().split(\"\
    \");\n  let uniqueChars = new Set(chars);\n  result = uniqueChars.size;\n  return\
    \ result;\n}\n", "    return new Set(string.toLowerCase()).size;\n}\n", "    let\
    \ result: number = 0;\n    let charSet: Set<string> = new Set();\n    for (let\
    \ i = 0; i < string.length; i++) {\n        charSet.add(string[i].toLowerCase());\n\
    \    }\n    result = charSet.size;\n    return result;\n}\n", "    let distinct_characters:\
    \ string[] = [];\n    for (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    return new\
    \ Set(string.toLowerCase()).size;\n}\n", "  let count = 0;\n  let char_set = new\
    \ Set();\n  for (let i = 0; i < string.length; i++) {\n    if (!char_set.has(string[i].toLowerCase()))\
    \ {\n      char_set.add(string[i].toLowerCase());\n      count++;\n    }\n  }\n\
    \  return count;\n}\n", "    let count = 0;\n    let characters = {};\n    for\
    \ (let i = 0; i < string.length; i++) {\n        if (!characters[string[i].toLowerCase()])\
    \ {\n            characters[string[i].toLowerCase()] = 1;\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let count = 0;\n    let char_set\
    \ = new Set();\n    for (let i = 0; i < string.length; i++) {\n        if (!char_set.has(string[i].toLowerCase()))\
    \ {\n            char_set.add(string[i].toLowerCase());\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "    let count = 0;\n    let characters\
    \ = string.toLowerCase().split('');\n    for (let i = 0; i < characters.length;\
    \ i++) {\n        if (characters.indexOf(characters[i]) === i) {\n           \
    \ count++;\n        }\n    }\n    return count;\n}\n", "    let distinct_characters\
    \ = new Set<string>();\n    for (let i = 0; i < string.length; i++) {\n      \
    \  distinct_characters.add(string[i].toLowerCase());\n    }\n    return distinct_characters.size;\n\
    }\n", "    let result: string[] = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (result.indexOf(string[i].toLowerCase()) == -1) {\n     \
    \       result.push(string[i].toLowerCase());\n        }\n    }\n    return result.length;\n\
    }\n", "  return new Set(string.toLowerCase()).size;\n}\n", "    let result: string[]\
    \ = [];\n    for (let i = 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    let set = new Set(string.toLowerCase());\n\
    \    return set.size;\n}\n", "    let result: string[] = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        if (result.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            result.push(string[i].toLowerCase());\n        }\n  \
    \  }\n    return result.length;\n}\n", "    const uniqueChars = new Set(string.toLowerCase());\n\
    \    return uniqueChars.size;\n}\n", "  let count = 0;\n  let charMap = {};\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (!charMap[string[i].toLowerCase()])\
    \ {\n      charMap[string[i].toLowerCase()] = 1;\n      count++;\n    }\n  }\n\
    \  return count;\n}\n", "    let distinct_characters: string[] = [];\n    for\
    \ (let i = 0; i < string.length; i++) {\n        if (distinct_characters.indexOf(string[i].toLowerCase())\
    \ === -1) {\n            distinct_characters.push(string[i].toLowerCase());\n\
    \        }\n    }\n    return distinct_characters.length;\n}\n", "    let count\
    \ = 0;\n    let charMap = {};\n    for (let i = 0; i < string.length; i++) {\n\
    \        if (!charMap[string[i].toLowerCase()]) {\n            charMap[string[i].toLowerCase()]\
    \ = true;\n            count++;\n        }\n    }\n    return count;\n}\n", " \
    \   let count = 0;\n    let char_set = new Set();\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (!char_set.has(string[i].toLowerCase())) {\n            char_set.add(string[i].toLowerCase());\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "    let count\
    \ = 0;\n    let chars = string.toLowerCase().split('');\n    let uniqueChars =\
    \ chars.filter(function(item, i, ar){ return ar.indexOf(item) === i; });\n   \
    \ return uniqueChars.length;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

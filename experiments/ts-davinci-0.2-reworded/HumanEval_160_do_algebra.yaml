name: HumanEval_160_do_algebra
language: ts
prompt: "//Given two arrays operator, and operand. The first array has basic algebra\
  \ operations, and \n// the second array is an array of integers. Use the two given\
  \ arrays to build the algebric \n// expression and return the evaluation of this\
  \ expression.\n// The basic algebra operations:\n// Addition ( + ) \n// Subtraction\
  \ ( - ) \n// Multiplication ( * ) \n// Floor division ( // ) \n// Exponentiation\
  \ ( ** ) \n// Example:\n// operator['+', '*', '-']\n// array = [2, 3, 4, 5]\n//\
  \ result = 2 + 3 * 4 - 5\n// => result = 9\n// Note:\n// The length of operator\
  \ array is equal to the length of operand array minus one.\n// Operand is an array\
  \ of of non-negative integers.\n// Operator array has at least one operator, and\
  \ operand array has at least two operands.\nfunction do_algebra(operator: string[],\
  \ operand: number[]): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = do_algebra;\n  assert.deepEqual(candidate([\"**\"\
  , \"*\", \"+\"], [2, 3, 4, 5]),37);\n  assert.deepEqual(candidate([\"+\", \"*\"\
  , \"-\"], [2, 3, 4, 5]),9);\n  assert.deepEqual(candidate([\"//\", \"*\"], [7, 3,\
  \ 4]),8);\n}\n\ntest();"
completions: ["    let result = operand[0];\n    for (let i = 0; i < operator.length;\
    \ i++) {\n        if (operator[i] === '+') {\n            result += operand[i\
    \ + 1];\n        } else if (operator[i] === '-') {\n            result -= operand[i\
    \ + 1];\n        } else if (operator[i] === '*') {\n            result *= operand[i\
    \ + 1];\n        } else if (operator[i] === '//') {\n            result = Math.floor(result\
    \ / operand[i + 1]);\n        } else if (operator[i] === '**') {\n           \
    \ result = Math.pow(result, operand[i + 1]);\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) ===\
    \ 9);\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) ===\
    \ 9);\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [",
  "    let result = operand[0];\n    for (let i = 0; i < operator.length; i++) {\n\
    \        switch (operator[i]) {\n            case '+':\n                result\
    \ += operand[i + 1];\n                break;\n            case '-':\n        \
    \        result -= operand[i + 1];\n                break;\n            case '*':\n\
    \                result *= operand[i + 1];\n                break;\n         \
    \   case '//':\n                result = Math.floor(result / operand[i + 1]);\n\
    \                break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '//', '**'], [2, 3, 4, 5]));", "    let result = operand[0];\n    for (let\
    \ i = 0; i < operator.length; i++) {\n        switch (operator[i]) {\n       \
    \     case '+':\n                result += operand[i + 1];\n                break;\n\
    \            case '-':\n                result -= operand[i + 1];\n          \
    \      break;\n            case '*':\n                result *= operand[i + 1];\n\
    \                break;\n            case '//':\n                result = Math.floor(result\
    \ / operand[i + 1]);\n                break;\n            case '**':\n       \
    \         result = Math.pow(result, operand[i + 1]);\n                break;\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(do_algebra(['+', '*',\
    \ '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '//', '**'], [2, 3,\
    \ 4, 5]));\nconsole.log(do_algebra(['+', '*', '//', '**'], [2, 3, 4, 5, 6]));",
  "    let result = operand[0];\n    for (let i = 0; i < operator.length; i++) {\n\
    \        switch (operator[i]) {\n            case '+':\n                result\
    \ += operand[i + 1];\n                break;\n            case '-':\n        \
    \        result -= operand[i + 1];\n                break;\n            case '*':\n\
    \                result *= operand[i + 1];\n                break;\n         \
    \   case '//':\n                result = Math.floor(result / operand[i + 1]);\n\
    \                break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) ===\
    \ 9);\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) ===\
    \ 9);\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5]) === 9);\nconsole.", "    let result = operand[0];\n    for (let i\
    \ = 0; i < operator.length; i++) {\n        switch (operator[i]) {\n         \
    \   case '+':\n                result += operand[i + 1];\n                break;\n\
    \            case '-':\n                result -= operand[i + 1];\n          \
    \      break;\n            case '*':\n                result *= operand[i + 1];\n\
    \                break;\n            case '//':\n                result = Math.floor(result\
    \ / operand[i + 1]);\n                break;\n            case '**':\n       \
    \         result = Math.pow(result, operand[i + 1]);\n                break;\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(do_algebra(['+', '*',\
    \ '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\n\
    console.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3", "    let result = operand[0];\n\
    \    for (let i = 0; i < operator.length; i++) {\n        switch (operator[i])\
    \ {\n            case '+':\n                result += operand[i + 1];\n      \
    \          break;\n            case '-':\n                result -= operand[i\
    \ + 1];\n                break;\n            case '*':\n                result\
    \ *= operand[i + 1];\n                break;\n            case '//':\n       \
    \         result = Math.floor(result / operand[i + 1]);\n                break;\n\
    \            case '**':\n                result = Math.pow(result, operand[i +\
    \ 1]);\n                break;\n        }\n    }\n    return result;\n}\n\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3", "    let result = operand[0];\n\
    \    for (let i = 0; i < operator.length; i++) {\n        if (operator[i] ===\
    \ '+') {\n            result += operand[i + 1];\n        } else if (operator[i]\
    \ === '-') {\n            result -= operand[i + 1];\n        } else if (operator[i]\
    \ === '*') {\n            result *= operand[i + 1];\n        } else if (operator[i]\
    \ === '//') {\n            result = Math.floor(result / operand[i + 1]);\n   \
    \     } else if (operator[i] === '**') {\n            result = Math.pow(result,\
    \ operand[i + 1]);\n        }\n    }\n    return result;\n}\n\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));", "    let result = operand[0];\n    for (let i = 0; i < operator.length;\
    \ i++) {\n        switch (operator[i]) {\n            case '+':\n            \
    \    result += operand[i + 1];\n                break;\n            case '-':\n\
    \                result -= operand[i + 1];\n                break;\n         \
    \   case '*':\n                result *= operand[i + 1];\n                break;\n\
    \            case '//':\n                result = Math.floor(result / operand[i\
    \ + 1]);\n                break;\n            case '**':\n                result\
    \ = Math.pow(result, operand[i + 1]);\n                break;\n        }\n   \
    \ }\n    return result;\n}\n\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '//', '**'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '//', '**'], [2, 3, 4, 5, 6]));\nconsole.log(do_algebra(['+', '*', '//',\
    \ '**'], [2, 3, 4, 5, 6, 7]));\nconsole.log(do_algebra(['+', '*', '//', '**'],\
    \ [2, 3, 4, 5, 6, 7, 8]));", "    let result = operand[0];\n    for (let i = 0;\
    \ i < operator.length; i++) {\n        switch (operator[i]) {\n            case\
    \ '+':\n                result += operand[i + 1];\n                break;\n  \
    \          case '-':\n                result -= operand[i + 1];\n            \
    \    break;\n            case '*':\n                result *= operand[i + 1];\n\
    \                break;\n            case '//':\n                result = Math.floor(result\
    \ / operand[i + 1]);\n                break;\n            case '**':\n       \
    \         result = Math.pow(result, operand[i + 1]);\n                break;\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(do_algebra(['+', '*',\
    \ '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\n\
    console.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3", "    let result = operand[0];\n\
    \    for (let i = 0; i < operator.length; i++) {\n        switch (operator[i])\
    \ {\n            case '+':\n                result += operand[i + 1];\n      \
    \          break;\n            case '-':\n                result -= operand[i\
    \ + 1];\n                break;\n            case '*':\n                result\
    \ *= operand[i + 1];\n                break;\n            case '//':\n       \
    \         result = Math.floor(result / operand[i + 1]);\n                break;\n\
    \            case '**':\n                result = Math.pow(result, operand[i +\
    \ 1]);\n                break;\n        }\n    }\n    return result;\n}\n\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3", "    let result: number\
    \ = operand[0];\n    for (let i = 0; i < operator.length; i++) {\n        switch\
    \ (operator[i]) {\n            case '+':\n                result += operand[i\
    \ + 1];\n                break;\n            case '-':\n                result\
    \ -= operand[i + 1];\n                break;\n            case '*':\n        \
    \        result *= operand[i + 1];\n                break;\n            case '//':\n\
    \                result = Math.floor(result / operand[i + 1]);\n             \
    \   break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));", "  let result = operand[0];\n  for (let i = 0;\
    \ i < operator.length; i++) {\n    if (operator[i] === '+') {\n      result +=\
    \ operand[i + 1];\n    } else if (operator[i] === '-') {\n      result -= operand[i\
    \ + 1];\n    } else if (operator[i] === '*') {\n      result *= operand[i + 1];\n\
    \    } else if (operator[i] === '//') {\n      result = Math.floor(result / operand[i\
    \ + 1]);\n    } else if (operator[i] === '**') {\n      result = Math.pow(result,\
    \ operand[i + 1]);\n    }\n  }\n  return result;\n}\n\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra", "    let result = operand[0];\n    for (let\
    \ i = 0; i < operator.length; i++) {\n        if (operator[i] === '+') {\n   \
    \         result += operand[i + 1];\n        } else if (operator[i] === '-') {\n\
    \            result -= operand[i + 1];\n        } else if (operator[i] === '*')\
    \ {\n            result *= operand[i + 1];\n        } else if (operator[i] ===\
    \ '//') {\n            result = Math.floor(result / operand[i + 1]);\n       \
    \ } else if (operator[i] === '**') {\n            result = Math.pow(result, operand[i\
    \ + 1]);\n        }\n    }\n    return result;\n}\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) === 9);\n\
    console.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) ===\
    \ 9);\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2,\
    \ 3, 4, 5]) === 9);\nconsole.log(do_algebra(['+', '*', '-'], [2", "    let result\
    \ = operand[0];\n    for (let i = 0; i < operator.length; i++) {\n        switch\
    \ (operator[i]) {\n            case '+':\n                result += operand[i\
    \ + 1];\n                break;\n            case '-':\n                result\
    \ -= operand[i + 1];\n                break;\n            case '*':\n        \
    \        result *= operand[i + 1];\n                break;\n            case '//':\n\
    \                result = Math.floor(result / operand[i + 1]);\n             \
    \   break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3",
  "    let result = operand[0];\n    for (let i = 0; i < operator.length; i++) {\n\
    \        switch (operator[i]) {\n            case '+':\n                result\
    \ += operand[i + 1];\n                break;\n            case '-':\n        \
    \        result -= operand[i + 1];\n                break;\n            case '*':\n\
    \                result *= operand[i + 1];\n                break;\n         \
    \   case '//':\n                result = Math.floor(result / operand[i + 1]);\n\
    \                break;\n            case '**':\n                result = Math.pow(result,\
    \ operand[i + 1]);\n                break;\n        }\n    }\n    return result;\n\
    }\n\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '//', '**'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '//', '**'],\
    \ [2, 3, 4, 5, 6]));\nconsole.log(do_algebra(['+', '*', '//', '**'], [2, 3, 4,\
    \ 5, 6, 7]));", "    let result = operand[0];\n    for (let i = 0; i < operator.length;\
    \ i++) {\n        switch (operator[i]) {\n            case '+':\n            \
    \    result += operand[i + 1];\n                break;\n            case '-':\n\
    \                result -= operand[i + 1];\n                break;\n         \
    \   case '*':\n                result *= operand[i + 1];\n                break;\n\
    \            case '//':\n                result = Math.floor(result / operand[i\
    \ + 1]);\n                break;\n            case '**':\n                result\
    \ = Math.pow(result, operand[i + 1]);\n                break;\n        }\n   \
    \ }\n    return result;\n}\n\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '-', '*'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '-', '*', '//'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '-', '*', '//',\
    \ '**'], [2, 3, 4, 5, 2]));", "    let result = operand[0];\n    for (let i =\
    \ 0; i < operator.length; i++) {\n        switch (operator[i]) {\n           \
    \ case '+':\n                result += operand[i + 1];\n                break;\n\
    \            case '-':\n                result -= operand[i + 1];\n          \
    \      break;\n            case '*':\n                result *= operand[i + 1];\n\
    \                break;\n            case '//':\n                result = Math.floor(result\
    \ / operand[i + 1]);\n                break;\n            case '**':\n       \
    \         result = Math.pow(result, operand[i + 1]);\n                break;\n\
    \        }\n    }\n    return result;\n}\n\nconsole.log(do_algebra(['+', '*',\
    \ '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '//', '**'], [2, 3,\
    \ 4, 5]));\nconsole.log(do_algebra(['+', '*', '//', '**'], [2, 3, 4, 5, 6]));\n\
    console.log(do_algebra(['+', '*', '//', '**'], [2, 3, 4, 5, 6, 7]));\nconsole.log(do_algebra(['+',\
    \ '*', '//', '**'], [2, 3, 4, 5, 6, 7, 8]));\nconsole.log(do_algebra(['+', '*',\
    \ '//', '**'], [2, 3, 4, 5, 6, 7, 8, 9]));\nconsole.log(do_algebra(['+', '*',\
    \ '//', '**'], [2, 3, 4, 5, 6, 7, 8, 9, 10]));\nconsole.log(do_algebra(['+', '*',\
    \ '//', '**'], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11]));\nconsole.log(do_algebra(['+',\
    \ '*', '//', '**'], [2, 3, 4, 5, 6, 7, 8, 9,", "    let result: number = operand[0];\n\
    \    for (let i = 0; i < operator.length; i++) {\n        switch (operator[i])\
    \ {\n            case '+':\n                result += operand[i + 1];\n      \
    \          break;\n            case '-':\n                result -= operand[i\
    \ + 1];\n                break;\n            case '*':\n                result\
    \ *= operand[i + 1];\n                break;\n            case '//':\n       \
    \         result = Math.floor(result / operand[i + 1]);\n                break;\n\
    \            case '**':\n                result = Math.pow(result, operand[i +\
    \ 1]);\n                break;\n        }\n    }\n    return result;\n}\n\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));", "  let result = operand[0];\n  for (let i = 0; i < operator.length;\
    \ i++) {\n    switch (operator[i]) {\n      case '+':\n        result += operand[i\
    \ + 1];\n        break;\n      case '-':\n        result -= operand[i + 1];\n\
    \        break;\n      case '*':\n        result *= operand[i + 1];\n        break;\n\
    \      case '//':\n        result = Math.floor(result / operand[i + 1]);\n   \
    \     break;\n      case '**':\n        result = Math.pow(result, operand[i +\
    \ 1]);\n        break;\n    }\n  }\n  return result;\n}\n\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '//'], [2, 3,\
    \ 4, 5]));\nconsole.log(do_algebra(['+', '*', '//', '**'], [2, 3, 4, 5, 2]));\n\
    console.log(do_algebra(['+', '*', '//', '**'], [2, 3, 4, 5, 3]));\nconsole.log(do_algebra(['+',\
    \ '*', '//', '**'], [2, 3, 4, 5, 4]));\nconsole.log(do_algebra(['+', '*', '//',\
    \ '**'], [2, 3, 4, 5, 5]));\nconsole.log(do_algebra(['+', '*', '//', '**'], [2,\
    \ 3, 4, 5, 6]));\nconsole.log(do_algebra(['+', '*', '//', '**'], [2, 3, 4, 5,\
    \ 7]));\nconsole.log(do_algebra(['+', '*', '//', '**'], [2, 3, 4, 5, 8]));\nconsole.log(do_algebra(['+',\
    \ '*', '//', '**'], [2, 3, 4, 5, 9]));\nconsole.", "    let result = operand[0];\n\
    \    for (let i = 0; i < operator.length; i++) {\n        switch (operator[i])\
    \ {\n            case '+':\n                result += operand[i + 1];\n      \
    \          break;\n            case '-':\n                result -= operand[i\
    \ + 1];\n                break;\n            case '*':\n                result\
    \ *= operand[i + 1];\n                break;\n            case '//':\n       \
    \         result = Math.floor(result / operand[i + 1]);\n                break;\n\
    \            case '**':\n                result = Math.pow(result, operand[i +\
    \ 1]);\n                break;\n        }\n    }\n    return result;\n}\n\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+',\
    \ '*', '-'], [2, 3, 4, 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3, 4,\
    \ 5]));\nconsole.log(do_algebra(['+', '*', '-'], [2, 3"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

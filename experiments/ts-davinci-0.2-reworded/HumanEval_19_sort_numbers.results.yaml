language: ts
name: HumanEval_19_sort_numbers
results:
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a)\
    \ - num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6_dkmqt_.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp6_dkmqt_.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums: string[] = numbers.split('\
    \ ');\n    const nums_sorted: string[] = nums.sort((a, b) => {\n        const\
    \ num_a: number = numeral_to_number(a);\n        const num_b: number = numeral_to_number(b);\n\
    \        return num_a - num_b;\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpp8ud859w.ts(9,31): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmpp8ud859w.ts(10,31): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeral_map = {\n  \
    \  zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five:\
    \ 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums\
    \ = numbers.split(\" \");\n  const nums_int = nums.map((num) => numeral_map[num]);\n\
    \  const sorted_nums = nums_int.sort((a, b) => a - b);\n  const sorted_nums_str\
    \ = sorted_nums.map((num) => {\n    for (const [key, value] of Object.entries(numeral_map))\
    \ {\n      if (value === num) {\n        return key;\n      }\n    }\n  });\n\
    \  return sorted_nums_str.join(\" \");\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3_zzsbkb.ts(23,39): error TS2339: Property ''entries''
    does not exist on type ''ObjectConstructor''.

    '
  timestamp: 1659738564
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsSorted = nums.sort((a, b) => {\n    return numsToNums[a] -\
    \ numsToNums[b];\n  });\n  return numsSorted.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkrdd4vf2.ts(9,12): error TS2304: Cannot find name
    ''numsToNums''.

    ../../../../../tmp/tmpkrdd4vf2.ts(9,28): error TS2304: Cannot find name ''numsToNums''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const num_a = numeral_to_number(a);\n\
    \    const num_b = numeral_to_number(b);\n    return num_a - num_b;\n  });\n \
    \ return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0shuw066.ts(9,19): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp0shuw066.ts(10,19): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numsMap[a] - numsMap[b]);\n\
    \  return sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_int = nums.map(num => num_to_int(num));\n  const sorted_nums\
    \ = nums_int.sort((a, b) => a - b);\n  const sorted_nums_str = sorted_nums.map(num\
    \ => int_to_num(num));\n  return sorted_nums_str.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa6noxzen.ts(8,36): error TS2552: Cannot find name
    ''num_to_int''. Did you mean ''nums_int''?

    ../../../../../tmp/tmpa6noxzen.ts(10,50): error TS2304: Cannot find name ''int_to_num''.

    '
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeralMap = {\n   \
    \ zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n\
    \    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums =\
    \ numbers.split(\" \");\n  const numsSorted = nums.sort((a, b) => numeralMap[a]\
    \ - numeralMap[b]);\n  return numsSorted.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sortedNums = nums.sort((a, b) => numMap[a] - numMap[b]);\n\
    \  return sortedNums.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const numeral_map = {\n\
    \        zero: 0,\n        one: 1,\n        two: 2,\n        three: 3,\n     \
    \   four: 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n        eight:\
    \ 8,\n        nine: 9\n    };\n    const nums = numbers.split(\" \").map(num =>\
    \ numeral_map[num]);\n    const sorted_nums = nums.sort((a, b) => a - b);\n  \
    \  const sorted_numbers = sorted_nums.map(num => Object.keys(numeral_map).find(key\
    \ => numeral_map[key] === num));\n    return sorted_numbers.join(\" \");\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnd1pn2k_.ts(21,76): error TS2339: Property ''find''
    does not exist on type ''string[]''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums: number[] = numbers.split(\"\
    \ \").map(n => number_to_numeral(n));\n    nums.sort((a, b) => a - b);\n    return\
    \ nums.map(n => numeral_to_number(n)).join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprxehody8.ts(7,54): error TS2304: Cannot find name
    ''number_to_numeral''.

    ../../../../../tmp/tmprxehody8.ts(9,26): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738565
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums: number[] = numbers.split('\
    \ ').map(num => {\n        switch (num) {\n            case 'zero':\n        \
    \        return 0;\n            case 'one':\n                return 1;\n     \
    \       case 'two':\n                return 2;\n            case 'three':\n  \
    \              return 3;\n            case 'four':\n                return 4;\n\
    \            case 'five':\n                return 5;\n            case 'six':\n\
    \                return 6;\n            case 'seven':\n                return\
    \ 7;\n            case 'eight':\n                return 8;\n            case 'nine':\n\
    \                return 9;\n            default:\n                return -1;\n\
    \        }\n    });\n    nums.sort((a, b) => a - b);\n    return nums.map(num\
    \ => {\n        switch (num) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \            default:\n                return 'invalid';\n        }\n    }).join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'invalid'\n\n\
    should loosely deep-equal\n\n''\n    at test (/tmp/tmp4zq6vb96.js:64:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp4zq6vb96.js:70:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'invalid',\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return nums_to_numbers[a]\
    \ - nums_to_numbers[b];\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphb7n2jyu.ts(9,12): error TS2304: Cannot find name
    ''nums_to_numbers''.

    ../../../../../tmp/tmphb7n2jyu.ts(9,33): error TS2304: Cannot find name ''nums_to_numbers''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return nums_to_numbers[a]\
    \ - nums_to_numbers[b];\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphb7n2jyu.ts(9,12): error TS2304: Cannot find name
    ''nums_to_numbers''.

    ../../../../../tmp/tmphb7n2jyu.ts(9,33): error TS2304: Cannot find name ''nums_to_numbers''.

    '
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const numsSorted = nums.sort((a, b) => numsMap[a] - numsMap[b]);\n\
    \  return numsSorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeralMap = {\n   \
    \ zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n\
    \    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums =\
    \ numbers.split(\" \");\n  const numsSorted = nums.sort((a, b) => {\n    return\
    \ numeralMap[a] - numeralMap[b];\n  });\n  return numsSorted.join(\" \");\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeralToNumber = {\n\
    \    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five:\
    \ 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const numberToNumeral\
    \ = {\n    0: \"zero\",\n    1: \"one\",\n    2: \"two\",\n    3: \"three\",\n\
    \    4: \"four\",\n    5: \"five\",\n    6: \"six\",\n    7: \"seven\",\n    8:\
    \ \"eight\",\n    9: \"nine\",\n  };\n  const numeralArray = numbers.split(\"\
    \ \");\n  const numberArray = numeralArray.map((numeral) => numeralToNumber[numeral]);\n\
    \  const sortedNumberArray = numberArray.sort((a, b) => a - b);\n  const sortedNumeralArray\
    \ = sortedNumberArray.map((number) => numberToNumeral[number]);\n  return sortedNumeralArray.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n\
    \      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n\
    \      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums = numbers.split(\"\
    \ \");\n    let nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n    \
    \    \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\"\
    : 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n    \
    \    \"nine\": 9\n    };\n    let nums_int = nums.map(num => nums_map[num]);\n\
    \    nums_int.sort((a, b) => a - b);\n    let nums_str = nums_int.map(num => {\n\
    \        for (let key in nums_map) {\n            if (nums_map[key] === num) {\n\
    \                return key;\n            }\n        }\n    });\n    return nums_str.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_map = {\n        zero: 0,\n        one: 1,\n        two:\
    \ 2,\n        three: 3,\n        four: 4,\n        five: 5,\n        six: 6,\n\
    \        seven: 7,\n        eight: 8,\n        nine: 9\n    };\n    const nums_sorted\
    \ = nums.sort((a, b) => {\n        return nums_map[a] - nums_map[b];\n    });\n\
    \    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeralMap = {\n   \
    \ zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n\
    \    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums =\
    \ numbers.split(\" \");\n  const numsAsNumbers = nums.map((num) => numeralMap[num]);\n\
    \  const sorted = numsAsNumbers.sort((a, b) => a - b);\n  const sortedAsNumerals\
    \ = sorted.map((num) => {\n    for (const [key, value] of Object.entries(numeralMap))\
    \ {\n      if (value === num) {\n        return key;\n      }\n    }\n  });\n\
    \  return sortedAsNumerals.join(\" \");\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplb36bkt0.ts(23,39): error TS2339: Property ''entries''
    does not exist on type ''ObjectConstructor''.

    '
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const numsSorted = nums.sort((a, b) => numsMap[a] - numsMap[b]);\n\
    \  return numsSorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return number_to_numeral(a)\
    \ - number_to_numeral(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpop7xumlq.ts(9,12): error TS2304: Cannot find name
    ''number_to_numeral''.

    ../../../../../tmp/tmpop7xumlq.ts(9,35): error TS2304: Cannot find name ''number_to_numeral''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const num_a = numeral_to_number(a);\n\
    \    const num_b = numeral_to_number(b);\n    return num_a - num_b;\n  });\n \
    \ return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0shuw066.ts(9,19): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp0shuw066.ts(10,19): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n\
    \      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n\
    \      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const number_map = {\n   \
    \ zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n\
    \    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const num_array\
    \ = numbers.split(\" \");\n  const num_array_int = num_array.map((num) => number_map[num]);\n\
    \  const sorted_array = num_array_int.sort((a, b) => a - b);\n  const sorted_string\
    \ = sorted_array.map((num) => {\n    for (const key in number_map) {\n      if\
    \ (number_map[key] === num) {\n        return key;\n      }\n    }\n  });\n  return\
    \ sorted_string.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return nums_to_int(a)\
    \ - nums_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfurej61n.ts(9,12): error TS2304: Cannot find name
    ''nums_to_int''.

    ../../../../../tmp/tmpfurej61n.ts(9,29): error TS2304: Cannot find name ''nums_to_int''.

    '
  timestamp: 1659738569
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const num_a = numeral_to_number(a);\n\
    \    const num_b = numeral_to_number(b);\n    return num_a - num_b;\n  });\n \
    \ return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0shuw066.ts(9,19): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp0shuw066.ts(10,19): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ').map(num => {\n        switch (num) {\n            case 'zero':\n        \
    \        return 0;\n            case 'one':\n                return 1;\n     \
    \       case 'two':\n                return 2;\n            case 'three':\n  \
    \              return 3;\n            case 'four':\n                return 4;\n\
    \            case 'five':\n                return 5;\n            case 'six':\n\
    \                return 6;\n            case 'seven':\n                return\
    \ 7;\n            case 'eight':\n                return 8;\n            case 'nine':\n\
    \                return 9;\n        }\n    });\n    nums.sort((a, b) => a - b);\n\
    \    return nums.map(num => {\n        switch (num) {\n            case 0:\n \
    \               return 'zero';\n            case 1:\n                return 'one';\n\
    \            case 2:\n                return 'two';\n            case 3:\n   \
    \             return 'three';\n            case 4:\n                return 'four';\n\
    \            case 5:\n                return 'five';\n            case 6:\n  \
    \              return 'six';\n            case 7:\n                return 'seven';\n\
    \            case 8:\n                return 'eight';\n            case 9:\n \
    \               return 'nine';\n        }\n    }).join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738569
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => num_to_numeral(a) - num_to_numeral(b));\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe_e3vi56.ts(8,43): error TS2304: Cannot find name
    ''num_to_numeral''.

    ../../../../../tmp/tmpe_e3vi56.ts(8,63): error TS2304: Cannot find name ''num_to_numeral''.

    '
  timestamp: 1659738570
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsSorted = nums.sort((a, b) => {\n    return numToNumeral(a)\
    \ - numToNumeral(b);\n  });\n  return numsSorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnsctvr9y.ts(9,12): error TS2304: Cannot find name
    ''numToNumeral''.

    ../../../../../tmp/tmpnsctvr9y.ts(9,30): error TS2304: Cannot find name ''numToNumeral''.

    '
  timestamp: 1659738569
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums = numbers.split(\"\
    \ \");\n    let nums_sorted = nums.sort((a, b) => {\n        return nums_to_numbers[a]\
    \ - nums_to_numbers[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp55u29559.ts(9,16): error TS2304: Cannot find name
    ''nums_to_numbers''.

    ../../../../../tmp/tmp55u29559.ts(9,37): error TS2304: Cannot find name ''nums_to_numbers''.

    '
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums: string[] = numbers.split(\"\
    \ \");\n    let nums_int: number[] = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        switch (nums[i]) {\n            case \"zero\":\n           \
    \     nums_int.push(0);\n                break;\n            case \"one\":\n \
    \               nums_int.push(1);\n                break;\n            case \"\
    two\":\n                nums_int.push(2);\n                break;\n          \
    \  case \"three\":\n                nums_int.push(3);\n                break;\n\
    \            case \"four\":\n                nums_int.push(4);\n             \
    \   break;\n            case \"five\":\n                nums_int.push(5);\n  \
    \              break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function (a, b) {\
    \ return a - b });\n    for (let i = 0; i < nums_int.length; i++) {\n        switch\
    \ (nums_int[i]) {\n            case 0:\n                nums[i] = \"zero\";\n\
    \                break;\n            case 1:\n                nums[i] = \"one\"\
    ;\n                break;\n            case 2:\n                nums[i] = \"two\"\
    ;\n                break;\n            case 3:\n                nums[i] = \"three\"\
    ;\n                break;\n            case 4:\n                nums[i] = \"four\"\
    ;\n                break;\n            case 5:\n                nums[i] = \"five\"\
    ;\n                break;\n            case 6:\n                nums[i] = \"six\"\
    ;\n                break;\n            case 7:\n                nums[i] = \"seven\"\
    ;\n                break;\n            case 8:\n                nums[i] = \"eight\"\
    ;\n                break;\n            case 9:\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpisi5n1f8.ts(88,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659738569
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeralMap = {\n   \
    \ zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n\
    \    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums =\
    \ numbers.split(\" \");\n  const numsArr = nums.map((num) => numeralMap[num]);\n\
    \  const sortedNums = numsArr.sort((a, b) => a - b);\n  const sortedNumsStr =\
    \ sortedNums.map((num) => Object.keys(numeralMap).find((key) => numeralMap[key]\
    \ === num));\n  return sortedNumsStr.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv1vbou5f.ts(22,73): error TS2339: Property ''find''
    does not exist on type ''string[]''.

    '
  timestamp: 1659738569
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeral_map = {\n  \
    \  zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five:\
    \ 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums\
    \ = numbers.split(\" \");\n  const nums_int = nums.map((num) => numeral_map[num]);\n\
    \  const sorted_nums = nums_int.sort((a, b) => a - b);\n  const sorted_nums_str\
    \ = sorted_nums.map((num) => {\n    for (const [key, value] of Object.entries(numeral_map))\
    \ {\n      if (value === num) {\n        return key;\n      }\n    }\n  });\n\
    \  return sorted_nums_str.join(\" \");\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3_zzsbkb.ts(23,39): error TS2339: Property ''entries''
    does not exist on type ''ObjectConstructor''.

    '
  timestamp: 1659738564
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  let nums = numbers.split(\"\
    \ \");\n  let nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  let nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n\
    \      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n\
    \      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n\
    \  return sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_map = {\n        'zero': 0,\n        'one': 1,\n       \
    \ 'two': 2,\n        'three': 3,\n        'four': 4,\n        'five': 5,\n   \
    \     'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine': 9\n\
    \    };\n    const sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \    return sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        return num_to_int(a)\
    \ - num_to_int(b);\n    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8ydg18fa.ts(9,16): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp8ydg18fa.ts(9,32): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_map = {\n        'zero': 0,\n        'one': 1,\n       \
    \ 'two': 2,\n        'three': 3,\n        'four': 4,\n        'five': 5,\n   \
    \     'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine': 9\n\
    \    };\n    const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted_nums = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return sorted_nums.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const num_a = numeral_to_number(a);\n\
    \    const num_b = numeral_to_number(b);\n    return num_a - num_b;\n  });\n \
    \ return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0shuw066.ts(9,19): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp0shuw066.ts(10,19): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numMap = {\n    zero:\
    \ 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n  \
    \  six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums = numbers.split(\"\
    \ \");\n  const numsSorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n  return\
    \ numsSorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const num_a = parseInt(a);\n\
    \    const num_b = parseInt(b);\n    return num_a - num_b;\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpdi_ibfqn.js:21:12)\n    at Object.<anonymous> (/tmp/tmpdi_ibfqn.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738570
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a)\
    \ - num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6_dkmqt_.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp6_dkmqt_.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        return num_to_int(a)\
    \ - num_to_int(b);\n    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8ydg18fa.ts(9,16): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp8ydg18fa.ts(9,32): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sort = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sort.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums: string[] = numbers.split(\"\
    \ \");\n  const nums_map: Map<string, number> = new Map([\n    [\"zero\", 0],\n\
    \    [\"one\", 1],\n    [\"two\", 2],\n    [\"three\", 3],\n    [\"four\", 4],\n\
    \    [\"five\", 5],\n    [\"six\", 6],\n    [\"seven\", 7],\n    [\"eight\", 8],\n\
    \    [\"nine\", 9],\n  ]);\n  const sorted_nums: number[] = nums\n    .map((num)\
    \ => nums_map.get(num))\n    .sort((a, b) => a - b);\n  return sorted_nums.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbwmzl4jp.ts(8,19): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpbwmzl4jp.ts(8,45): error TS2583: Cannot find name ''Map''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659738570
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        const nums_map =\
    \ {\n            zero: 0,\n            one: 1,\n            two: 2,\n        \
    \    three: 3,\n            four: 4,\n            five: 5,\n            six: 6,\n\
    \            seven: 7,\n            eight: 8,\n            nine: 9\n        };\n\
    \        return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeral_map = {\n  \
    \  zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five:\
    \ 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums\
    \ = numbers.split(\" \");\n  const nums_int = nums.map((num) => numeral_map[num]);\n\
    \  const sorted_nums = nums_int.sort((a, b) => a - b);\n  const sorted_nums_str\
    \ = sorted_nums.map((num) => {\n    for (const key in numeral_map) {\n      if\
    \ (numeral_map[key] === num) {\n        return key;\n      }\n    }\n  });\n \
    \ return sorted_nums_str.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const numMap = {\n     \
    \   zero: 0,\n        one: 1,\n        two: 2,\n        three: 3,\n        four:\
    \ 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n\
    \        nine: 9\n    };\n    const nums = numbers.split(\" \");\n    const numsSorted\
    \ = nums.sort((a, b) => numMap[a] - numMap[b]);\n    return numsSorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n\
    \  return sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n\
    \      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n\
    \      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums = numbers.split(\"\
    \ \");\n    let nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n    \
    \    \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\"\
    : 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n    \
    \    \"nine\": 9\n    };\n    let nums_sorted = nums.sort((a, b) => {\n      \
    \  return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a)\
    \ - num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6_dkmqt_.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp6_dkmqt_.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        const num_a = numeral_to_number(a);\n\
    \        const num_b = numeral_to_number(b);\n        return num_a - num_b;\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsr704gbf.ts(9,23): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmpsr704gbf.ts(10,23): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738570
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sortedNums = nums.sort((a, b) => numMap[a] - numMap[b]);\n\
    \  return sortedNums.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n\
    \      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n\
    \      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_int = nums.map(num => num_to_int(num));\n    const sorted_nums\
    \ = nums_int.sort((a, b) => a - b);\n    const sorted_nums_str = sorted_nums.map(num\
    \ => int_to_num(num));\n    return sorted_nums_str.join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmiuukf1s.ts(8,38): error TS2552: Cannot find name
    ''num_to_int''. Did you mean ''nums_int''?

    ../../../../../tmp/tmpmiuukf1s.ts(10,52): error TS2304: Cannot find name ''int_to_num''.

    '
  timestamp: 1659738574
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n\
    \      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n\
    \      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n\
    \      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n\
    \      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return nums_to_int(a)\
    \ - nums_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfurej61n.ts(9,12): error TS2304: Cannot find name
    ''nums_to_int''.

    ../../../../../tmp/tmpfurej61n.ts(9,29): error TS2304: Cannot find name ''nums_to_int''.

    '
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const numMap = {\n     \
    \   zero: 0,\n        one: 1,\n        two: 2,\n        three: 3,\n        four:\
    \ 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n\
    \        nine: 9\n    };\n    const nums = numbers.split(\" \");\n    const numsInt\
    \ = nums.map(num => numMap[num]);\n    numsInt.sort((a, b) => a - b);\n    const\
    \ numsStr = numsInt.map(num => {\n        for (const key in numMap) {\n      \
    \      if (numMap[key] === num) {\n                return key;\n            }\n\
    \        }\n    });\n    return numsStr.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738574
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sortedNums = nums.sort((a, b) => numsMap[a] - numsMap[b]);\n\
    \  return sortedNums.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738574
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const numeral_map = {\n\
    \        zero: 0,\n        one: 1,\n        two: 2,\n        three: 3,\n     \
    \   four: 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n        eight:\
    \ 8,\n        nine: 9\n    };\n    const nums = numbers.split(\" \").map(num =>\
    \ numeral_map[num]);\n    nums.sort((a, b) => a - b);\n    return nums.map(num\
    \ => Object.keys(numeral_map).find(key => numeral_map[key] === num)).join(\" \"\
    );\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxi3b1nc7.ts(21,53): error TS2339: Property ''find''
    does not exist on type ''string[]''.

    '
  timestamp: 1659738574
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n\
    \      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n\
    \      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeralMap = {\n   \
    \ zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n\
    \    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums =\
    \ numbers.split(\" \");\n  const numsAsNumbers = nums.map((num) => numeralMap[num]);\n\
    \  const sortedNums = numsAsNumbers.sort((a, b) => a - b);\n  const sortedNumsAsNumerals\
    \ = sortedNums.map((num) => {\n    for (const numeral in numeralMap) {\n     \
    \ if (numeralMap[numeral] === num) {\n        return numeral;\n      }\n    }\n\
    \  });\n  return sortedNumsAsNumerals.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738574
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums: number[] = numbers.split('\
    \ ').map(num => {\n        switch (num) {\n            case 'zero':\n        \
    \        return 0;\n            case 'one':\n                return 1;\n     \
    \       case 'two':\n                return 2;\n            case 'three':\n  \
    \              return 3;\n            case 'four':\n                return 4;\n\
    \            case 'five':\n                return 5;\n            case 'six':\n\
    \                return 6;\n            case 'seven':\n                return\
    \ 7;\n            case 'eight':\n                return 8;\n            case 'nine':\n\
    \                return 9;\n            default:\n                return -1;\n\
    \        }\n    });\n    nums.sort((a, b) => a - b);\n    return nums.map(num\
    \ => {\n        switch (num) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \            default:\n                return 'error';\n        }\n    }).join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'error'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpw7h4muk_.js:64:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpw7h4muk_.js:70:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'error',\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738574
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        const num_a = number_to_numeral(a);\n\
    \        const num_b = number_to_numeral(b);\n        return num_a - num_b;\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo1f5200p.ts(9,23): error TS2304: Cannot find name
    ''number_to_numeral''.

    ../../../../../tmp/tmpo1f5200p.ts(10,23): error TS2304: Cannot find name ''number_to_numeral''.

    '
  timestamp: 1659738574
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        return num_to_int(a)\
    \ - num_to_int(b);\n    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8ydg18fa.ts(9,16): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp8ydg18fa.ts(9,32): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738569
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        return nums_to_numbers[a]\
    \ - nums_to_numbers[b];\n    });\n    return nums_sorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe2cb0h3x.ts(9,16): error TS2304: Cannot find name
    ''nums_to_numbers''.

    ../../../../../tmp/tmpe2cb0h3x.ts(9,37): error TS2304: Cannot find name ''nums_to_numbers''.

    '
  timestamp: 1659738574
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const numsSorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n\
    \  return numsSorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738574
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeralMap = {\n   \
    \ zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n\
    \    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const numeralArray\
    \ = numbers.split(\" \");\n  const numeralNumbers = numeralArray.map((numeral)\
    \ => numeralMap[numeral]);\n  const sortedNumbers = numeralNumbers.sort((a, b)\
    \ => a - b);\n  const sortedNumeralArray = sortedNumbers.map((number) => {\n \
    \   for (const numeral in numeralMap) {\n      if (numeralMap[numeral] === number)\
    \ {\n        return numeral;\n      }\n    }\n  });\n  return sortedNumeralArray.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_map = {\n        zero: 0,\n        one: 1,\n        two:\
    \ 2,\n        three: 3,\n        four: 4,\n        five: 5,\n        six: 6,\n\
    \        seven: 7,\n        eight: 8,\n        nine: 9\n    };\n    const nums_sorted\
    \ = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const numMap = {\n     \
    \   zero: 0,\n        one: 1,\n        two: 2,\n        three: 3,\n        four:\
    \ 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n\
    \        nine: 9\n    };\n    const nums = numbers.split(\" \");\n    const numsNum\
    \ = nums.map(num => numMap[num]);\n    const sorted = numsNum.sort((a, b) => a\
    \ - b);\n    const sortedNums = sorted.map(num => {\n        for (const key in\
    \ numMap) {\n            if (numMap[key] === num) {\n                return key;\n\
    \            }\n        }\n    });\n    return sortedNums.join(\" \");\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums = numbers.split(\"\
    \ \");\n    let nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n    \
    \    \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\"\
    : 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n    \
    \    \"nine\": 9\n    };\n    let nums_int = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        nums_int.push(nums_map[nums[i]]);\n    }\n    nums_int.sort(function\
    \ (a, b) { return a - b });\n    let nums_str = [];\n    for (let i = 0; i < nums_int.length;\
    \ i++) {\n        for (let key in nums_map) {\n            if (nums_map[key] ===\
    \ nums_int[i]) {\n                nums_str.push(key);\n            }\n       \
    \ }\n    }\n    return nums_str.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeralToNumber = {\n\
    \    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five:\
    \ 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const numberToNumeral\
    \ = {\n    0: \"zero\",\n    1: \"one\",\n    2: \"two\",\n    3: \"three\",\n\
    \    4: \"four\",\n    5: \"five\",\n    6: \"six\",\n    7: \"seven\",\n    8:\
    \ \"eight\",\n    9: \"nine\",\n  };\n  const numbersArray = numbers.split(\"\
    \ \");\n  const numbersArrayAsNumbers = numbersArray.map((numeral) =>\n    numeralToNumber[numeral]\n\
    \  );\n  const sortedNumbersArray = numbersArrayAsNumbers.sort((a, b) => a - b);\n\
    \  const sortedNumbersArrayAsNumerals = sortedNumbersArray.map((number) =>\n \
    \   numberToNumeral[number]\n  );\n  return sortedNumbersArrayAsNumerals.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums = numbers.split(\"\
    \ \");\n    let nums_to_sort = nums.map(num => {\n        switch (num) {\n   \
    \         case \"zero\":\n                return 0;\n            case \"one\"\
    :\n                return 1;\n            case \"two\":\n                return\
    \ 2;\n            case \"three\":\n                return 3;\n            case\
    \ \"four\":\n                return 4;\n            case \"five\":\n         \
    \       return 5;\n            case \"six\":\n                return 6;\n    \
    \        case \"seven\":\n                return 7;\n            case \"eight\"\
    :\n                return 8;\n            case \"nine\":\n                return\
    \ 9;\n        }\n    });\n    nums_to_sort.sort((a, b) => a - b);\n    let sorted_nums\
    \ = nums_to_sort.map(num => {\n        switch (num) {\n            case 0:\n \
    \               return \"zero\";\n            case 1:\n                return\
    \ \"one\";\n            case 2:\n                return \"two\";\n           \
    \ case 3:\n                return \"three\";\n            case 4:\n          \
    \      return \"four\";\n            case 5:\n                return \"five\"\
    ;\n            case 6:\n                return \"six\";\n            case 7:\n\
    \                return \"seven\";\n            case 8:\n                return\
    \ \"eight\";\n            case 9:\n                return \"nine\";\n        }\n\
    \    });\n    return sorted_nums.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numsMap[a] - numsMap[b]);\n\
    \  return sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n\
    \      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n\
    \      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums: number[] = numbers.split('\
    \ ').map(num => {\n        switch (num) {\n            case 'zero':\n        \
    \        return 0;\n            case 'one':\n                return 1;\n     \
    \       case 'two':\n                return 2;\n            case 'three':\n  \
    \              return 3;\n            case 'four':\n                return 4;\n\
    \            case 'five':\n                return 5;\n            case 'six':\n\
    \                return 6;\n            case 'seven':\n                return\
    \ 7;\n            case 'eight':\n                return 8;\n            case 'nine':\n\
    \                return 9;\n            default:\n                return -1;\n\
    \        }\n    });\n    nums.sort((a, b) => a - b);\n    return nums.map(num\
    \ => {\n        switch (num) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \            default:\n                return '';\n        }\n    }).join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        return nums_to_int(a)\
    \ - nums_to_int(b);\n    });\n    return nums_sorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd4r_t4rp.ts(9,16): error TS2304: Cannot find name
    ''nums_to_int''.

    ../../../../../tmp/tmpd4r_t4rp.ts(9,33): error TS2304: Cannot find name ''nums_to_int''.

    '
  timestamp: 1659738575
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const num_a = numeral_to_number(a);\n\
    \    const num_b = numeral_to_number(b);\n    return num_a - num_b;\n  });\n \
    \ return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0shuw066.ts(9,19): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp0shuw066.ts(10,19): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums = numbers.split(\"\
    \ \");\n    let nums_sorted = nums.sort((a, b) => {\n        return num_to_int(a)\
    \ - num_to_int(b);\n    });\n    return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe981pauv.ts(9,16): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmpe981pauv.ts(9,32): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738575
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  let nums = numbers.split(\"\
    \ \");\n  let nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a) -\
    \ num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo1kx2x5k.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmpo1kx2x5k.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738575
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numMap = {\n    zero:\
    \ 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n  \
    \  six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums = numbers.split(\"\
    \ \");\n  const sorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n  return\
    \ sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numberMap = {\n    zero:\
    \ 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n  \
    \  six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums = numbers.split(\"\
    \ \");\n  const numsSorted = nums.sort((a, b) => numberMap[a] - numberMap[b]);\n\
    \  return numsSorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums: number[] = numbers.split('\
    \ ').map(num => {\n        switch (num) {\n            case 'zero':\n        \
    \        return 0;\n            case 'one':\n                return 1;\n     \
    \       case 'two':\n                return 2;\n            case 'three':\n  \
    \              return 3;\n            case 'four':\n                return 4;\n\
    \            case 'five':\n                return 5;\n            case 'six':\n\
    \                return 6;\n            case 'seven':\n                return\
    \ 7;\n            case 'eight':\n                return 8;\n            case 'nine':\n\
    \                return 9;\n            default:\n                return -1;\n\
    \        }\n    });\n    nums.sort((a, b) => a - b);\n    return nums.map(num\
    \ => {\n        switch (num) {\n            case 0:\n                return 'zero';\n\
    \            case 1:\n                return 'one';\n            case 2:\n   \
    \             return 'two';\n            case 3:\n                return 'three';\n\
    \            case 4:\n                return 'four';\n            case 5:\n  \
    \              return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \            default:\n                return 'invalid';\n        }\n    }).join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'invalid'\n\n\
    should loosely deep-equal\n\n''\n    at test (/tmp/tmp4zq6vb96.js:64:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp4zq6vb96.js:70:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'invalid',\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a)\
    \ - num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6_dkmqt_.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp6_dkmqt_.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        return num_to_int(a)\
    \ - num_to_int(b);\n    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8ydg18fa.ts(9,16): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp8ydg18fa.ts(9,32): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738569
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  let nums = numbers.split(\"\
    \ \");\n  let nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a) -\
    \ num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo1kx2x5k.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmpo1kx2x5k.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738575
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums: string[] = numbers.split(\"\
    \ \");\n  const nums_sorted: string[] = nums.sort((a, b) => {\n    const nums_map:\
    \ { [key: string]: number } = {\n      zero: 0,\n      one: 1,\n      two: 2,\n\
    \      three: 3,\n      four: 4,\n      five: 5,\n      six: 6,\n      seven:\
    \ 7,\n      eight: 8,\n      nine: 9\n    };\n    return nums_map[a] - nums_map[b];\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const numMap = {\n        zero: 0,\n        one: 1,\n        two: 2,\n\
    \        three: 3,\n        four: 4,\n        five: 5,\n        six: 6,\n    \
    \    seven: 7,\n        eight: 8,\n        nine: 9\n    };\n    const sorted =\
    \ nums.sort((a, b) => numMap[a] - numMap[b]);\n    return sorted.join(' ');\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n\
    \  return sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const numsArr = nums.map(num => numsMap[num]);\n  const\
    \ sortedNums = numsArr.sort((a, b) => a - b);\n  const sortedNumsStr = sortedNums.map(num\
    \ => {\n    for (let key in numsMap) {\n      if (numsMap[key] === num) {\n  \
    \      return key;\n      }\n    }\n  });\n  return sortedNumsStr.join(\" \");\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738578
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeralMap = {\n   \
    \ zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n\
    \    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums =\
    \ numbers.split(\" \");\n  const numsSorted = nums.sort((a, b) => numeralMap[a]\
    \ - numeralMap[b]);\n  return numsSorted.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeralMap = {\n   \
    \ zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n\
    \    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums =\
    \ numbers.split(\" \");\n  const numsToSort = nums.map((num) => numeralMap[num]);\n\
    \  const sortedNums = numsToSort.sort((a, b) => a - b);\n  return sortedNums.map((num)\
    \ => {\n    for (const key in numeralMap) {\n      if (numeralMap[key] === num)\
    \ {\n        return key;\n      }\n    }\n  }).join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738579
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numMap = {\n    zero:\
    \ 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n  \
    \  six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums = numbers.split(\"\
    \ \");\n  const sorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n  return\
    \ sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums = numbers.split(\"\
    \ \");\n    let nums_int = nums.map(num => num_to_int(num));\n    let sorted_nums\
    \ = nums_int.sort((a, b) => a - b);\n    let sorted_nums_str = sorted_nums.map(num\
    \ => int_to_num(num));\n    return sorted_nums_str.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpofp5nn5q.ts(8,36): error TS2552: Cannot find name
    ''num_to_int''. Did you mean ''nums_int''?

    ../../../../../tmp/tmpofp5nn5q.ts(10,50): error TS2304: Cannot find name ''int_to_num''.

    '
  timestamp: 1659738579
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_numeral(a)\
    \ - num_to_numeral(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_sitk1uo.ts(9,12): error TS2304: Cannot find name
    ''num_to_numeral''.

    ../../../../../tmp/tmp_sitk1uo.ts(9,32): error TS2304: Cannot find name ''num_to_numeral''.

    '
  timestamp: 1659738579
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const numsSorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n\
    \  return numsSorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738574
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const numMap = {\n     \
    \   zero: 0,\n        one: 1,\n        two: 2,\n        three: 3,\n        four:\
    \ 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n        eight: 8,\n\
    \        nine: 9\n    };\n    const nums = numbers.split(\" \");\n    nums.sort((a,\
    \ b) => numMap[a] - numMap[b]);\n    return nums.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738579
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums: number[] = [];\n\
    \    let nums_str: string[] = numbers.split(\" \");\n    for (let i = 0; i < nums_str.length;\
    \ i++) {\n        nums.push(num_to_int(nums_str[i]));\n    }\n    nums.sort(function(a,\
    \ b) {\n        return a - b;\n    });\n    let sorted_nums: string[] = [];\n\
    \    for (let i = 0; i < nums.length; i++) {\n        sorted_nums.push(int_to_num(nums[i]));\n\
    \    }\n    return sorted_nums.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsyahw00n.ts(10,19): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmpsyahw00n.ts(17,26): error TS2304: Cannot find name ''int_to_num''.

    '
  timestamp: 1659738579
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numMap = {\n    zero:\
    \ 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n  \
    \  six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums = numbers.split(\"\
    \ \");\n  const sorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n  return\
    \ sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        return num_to_int(a)\
    \ - num_to_int(b);\n    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8ydg18fa.ts(9,16): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp8ydg18fa.ts(9,32): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  nums.sort((a, b) => numMap[a] - numMap[b]);\n  return nums.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738579
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        const num_a = number_to_numeral(a);\n\
    \        const num_b = number_to_numeral(b);\n        return num_a - num_b;\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo1f5200p.ts(9,23): error TS2304: Cannot find name
    ''number_to_numeral''.

    ../../../../../tmp/tmpo1f5200p.ts(10,23): error TS2304: Cannot find name ''number_to_numeral''.

    '
  timestamp: 1659738574
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sortedNums = nums.sort((a, b) => numsMap[a] - numsMap[b]);\n\
    \  return sortedNums.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738574
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => num_to_numeral(a) - num_to_numeral(b));\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe_e3vi56.ts(8,43): error TS2304: Cannot find name
    ''num_to_numeral''.

    ../../../../../tmp/tmpe_e3vi56.ts(8,63): error TS2304: Cannot find name ''num_to_numeral''.

    '
  timestamp: 1659738570
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums = numbers.split(\"\
    \ \");\n    let nums_sorted = nums.sort((a, b) => {\n        let num_a = numeral_to_number(a);\n\
    \        let num_b = numeral_to_number(b);\n        return num_a - num_b;\n  \
    \  });\n    return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_crl6wxj.ts(9,21): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp_crl6wxj.ts(10,21): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738579
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        const num_a = numeral_to_number(a);\n\
    \        const num_b = numeral_to_number(b);\n        return num_a - num_b;\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsr704gbf.ts(9,23): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmpsr704gbf.ts(10,23): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738570
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums: number[] = numbers.split('\
    \ ').map(num => {\n    switch (num) {\n      case 'zero':\n        return 0;\n\
    \      case 'one':\n        return 1;\n      case 'two':\n        return 2;\n\
    \      case 'three':\n        return 3;\n      case 'four':\n        return 4;\n\
    \      case 'five':\n        return 5;\n      case 'six':\n        return 6;\n\
    \      case 'seven':\n        return 7;\n      case 'eight':\n        return 8;\n\
    \      case 'nine':\n        return 9;\n      default:\n        return 0;\n  \
    \  }\n  });\n  nums.sort((a, b) => a - b);\n  return nums.map(num => {\n    switch\
    \ (num) {\n      case 0:\n        return 'zero';\n      case 1:\n        return\
    \ 'one';\n      case 2:\n        return 'two';\n      case 3:\n        return\
    \ 'three';\n      case 4:\n        return 'four';\n      case 5:\n        return\
    \ 'five';\n      case 6:\n        return 'six';\n      case 7:\n        return\
    \ 'seven';\n      case 8:\n        return 'eight';\n      case 9:\n        return\
    \ 'nine';\n      default:\n        return 'zero';\n    }\n  }).join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'zero'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmp8tvcftep.js:64:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8tvcftep.js:70:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'zero',\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738579
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738569
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return nums_to_int(a)\
    \ - nums_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfurej61n.ts(9,12): error TS2304: Cannot find name
    ''nums_to_int''.

    ../../../../../tmp/tmpfurej61n.ts(9,29): error TS2304: Cannot find name ''nums_to_int''.

    '
  timestamp: 1659738569
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        const num_a = numeral_to_number(a);\n\
    \        const num_b = numeral_to_number(b);\n        return num_a - num_b;\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsr704gbf.ts(9,23): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmpsr704gbf.ts(10,23): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738570
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a)\
    \ - num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6_dkmqt_.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp6_dkmqt_.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738565
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsToSort = nums.map((num) => {\n    switch (num) {\n      case\
    \ \"zero\":\n        return 0;\n      case \"one\":\n        return 1;\n     \
    \ case \"two\":\n        return 2;\n      case \"three\":\n        return 3;\n\
    \      case \"four\":\n        return 4;\n      case \"five\":\n        return\
    \ 5;\n      case \"six\":\n        return 6;\n      case \"seven\":\n        return\
    \ 7;\n      case \"eight\":\n        return 8;\n      case \"nine\":\n       \
    \ return 9;\n      default:\n        return 0;\n    }\n  });\n  numsToSort.sort((a,\
    \ b) => a - b);\n  const sortedNums = numsToSort.map((num) => {\n    switch (num)\
    \ {\n      case 0:\n        return \"zero\";\n      case 1:\n        return \"\
    one\";\n      case 2:\n        return \"two\";\n      case 3:\n        return\
    \ \"three\";\n      case 4:\n        return \"four\";\n      case 5:\n       \
    \ return \"five\";\n      case 6:\n        return \"six\";\n      case 7:\n  \
    \      return \"seven\";\n      case 8:\n        return \"eight\";\n      case\
    \ 9:\n        return \"nine\";\n      default:\n        return \"zero\";\n   \
    \ }\n  });\n  return sortedNums.join(\" \");\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'zero'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpckgvbfxj.js:66:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpckgvbfxj.js:72:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'zero',\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738579
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return nums_to_numbers[a]\
    \ - nums_to_numbers[b];\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphb7n2jyu.ts(9,12): error TS2304: Cannot find name
    ''nums_to_numbers''.

    ../../../../../tmp/tmphb7n2jyu.ts(9,33): error TS2304: Cannot find name ''nums_to_numbers''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        const num_a = numeral_to_number(a);\n\
    \        const num_b = numeral_to_number(b);\n        return num_a - num_b;\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsr704gbf.ts(9,23): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmpsr704gbf.ts(10,23): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738570
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const numMap = {\n        zero: 0,\n        one: 1,\n        two: 2,\n\
    \        three: 3,\n        four: 4,\n        five: 5,\n        six: 6,\n    \
    \    seven: 7,\n        eight: 8,\n        nine: 9\n    };\n    return nums.sort((a,\
    \ b) => numMap[a] - numMap[b]).join(' ');\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738580
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numMap = {\n    zero:\
    \ 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n  \
    \  six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums = numbers.split(\"\
    \ \");\n  const numsSorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n  return\
    \ numsSorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums: number[] = numbers.split('\
    \ ').map(n => {\n    switch (n) {\n      case 'zero':\n        return 0;\n   \
    \   case 'one':\n        return 1;\n      case 'two':\n        return 2;\n   \
    \   case 'three':\n        return 3;\n      case 'four':\n        return 4;\n\
    \      case 'five':\n        return 5;\n      case 'six':\n        return 6;\n\
    \      case 'seven':\n        return 7;\n      case 'eight':\n        return 8;\n\
    \      case 'nine':\n        return 9;\n      default:\n        return -1;\n \
    \   }\n  });\n  nums.sort((a, b) => a - b);\n  return nums.map(n => {\n    switch\
    \ (n) {\n      case 0:\n        return 'zero';\n      case 1:\n        return\
    \ 'one';\n      case 2:\n        return 'two';\n      case 3:\n        return\
    \ 'three';\n      case 4:\n        return 'four';\n      case 5:\n        return\
    \ 'five';\n      case 6:\n        return 'six';\n      case 7:\n        return\
    \ 'seven';\n      case 8:\n        return 'eight';\n      case 9:\n        return\
    \ 'nine';\n      default:\n        return 'error';\n    }\n  }).join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'error'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpsycylb3z.js:64:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsycylb3z.js:70:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'error',\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738580
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const num_a = numeral_to_number(a);\n\
    \    const num_b = numeral_to_number(b);\n    return num_a - num_b;\n  });\n \
    \ return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0shuw066.ts(9,19): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp0shuw066.ts(10,19): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_numeral(a)\
    \ - num_to_numeral(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_sitk1uo.ts(9,12): error TS2304: Cannot find name
    ''num_to_numeral''.

    ../../../../../tmp/tmp_sitk1uo.ts(9,32): error TS2304: Cannot find name ''num_to_numeral''.

    '
  timestamp: 1659738579
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const numsSorted = nums.sort((a, b) => numsMap[a] - numsMap[b]);\n\
    \  return numsSorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a)\
    \ - num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6_dkmqt_.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp6_dkmqt_.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_numbers = nums.map(num => {\n    switch (num) {\n      case\
    \ \"zero\":\n        return 0;\n      case \"one\":\n        return 1;\n     \
    \ case \"two\":\n        return 2;\n      case \"three\":\n        return 3;\n\
    \      case \"four\":\n        return 4;\n      case \"five\":\n        return\
    \ 5;\n      case \"six\":\n        return 6;\n      case \"seven\":\n        return\
    \ 7;\n      case \"eight\":\n        return 8;\n      case \"nine\":\n       \
    \ return 9;\n    }\n  });\n  const sorted_nums = nums_numbers.sort((a, b) => a\
    \ - b);\n  const sorted_words = sorted_nums.map(num => {\n    switch (num) {\n\
    \      case 0:\n        return \"zero\";\n      case 1:\n        return \"one\"\
    ;\n      case 2:\n        return \"two\";\n      case 3:\n        return \"three\"\
    ;\n      case 4:\n        return \"four\";\n      case 5:\n        return \"five\"\
    ;\n      case 6:\n        return \"six\";\n      case 7:\n        return \"seven\"\
    ;\n      case 8:\n        return \"eight\";\n      case 9:\n        return \"\
    nine\";\n    }\n  });\n  return sorted_words.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738579
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const numsMap = {\n        zero: 0,\n        one: 1,\n        two:\
    \ 2,\n        three: 3,\n        four: 4,\n        five: 5,\n        six: 6,\n\
    \        seven: 7,\n        eight: 8,\n        nine: 9\n    };\n    const sortedNums\
    \ = nums.sort((a, b) => numsMap[a] - numsMap[b]);\n    return sortedNums.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738579
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsToSort = nums.map((num) => numToInt(num));\n  const sortedNums\
    \ = numsToSort.sort((a, b) => a - b);\n  const sortedNumsToWords = sortedNums.map((num)\
    \ => intToNum(num));\n  return sortedNumsToWords.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp00qgjxdk.ts(8,40): error TS2304: Cannot find name
    ''numToInt''.

    ../../../../../tmp/tmp00qgjxdk.ts(10,53): error TS2304: Cannot find name ''intToNum''.

    '
  timestamp: 1659738579
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        const num_a = convert_to_number(a);\n\
    \        const num_b = convert_to_number(b);\n        return num_a - num_b;\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq54nnh79.ts(9,23): error TS2304: Cannot find name
    ''convert_to_number''.

    ../../../../../tmp/tmpq54nnh79.ts(10,23): error TS2304: Cannot find name ''convert_to_number''.

    '
  timestamp: 1659738579
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n\
    \      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n\
    \      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const numeral_map = {\n\
    \        'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n\
    \        'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n\
    \        'eight': 8,\n        'nine': 9\n    };\n    const nums = numbers.split('\
    \ ');\n    const nums_int = nums.map(num => numeral_map[num]);\n    const sorted_nums\
    \ = nums_int.sort((a, b) => a - b);\n    const sorted_nums_str = sorted_nums.map(num\
    \ => Object.keys(numeral_map).find(key => numeral_map[key] === num));\n    return\
    \ sorted_nums_str.join(' ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8445zpdp.ts(22,77): error TS2339: Property ''find''
    does not exist on type ''string[]''.

    '
  timestamp: 1659738579
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums: string[] = numbers.split(\"\
    \ \");\n  const numsMap: Map<string, number> = new Map([\n    [\"zero\", 0],\n\
    \    [\"one\", 1],\n    [\"two\", 2],\n    [\"three\", 3],\n    [\"four\", 4],\n\
    \    [\"five\", 5],\n    [\"six\", 6],\n    [\"seven\", 7],\n    [\"eight\", 8],\n\
    \    [\"nine\", 9],\n  ]);\n  const numsArr: number[] = nums.map((num) => numsMap.get(num));\n\
    \  numsArr.sort((a, b) => a - b);\n  const sortedNums: string[] = numsArr.map((num)\
    \ => {\n    for (const [key, value] of numsMap.entries()) {\n      if (value ===\
    \ num) {\n        return key;\n      }\n    }\n  });\n  return sortedNums.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpiuc1047t.ts(8,18): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpiuc1047t.ts(8,44): error TS2583: Cannot find name ''Map''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659738579
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const numsArr = nums.map(num => numsMap[num]);\n  const\
    \ sortedNums = numsArr.sort((a, b) => a - b);\n  const sortedNumsStr = sortedNums.map(num\
    \ => {\n    for (let key in numsMap) {\n      if (numsMap[key] === num) {\n  \
    \      return key;\n      }\n    }\n  });\n  return sortedNumsStr.join(\" \");\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738578
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted_nums = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return sorted_nums.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        return nums_to_int(a)\
    \ - nums_to_int(b);\n    });\n    return nums_sorted.join(' ');\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd4r_t4rp.ts(9,16): error TS2304: Cannot find name
    ''nums_to_int''.

    ../../../../../tmp/tmpd4r_t4rp.ts(9,33): error TS2304: Cannot find name ''nums_to_int''.

    '
  timestamp: 1659738575
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums: string[] = numbers.split('\
    \ ');\n    const nums_map: Map<string, number> = new Map([\n        ['zero', 0],\n\
    \        ['one', 1],\n        ['two', 2],\n        ['three', 3],\n        ['four',\
    \ 4],\n        ['five', 5],\n        ['six', 6],\n        ['seven', 7],\n    \
    \    ['eight', 8],\n        ['nine', 9]\n    ]);\n    const nums_sorted: string[]\
    \ = nums.sort((a, b) => nums_map.get(a) - nums_map.get(b));\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9uxvoa9e.ts(8,21): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp9uxvoa9e.ts(8,47): error TS2583: Cannot find name ''Map''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659738580
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a)\
    \ - num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6_dkmqt_.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp6_dkmqt_.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a)\
    \ - num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6_dkmqt_.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp6_dkmqt_.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return nums_to_int(a)\
    \ - nums_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfurej61n.ts(9,12): error TS2304: Cannot find name
    ''nums_to_int''.

    ../../../../../tmp/tmpfurej61n.ts(9,29): error TS2304: Cannot find name ''nums_to_int''.

    '
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const num_a = convert_to_number(a);\n\
    \    const num_b = convert_to_number(b);\n    return num_a - num_b;\n  });\n \
    \ return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpku_uu7sd.ts(9,19): error TS2304: Cannot find name
    ''convert_to_number''.

    ../../../../../tmp/tmpku_uu7sd.ts(10,19): error TS2304: Cannot find name ''convert_to_number''.

    '
  timestamp: 1659738580
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        const nums = ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\n \
    \       return nums.indexOf(a) - nums.indexOf(b);\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738580
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_map = {\n        zero: 0,\n        one: 1,\n        two:\
    \ 2,\n        three: 3,\n        four: 4,\n        five: 5,\n        six: 6,\n\
    \        seven: 7,\n        eight: 8,\n        nine: 9\n    };\n    const nums_sorted\
    \ = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738575
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        const num_a = convert_numeral_to_number(a);\n\
    \        const num_b = convert_numeral_to_number(b);\n        return num_a - num_b;\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1rhcq3os.ts(9,23): error TS2304: Cannot find name
    ''convert_numeral_to_number''.

    ../../../../../tmp/tmp1rhcq3os.ts(10,23): error TS2304: Cannot find name ''convert_numeral_to_number''.

    '
  timestamp: 1659738579
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeralMap = {\n   \
    \ zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n\
    \    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums =\
    \ numbers.split(\" \");\n  const sorted = nums.sort((a, b) => {\n    return numeralMap[a]\
    \ - numeralMap[b];\n  });\n  return sorted.join(\" \");\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738580
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums: string[] = numbers.split('\
    \ ');\n    const nums_int: number[] = nums.map(num => {\n        switch (num)\
    \ {\n            case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n            default:\n\
    \                return -1;\n        }\n    });\n    nums_int.sort((a, b) => a\
    \ - b);\n    return nums_int.map(num => {\n        switch (num) {\n          \
    \  case 0:\n                return 'zero';\n            case 1:\n            \
    \    return 'one';\n            case 2:\n                return 'two';\n     \
    \       case 3:\n                return 'three';\n            case 4:\n      \
    \          return 'four';\n            case 5:\n                return 'five';\n\
    \            case 6:\n                return 'six';\n            case 7:\n   \
    \             return 'seven';\n            case 8:\n                return 'eight';\n\
    \            case 9:\n                return 'nine';\n            default:\n \
    \               return '-1';\n        }\n    }).join(' ');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'-1'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmpcowxbdjg.js:65:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcowxbdjg.js:71:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: '-1',\n  expected:\
    \ '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738582
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums: string[] = numbers.split(\"\
    \ \");\n  const nums_map: Map<string, number> = new Map([\n    [\"zero\", 0],\n\
    \    [\"one\", 1],\n    [\"two\", 2],\n    [\"three\", 3],\n    [\"four\", 4],\n\
    \    [\"five\", 5],\n    [\"six\", 6],\n    [\"seven\", 7],\n    [\"eight\", 8],\n\
    \    [\"nine\", 9],\n  ]);\n  const sorted_nums: number[] = nums\n    .map((num)\
    \ => nums_map.get(num))\n    .sort((a, b) => a - b);\n  return sorted_nums.map((num)\
    \ => nums_map.get(num)).join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuuvqtdqc.ts(8,19): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpuuvqtdqc.ts(8,45): error TS2583: Cannot find name ''Map''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1659738582
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const numeralMap = {\n   \
    \ zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n\
    \    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  };\n  const nums =\
    \ numbers.split(\" \");\n  const numsSorted = nums.sort((a, b) => {\n    return\
    \ numeralMap[a] - numeralMap[b];\n  });\n  return numsSorted.join(\" \");\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a)\
    \ - num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6_dkmqt_.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp6_dkmqt_.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums = numbers.split(\"\
    \ \");\n    let nums_sorted = nums.sort((a, b) => {\n        return num_to_int(a)\
    \ - num_to_int(b);\n    });\n    return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe981pauv.ts(9,16): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmpe981pauv.ts(9,32): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738575
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const num_a = number_to_numeral(a);\n\
    \    const num_b = number_to_numeral(b);\n    return num_a - num_b;\n  });\n \
    \ return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpceuj351d.ts(9,19): error TS2304: Cannot find name
    ''number_to_numeral''.

    ../../../../../tmp/tmpceuj351d.ts(10,19): error TS2304: Cannot find name ''number_to_numeral''.

    '
  timestamp: 1659738582
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a)\
    \ - num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6_dkmqt_.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp6_dkmqt_.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n\
    \      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n\
    \      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        const num_a = number_to_numeral(a);\n\
    \        const num_b = number_to_numeral(b);\n        return num_a - num_b;\n\
    \    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo1f5200p.ts(9,23): error TS2304: Cannot find name
    ''number_to_numeral''.

    ../../../../../tmp/tmpo1f5200p.ts(10,23): error TS2304: Cannot find name ''number_to_numeral''.

    '
  timestamp: 1659738574
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const nums = {\n    \
    \  zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n \
    \     five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine: 9\n\
    \    };\n    return nums[a] - nums[b];\n  });\n  return nums_sorted.join(\" \"\
    );\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738582
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return nums_to_int(a)\
    \ - nums_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfurej61n.ts(9,12): error TS2304: Cannot find name
    ''nums_to_int''.

    ../../../../../tmp/tmpfurej61n.ts(9,29): error TS2304: Cannot find name ''nums_to_int''.

    '
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        if (a === 'zero')\
    \ {\n            return -1;\n        } else if (b === 'zero') {\n            return\
    \ 1;\n        } else if (a === 'one') {\n            return -1;\n        } else\
    \ if (b === 'one') {\n            return 1;\n        } else if (a === 'two') {\n\
    \            return -1;\n        } else if (b === 'two') {\n            return\
    \ 1;\n        } else if (a === 'three') {\n            return -1;\n        } else\
    \ if (b === 'three') {\n            return 1;\n        } else if (a === 'four')\
    \ {\n            return -1;\n        } else if (b === 'four') {\n            return\
    \ 1;\n        } else if (a === 'five') {\n            return -1;\n        } else\
    \ if (b === 'five') {\n            return 1;\n        } else if (a === 'six')\
    \ {\n            return -1;\n        } else if (b === 'six') {\n            return\
    \ 1;\n        } else if (a === 'seven') {\n            return -1;\n        } else\
    \ if (b === 'seven') {\n            return 1;\n        } else if (a === 'eight')\
    \ {\n            return -1;\n        } else if (b === 'eight') {\n           \
    \ return 1;\n        } else if (a === 'nine') {\n            return -1;\n    \
    \    } else if (b === 'nine') {\n            return 1;\n        } else {\n   \
    \         return 0;\n        }\n    });\n    return nums_sorted.join(' ');\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738582
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted_nums = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return sorted_nums.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsToSort = nums.map((num) => {\n    switch (num) {\n      case\
    \ \"zero\":\n        return 0;\n      case \"one\":\n        return 1;\n     \
    \ case \"two\":\n        return 2;\n      case \"three\":\n        return 3;\n\
    \      case \"four\":\n        return 4;\n      case \"five\":\n        return\
    \ 5;\n      case \"six\":\n        return 6;\n      case \"seven\":\n        return\
    \ 7;\n      case \"eight\":\n        return 8;\n      case \"nine\":\n       \
    \ return 9;\n      default:\n        return 0;\n    }\n  });\n  const sorted =\
    \ numsToSort.sort((a, b) => a - b);\n  return sorted.map((num) => {\n    switch\
    \ (num) {\n      case 0:\n        return \"zero\";\n      case 1:\n        return\
    \ \"one\";\n      case 2:\n        return \"two\";\n      case 3:\n        return\
    \ \"three\";\n      case 4:\n        return \"four\";\n      case 5:\n       \
    \ return \"five\";\n      case 6:\n        return \"six\";\n      case 7:\n  \
    \      return \"seven\";\n      case 8:\n        return \"eight\";\n      case\
    \ 9:\n        return \"nine\";\n      default:\n        return \"zero\";\n   \
    \ }\n  }).join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'zero'\n\nshould\
    \ loosely deep-equal\n\n''\n    at test (/tmp/tmp72f3t524.js:65:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp72f3t524.js:71:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'zero',\n\
    \  expected: '',\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738582
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const nums_map = {\n\
    \      zero: 0,\n      one: 1,\n      two: 2,\n      three: 3,\n      four: 4,\n\
    \      five: 5,\n      six: 6,\n      seven: 7,\n      eight: 8,\n      nine:\
    \ 9\n    };\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const numeral_map = {\n\
    \        zero: 0,\n        one: 1,\n        two: 2,\n        three: 3,\n     \
    \   four: 4,\n        five: 5,\n        six: 6,\n        seven: 7,\n        eight:\
    \ 8,\n        nine: 9\n    };\n    const nums = numbers.split(\" \").map(num =>\
    \ numeral_map[num]);\n    nums.sort((a, b) => a - b);\n    return nums.map(num\
    \ => Object.keys(numeral_map).find(key => numeral_map[key] === num)).join(\" \"\
    );\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxi3b1nc7.ts(21,53): error TS2339: Property ''find''
    does not exist on type ''string[]''.

    '
  timestamp: 1659738574
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        const nums_map =\
    \ {\n            zero: 0,\n            one: 1,\n            two: 2,\n        \
    \    three: 3,\n            four: 4,\n            five: 5,\n            six: 6,\n\
    \            seven: 7,\n            eight: 8,\n            nine: 9\n        };\n\
    \        return nums_map[a] - nums_map[b];\n    });\n    return nums_sorted.join('\
    \ ');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numMap[a] - numMap[b]);\n\
    \  return sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738569
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a)\
    \ - num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6_dkmqt_.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp6_dkmqt_.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738565
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted_nums = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return sorted_nums.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738570
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    if (a === \"zero\") {\n\
    \      return -1;\n    } else if (b === \"zero\") {\n      return 1;\n    } else\
    \ if (a === \"one\") {\n      return -1;\n    } else if (b === \"one\") {\n  \
    \    return 1;\n    } else if (a === \"two\") {\n      return -1;\n    } else\
    \ if (b === \"two\") {\n      return 1;\n    } else if (a === \"three\") {\n \
    \     return -1;\n    } else if (b === \"three\") {\n      return 1;\n    } else\
    \ if (a === \"four\") {\n      return -1;\n    } else if (b === \"four\") {\n\
    \      return 1;\n    } else if (a === \"five\") {\n      return -1;\n    } else\
    \ if (b === \"five\") {\n      return 1;\n    } else if (a === \"six\") {\n  \
    \    return -1;\n    } else if (b === \"six\") {\n      return 1;\n    } else\
    \ if (a === \"seven\") {\n      return -1;\n    } else if (b === \"seven\") {\n\
    \      return 1;\n    } else if (a === \"eight\") {\n      return -1;\n    } else\
    \ if (b === \"eight\") {\n      return 1;\n    } else if (a === \"nine\") {\n\
    \      return -1;\n    } else if (b === \"nine\") {\n      return 1;\n    }\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738582
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const sorted = nums.sort((a, b) => numsMap[a] - numsMap[b]);\n\
    \  return sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums = numbers.split(\"\
    \ \");\n    let nums_int = [];\n    for (let i = 0; i < nums.length; i++) {\n\
    \        nums_int.push(numeral_to_int(nums[i]));\n    }\n    nums_int.sort(function\
    \ (a, b) { return a - b });\n    let nums_str = [];\n    for (let i = 0; i < nums_int.length;\
    \ i++) {\n        nums_str.push(int_to_numeral(nums_int[i]));\n    }\n    return\
    \ nums_str.join(\" \");\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvk86pj0u.ts(10,23): error TS2304: Cannot find name
    ''numeral_to_int''.

    ../../../../../tmp/tmpvk86pj0u.ts(15,23): error TS2304: Cannot find name ''int_to_numeral''.

    '
  timestamp: 1659738582
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_map = {\n        zero: 0,\n        one: 1,\n        two:\
    \ 2,\n        three: 3,\n        four: 4,\n        five: 5,\n        six: 6,\n\
    \        seven: 7,\n        eight: 8,\n        nine: 9\n    };\n    const sorted_nums\
    \ = nums.sort((a, b) => {\n        return nums_map[a] - nums_map[b];\n    });\n\
    \    return sorted_nums.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738582
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const numsMapReverse = {\n    0: \"zero\",\n    1: \"one\"\
    ,\n    2: \"two\",\n    3: \"three\",\n    4: \"four\",\n    5: \"five\",\n  \
    \  6: \"six\",\n    7: \"seven\",\n    8: \"eight\",\n    9: \"nine\"\n  };\n\
    \  const numsSorted = nums.map(num => numsMap[num]).sort((a, b) => a - b);\n \
    \ return numsSorted.map(num => numsMapReverse[num]).join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738582
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        return num_to_int(a)\
    \ - num_to_int(b);\n    });\n    return nums_sorted.join(' ');\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8ydg18fa.ts(9,16): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp8ydg18fa.ts(9,32): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738569
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums: number[] = numbers.split(\"\
    \ \").map(num => {\n        switch (num) {\n            case \"zero\":\n     \
    \           return 0;\n            case \"one\":\n                return 1;\n\
    \            case \"two\":\n                return 2;\n            case \"three\"\
    :\n                return 3;\n            case \"four\":\n                return\
    \ 4;\n            case \"five\":\n                return 5;\n            case\
    \ \"six\":\n                return 6;\n            case \"seven\":\n         \
    \       return 7;\n            case \"eight\":\n                return 8;\n  \
    \          case \"nine\":\n                return 9;\n            default:\n \
    \               return -1;\n        }\n    });\n    nums.sort((a, b) => a - b);\n\
    \    return nums.map(num => {\n        switch (num) {\n            case 0:\n \
    \               return \"zero\";\n            case 1:\n                return\
    \ \"one\";\n            case 2:\n                return \"two\";\n           \
    \ case 3:\n                return \"three\";\n            case 4:\n          \
    \      return \"four\";\n            case 5:\n                return \"five\"\
    ;\n            case 6:\n                return \"six\";\n            case 7:\n\
    \                return \"seven\";\n            case 8:\n                return\
    \ \"eight\";\n            case 9:\n                return \"nine\";\n        \
    \    default:\n                return \"\";\n        }\n    }).join(\" \");\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738582
- exit_code: 1
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    const nums = numbers.split('\
    \ ');\n    const nums_sorted = nums.sort((a, b) => {\n        const num_a = parseInt(a);\n\
    \        const num_b = parseInt(b);\n        return num_a - num_b;\n    });\n\
    \    return nums_sorted.join(' ');\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n'five zero four\
    \ seven nine eight'\n\nshould loosely deep-equal\n\n'zero four five seven eight\
    \ nine'\n    at test (/tmp/tmpdx5uk6wx.js:21:12)\n    at Object.<anonymous> (/tmp/tmpdx5uk6wx.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five zero\
    \ four seven nine eight',\n  expected: 'zero four five seven eight nine',\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659738582
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const numsMap = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const numsSorted = nums.sort((a, b) => numsMap[a] - numsMap[b]);\n\
    \  return numsSorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_int = nums.map(num => num_to_int(num));\n  const sorted_nums\
    \ = nums_int.sort((a, b) => a - b);\n  const sorted_nums_str = sorted_nums.map(num\
    \ => int_to_num(num));\n  return sorted_nums_str.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa6noxzen.ts(8,36): error TS2552: Cannot find name
    ''num_to_int''. Did you mean ''nums_int''?

    ../../../../../tmp/tmpa6noxzen.ts(10,50): error TS2304: Cannot find name ''int_to_num''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums: string[] = numbers.split(\"\
    \ \");\n  const nums_sorted: string[] = nums.sort((a, b) => {\n    const num_a:\
    \ number = numeral_to_number(a);\n    const num_b: number = numeral_to_number(b);\n\
    \    return num_a - num_b;\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpiwzfmybe.ts(9,27): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmpiwzfmybe.ts(10,27): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738582
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return nums_to_int(a)\
    \ - nums_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfurej61n.ts(9,12): error TS2304: Cannot find name
    ''nums_to_int''.

    ../../../../../tmp/tmpfurej61n.ts(9,29): error TS2304: Cannot find name ''nums_to_int''.

    '
  timestamp: 1659738569
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    const num_a = numeral_to_number(a);\n\
    \    const num_b = numeral_to_number(b);\n    return num_a - num_b;\n  });\n \
    \ return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0shuw066.ts(9,19): error TS2304: Cannot find name
    ''numeral_to_number''.

    ../../../../../tmp/tmp0shuw066.ts(10,19): error TS2304: Cannot find name ''numeral_to_number''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_sorted = nums.sort((a, b) => {\n    return num_to_int(a)\
    \ - num_to_int(b);\n  });\n  return nums_sorted.join(\" \");\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6_dkmqt_.ts(9,12): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmp6_dkmqt_.ts(9,28): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738565
- exit_code: 2
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n    let nums = numbers.split(\"\
    \ \");\n    let nums_sorted = nums.sort((a, b) => {\n        return num_to_int(a)\
    \ - num_to_int(b);\n    });\n    return nums_sorted.join(\" \");\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\"\
    );\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe981pauv.ts(9,16): error TS2304: Cannot find name
    ''num_to_int''.

    ../../../../../tmp/tmpe981pauv.ts(9,32): error TS2304: Cannot find name ''num_to_int''.

    '
  timestamp: 1659738575
- exit_code: 0
  program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers: string): string {\n  const nums = numbers.split(\"\
    \ \");\n  const nums_map = {\n    zero: 0,\n    one: 1,\n    two: 2,\n    three:\
    \ 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n\
    \    nine: 9\n  };\n  const nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \  return nums_sorted.join(\" \");\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659738565

name: HumanEval_95_check_dict_case
language: ts
prompt: "//Given an object, return true if all keys are strings in lower \n// case\
  \ or all keys are strings in upper case, else return false.\n// The function should\
  \ return false is the given object is empty.\n// Examples:\n// >>> check_dict_case({\"\
  a\": \"apple\", \"b\": \"banana\"})\n// true\n// >>> check_dict_case({\"a\": \"\
  apple\", \"A\": \"banana\", \"B\": \"banana\"})\n// false\n// >>> check_dict_case({\"\
  a\": \"apple\", 8: \"banana\", \"a\": \"apple\"})\n// false\n// >>> check_dict_case({\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"})\n// false\n// >>> check_dict_case({\"\
  STATE\": \"NC\", \"ZIP\": \"12345\"})\n// true\nfunction check_dict_case(dict: {[key:\
  \ string]: string}): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = check_dict_case;\n  assert.deepEqual(candidate({\"\
  p\": \"pineapple\", \"b\": \"banana\"}),true);\n  assert.deepEqual(candidate({\"\
  p\": \"pineapple\", \"A\": \"banana\", \"B\": \"banana\"}),false);\n  assert.deepEqual(candidate({\"\
  p\": \"pineapple\", \"5\": \"banana\", \"a\": \"apple\"}),false);\n  assert.deepEqual(candidate({\"\
  Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"}),false);\n  assert.deepEqual(candidate({\"\
  STATE\": \"NC\", \"ZIP\": \"12345\"}),true);\n  assert.deepEqual(candidate({\"fruit\"\
  : \"Orange\", \"taste\": \"Sweet\"}),true);\n  assert.deepEqual(candidate({}),false);\n\
  }\n\ntest();"
completions: ["    let lowerCase = true;\n    let upperCase = true;\n    for (let\
    \ key in dict) {\n        if (key.toLowerCase() !== key) {\n            lowerCase\
    \ = false;\n        }\n        if (key.toUpperCase() !== key) {\n            upperCase\
    \ = false;\n        }\n    }\n    return lowerCase || upperCase;\n}\n", "    //\
    \ check if dict is empty\n    if (Object.keys(dict).length === 0) {\n        return\
    \ false;\n    }\n    // check if all keys are lower case\n    if (Object.keys(dict).every(key\
    \ => key === key.toLowerCase())) {\n        return true;\n    }\n    // check\
    \ if all keys are upper case\n    if (Object.keys(dict).every(key => key === key.toUpperCase()))\
    \ {\n        return true;\n    }\n    return false;\n}\n", "    let lowerCase\
    \ = true;\n    let upperCase = true;\n    for (let key in dict) {\n        if\
    \ (key.toLowerCase() !== key) {\n            lowerCase = false;\n        }\n \
    \       if (key.toUpperCase() !== key) {\n            upperCase = false;\n   \
    \     }\n    }\n    return lowerCase || upperCase;\n}\n", "    let keys = Object.keys(dict);\n\
    \    if (keys.length === 0) {\n        return false;\n    }\n    let isUpper =\
    \ keys[0].toUpperCase() === keys[0];\n    for (let key of keys) {\n        if\
    \ (isUpper && key.toUpperCase() !== key) {\n            return false;\n      \
    \  }\n        if (!isUpper && key.toLowerCase() !== key) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    let lowerCase = true;\n\
    \    let upperCase = true;\n    for (let key in dict) {\n        if (key.toLowerCase()\
    \ !== key) {\n            lowerCase = false;\n        }\n        if (key.toUpperCase()\
    \ !== key) {\n            upperCase = false;\n        }\n    }\n    return lowerCase\
    \ || upperCase;\n}\n", "    let lowerCase = true;\n    let upperCase = true;\n\
    \    for (let key in dict) {\n        if (key.toLowerCase() !== key) {\n     \
    \       lowerCase = false;\n        }\n        if (key.toUpperCase() !== key)\
    \ {\n            upperCase = false;\n        }\n    }\n    return lowerCase ||\
    \ upperCase;\n}\n", "    let lowerCase = true;\n    let upperCase = true;\n  \
    \  for (let key in dict) {\n        if (key.toLowerCase() !== key) {\n       \
    \     lowerCase = false;\n        }\n        if (key.toUpperCase() !== key) {\n\
    \            upperCase = false;\n        }\n    }\n    return lowerCase || upperCase;\n\
    }\n", "    let keys = Object.keys(dict);\n    let upper = keys.every(key => key.toUpperCase()\
    \ === key);\n    let lower = keys.every(key => key.toLowerCase() === key);\n \
    \   return upper || lower;\n}\n", "    let keys: string[] = Object.keys(dict);\n\
    \    let lower: boolean = true;\n    let upper: boolean = true;\n    for (let\
    \ i: number = 0; i < keys.length; i++) {\n        if (keys[i] !== keys[i].toLowerCase())\
    \ {\n            lower = false;\n        }\n        if (keys[i] !== keys[i].toUpperCase())\
    \ {\n            upper = false;\n        }\n    }\n    return lower || upper;\n\
    }\n", "    let lowerCase: boolean = true;\n    let upperCase: boolean = true;\n\
    \    for (let key in dict) {\n        if (key.toLowerCase() !== key) {\n     \
    \       lowerCase = false;\n        }\n        if (key.toUpperCase() !== key)\
    \ {\n            upperCase = false;\n        }\n    }\n    return lowerCase ||\
    \ upperCase;\n}\n", "    if (Object.keys(dict).length === 0) {\n        return\
    \ false;\n    }\n    let lowercase = true;\n    let uppercase = true;\n    for\
    \ (let key in dict) {\n        if (key.toLowerCase() !== key) {\n            lowercase\
    \ = false;\n        }\n        if (key.toUpperCase() !== key) {\n            uppercase\
    \ = false;\n        }\n    }\n    return lowercase || uppercase;\n}\n", "    let\
    \ upper = true;\n    let lower = true;\n    for (let key in dict) {\n        if\
    \ (key.toUpperCase() !== key) {\n            upper = false;\n        }\n     \
    \   if (key.toLowerCase() !== key) {\n            lower = false;\n        }\n\
    \    }\n    return upper || lower;\n}\n", "    let lower_case: boolean = true;\n\
    \    let upper_case: boolean = true;\n    for (let key in dict) {\n        if\
    \ (key.toLowerCase() !== key) {\n            lower_case = false;\n        }\n\
    \        if (key.toUpperCase() !== key) {\n            upper_case = false;\n \
    \       }\n    }\n    return lower_case || upper_case;\n}\n", "    let keys =\
    \ Object.keys(dict);\n    if (keys.length === 0) {\n        return false;\n  \
    \  }\n    let lower = true;\n    let upper = true;\n    for (let key of keys)\
    \ {\n        if (key.toLowerCase() !== key) {\n            lower = false;\n  \
    \      }\n        if (key.toUpperCase() !== key) {\n            upper = false;\n\
    \        }\n    }\n    return lower || upper;\n}\n", "    let lower = true;\n\
    \    let upper = true;\n    for (let key in dict) {\n        if (key.toLowerCase()\
    \ !== key) {\n            lower = false;\n        }\n        if (key.toUpperCase()\
    \ !== key) {\n            upper = false;\n        }\n    }\n    return lower ||\
    \ upper;\n}\n", "    if (Object.keys(dict).length === 0) {\n        return false;\n\
    \    }\n    let upper = true;\n    let lower = true;\n    for (let key in dict)\
    \ {\n        if (key.toUpperCase() !== key) {\n            upper = false;\n  \
    \      }\n        if (key.toLowerCase() !== key) {\n            lower = false;\n\
    \        }\n    }\n    return upper || lower;\n}\n", "    let lowerCase: boolean\
    \ = true;\n    let upperCase: boolean = true;\n    for (let key in dict) {\n \
    \       if (key.toLowerCase() !== key) {\n            lowerCase = false;\n   \
    \     }\n        if (key.toUpperCase() !== key) {\n            upperCase = false;\n\
    \        }\n    }\n    return lowerCase || upperCase;\n}\n", "    let lower =\
    \ true;\n    let upper = true;\n    for (let key in dict) {\n        if (key.toLowerCase()\
    \ !== key) {\n            lower = false;\n        }\n        if (key.toUpperCase()\
    \ !== key) {\n            upper = false;\n        }\n    }\n    return lower ||\
    \ upper;\n}\n", "    if (Object.keys(dict).length === 0) {\n        return false;\n\
    \    }\n    let upperCase = true;\n    let lowerCase = true;\n    for (let key\
    \ in dict) {\n        if (key !== key.toUpperCase()) {\n            upperCase\
    \ = false;\n        }\n        if (key !== key.toLowerCase()) {\n            lowerCase\
    \ = false;\n        }\n    }\n    return upperCase || lowerCase;\n}\n", "    let\
    \ lower = true;\n    let upper = true;\n    for (let key in dict) {\n        if\
    \ (key.toLowerCase() !== key) {\n            lower = false;\n        }\n     \
    \   if (key.toUpperCase() !== key) {\n            upper = false;\n        }\n\
    \    }\n    return lower || upper;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

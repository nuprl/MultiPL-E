name: HumanEval_158_find_max
language: ts
prompt: "//Write a function that accepts an array of strings.\n// The array contains\
  \ different words. Return the word with maximum number\n// of unique characters.\
  \ If multiple strings have maximum number of unique\n// characters, return the one\
  \ which comes first in lexicographical order.\n// >>> find_max([\"name\", \"of\"\
  , \"string\"])\n// \"string\"\n// >>> find_max([\"name\", \"enam\", \"game\"])\n\
  // \"enam\"\n// >>> find_max([\"aaaaaaa\", \"bb\", \"cc\"])\n// \"aaaaaaa\"\nfunction\
  \ find_max(words: string[]): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = find_max;\n  assert.deepEqual(candidate([\"name\"\
  , \"of\", \"string\"]),\"string\");\n  assert.deepEqual(candidate([\"name\", \"\
  enam\", \"game\"]),\"enam\");\n  assert.deepEqual(candidate([\"aaaaaaa\", \"bb\"\
  , \"cc\"]),\"aaaaaaa\");\n  assert.deepEqual(candidate([\"abc\", \"cba\"]),\"abc\"\
  );\n  assert.deepEqual(candidate([\"play\", \"this\", \"game\", \"of\", \"footbott\"\
  ]),\"footbott\");\n  assert.deepEqual(candidate([\"we\", \"are\", \"gonna\", \"\
  rock\"]),\"gonna\");\n  assert.deepEqual(candidate([\"we\", \"are\", \"a\", \"mad\"\
  , \"nation\"]),\"nation\");\n  assert.deepEqual(candidate([\"this\", \"is\", \"\
  a\", \"prrk\"]),\"this\");\n  assert.deepEqual(candidate([\"b\"]),\"b\");\n  assert.deepEqual(candidate([\"\
  play\", \"play\", \"play\"]),\"play\");\n}\n\ntest();"
completions: ["  let max_word = words[0];\n  let max_unique_chars = 0;\n  for (let\
    \ word of words) {\n    let unique_chars = 0;\n    for (let char of word) {\n\
    \      if (word.indexOf(char) === word.lastIndexOf(char)) {\n        unique_chars++;\n\
    \      }\n    }\n    if (unique_chars > max_unique_chars) {\n      max_unique_chars\
    \ = unique_chars;\n      max_word = word;\n    }\n  }\n  return max_word;\n}\n",
  "    let max_word = words[0];\n    let max_count = 0;\n    for (let word of words)\
    \ {\n        let count = 0;\n        for (let i = 0; i < word.length; i++) {\n\
    \            if (word.indexOf(word[i]) === i) {\n                count++;\n  \
    \          }\n        }\n        if (count > max_count) {\n            max_count\
    \ = count;\n            max_word = word;\n        }\n    }\n    return max_word;\n\
    }\n", "    let max_word: string = \"\";\n    let max_count: number = 0;\n    for\
    \ (let word of words) {\n        let count: number = 0;\n        for (let i: number\
    \ = 0; i < word.length; i++) {\n            if (word.indexOf(word[i]) === i) {\n\
    \                count++;\n            }\n        }\n        if (count > max_count)\
    \ {\n            max_count = count;\n            max_word = word;\n        }\n\
    \    }\n    return max_word;\n}\n", "  let max_word = words[0];\n  let max_count\
    \ = 0;\n  for (let i = 0; i < words.length; i++) {\n    let word = words[i];\n\
    \    let count = 0;\n    for (let j = 0; j < word.length; j++) {\n      let char\
    \ = word[j];\n      if (word.indexOf(char) === j) {\n        count++;\n      }\n\
    \    }\n    if (count > max_count) {\n      max_count = count;\n      max_word\
    \ = word;\n    }\n  }\n  return max_word;\n}\n", "  let max_word = words[0];\n\
    \  let max_count = 0;\n  for (let word of words) {\n    let count = 0;\n    for\
    \ (let i = 0; i < word.length; i++) {\n      if (word.indexOf(word[i]) === i)\
    \ {\n        count++;\n      }\n    }\n    if (count > max_count) {\n      max_count\
    \ = count;\n      max_word = word;\n    }\n  }\n  return max_word;\n}\n", "  let\
    \ max_word: string = words[0];\n  let max_count: number = 0;\n  for (let word\
    \ of words) {\n    let count: number = 0;\n    for (let i = 0; i < word.length;\
    \ i++) {\n      if (word.indexOf(word[i]) === i) {\n        count++;\n      }\n\
    \    }\n    if (count > max_count) {\n      max_count = count;\n      max_word\
    \ = word;\n    }\n  }\n  return max_word;\n}\n", "  let max_word = words[0];\n\
    \  let max_count = 0;\n  for (let word of words) {\n    let count = 0;\n    for\
    \ (let i = 0; i < word.length; i++) {\n      if (word.indexOf(word[i]) === i)\
    \ {\n        count++;\n      }\n    }\n    if (count > max_count) {\n      max_count\
    \ = count;\n      max_word = word;\n    }\n  }\n  return max_word;\n}\n", "  \
    \  let max_word: string = \"\";\n    let max_count: number = 0;\n    for (let\
    \ word of words) {\n        let unique_chars: string[] = [];\n        for (let\
    \ char of word) {\n            if (unique_chars.indexOf(char) === -1) {\n    \
    \            unique_chars.push(char);\n            }\n        }\n        if (unique_chars.length\
    \ > max_count) {\n            max_count = unique_chars.length;\n            max_word\
    \ = word;\n        }\n    }\n    return max_word;\n}\n", "  let max_word = words[0];\n\
    \  let max_unique_chars = 0;\n  for (let word of words) {\n    let unique_chars\
    \ = 0;\n    for (let char of word) {\n      if (word.indexOf(char) === word.lastIndexOf(char))\
    \ {\n        unique_chars++;\n      }\n    }\n    if (unique_chars > max_unique_chars)\
    \ {\n      max_unique_chars = unique_chars;\n      max_word = word;\n    }\n \
    \ }\n  return max_word;\n}\n", "    let max_word: string = \"\";\n    let max_count:\
    \ number = 0;\n    for (let word of words) {\n        let count: number = 0;\n\
    \        for (let i = 0; i < word.length; i++) {\n            if (word.indexOf(word[i])\
    \ === i) {\n                count++;\n            }\n        }\n        if (count\
    \ > max_count) {\n            max_count = count;\n            max_word = word;\n\
    \        }\n    }\n    return max_word;\n}\n", "    let max_word: string = words[0];\n\
    \    let max_count: number = 0;\n    for (let word of words) {\n        let count:\
    \ number = 0;\n        for (let i = 0; i < word.length; i++) {\n            if\
    \ (word.indexOf(word[i]) === i) {\n                count++;\n            }\n \
    \       }\n        if (count > max_count) {\n            max_count = count;\n\
    \            max_word = word;\n        }\n    }\n    return max_word;\n}\n", " \
    \ let max_word: string = words[0];\n  let max_unique_chars: number = 0;\n  for\
    \ (let i = 0; i < words.length; i++) {\n    let unique_chars: number = 0;\n  \
    \  for (let j = 0; j < words[i].length; j++) {\n      if (words[i].indexOf(words[i][j])\
    \ === j) {\n        unique_chars++;\n      }\n    }\n    if (unique_chars > max_unique_chars)\
    \ {\n      max_unique_chars = unique_chars;\n      max_word = words[i];\n    }\n\
    \  }\n  return max_word;\n}\n", "    let max_word: string = \"\";\n    let max_count:\
    \ number = 0;\n    for (let word of words) {\n        let count: number = 0;\n\
    \        let unique_chars: string[] = [];\n        for (let char of word) {\n\
    \            if (unique_chars.indexOf(char) === -1) {\n                unique_chars.push(char);\n\
    \                count++;\n            }\n        }\n        if (count > max_count)\
    \ {\n            max_count = count;\n            max_word = word;\n        }\n\
    \    }\n    return max_word;\n}\n", "    let max_word = words[0];\n    for (let\
    \ i = 1; i < words.length; i++) {\n        if (words[i].length > max_word.length)\
    \ {\n            max_word = words[i];\n        }\n    }\n    return max_word;\n\
    }\n", "  let max_word = words[0];\n  for (let i = 1; i < words.length; i++) {\n\
    \    if (unique_chars(words[i]) > unique_chars(max_word)) {\n      max_word =\
    \ words[i];\n    }\n  }\n  return max_word;\n}\n", "    let max = 0;\n    let\
    \ max_word = \"\";\n    for (let i = 0; i < words.length; i++) {\n        let\
    \ word = words[i];\n        let unique_chars = new Set(word.split(\"\"));\n  \
    \      if (unique_chars.size > max) {\n            max = unique_chars.size;\n\
    \            max_word = word;\n        }\n    }\n    return max_word;\n}\n", " \
    \ let max_word = \"\";\n  let max_count = 0;\n  for (let word of words) {\n  \
    \  let count = 0;\n    for (let i = 0; i < word.length; i++) {\n      if (word.indexOf(word[i])\
    \ === i) {\n        count++;\n      }\n    }\n    if (count > max_count) {\n \
    \     max_count = count;\n      max_word = word;\n    }\n  }\n  return max_word;\n\
    }\n", "  let max_word = words[0];\n  let max_count = 0;\n  for (let i = 0; i <\
    \ words.length; i++) {\n    let word = words[i];\n    let count = 0;\n    for\
    \ (let j = 0; j < word.length; j++) {\n      let char = word[j];\n      if (word.indexOf(char)\
    \ === j) {\n        count++;\n      }\n    }\n    if (count > max_count) {\n \
    \     max_count = count;\n      max_word = word;\n    }\n  }\n  return max_word;\n\
    }\n", "  let max_word: string = \"\";\n  let max_count: number = 0;\n  for (let\
    \ word of words) {\n    let count: number = 0;\n    for (let i = 0; i < word.length;\
    \ i++) {\n      if (word.indexOf(word[i]) === i) {\n        count++;\n      }\n\
    \    }\n    if (count > max_count) {\n      max_count = count;\n      max_word\
    \ = word;\n    }\n  }\n  return max_word;\n}\n", "    let max_word: string = \"\
    \";\n    let max_count: number = 0;\n    for (let word of words) {\n        let\
    \ count: number = 0;\n        for (let char of word) {\n            if (word.indexOf(char)\
    \ === word.lastIndexOf(char)) {\n                count += 1;\n            }\n\
    \        }\n        if (count > max_count) {\n            max_count = count;\n\
    \            max_word = word;\n        }\n    }\n    return max_word;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

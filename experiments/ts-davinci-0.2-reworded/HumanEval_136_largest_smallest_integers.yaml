name: HumanEval_136_largest_smallest_integers
language: ts
prompt: "//Create a function that returns an array (a, b), where 'a' is\n// the largest\
  \ of negative integers, and 'b' is the smallest\n// of positive integers in an array.\n\
  // If there is no negative or positive integers, return them as undefined.\n// Examples:\n\
  // >>> largest_smallest_integers([2, 4, 1, 3, 5, 7])\n// [undefined, 1]\n// >>>\
  \ largest_smallest_integers([])\n// [undefined, undefined]\n// >>> largest_smallest_integers([0])\n\
  // [undefined, undefined]\nfunction largest_smallest_integers(lst: number[]): [number\
  \ | undefined, number | undefined] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = largest_smallest_integers;\n  assert.deepEqual(candidate([2,\
  \ 4, 1, 3, 5, 7]),[undefined, 1]);\n  assert.deepEqual(candidate([2, 4, 1, 3, 5,\
  \ 7, 0]),[undefined, 1]);\n  assert.deepEqual(candidate([1, 3, 2, 4, 5, 6, -2]),[-2,\
  \ 1]);\n  assert.deepEqual(candidate([4, 5, 3, 6, 2, 7, -7]),[-7, 2]);\n  assert.deepEqual(candidate([7,\
  \ 3, 8, 4, 9, 2, 5, -9]),[-9, 2]);\n  assert.deepEqual(candidate([]),[undefined,\
  \ undefined]);\n  assert.deepEqual(candidate([0]),[undefined, undefined]);\n  assert.deepEqual(candidate([-1,\
  \ -3, -5, -6]),[-1, undefined]);\n  assert.deepEqual(candidate([-1, -3, -5, -6,\
  \ 0]),[-1, undefined]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, 1]),[-3,\
  \ 1]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, -100, 1]),[-3, 1]);\n}\n\n\
  test();"
completions: ["    let largest_negative: number | undefined = undefined;\n    let\
    \ smallest_positive: number | undefined = undefined;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largest_negative\
    \ === undefined) {\n                largest_negative = lst[i];\n            }\
    \ else if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (smallest_positive\
    \ === undefined) {\n                smallest_positive = lst[i];\n            }\
    \ else if (lst[i] < smallest_positive) {\n                smallest_positive =\
    \ lst[i];\n            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined || lst[i] > largestNegative) {\n   \
    \             largestNegative = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    let largestNegative: number | undefined = undefined;\n\
    \    let smallestPositive: number | undefined = undefined;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largestNegative\
    \ === undefined) {\n                largestNegative = lst[i];\n            } else\
    \ if (lst[i] > largestNegative) {\n                largestNegative = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined) {\n                smallestPositive = lst[i];\n            }\
    \ else if (lst[i] < smallestPositive) {\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    let max_neg: number | undefined = undefined;\n    let min_pos: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] < 0) {\n            if (max_neg === undefined || lst[i] > max_neg)\
    \ {\n                max_neg = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (min_pos === undefined || lst[i] < min_pos) {\n     \
    \           min_pos = lst[i];\n            }\n        }\n    }\n    return [max_neg,\
    \ min_pos];\n}\n", "    let largestNegative: number | undefined;\n    let smallestPositive:\
    \ number | undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if\
    \ (lst[i] < 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i]\
    \ < smallestPositive) {\n                smallestPositive = lst[i];\n        \
    \    }\n        }\n    }\n    return [largestNegative, smallestPositive];\n}\n",
  "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let a: number\
    \ | undefined = undefined;\n    let b: number | undefined = undefined;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if\
    \ (a === undefined) {\n                a = lst[i];\n            } else if (lst[i]\
    \ > a) {\n                a = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (b === undefined) {\n                b = lst[i];\n  \
    \          } else if (lst[i] < b) {\n                b = lst[i];\n           \
    \ }\n        }\n    }\n    return [a, b];\n}\n", "    let largest_negative: number\
    \ | undefined = undefined;\n    let smallest_positive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "    let largest_neg: number |\
    \ undefined = undefined;\n    let smallest_pos: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_neg === undefined) {\n                largest_neg = lst[i];\n\
    \            } else if (lst[i] > largest_neg) {\n                largest_neg =\
    \ lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallest_pos\
    \ === undefined) {\n                smallest_pos = lst[i];\n            } else\
    \ if (lst[i] < smallest_pos) {\n                smallest_pos = lst[i];\n     \
    \       }\n        }\n    }\n    return [largest_neg, smallest_pos];\n}\n", " \
    \   let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let smallest_positive\
    \ = undefined;\n    let largest_negative = undefined;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest_positive\
    \ === undefined) {\n                smallest_positive = lst[i];\n            }\
    \ else if (lst[i] < smallest_positive) {\n                smallest_positive =\
    \ lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest_negative\
    \ === undefined) {\n                largest_negative = lst[i];\n            }\
    \ else if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let smallest: number | undefined = undefined;\n    let largest: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] > 0) {\n            if (smallest === undefined) {\n           \
    \     smallest = lst[i];\n            } else if (lst[i] < smallest) {\n      \
    \          smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
    \            if (largest === undefined) {\n                largest = lst[i];\n\
    \            } else if (lst[i] > largest) {\n                largest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ let max_neg: number | undefined = undefined;\n    let min_pos: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (max_neg === undefined || lst[i] > max_neg) {\n     \
    \           max_neg = lst[i];\n            }\n        } else if (lst[i] > 0) {\n\
    \            if (min_pos === undefined || lst[i] < min_pos) {\n              \
    \  min_pos = lst[i];\n            }\n        }\n    }\n    return [max_neg, min_pos];\n\
    }\n", "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallestPositive = undefined;\n\
    \    let largestNegative = undefined;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] > 0) {\n            if (smallestPositive === undefined\
    \ || lst[i] < smallestPositive) {\n                smallestPositive = lst[i];\n\
    \            }\n        } else if (lst[i] < 0) {\n            if (largestNegative\
    \ === undefined || lst[i] > largestNegative) {\n                largestNegative\
    \ = lst[i];\n            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "  let largestNegative = undefined;\n  let smallestPositive = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
    \ === undefined || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
    \      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive === undefined\
    \ || lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n\
    \    }\n  }\n  return [largestNegative, smallestPositive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    let largest_negative = undefined;\n    let\
    \ smallest_positive = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined ||\
    \ lst[i] > largest_negative) {\n                largest_negative = lst[i];\n \
    \           }\n        } else if (lst[i] > 0) {\n            if (smallest_positive\
    \ === undefined || lst[i] < smallest_positive) {\n                smallest_positive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let largest: number | undefined = undefined;\n    let smallest: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] < 0) {\n            if (largest === undefined) {\n            \
    \    largest = lst[i];\n            } else if (lst[i] > largest) {\n         \
    \       largest = lst[i];\n            }\n        } else if (lst[i] > 0) {\n \
    \           if (smallest === undefined) {\n                smallest = lst[i];\n\
    \            } else if (lst[i] < smallest) {\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ let smallest: number | undefined;\n    let largest: number | undefined;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n       \
    \     if (smallest === undefined || lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
    \ === undefined || lst[i] > largest) {\n                largest = lst[i];\n  \
    \          }\n        }\n    }\n    return [largest, smallest];\n}\n", "    let\
    \ largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    let largest: number | undefined = undefined;\n\
    \    let smallest: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largest === undefined) {\n\
    \                largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        } else if (lst[i] >\
    \ 0) {\n            if (smallest === undefined) {\n                smallest =\
    \ lst[i];\n            } else if (lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n", "    let smallest\
    \ = undefined;\n    let largest = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > 0) {\n            if (smallest === undefined) {\n\
    \                smallest = lst[i];\n            } else if (lst[i] < smallest)\
    \ {\n                smallest = lst[i];\n            }\n        } else if (lst[i]\
    \ < 0) {\n            if (largest === undefined) {\n                largest =\
    \ lst[i];\n            } else if (lst[i] > largest) {\n                largest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let min = undefined;\n    let\
    \ max = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (min === undefined || lst[i] < min) {\n             \
    \   min = lst[i];\n            }\n        } else if (lst[i] < 0) {\n         \
    \   if (max === undefined || lst[i] > max) {\n                max = lst[i];\n\
    \            }\n        }\n    }\n    return [max, min];\n}\n", "    let maxNegative:\
    \ number | undefined = undefined;\n    let minPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (maxNegative === undefined || lst[i] > maxNegative) {\n           \
    \     maxNegative = lst[i];\n            }\n        } else if (lst[i] > 0) {\n\
    \            if (minPositive === undefined || lst[i] < minPositive) {\n      \
    \          minPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [maxNegative, minPositive];\n}\n", "    let largestNegative: number | undefined\
    \ = undefined;\n    let smallestPositive: number | undefined = undefined;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n       \
    \     if (largestNegative === undefined) {\n                largestNegative =\
    \ lst[i];\n            } else if (lst[i] > largestNegative) {\n              \
    \  largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0) {\n\
    \            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "  let largestNegative: number | undefined;\n  let\
    \ smallestPositive: number | undefined;\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < 0) {\n      if (largestNegative === undefined || lst[i]\
    \ > largestNegative) {\n        largestNegative = lst[i];\n      }\n    } else\
    \ if (lst[i] > 0) {\n      if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n        smallestPositive = lst[i];\n      }\n    }\n  }\n  return [largestNegative,\
    \ smallestPositive];\n}\n", "    let maxNegative: number | undefined = undefined;\n\
    \    let minPositive: number | undefined = undefined;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] < 0) {\n            if (maxNegative ===\
    \ undefined || lst[i] > maxNegative) {\n                maxNegative = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (minPositive\
    \ === undefined || lst[i] < minPositive) {\n                minPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [maxNegative, minPositive];\n}\n",
  "    let min: number | undefined = undefined;\n    let max: number | undefined =\
    \ undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] >\
    \ 0) {\n            if (min === undefined || lst[i] < min) {\n               \
    \ min = lst[i];\n            }\n        } else if (lst[i] < 0) {\n           \
    \ if (max === undefined || lst[i] > max) {\n                max = lst[i];\n  \
    \          }\n        }\n    }\n    return [max, min];\n}\n", "    let largestNegative\
    \ = undefined;\n    let smallestPositive = undefined;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largestNegative\
    \ === undefined || lst[i] > largestNegative) {\n                largestNegative\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined || lst[i] < smallestPositive) {\n                smallestPositive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let smallest_positive\
    \ = undefined;\n    let largest_negative = undefined;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest_positive\
    \ === undefined) {\n                smallest_positive = lst[i];\n            }\
    \ else if (lst[i] < smallest_positive) {\n                smallest_positive =\
    \ lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest_negative\
    \ === undefined) {\n                largest_negative = lst[i];\n            }\
    \ else if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let smallest: number | undefined = undefined;\n    let largest: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] > 0) {\n            if (smallest === undefined) {\n           \
    \     smallest = lst[i];\n            } else if (lst[i] < smallest) {\n      \
    \          smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
    \            if (largest === undefined) {\n                largest = lst[i];\n\
    \            } else if (lst[i] > largest) {\n                largest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ let largestNegative = undefined;\n    let smallestPositive = undefined;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n       \
    \     if (largestNegative === undefined || lst[i] > largestNegative) {\n     \
    \           largestNegative = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let largest_negative: number\
    \ | undefined = undefined;\n    let smallest_positive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "  let largestNegative: number\
    \ | undefined = undefined;\n  let smallestPositive: number | undefined = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
    \ === undefined) {\n        largestNegative = lst[i];\n      } else if (lst[i]\
    \ > largestNegative) {\n        largestNegative = lst[i];\n      }\n    } else\
    \ if (lst[i] > 0) {\n      if (smallestPositive === undefined) {\n        smallestPositive\
    \ = lst[i];\n      } else if (lst[i] < smallestPositive) {\n        smallestPositive\
    \ = lst[i];\n      }\n    }\n  }\n  return [largestNegative, smallestPositive];\n\
    }\n", "    let largest_negative: number | undefined = undefined;\n    let smallest_positive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let largest_negative: number\
    \ | undefined = undefined;\n    let smallest_positive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let largestNegative: number\
    \ | undefined;\n    let smallestPositive: number | undefined;\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largestNegative\
    \ === undefined || lst[i] > largestNegative) {\n                largestNegative\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined || lst[i] < smallestPositive) {\n                smallestPositive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    let largest_negative: number | undefined = undefined;\n    let smallest_positive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n", "    let smallest:\
    \ number | undefined = undefined;\n    let largest: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest === undefined || lst[i] > largest) {\n                largest\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallest\
    \ === undefined || lst[i] < smallest) {\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n", "    let maxNegative:\
    \ number | undefined = undefined;\n    let minPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (maxNegative === undefined || lst[i] > maxNegative) {\n           \
    \     maxNegative = lst[i];\n            }\n        } else if (lst[i] > 0) {\n\
    \            if (minPositive === undefined || lst[i] < minPositive) {\n      \
    \          minPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [maxNegative, minPositive];\n}\n", "    let smallest_positive = undefined;\n\
    \    let largest_negative = undefined;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] > 0) {\n            if (smallest_positive === undefined)\
    \ {\n                smallest_positive = lst[i];\n            } else if (lst[i]\
    \ < smallest_positive) {\n                smallest_positive = lst[i];\n      \
    \      }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let a: number\
    \ | undefined = undefined;\n    let b: number | undefined = undefined;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if\
    \ (a === undefined) {\n                a = lst[i];\n            } else if (lst[i]\
    \ > a) {\n                a = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (b === undefined) {\n                b = lst[i];\n  \
    \          } else if (lst[i] < b) {\n                b = lst[i];\n           \
    \ }\n        }\n    }\n    return [a, b];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "    let largest: number | undefined\
    \ = undefined;\n    let smallest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largest\
    \ === undefined) {\n                largest = lst[i];\n            } else if (lst[i]\
    \ > largest) {\n                largest = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest === undefined) {\n             \
    \   smallest = lst[i];\n            } else if (lst[i] < smallest) {\n        \
    \        smallest = lst[i];\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    let smallest_positive: number | undefined = undefined;\n\
    \    let largest_negative: number | undefined = undefined;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest_positive\
    \ === undefined) {\n                smallest_positive = lst[i];\n            }\
    \ else if (lst[i] < smallest_positive) {\n                smallest_positive =\
    \ lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest_negative\
    \ === undefined) {\n                largest_negative = lst[i];\n            }\
    \ else if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let largest_negative = undefined;\n    let smallest_positive = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_negative === undefined || lst[i] > largest_negative) {\n \
    \               largest_negative = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (smallest_positive === undefined || lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "    let largest_negative: number\
    \ | undefined = undefined;\n    let smallest_positive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "  let largestNegative = undefined;\n  let smallestPositive\
    \ = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0)\
    \ {\n      if (largestNegative === undefined || lst[i] > largestNegative) {\n\
    \        largestNegative = lst[i];\n      }\n    } else if (lst[i] > 0) {\n  \
    \    if (smallestPositive === undefined || lst[i] < smallestPositive) {\n    \
    \    smallestPositive = lst[i];\n      }\n    }\n  }\n  return [largestNegative,\
    \ smallestPositive];\n}\n", "    let largestNegative: number | undefined = undefined;\n\
    \    let smallestPositive: number | undefined = undefined;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largestNegative\
    \ === undefined) {\n                largestNegative = lst[i];\n            } else\
    \ if (lst[i] > largestNegative) {\n                largestNegative = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined) {\n                smallestPositive = lst[i];\n            }\
    \ else if (lst[i] < smallestPositive) {\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let largest:\
    \ number | undefined = undefined;\n    let smallest: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest === undefined) {\n                largest = lst[i];\n    \
    \        } else if (lst[i] > largest) {\n                largest = lst[i];\n \
    \           }\n        } else if (lst[i] > 0) {\n            if (smallest ===\
    \ undefined) {\n                smallest = lst[i];\n            } else if (lst[i]\
    \ < smallest) {\n                smallest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let largest: number | undefined\
    \ = undefined;\n    let smallest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largest\
    \ === undefined) {\n                largest = lst[i];\n            } else if (lst[i]\
    \ > largest) {\n                largest = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest === undefined) {\n             \
    \   smallest = lst[i];\n            } else if (lst[i] < smallest) {\n        \
    \        smallest = lst[i];\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    let largest_neg: number | undefined = undefined;\n  \
    \  let smallest_pos: number | undefined = undefined;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largest_neg ===\
    \ undefined) {\n                largest_neg = lst[i];\n            } else if (lst[i]\
    \ > largest_neg) {\n                largest_neg = lst[i];\n            }\n   \
    \     } else if (lst[i] > 0) {\n            if (smallest_pos === undefined) {\n\
    \                smallest_pos = lst[i];\n            } else if (lst[i] < smallest_pos)\
    \ {\n                smallest_pos = lst[i];\n            }\n        }\n    }\n\
    \    return [largest_neg, smallest_pos];\n}\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    let largestNegative: number | undefined;\n\
    \    let smallestPositive: number | undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largestNegative === undefined\
    \ || lst[i] > largestNegative) {\n                largestNegative = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined || lst[i] < smallestPositive) {\n                smallestPositive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    let negative: number | undefined = undefined;\n    let positive: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] < 0) {\n            if (negative === undefined) {\n           \
    \     negative = lst[i];\n            } else if (lst[i] > negative) {\n      \
    \          negative = lst[i];\n            }\n        } else if (lst[i] > 0) {\n\
    \            if (positive === undefined) {\n                positive = lst[i];\n\
    \            } else if (lst[i] < positive) {\n                positive = lst[i];\n\
    \            }\n        }\n    }\n    return [negative, positive];\n}\n", "  \
    \  let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "  let largestNegative\
    \ = undefined;\n  let smallestPositive = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      if (largestNegative === undefined || lst[i]\
    \ > largestNegative) {\n        largestNegative = lst[i];\n      }\n    } else\
    \ if (lst[i] > 0) {\n      if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n        smallestPositive = lst[i];\n      }\n    }\n  }\n  return [largestNegative,\
    \ smallestPositive];\n}\n", "    let largestNegative: number | undefined = undefined;\n\
    \    let smallestPositive: number | undefined = undefined;\n    for (let i = 0;\
    \ i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largestNegative\
    \ === undefined) {\n                largestNegative = lst[i];\n            } else\
    \ if (lst[i] > largestNegative) {\n                largestNegative = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined) {\n                smallestPositive = lst[i];\n            }\
    \ else if (lst[i] < smallestPositive) {\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let maxNegative\
    \ = undefined;\n    let minPositive = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (maxNegative === undefined\
    \ || lst[i] > maxNegative) {\n                maxNegative = lst[i];\n        \
    \    }\n        } else if (lst[i] > 0) {\n            if (minPositive === undefined\
    \ || lst[i] < minPositive) {\n                minPositive = lst[i];\n        \
    \    }\n        }\n    }\n    return [maxNegative, minPositive];\n}\n", "    let\
    \ largestNegative: number | undefined;\n    let smallestPositive: number | undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined || lst[i] > largestNegative) {\n   \
    \             largestNegative = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let neg_max:\
    \ number | undefined = undefined;\n    let pos_min: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (neg_max === undefined) {\n                neg_max = lst[i];\n    \
    \        } else if (lst[i] > neg_max) {\n                neg_max = lst[i];\n \
    \           }\n        } else if (lst[i] > 0) {\n            if (pos_min === undefined)\
    \ {\n                pos_min = lst[i];\n            } else if (lst[i] < pos_min)\
    \ {\n                pos_min = lst[i];\n            }\n        }\n    }\n    return\
    \ [neg_max, pos_min];\n}\n", "    let neg = undefined;\n    let pos = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (neg === undefined || lst[i] > neg) {\n                neg = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (pos === undefined\
    \ || lst[i] < pos) {\n                pos = lst[i];\n            }\n        }\n\
    \    }\n    return [neg, pos];\n}\n", "    let largestNegative: number | undefined\
    \ = undefined;\n    let smallestPositive: number | undefined = undefined;\n  \
    \  for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n       \
    \     if (largestNegative === undefined) {\n                largestNegative =\
    \ lst[i];\n            } else if (lst[i] > largestNegative) {\n              \
    \  largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0) {\n\
    \            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    let negs: number[] = [];\n    let poss: number[]\
    \ = [];\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n\
    \            negs.push(lst[i]);\n        } else if (lst[i] > 0) {\n          \
    \  poss.push(lst[i]);\n        }\n    }\n    if (negs.length === 0) {\n      \
    \  negs.push(undefined);\n    }\n    if (poss.length === 0) {\n        poss.push(undefined);\n\
    \    }\n    return [Math.max(...negs), Math.min(...poss)];\n}\n", "    let smallest_positive:\
    \ number | undefined = undefined;\n    let largest_negative: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (smallest_positive === undefined) {\n               \
    \ smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        } else\
    \ if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n     \
    \           largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        }\n  \
    \  }\n    return [largest_negative, smallest_positive];\n}\n", "    let min =\
    \ undefined;\n    let max = undefined;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] < 0) {\n            if (max === undefined || lst[i] >\
    \ max) {\n                max = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (min === undefined || lst[i] < min) {\n             \
    \   min = lst[i];\n            }\n        }\n    }\n    return [max, min];\n}\n",
  "    let max_neg: number | undefined = undefined;\n    let min_pos: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (min_pos === undefined || lst[i] < min_pos) {\n     \
    \           min_pos = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
    \            if (max_neg === undefined || lst[i] > max_neg) {\n              \
    \  max_neg = lst[i];\n            }\n        }\n    }\n    return [max_neg, min_pos];\n\
    }\n", "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined || lst[i] > largestNegative) {\n   \
    \             largestNegative = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let maxNegative: number | undefined\
    \ = undefined;\n    let minPositive: number | undefined = undefined;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if\
    \ (maxNegative === undefined || lst[i] > maxNegative) {\n                maxNegative\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (minPositive\
    \ === undefined || lst[i] < minPositive) {\n                minPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [maxNegative, minPositive];\n}\n",
  "    let largest: number | undefined = undefined;\n    let smallest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (smallest === undefined) {\n                smallest\
    \ = lst[i];\n            } else if (lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
    \ === undefined) {\n                largest = lst[i];\n            } else if (lst[i]\
    \ > largest) {\n                largest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largest\
    \ === undefined || lst[i] > largest) {\n                largest = lst[i];\n  \
    \          }\n        } else if (lst[i] > 0) {\n            if (smallest === undefined\
    \ || lst[i] < smallest) {\n                smallest = lst[i];\n            }\n\
    \        }\n    }\n    return [largest, smallest];\n}\n", "    let smallest: number\
    \ | undefined = undefined;\n    let largest: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest === undefined || lst[i] > largest) {\n                largest\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallest\
    \ === undefined || lst[i] < smallest) {\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let smallest_positive:\
    \ number | undefined = undefined;\n    let largest_negative: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (smallest_positive === undefined) {\n               \
    \ smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        } else\
    \ if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n     \
    \           largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        }\n  \
    \  }\n    return [largest_negative, smallest_positive];\n}\n", "    let smallest:\
    \ number | undefined = undefined;\n    let largest: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest === undefined) {\n                smallest = lst[i];\n  \
    \          } else if (lst[i] < smallest) {\n                smallest = lst[i];\n\
    \            }\n        } else if (lst[i] < 0) {\n            if (largest ===\
    \ undefined) {\n                largest = lst[i];\n            } else if (lst[i]\
    \ > largest) {\n                largest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "    let largest_negative: number\
    \ | undefined = undefined;\n    let smallest_positive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "  let smallest_positive: number\
    \ | undefined = undefined;\n  let largest_negative: number | undefined = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] > 0) {\n      if (smallest_positive\
    \ === undefined) {\n        smallest_positive = lst[i];\n      } else if (lst[i]\
    \ < smallest_positive) {\n        smallest_positive = lst[i];\n      }\n    }\
    \ else if (lst[i] < 0) {\n      if (largest_negative === undefined) {\n      \
    \  largest_negative = lst[i];\n      } else if (lst[i] > largest_negative) {\n\
    \        largest_negative = lst[i];\n      }\n    }\n  }\n  return [largest_negative,\
    \ smallest_positive];\n}\n", "    let largestNegative = undefined;\n    let smallestPositive\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i]\
    \ < smallestPositive) {\n                smallestPositive = lst[i];\n        \
    \    }\n        }\n    }\n    return [largestNegative, smallestPositive];\n}\n",
  "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n      \
    \      if (largestNegative === undefined || lst[i] > largestNegative) {\n    \
    \            largestNegative = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let maxNegative\
    \ = undefined;\n    let minPositive = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (maxNegative === undefined\
    \ || lst[i] > maxNegative) {\n                maxNegative = lst[i];\n        \
    \    }\n        } else if (lst[i] > 0) {\n            if (minPositive === undefined\
    \ || lst[i] < minPositive) {\n                minPositive = lst[i];\n        \
    \    }\n        }\n    }\n    return [maxNegative, minPositive];\n}\n", "    let\
    \ smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n\
    \                smallest_positive = lst[i];\n            } else if (lst[i] <\
    \ smallest_positive) {\n                smallest_positive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest_positive = undefined;\n\
    \    let largest_negative = undefined;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] > 0) {\n            if (smallest_positive === undefined)\
    \ {\n                smallest_positive = lst[i];\n            } else if (lst[i]\
    \ < smallest_positive) {\n                smallest_positive = lst[i];\n      \
    \      }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "  let smallest_positive: number\
    \ | undefined = undefined;\n  let largest_negative: number | undefined = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] > 0) {\n      if (smallest_positive\
    \ === undefined) {\n        smallest_positive = lst[i];\n      } else if (lst[i]\
    \ < smallest_positive) {\n        smallest_positive = lst[i];\n      }\n    }\
    \ else if (lst[i] < 0) {\n      if (largest_negative === undefined) {\n      \
    \  largest_negative = lst[i];\n      } else if (lst[i] > largest_negative) {\n\
    \        largest_negative = lst[i];\n      }\n    }\n  }\n  return [largest_negative,\
    \ smallest_positive];\n}\n", "    let largest_negative: number | undefined = undefined;\n\
    \    let smallest_positive: number | undefined = undefined;\n    for (let i =\
    \ 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largest_negative\
    \ === undefined) {\n                largest_negative = lst[i];\n            }\
    \ else if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (smallest_positive\
    \ === undefined) {\n                smallest_positive = lst[i];\n            }\
    \ else if (lst[i] < smallest_positive) {\n                smallest_positive =\
    \ lst[i];\n            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let largest: number | undefined = undefined;\n    let smallest: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] < 0) {\n            if (largest === undefined) {\n            \
    \    largest = lst[i];\n            } else if (lst[i] > largest) {\n         \
    \       largest = lst[i];\n            }\n        } else if (lst[i] > 0) {\n \
    \           if (smallest === undefined) {\n                smallest = lst[i];\n\
    \            } else if (lst[i] < smallest) {\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ let largest_neg: number | undefined = undefined;\n    let smallest_pos: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] < 0) {\n            if (largest_neg === undefined) {\n        \
    \        largest_neg = lst[i];\n            } else if (lst[i] > largest_neg) {\n\
    \                largest_neg = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (smallest_pos === undefined) {\n                smallest_pos\
    \ = lst[i];\n            } else if (lst[i] < smallest_pos) {\n               \
    \ smallest_pos = lst[i];\n            }\n        }\n    }\n    return [largest_neg,\
    \ smallest_pos];\n}\n", "    let smallest: number | undefined = undefined;\n \
    \   let largest: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largest === undefined ||\
    \ lst[i] > largest) {\n                largest = lst[i];\n            }\n    \
    \    } else if (lst[i] > 0) {\n            if (smallest === undefined || lst[i]\
    \ < smallest) {\n                smallest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "    let smallest_positive = undefined;\n\
    \    let largest_negative = undefined;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] > 0) {\n            if (smallest_positive === undefined)\
    \ {\n                smallest_positive = lst[i];\n            } else if (lst[i]\
    \ < smallest_positive) {\n                smallest_positive = lst[i];\n      \
    \      }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let largest_negative: number | undefined = undefined;\n    let smallest_positive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n", "    let smallest_positive\
    \ = undefined;\n    let largest_negative = undefined;\n    for (let i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest_positive\
    \ === undefined) {\n                smallest_positive = lst[i];\n            }\
    \ else if (lst[i] < smallest_positive) {\n                smallest_positive =\
    \ lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest_negative\
    \ === undefined) {\n                largest_negative = lst[i];\n            }\
    \ else if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let smallest_positive = undefined;\n    let largest_negative = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "    let max_neg: number | undefined\
    \ = undefined;\n    let min_pos: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (max_neg\
    \ === undefined || lst[i] > max_neg) {\n                max_neg = lst[i];\n  \
    \          }\n        } else if (lst[i] > 0) {\n            if (min_pos === undefined\
    \ || lst[i] < min_pos) {\n                min_pos = lst[i];\n            }\n \
    \       }\n    }\n    return [max_neg, min_pos];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "  let smallest_positive: number | undefined = undefined;\n\
    \  let largest_negative: number | undefined = undefined;\n  for (let i = 0; i\
    \ < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largest_negative ===\
    \ undefined) {\n        largest_negative = lst[i];\n      } else if (lst[i] >\
    \ largest_negative) {\n        largest_negative = lst[i];\n      }\n    } else\
    \ if (lst[i] > 0) {\n      if (smallest_positive === undefined) {\n        smallest_positive\
    \ = lst[i];\n      } else if (lst[i] < smallest_positive) {\n        smallest_positive\
    \ = lst[i];\n      }\n    }\n  }\n  return [largest_negative, smallest_positive];\n\
    }\n", "    let largest_negative: number | undefined = undefined;\n    let smallest_positive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let largestNegative: number\
    \ | undefined;\n    let smallestPositive: number | undefined;\n    for (let i\
    \ = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (largestNegative\
    \ === undefined || lst[i] > largestNegative) {\n                largestNegative\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined || lst[i] < smallestPositive) {\n                smallestPositive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    let smallest: number | undefined = undefined;\n    let largest: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] > 0) {\n            if (smallest === undefined) {\n           \
    \     smallest = lst[i];\n            } else if (lst[i] < smallest) {\n      \
    \          smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
    \            if (largest === undefined) {\n                largest = lst[i];\n\
    \            } else if (lst[i] > largest) {\n                largest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let min_positive\
    \ = undefined;\n    let max_negative = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > 0) {\n            if (min_positive === undefined\
    \ || lst[i] < min_positive) {\n                min_positive = lst[i];\n      \
    \      }\n        } else if (lst[i] < 0) {\n            if (max_negative === undefined\
    \ || lst[i] > max_negative) {\n                max_negative = lst[i];\n      \
    \      }\n        }\n    }\n    return [max_negative, min_positive];\n}\n", " \
    \   let largestNegative = undefined;\n    let smallestPositive = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined || lst[i] > largestNegative) {\n   \
    \             largestNegative = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let smallest_positive:\
    \ number | undefined = undefined;\n    let largest_negative: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (smallest_positive === undefined) {\n               \
    \ smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        } else\
    \ if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n     \
    \           largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        }\n  \
    \  }\n    return [largest_negative, smallest_positive];\n}\n", "  let largestNegative:\
    \ number | undefined;\n  let smallestPositive: number | undefined;\n  for (let\
    \ i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largestNegative\
    \ === undefined || lst[i] > largestNegative) {\n        largestNegative = lst[i];\n\
    \      }\n    } else if (lst[i] > 0) {\n      if (smallestPositive === undefined\
    \ || lst[i] < smallestPositive) {\n        smallestPositive = lst[i];\n      }\n\
    \    }\n  }\n  return [largestNegative, smallestPositive];\n}\n", "    let largest\
    \ = undefined;\n    let smallest = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largest === undefined) {\n\
    \                largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        } else if (lst[i] >\
    \ 0) {\n            if (smallest === undefined) {\n                smallest =\
    \ lst[i];\n            } else if (lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n\
    \                smallest_positive = lst[i];\n            } else if (lst[i] <\
    \ smallest_positive) {\n                smallest_positive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let smallest: number | undefined = undefined;\n    let largest: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] > 0) {\n            if (smallest === undefined) {\n           \
    \     smallest = lst[i];\n            } else if (lst[i] < smallest) {\n      \
    \          smallest = lst[i];\n            }\n        } else if (lst[i] < 0) {\n\
    \            if (largest === undefined) {\n                largest = lst[i];\n\
    \            } else if (lst[i] > largest) {\n                largest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ let largest_negative: number | undefined = undefined;\n    let smallest_positive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n", "    let largestNegative:\
    \ number | undefined;\n    let smallestPositive: number | undefined;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if\
    \ (largestNegative === undefined || lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let largest_negative = undefined;\n\
    \    let smallest_positive = undefined;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] < 0) {\n            if (largest_negative === undefined\
    \ || lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (smallest_positive\
    \ === undefined || lst[i] < smallest_positive) {\n                smallest_positive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let largest_negative: number | undefined = undefined;\n    let smallest_positive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n", "  let maxNegative\
    \ = undefined;\n  let minPositive = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      if (maxNegative === undefined || lst[i]\
    \ > maxNegative) {\n        maxNegative = lst[i];\n      }\n    } else if (lst[i]\
    \ > 0) {\n      if (minPositive === undefined || lst[i] < minPositive) {\n   \
    \     minPositive = lst[i];\n      }\n    }\n  }\n  return [maxNegative, minPositive];\n\
    }\n", "    let largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "  let largest_negative\
    \ = undefined;\n  let smallest_positive = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      if (largest_negative === undefined || lst[i]\
    \ > largest_negative) {\n        largest_negative = lst[i];\n      }\n    } else\
    \ if (lst[i] > 0) {\n      if (smallest_positive === undefined || lst[i] < smallest_positive)\
    \ {\n        smallest_positive = lst[i];\n      }\n    }\n  }\n  return [largest_negative,\
    \ smallest_positive];\n}\n", "    let smallest_positive: number | undefined =\
    \ undefined;\n    let largest_negative: number | undefined = undefined;\n    for\
    \ (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if\
    \ (smallest_positive === undefined) {\n                smallest_positive = lst[i];\n\
    \            } else if (lst[i] < smallest_positive) {\n                smallest_positive\
    \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest_negative\
    \ === undefined) {\n                largest_negative = lst[i];\n            }\
    \ else if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let smallest: number | undefined;\n    let largest: number | undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest === undefined || lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
    \ === undefined || lst[i] > largest) {\n                largest = lst[i];\n  \
    \          }\n        }\n    }\n    return [largest, smallest];\n}\n", "    let\
    \ largestNegative: number | undefined = undefined;\n    let smallestPositive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largestNegative === undefined) {\n\
    \                largestNegative = lst[i];\n            } else if (lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined) {\n     \
    \           smallestPositive = lst[i];\n            } else if (lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let negative_largest:\
    \ number | undefined = undefined;\n    let positive_smallest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (negative_largest === undefined) {\n                negative_largest\
    \ = lst[i];\n            } else if (lst[i] > negative_largest) {\n           \
    \     negative_largest = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (positive_smallest === undefined) {\n                positive_smallest\
    \ = lst[i];\n            } else if (lst[i] < positive_smallest) {\n          \
    \      positive_smallest = lst[i];\n            }\n        }\n    }\n    return\
    \ [negative_largest, positive_smallest];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest_positive = undefined;\n\
    \    let largest_negative = undefined;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] > 0) {\n            if (smallest_positive === undefined)\
    \ {\n                smallest_positive = lst[i];\n            } else if (lst[i]\
    \ < smallest_positive) {\n                smallest_positive = lst[i];\n      \
    \      }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    if (lst.length === 0) {\n        return [undefined, undefined];\n \
    \   }\n    let largest_negative: number | undefined = undefined;\n    let smallest_positive:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n", "    let smallest_positive:\
    \ number | undefined = undefined;\n    let largest_negative: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (smallest_positive === undefined) {\n               \
    \ smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        } else\
    \ if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n     \
    \           largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        }\n  \
    \  }\n    return [largest_negative, smallest_positive];\n}\n", "    let maxNeg\
    \ = undefined;\n    let minPos = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (maxNeg === undefined || lst[i]\
    \ > maxNeg) {\n                maxNeg = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (minPos === undefined || lst[i] < minPos)\
    \ {\n                minPos = lst[i];\n            }\n        }\n    }\n    return\
    \ [maxNeg, minPos];\n}\n", "    let largestNegative = undefined;\n    let smallestPositive\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined || lst[i] > largestNegative)\
    \ {\n                largestNegative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallestPositive === undefined || lst[i]\
    \ < smallestPositive) {\n                smallestPositive = lst[i];\n        \
    \    }\n        }\n    }\n    return [largestNegative, smallestPositive];\n}\n",
  "    let smallest: number | undefined;\n    let largest: number | undefined;\n \
    \   for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n      \
    \      if (smallest === undefined || lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
    \ === undefined || lst[i] > largest) {\n                largest = lst[i];\n  \
    \          }\n        }\n    }\n    return [largest, smallest];\n}\n", "    let\
    \ smallest: number | undefined = undefined;\n    let largest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (smallest === undefined) {\n                smallest\
    \ = lst[i];\n            } else if (lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
    \ === undefined) {\n                largest = lst[i];\n            } else if (lst[i]\
    \ > largest) {\n                largest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    let largestNegative = undefined;\n\
    \    let smallestPositive = undefined;\n    for (let i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] < 0) {\n            if (largestNegative === undefined\
    \ || lst[i] > largestNegative) {\n                largestNegative = lst[i];\n\
    \            }\n        } else if (lst[i] > 0) {\n            if (smallestPositive\
    \ === undefined || lst[i] < smallestPositive) {\n                smallestPositive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n\
    \                smallest_positive = lst[i];\n            } else if (lst[i] <\
    \ smallest_positive) {\n                smallest_positive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let smallest: number | undefined = undefined;\n    let largest: number\
    \ | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n     \
    \   if (lst[i] < 0) {\n            if (largest === undefined || lst[i] > largest)\
    \ {\n                largest = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (smallest === undefined || lst[i] < smallest) {\n   \
    \             smallest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    let smallest: number | undefined = undefined;\n\
    \    let largest: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] > 0) {\n            if (smallest === undefined) {\n\
    \                smallest = lst[i];\n            } else if (lst[i] < smallest)\
    \ {\n                smallest = lst[i];\n            }\n        } else if (lst[i]\
    \ < 0) {\n            if (largest === undefined) {\n                largest =\
    \ lst[i];\n            } else if (lst[i] > largest) {\n                largest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    let largestNegative = undefined;\n    let smallestPositive = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined || lst[i] > largestNegative) {\n   \
    \             largestNegative = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (smallestPositive === undefined || lst[i] < smallestPositive)\
    \ {\n                smallestPositive = lst[i];\n            }\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    let smallest:\
    \ number | undefined = undefined;\n    let largest: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest === undefined) {\n                smallest = lst[i];\n  \
    \          } else if (lst[i] < smallest) {\n                smallest = lst[i];\n\
    \            }\n        } else if (lst[i] < 0) {\n            if (largest ===\
    \ undefined) {\n                largest = lst[i];\n            } else if (lst[i]\
    \ > largest) {\n                largest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    let smallest_positive: number\
    \ | undefined = undefined;\n    let largest_negative: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n     \
    \       if (smallest_positive === undefined) {\n                smallest_positive\
    \ = lst[i];\n            } else if (lst[i] < smallest_positive) {\n          \
    \      smallest_positive = lst[i];\n            }\n        } else if (lst[i] <\
    \ 0) {\n            if (largest_negative === undefined) {\n                largest_negative\
    \ = lst[i];\n            } else if (lst[i] > largest_negative) {\n           \
    \     largest_negative = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_negative, smallest_positive];\n}\n", "    let max_neg: number | undefined\
    \ = undefined;\n    let min_pos: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (max_neg\
    \ === undefined || lst[i] > max_neg) {\n                max_neg = lst[i];\n  \
    \          }\n        } else if (lst[i] > 0) {\n            if (min_pos === undefined\
    \ || lst[i] < min_pos) {\n                min_pos = lst[i];\n            }\n \
    \       }\n    }\n    return [max_neg, min_pos];\n}\n", "    let smallest: number\
    \ | undefined = undefined;\n    let largest: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest === undefined || lst[i] > largest) {\n                largest\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0) {\n            if (smallest\
    \ === undefined || lst[i] < smallest) {\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ let a: number | undefined = undefined;\n    let b: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (a == undefined) {\n                a = lst[i];\n            } else\
    \ if (lst[i] > a) {\n                a = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (b == undefined) {\n                b = lst[i];\n\
    \            } else if (lst[i] < b) {\n                b = lst[i];\n         \
    \   }\n        }\n    }\n    return [a, b];\n}\n", "  let largest: number | undefined\
    \ = undefined;\n  let smallest: number | undefined = undefined;\n  for (let i\
    \ = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (largest === undefined)\
    \ {\n        largest = lst[i];\n      } else if (lst[i] > largest) {\n       \
    \ largest = lst[i];\n      }\n    } else if (lst[i] > 0) {\n      if (smallest\
    \ === undefined) {\n        smallest = lst[i];\n      } else if (lst[i] < smallest)\
    \ {\n        smallest = lst[i];\n      }\n    }\n  }\n  return [largest, smallest];\n\
    }\n", "    let smallest_positive = undefined;\n    let largest_negative = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largest_negative === undefined || lst[i] > largest_negative) {\n \
    \               largest_negative = lst[i];\n            }\n        } else if (lst[i]\
    \ > 0) {\n            if (smallest_positive === undefined || lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    let max_neg: number | undefined = undefined;\n\
    \    let min_pos: number | undefined = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (max_neg === undefined ||\
    \ lst[i] > max_neg) {\n                max_neg = lst[i];\n            }\n    \
    \    } else if (lst[i] > 0) {\n            if (min_pos === undefined || lst[i]\
    \ < min_pos) {\n                min_pos = lst[i];\n            }\n        }\n\
    \    }\n    return [max_neg, min_pos];\n}\n", "    let smallest: number | undefined\
    \ = undefined;\n    let largest: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] > 0) {\n            if (smallest\
    \ === undefined) {\n                smallest = lst[i];\n            } else if\
    \ (lst[i] < smallest) {\n                smallest = lst[i];\n            }\n \
    \       } else if (lst[i] < 0) {\n            if (largest === undefined) {\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest) {\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    let smallest_positive = undefined;\n    let\
    \ largest_negative = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n\
    \                smallest_positive = lst[i];\n            } else if (lst[i] <\
    \ smallest_positive) {\n                smallest_positive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let largestNegative: number\
    \ | undefined = undefined;\n    let smallestPositive: number | undefined = undefined;\n\
    \    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n     \
    \       if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let max_neg: number | undefined\
    \ = undefined;\n    let min_pos: number | undefined = undefined;\n    for (let\
    \ i = 0; i < lst.length; i++) {\n        if (lst[i] < 0) {\n            if (max_neg\
    \ === undefined || lst[i] > max_neg) {\n                max_neg = lst[i];\n  \
    \          }\n        } else if (lst[i] > 0) {\n            if (min_pos === undefined\
    \ || lst[i] < min_pos) {\n                min_pos = lst[i];\n            }\n \
    \       }\n    }\n    return [max_neg, min_pos];\n}\n", "    let largest_neg =\
    \ undefined;\n    let smallest_pos = undefined;\n    for (let i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0) {\n            if (largest_neg === undefined\
    \ || lst[i] > largest_neg) {\n                largest_neg = lst[i];\n        \
    \    }\n        } else if (lst[i] > 0) {\n            if (smallest_pos === undefined\
    \ || lst[i] < smallest_pos) {\n                smallest_pos = lst[i];\n      \
    \      }\n        }\n    }\n    return [largest_neg, smallest_pos];\n}\n", " \
    \   let smallest: number | undefined = undefined;\n    let largest: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ > 0) {\n            if (smallest === undefined) {\n                smallest\
    \ = lst[i];\n            } else if (lst[i] < smallest) {\n                smallest\
    \ = lst[i];\n            }\n        } else if (lst[i] < 0) {\n            if (largest\
    \ === undefined) {\n                largest = lst[i];\n            } else if (lst[i]\
    \ > largest) {\n                largest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    let smallest = undefined;\n\
    \    let largest = undefined;\n    for (let i = 0; i < lst.length; i++) {\n  \
    \      if (lst[i] > 0) {\n            if (smallest === undefined) {\n        \
    \        smallest = lst[i];\n            } else if (lst[i] < smallest) {\n   \
    \             smallest = lst[i];\n            }\n        } else if (lst[i] < 0)\
    \ {\n            if (largest === undefined) {\n                largest = lst[i];\n\
    \            } else if (lst[i] > largest) {\n                largest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ let smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] < 0) {\n            if (largest_negative === undefined) {\n\
    \                largest_negative = lst[i];\n            } else if (lst[i] > largest_negative)\
    \ {\n                largest_negative = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n    \
    \            smallest_positive = lst[i];\n            } else if (lst[i] < smallest_positive)\
    \ {\n                smallest_positive = lst[i];\n            }\n        }\n \
    \   }\n    return [largest_negative, smallest_positive];\n}\n", "    let largestNegative:\
    \ number | undefined = undefined;\n    let smallestPositive: number | undefined\
    \ = undefined;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i]\
    \ < 0) {\n            if (largestNegative === undefined) {\n                largestNegative\
    \ = lst[i];\n            } else if (lst[i] > largestNegative) {\n            \
    \    largestNegative = lst[i];\n            }\n        } else if (lst[i] > 0)\
    \ {\n            if (smallestPositive === undefined) {\n                smallestPositive\
    \ = lst[i];\n            } else if (lst[i] < smallestPositive) {\n           \
    \     smallestPositive = lst[i];\n            }\n        }\n    }\n    return\
    \ [largestNegative, smallestPositive];\n}\n", "    let neg = lst.filter(x => x\
    \ < 0);\n    let pos = lst.filter(x => x > 0);\n    return [neg.length > 0 ? Math.max(...neg)\
    \ : undefined, pos.length > 0 ? Math.min(...pos) : undefined];\n}\n", "    let\
    \ smallest_positive: number | undefined = undefined;\n    let largest_negative:\
    \ number | undefined = undefined;\n    for (let i = 0; i < lst.length; i++) {\n\
    \        if (lst[i] > 0) {\n            if (smallest_positive === undefined) {\n\
    \                smallest_positive = lst[i];\n            } else if (lst[i] <\
    \ smallest_positive) {\n                smallest_positive = lst[i];\n        \
    \    }\n        } else if (lst[i] < 0) {\n            if (largest_negative ===\
    \ undefined) {\n                largest_negative = lst[i];\n            } else\
    \ if (lst[i] > largest_negative) {\n                largest_negative = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

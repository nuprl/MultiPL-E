name: HumanEval_93_encode
language: ts
prompt: "//Write a function that takes a message, and encodes in such a \n// way that\
  \ it swaps case of all letters, replaces all vowels in \n// the message with the\
  \ letter that appears 2 places ahead of that \n// vowel in the english alphabet.\
  \ \n// Assume only letters. \n// Examples:\n// >>> encode(\"test\")\n// \"TGST\"\
  \n// >>> encode(\"This is a message\")\n// \"tHKS KS C MGSSCGG\"\nfunction encode(message:\
  \ string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = encode;\n  assert.deepEqual(candidate(\"TEST\"),\"\
  tgst\");\n  assert.deepEqual(candidate(\"Mudasir\"),\"mWDCSKR\");\n  assert.deepEqual(candidate(\"\
  YES\"),\"ygs\");\n  assert.deepEqual(candidate(\"This is a message\"),\"tHKS KS\
  \ C MGSSCGG\");\n  assert.deepEqual(candidate(\"I DoNt KnOw WhAt tO WrItE\"),\"\
  k dQnT kNqW wHcT Tq wRkTg\");\n}\n\ntest();"
completions: ["    let vowels = \"aeiou\";\n    let result = \"\";\n    for (let i\
    \ = 0; i < message.length; i++) {\n        let char = message[i];\n        if\
    \ (vowels.includes(char.toLowerCase())) {\n            let index = vowels.indexOf(char.toLowerCase());\n\
    \            let newIndex = (index + 2) % 5;\n            result += vowels[newIndex];\n\
    \        } else {\n            result += char;\n        }\n    }\n    return result;\n\
    }\n", "    let encodedMessage: string = \"\";\n    for (let i = 0; i < message.length;\
    \ i++) {\n        let currentLetter: string = message[i];\n        if (currentLetter\
    \ === currentLetter.toUpperCase()) {\n            encodedMessage += currentLetter.toLowerCase();\n\
    \        } else {\n            encodedMessage += currentLetter.toUpperCase();\n\
    \        }\n    }\n    return encodedMessage;\n}\n", "    let encodedMessage:\
    \ string = \"\";\n    let vowels: string = \"aeiou\";\n    for (let i: number\
    \ = 0; i < message.length; i++) {\n        let char: string = message[i];\n  \
    \      if (vowels.indexOf(char.toLowerCase()) !== -1) {\n            let index:\
    \ number = vowels.indexOf(char.toLowerCase());\n            if (index === 4) {\n\
    \                index = -1;\n            }\n            encodedMessage += vowels[index\
    \ + 2];\n        } else {\n            encodedMessage += char;\n        }\n  \
    \  }\n    return encodedMessage;\n}\n", "    let encodedMessage: string = \"\"\
    ;\n    for (let i = 0; i < message.length; i++) {\n        let charCode: number\
    \ = message.charCodeAt(i);\n        if (charCode >= 65 && charCode <= 90) {\n\
    \            encodedMessage += String.fromCharCode(charCode + 32);\n        }\
    \ else if (charCode >= 97 && charCode <= 122) {\n            encodedMessage +=\
    \ String.fromCharCode(charCode - 32);\n        } else {\n            encodedMessage\
    \ += message[i];\n        }\n    }\n    return encodedMessage;\n}\n", "    let\
    \ result: string = \"\";\n    let vowels: string = \"aeiou\";\n    let alphabet:\
    \ string = \"abcdefghijklmnopqrstuvwxyz\";\n    for (let i: number = 0; i < message.length;\
    \ i++) {\n        if (vowels.indexOf(message[i]) !== -1) {\n            result\
    \ += alphabet[(alphabet.indexOf(message[i]) + 2) % 26];\n        } else if (message[i]\
    \ === message[i].toUpperCase()) {\n            result += message[i].toLowerCase();\n\
    \        } else {\n            result += message[i].toUpperCase();\n        }\n\
    \    }\n    return result;\n}\n", "    let encodedMessage: string = \"\";\n  \
    \  let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\";\n    for (let i: number\
    \ = 0; i < message.length; i++) {\n        let currentLetter: string = message[i];\n\
    \        if (currentLetter === currentLetter.toUpperCase()) {\n            encodedMessage\
    \ += currentLetter.toLowerCase();\n        } else {\n            encodedMessage\
    \ += currentLetter.toUpperCase();\n        }\n        if (alphabet.indexOf(currentLetter)\
    \ !== -1) {\n            let index: number = alphabet.indexOf(currentLetter);\n\
    \            if (index + 2 > alphabet.length - 1) {\n                encodedMessage\
    \ += alphabet[index + 2 - alphabet.length];\n            } else {\n          \
    \      encodedMessage += alphabet[index + 2];\n            }\n        }\n    }\n\
    \    return encodedMessage;\n}\n", "    let encodedMessage: string = \"\";\n \
    \   for (let i = 0; i < message.length; i++) {\n        let char: string = message[i];\n\
    \        if (char === char.toUpperCase()) {\n            encodedMessage += char.toLowerCase();\n\
    \        } else {\n            encodedMessage += char.toUpperCase();\n       \
    \ }\n        if (char === \"a\" || char === \"A\") {\n            encodedMessage\
    \ += \"c\";\n        } else if (char === \"e\" || char === \"E\") {\n        \
    \    encodedMessage += \"g\";\n        } else if (char === \"i\" || char === \"\
    I\") {\n            encodedMessage += \"k\";\n        } else if (char === \"o\"\
    \ || char === \"O\") {\n            encodedMessage += \"q\";\n        } else if\
    \ (char === \"u\" || char === \"U\") {\n            encodedMessage += \"y\";\n\
    \        }\n    }\n    return encodedMessage;\n}\n", "    let result: string =\
    \ \"\";\n    let vowels: string = \"aeiou\";\n    let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    for (let i: number = 0; i < message.length; i++) {\n        let char: string\
    \ = message[i];\n        if (vowels.indexOf(char) > -1) {\n            let index:\
    \ number = alphabet.indexOf(char);\n            result += alphabet[index + 2];\n\
    \        } else if (alphabet.indexOf(char) > -1) {\n            let index: number\
    \ = alphabet.indexOf(char);\n            result += alphabet[index + 2];\n    \
    \    } else {\n            result += char;\n        }\n    }\n    return result;\n\
    }\n", "    let vowels = \"aeiou\";\n    let encoded = \"\";\n    for (let i =\
    \ 0; i < message.length; i++) {\n        let char = message[i];\n        if (vowels.includes(char.toLowerCase()))\
    \ {\n            let index = vowels.indexOf(char.toLowerCase());\n           \
    \ let newChar = vowels[(index + 2) % 5];\n            encoded += newChar.toUpperCase();\n\
    \        } else {\n            encoded += char.toUpperCase();\n        }\n   \
    \ }\n    return encoded;\n}\n", "    let encodedMessage: string = \"\";\n    let\
    \ vowels: string = \"aeiou\";\n    let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    for (let i: number = 0; i < message.length; i++) {\n        let currentChar:\
    \ string = message[i];\n        let currentCharIndex: number = alphabet.indexOf(currentChar.toLowerCase());\n\
    \        if (currentCharIndex === -1) {\n            encodedMessage += currentChar;\n\
    \        } else if (currentChar === currentChar.toUpperCase()) {\n           \
    \ encodedMessage += alphabet[currentCharIndex].toUpperCase();\n        } else\
    \ if (vowels.indexOf(currentChar) !== -1) {\n            encodedMessage += alphabet[(currentCharIndex\
    \ + 2) % 26];\n        } else {\n            encodedMessage += alphabet[currentCharIndex];\n\
    \        }\n    }\n    return encodedMessage;\n}\n", "    let encodedMessage:\
    \ string = \"\";\n    let vowels: string = \"aeiou\";\n    let alphabet: string\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    for (let i: number = 0; i < message.length;\
    \ i++) {\n        let letter: string = message[i];\n        if (vowels.indexOf(letter)\
    \ !== -1) {\n            let index: number = alphabet.indexOf(letter);\n     \
    \       let newIndex: number = index + 2;\n            if (newIndex > 25) {\n\
    \                newIndex = newIndex - 26;\n            }\n            encodedMessage\
    \ += alphabet[newIndex];\n        } else if (letter === letter.toUpperCase())\
    \ {\n            encodedMessage += letter.toLowerCase();\n        } else {\n \
    \           encodedMessage += letter.toUpperCase();\n        }\n    }\n    return\
    \ encodedMessage;\n}\n", "    let encodedMessage: string = \"\";\n    for (let\
    \ i = 0; i < message.length; i++) {\n        let char = message[i];\n        if\
    \ (char === char.toUpperCase()) {\n            char = char.toLowerCase();\n  \
    \      } else {\n            char = char.toUpperCase();\n        }\n        if\
    \ (char === \"a\") {\n            char = \"c\";\n        } else if (char === \"\
    e\") {\n            char = \"g\";\n        } else if (char === \"i\") {\n    \
    \        char = \"k\";\n        } else if (char === \"o\") {\n            char\
    \ = \"q\";\n        } else if (char === \"u\") {\n            char = \"y\";\n\
    \        }\n        encodedMessage += char;\n    }\n    return encodedMessage;\n\
    }\n", "    let encodedMessage: string = \"\";\n    let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    for (let i: number = 0; i < message.length; i++) {\n        let letter:\
    \ string = message[i];\n        let index: number = alphabet.indexOf(letter.toLowerCase());\n\
    \        if (index === -1) {\n            encodedMessage += letter;\n        }\
    \ else {\n            let newIndex: number = index + 2;\n            if (newIndex\
    \ > alphabet.length - 1) {\n                newIndex -= alphabet.length;\n   \
    \         }\n            if (letter === letter.toUpperCase()) {\n            \
    \    encodedMessage += alphabet[newIndex].toUpperCase();\n            } else {\n\
    \                encodedMessage += alphabet[newIndex];\n            }\n      \
    \  }\n    }\n    return encodedMessage;\n}\n", "    let encodedMessage: string\
    \ = '';\n    const vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n    for (let\
    \ i = 0; i < message.length; i++) {\n        const char: string = message[i];\n\
    \        if (vowels.includes(char.toLowerCase())) {\n            const index:\
    \ number = vowels.indexOf(char.toLowerCase());\n            const newIndex: number\
    \ = (index + 2) % vowels.length;\n            encodedMessage += char.toUpperCase()\
    \ === char ? vowels[newIndex].toUpperCase() : vowels[newIndex];\n        } else\
    \ {\n            encodedMessage += char.toUpperCase() === char ? char.toLowerCase()\
    \ : char.toUpperCase();\n        }\n    }\n    return encodedMessage;\n}\n\nconsole.log(encode('test'));\n\
    console.log(encode('This is a message'));", "    let result: string = \"\";\n\
    \    let vowels: string = \"aeiou\";\n    let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    for (let i: number = 0; i < message.length; i++) {\n        let currentChar:\
    \ string = message[i];\n        if (currentChar === currentChar.toUpperCase())\
    \ {\n            result += currentChar.toLowerCase();\n        } else {\n    \
    \        result += currentChar.toUpperCase();\n        }\n        if (vowels.includes(currentChar))\
    \ {\n            let index: number = alphabet.indexOf(currentChar);\n        \
    \    result = result.slice(0, result.length - 1) + alphabet[index + 2];\n    \
    \    }\n    }\n    return result;\n}\n", "    let result: string = \"\";\n   \
    \ for (let i = 0; i < message.length; i++) {\n        let char: string = message[i];\n\
    \        if (char === char.toUpperCase()) {\n            char = char.toLowerCase();\n\
    \        } else {\n            char = char.toUpperCase();\n        }\n       \
    \ if (char === \"a\") {\n            char = \"c\";\n        } else if (char ===\
    \ \"e\") {\n            char = \"g\";\n        } else if (char === \"i\") {\n\
    \            char = \"k\";\n        } else if (char === \"o\") {\n           \
    \ char = \"q\";\n        } else if (char === \"u\") {\n            char = \"y\"\
    ;\n        }\n        result += char;\n    }\n    return result;\n}\n", "    let\
    \ encodedMessage: string = \"\";\n    let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    for (let i: number = 0; i < message.length; i++) {\n        let letter:\
    \ string = message[i];\n        let letterIndex: number = alphabet.indexOf(letter.toLowerCase());\n\
    \        if (letterIndex === -1) {\n            encodedMessage += letter;\n  \
    \      } else {\n            let encodedLetter: string = alphabet[(letterIndex\
    \ + 2) % alphabet.length];\n            if (letter === letter.toUpperCase()) {\n\
    \                encodedLetter = encodedLetter.toUpperCase();\n            }\n\
    \            encodedMessage += encodedLetter;\n        }\n    }\n    return encodedMessage;\n\
    }\n", "    let encodedMessage: string = \"\";\n    let vowels: string = \"aeiou\"\
    ;\n    let alphabet: string = \"abcdefghijklmnopqrstuvwxyz\";\n    for (let i:\
    \ number = 0; i < message.length; i++) {\n        let letter: string = message[i];\n\
    \        if (vowels.indexOf(letter) !== -1) {\n            let index: number =\
    \ alphabet.indexOf(letter);\n            let newIndex: number = index + 2;\n \
    \           if (newIndex > 25) {\n                newIndex = newIndex - 26;\n\
    \            }\n            encodedMessage += alphabet[newIndex];\n        } else\
    \ if (letter === letter.toUpperCase()) {\n            encodedMessage += letter.toLowerCase();\n\
    \        } else {\n            encodedMessage += letter.toUpperCase();\n     \
    \   }\n    }\n    return encodedMessage;\n}\n", "  let result: string = '';\n\
    \  const vowels: string[] = ['a', 'e', 'i', 'o', 'u'];\n  for (let i = 0; i <\
    \ message.length; i++) {\n    if (vowels.includes(message[i].toLowerCase())) {\n\
    \      result += String.fromCharCode(message[i].charCodeAt(0) + 2);\n    } else\
    \ {\n      result += message[i];\n    }\n  }\n  return result;\n}\n", "    let\
    \ encodedMessage: string = \"\";\n    let vowels: string = \"aeiou\";\n    let\
    \ alphabet: string = \"abcdefghijklmnopqrstuvwxyz\";\n    for (let i: number =\
    \ 0; i < message.length; i++) {\n        if (message[i] === message[i].toUpperCase())\
    \ {\n            encodedMessage += message[i].toLowerCase();\n        } else {\n\
    \            encodedMessage += message[i].toUpperCase();\n        }\n        if\
    \ (vowels.includes(encodedMessage[i])) {\n            encodedMessage = encodedMessage.replace(encodedMessage[i],\
    \ alphabet[alphabet.indexOf(encodedMessage[i]) + 2]);\n        }\n    }\n    return\
    \ encodedMessage;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

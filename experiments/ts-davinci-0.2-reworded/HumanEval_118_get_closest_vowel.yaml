name: HumanEval_118_get_closest_vowel
language: ts
prompt: "//You are given a word. Your task is to find the closest vowel that stands\
  \ between \n// two consonants from the right side of the word (case sensitive).\n\
  // Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n// find any vowel met the above condition. \n// You may assume that the\
  \ given string contains English letter only.\n// Example:\n// >>> get_closest_vowel(\"\
  yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\")\n// \"U\"\n// >>> get_closest_vowel(\"\
  quick\")\n// \"\"\n// >>> get_closest_vowel(\"ab\")\n// \"\"\nfunction get_closest_vowel(word:\
  \ string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
  yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
  easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
  ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
  most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
  ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
  anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
  Above\"),\"o\");\n}\n\ntest();"
completions: ["    const vowels = \"aeiouAEIOU\";\n    const consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let closest_vowel = \"\";\n    let closest_vowel_index = word.length;\n\
    \    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            if (consonants.indexOf(word[i - 1]) !== -1 && consonants.indexOf(word[i\
    \ + 1]) !== -1) {\n                if (i < closest_vowel_index) {\n          \
    \          closest_vowel = word[i];\n                    closest_vowel_index =\
    \ i;\n                }\n            }\n        }\n    }\n    return closest_vowel;\n\
    }\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let closestVowel = \"\";\n    for (let i = word.length - 1; i >= 0; i--)\
    \ {\n        if (consonants.indexOf(word[i]) !== -1) {\n            for (let j\
    \ = i + 1; j < word.length; j++) {\n                if (vowels.indexOf(word[j])\
    \ !== -1) {\n                    closestVowel = word[j];\n                   \
    \ break;\n                }\n            }\n            break;\n        }\n  \
    \  }\n    return closestVowel;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let vowel\
    \ = \"\";\n    let consonant = \"\";\n    let result = \"\";\n    for (let i =\
    \ word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            vowel = word[i];\n            break;\n        }\n    }\n    for\
    \ (let i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonant = word[i];\n            break;\n        }\n\
    \    }\n    if (vowel && consonant) {\n        result = vowel;\n    }\n    return\
    \ result;\n}\nconsole.log(get_closest_vowel(\"yogurt\"));\nconsole.log(get_closest_vowel(\"\
    FULL\"));\nconsole.log(get_closest_vowel(\"quick\"));\nconsole.log(get_closest_vowel(\"\
    ab\"));\n", "    let vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let\
    \ closestDistance = word.length;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) != -1) {\n            let distance = word.length\
    \ - i;\n            if (distance < closestDistance) {\n                closestDistance\
    \ = distance;\n                closestVowel = word[i];\n            }\n      \
    \  }\n    }\n    return closestVowel;\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let closest_vowel = \"\";\n    let closest_vowel_index = word.length;\n\
    \    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ >= 0) {\n            if (i > 0 && i < word.length - 1) {\n                if\
    \ (vowels.indexOf(word[i - 1]) < 0 && vowels.indexOf(word[i + 1]) < 0) {\n   \
    \                 if (i < closest_vowel_index) {\n                        closest_vowel\
    \ = word[i];\n                        closest_vowel_index = i;\n             \
    \       }\n                }\n            }\n        }\n    }\n    return closest_vowel;\n\
    }\n", "    let vowels = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n    let closest_vowel = \"\";\n    let closest_vowel_index = word.length;\n\
    \    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            if (consonants.indexOf(word[i - 1]) !== -1 && consonants.indexOf(word[i\
    \ + 1]) !== -1) {\n                if (i < closest_vowel_index) {\n          \
    \          closest_vowel_index = i;\n                    closest_vowel = word[i];\n\
    \                }\n            }\n        }\n    }\n    return closest_vowel;\n\
    }\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let closest_vowel = \"\";\n    let closest_vowel_index = word.length;\n\
    \    for (let i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
    \ > -1) {\n            for (let j = i; j >= 0; j--) {\n                if (vowels.indexOf(word[j])\
    \ > -1) {\n                    if (i - j < closest_vowel_index) {\n          \
    \              closest_vowel_index = i - j;\n                        closest_vowel\
    \ = word[j];\n                    }\n                    break;\n            \
    \    }\n            }\n        }\n    }\n    return closest_vowel;\n}\n", "  \
    \  let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let closestVowel = \"\";\n    let closestVowelIndex = -1;\n    for (let\
    \ i = word.length - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
    \ > -1) {\n            for (let j = i + 1; j < word.length; j++) {\n         \
    \       if (vowels.indexOf(word[j]) > -1) {\n                    if (closestVowelIndex\
    \ === -1 || j < closestVowelIndex) {\n                        closestVowelIndex\
    \ = j;\n                        closestVowel = word[j];\n                    }\n\
    \                }\n            }\n        }\n    }\n    return closestVowel;\n\
    }\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let closest_vowel = \"\";\n    let closest_vowel_index = 0;\n    let closest_consonant_index\
    \ = 0;\n    let closest_consonant = \"\";\n    let word_length = word.length;\n\
    \    let i = 0;\n    while (i < word_length) {\n        if (vowels.indexOf(word[i])\
    \ > -1) {\n            closest_vowel = word[i];\n            closest_vowel_index\
    \ = i;\n            break;\n        }\n        i++;\n    }\n    if (closest_vowel\
    \ == \"\") {\n        return \"\";\n    }\n    i = word_length - 1;\n    while\
    \ (i > 0) {\n        if (consonants.indexOf(word[i]) > -1) {\n            closest_consonant\
    \ = word[i];\n            closest_consonant_index = i;\n            break;\n \
    \       }\n        i--;\n    }\n    if (closest_consonant == \"\") {\n       \
    \ return \"\";\n    }\n    if (closest_vowel_index < closest_consonant_index)\
    \ {\n        return closest_vowel;\n    }\n    return \"\";\n}\n", "    let vowels\
    \ = \"aeiouAEIOU\";\n    let closest_vowel = \"\";\n    let closest_index = word.length;\n\
    \    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ != -1) {\n            if (i < closest_index) {\n                closest_index\
    \ = i;\n                closest_vowel = word[i];\n            }\n        }\n \
    \   }\n    return closest_vowel;\n}\n", "    let vowels = \"aeiouAEIOU\";\n  \
    \  let closest_vowel = \"\";\n    let closest_vowel_index = word.length;\n   \
    \ for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ != -1) {\n            if (i < closest_vowel_index) {\n                closest_vowel_index\
    \ = i;\n                closest_vowel = word[i];\n            }\n        }\n \
    \   }\n    return closest_vowel;\n}\n", "    let vowels = \"aeiouAEIOU\";\n  \
    \  let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let closestVowel\
    \ = \"\";\n    let closestVowelIndex = -1;\n    let closestConsonantIndex = -1;\n\
    \    let closestConsonant = \"\";\n    let wordArray = word.split(\"\");\n   \
    \ for (let i = wordArray.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArray[i])\
    \ > -1) {\n            closestVowel = wordArray[i];\n            closestVowelIndex\
    \ = i;\n            break;\n        }\n    }\n    for (let i = closestVowelIndex\
    \ - 1; i >= 0; i--) {\n        if (consonants.indexOf(wordArray[i]) > -1) {\n\
    \            closestConsonant = wordArray[i];\n            closestConsonantIndex\
    \ = i;\n            break;\n        }\n    }\n    if (closestVowelIndex > closestConsonantIndex)\
    \ {\n        return closestVowel;\n    } else {\n        return \"\";\n    }\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let wordArr\
    \ = word.split(\"\");\n    let vowelIndex = [];\n    let consonantIndex = [];\n\
    \    let result = \"\";\n    for (let i = 0; i < wordArr.length; i++) {\n    \
    \    if (vowels.includes(wordArr[i])) {\n            vowelIndex.push(i);\n   \
    \     } else {\n            consonantIndex.push(i);\n        }\n    }\n    if\
    \ (vowelIndex.length == 0 || consonantIndex.length == 0) {\n        return result;\n\
    \    }\n    for (let i = 0; i < vowelIndex.length; i++) {\n        if (vowelIndex[i]\
    \ > consonantIndex[consonantIndex.length - 1]) {\n            result = wordArr[vowelIndex[i]];\n\
    \            break;\n        }\n    }\n    return result;\n}\n", "    let vowels\
    \ = \"aeiouAEIOU\";\n    let result = \"\";\n    let index = word.length - 1;\n\
    \    while (index >= 0) {\n        if (vowels.indexOf(word[index]) >= 0) {\n \
    \           result = word[index];\n            if (index < word.length - 1 &&\
    \ vowels.indexOf(word[index + 1]) < 0) {\n                break;\n           \
    \ }\n        }\n        index--;\n    }\n    return result;\n}\n", "    let vowels\
    \ = \"aeiou\";\n    let consonants = \"bcdfghjklmnpqrstvwxyz\";\n    let result\
    \ = \"\";\n    let vowel_index = 0;\n    let consonant_index = 0;\n    for (let\
    \ i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) >=\
    \ 0) {\n            vowel_index = i;\n            break;\n        }\n    }\n \
    \   for (let i = vowel_index - 1; i >= 0; i--) {\n        if (consonants.indexOf(word[i])\
    \ >= 0) {\n            consonant_index = i;\n            break;\n        }\n \
    \   }\n    if (consonant_index > 0) {\n        result = word[vowel_index];\n \
    \   }\n    return result;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let result = \"\";\n\
    \    let index = word.length - 1;\n    while (index >= 0) {\n        if (consonants.indexOf(word[index])\
    \ >= 0) {\n            if (index === word.length - 1) {\n                index--;\n\
    \                continue;\n            }\n            if (vowels.indexOf(word[index\
    \ + 1]) >= 0) {\n                result = word[index + 1];\n                break;\n\
    \            }\n        }\n        index--;\n    }\n    return result;\n}\n",
  "    const vowels = \"aeiou\";\n    let closestVowel = \"\";\n    let closestDistance\
    \ = word.length;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            let distance = word.length - i;\n            if (distance\
    \ < closestDistance) {\n                closestDistance = distance;\n        \
    \        closestVowel = word[i];\n            }\n        }\n    }\n    return\
    \ closestVowel;\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    let result = '';\n    let wordArr = word.split('');\n\
    \    let vowelIndex = 0;\n    let consonantIndex = 0;\n    for (let i = wordArr.length\
    \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(wordArr[i]) > -1) {\n      \
    \      vowelIndex = i;\n            break;\n        }\n    }\n    for (let i =\
    \ vowelIndex - 1; i >= 0; i--) {\n        if (consonants.indexOf(wordArr[i]) >\
    \ -1) {\n            consonantIndex = i;\n            break;\n        }\n    }\n\
    \    if (vowelIndex > consonantIndex) {\n        result = wordArr[vowelIndex];\n\
    \    }\n    return result;\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    let consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    let word_array = word.split('');\n\
    \    let closest_vowel = '';\n    let closest_vowel_index = 0;\n    let closest_consonant_index\
    \ = 0;\n    let closest_consonant = '';\n    for (let i = 0; i < word_array.length;\
    \ i++) {\n        if (vowels.includes(word_array[i])) {\n            closest_vowel\
    \ = word_array[i];\n            closest_vowel_index = i;\n            break;\n\
    \        }\n    }\n    for (let i = closest_vowel_index; i < word_array.length;\
    \ i++) {\n        if (consonants.includes(word_array[i])) {\n            closest_consonant\
    \ = word_array[i];\n            closest_consonant_index = i;\n            break;\n\
    \        }\n    }\n    if (closest_vowel_index < closest_consonant_index) {\n\
    \        return closest_vowel;\n    } else {\n        return '';\n    }\n}\n",
  "    let vowels = \"aeiouAEIOU\";\n    let closest_vowel = \"\";\n    let closest_distance\
    \ = word.length;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ >= 0) {\n            let distance = word.length - i;\n            if (distance\
    \ < closest_distance) {\n                closest_distance = distance;\n      \
    \          closest_vowel = word[i];\n            }\n        }\n    }\n    return\
    \ closest_vowel;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

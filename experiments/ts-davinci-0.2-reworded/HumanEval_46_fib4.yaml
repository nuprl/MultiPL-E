name: HumanEval_46_fib4
language: ts
prompt: "//The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2) -> 2\n\
  // fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
  // Please write a function to efficiently compute the n-th element of the fib4 number\
  \ sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n// 8\n\
  // >>> fib4(7)\n// 14\nfunction fib4(n: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = fib4;\n  assert.deepEqual(candidate(5),4);\n  assert.deepEqual(candidate(8),28);\n\
  \  assert.deepEqual(candidate(10),104);\n  assert.deepEqual(candidate(12),386);\n\
  }\n\ntest();"
completions: ["    let a = 0;\n    let b = 0;\n    let c = 2;\n    let d = 0;\n  \
    \  if (n === 0) {\n        return a;\n    }\n    if (n === 1) {\n        return\
    \ b;\n    }\n    if (n === 2) {\n        return c;\n    }\n    if (n === 3) {\n\
    \        return d;\n    }\n    for (let i = 4; i <= n; i++) {\n        let temp\
    \ = a + b + c + d;\n        a = b;\n        b = c;\n        c = d;\n        d\
    \ = temp;\n    }\n    return d;\n}\n", "    let a = 0, b = 0, c = 2, d = 0, e\
    \ = 0;\n    if (n == 0) return a;\n    if (n == 1) return b;\n    if (n == 2)\
    \ return c;\n    if (n == 3) return d;\n    for (let i = 4; i <= n; i++) {\n \
    \       e = a + b + c + d;\n        a = b;\n        b = c;\n        c = d;\n \
    \       d = e;\n    }\n    return e;\n}\n", "  if (n < 2) {\n    return 0;\n \
    \ }\n  if (n === 2) {\n    return 2;\n  }\n  let a = 0;\n  let b = 0;\n  let c\
    \ = 2;\n  let d = 0;\n  for (let i = 3; i <= n; i++) {\n    d = a + b + c;\n \
    \   a = b;\n    b = c;\n    c = d;\n  }\n  return d;\n}\n", "  if (n < 0) {\n\
    \    throw new Error(\"n must be a non-negative number\");\n  }\n  if (n === 0)\
    \ {\n    return 0;\n  }\n  if (n === 1) {\n    return 0;\n  }\n  if (n === 2)\
    \ {\n    return 2;\n  }\n  if (n === 3) {\n    return 0;\n  }\n  let a = 0;\n\
    \  let b = 0;\n  let c = 2;\n  let d = 0;\n  for (let i = 4; i <= n; i++) {\n\
    \    const temp = a + b + c + d;\n    a = b;\n    b = c;\n    c = d;\n    d =\
    \ temp;\n  }\n  return a + b + c + d;\n}\n", "    let a = 0;\n    let b = 0;\n\
    \    let c = 2;\n    let d = 0;\n    if (n == 0) {\n        return a;\n    }\n\
    \    if (n == 1) {\n        return b;\n    }\n    if (n == 2) {\n        return\
    \ c;\n    }\n    if (n == 3) {\n        return d;\n    }\n    for (let i = 4;\
    \ i <= n; i++) {\n        let temp = a + b + c + d;\n        a = b;\n        b\
    \ = c;\n        c = d;\n        d = temp;\n    }\n    return d;\n}\n", "  if (n\
    \ < 3) {\n    return n * 2;\n  }\n  let a = 0;\n  let b = 0;\n  let c = 2;\n \
    \ let d = 2;\n  for (let i = 3; i < n; i++) {\n    let temp = d;\n    d = a +\
    \ b + c + d;\n    a = b;\n    b = c;\n    c = temp;\n  }\n  return d;\n}\n", " \
    \   if (n < 0) {\n        throw new Error(\"n must be non-negative\");\n    }\n\
    \    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n        return\
    \ 0;\n    }\n    if (n === 2) {\n        return 2;\n    }\n    if (n === 3) {\n\
    \        return 0;\n    }\n    let nMinus1 = 0;\n    let nMinus2 = 0;\n    let\
    \ nMinus3 = 2;\n    let nMinus4 = 0;\n    let result = 0;\n    for (let i = 4;\
    \ i <= n; i++) {\n        result = nMinus1 + nMinus2 + nMinus3 + nMinus4;\n  \
    \      nMinus4 = nMinus3;\n        nMinus3 = nMinus2;\n        nMinus2 = nMinus1;\n\
    \        nMinus1 = result;\n    }\n    return result;\n}\n", "  let a = 0;\n \
    \ let b = 0;\n  let c = 2;\n  let d = 0;\n  for (let i = 3; i <= n; i++) {\n \
    \   d = a + b + c;\n    a = b;\n    b = c;\n    c = d;\n  }\n  return d;\n}\n",
  "  if (n < 2) {\n    return 0;\n  }\n  if (n === 2) {\n    return 2;\n  }\n  let\
    \ a = 0;\n  let b = 0;\n  let c = 2;\n  let d = 0;\n  for (let i = 3; i <= n;\
    \ i++) {\n    d = a + b + c;\n    a = b;\n    b = c;\n    c = d;\n  }\n  return\
    \ d;\n}\n", "    if (n === 0) {\n        return 0;\n    }\n    if (n === 1) {\n\
    \        return 0;\n    }\n    if (n === 2) {\n        return 2;\n    }\n    if\
    \ (n === 3) {\n        return 0;\n    }\n    let a = 0;\n    let b = 0;\n    let\
    \ c = 2;\n    let d = 0;\n    for (let i = 4; i <= n; i++) {\n        let temp\
    \ = a + b + c + d;\n        a = b;\n        b = c;\n        c = d;\n        d\
    \ = temp;\n    }\n    return a + b + c + d;\n}\n", "    let a = 0;\n    let b\
    \ = 0;\n    let c = 2;\n    let d = 0;\n    for (let i = 3; i <= n; i++) {\n \
    \       d = a + b + c;\n        a = b;\n        b = c;\n        c = d;\n    }\n\
    \    return d;\n}\n", "  if (n === 0) {\n    return 0;\n  } else if (n === 1)\
    \ {\n    return 0;\n  } else if (n === 2) {\n    return 2;\n  } else if (n ===\
    \ 3) {\n    return 0;\n  } else {\n    let a = 0;\n    let b = 0;\n    let c =\
    \ 2;\n    let d = 0;\n    let e = 0;\n    for (let i = 4; i <= n; i++) {\n   \
    \   e = a + b + c + d;\n      a = b;\n      b = c;\n      c = d;\n      d = e;\n\
    \    }\n    return e;\n  }\n}\n", "  let a = 0;\n  let b = 0;\n  let c = 2;\n\
    \  let d = 0;\n  for (let i = 3; i <= n; i++) {\n    d = a + b + c;\n    a = b;\n\
    \    b = c;\n    c = d;\n  }\n  return d;\n}\n", "  if (n === 0) {\n    return\
    \ 0;\n  }\n  if (n === 1) {\n    return 0;\n  }\n  if (n === 2) {\n    return\
    \ 2;\n  }\n  if (n === 3) {\n    return 0;\n  }\n  let a = 0;\n  let b = 0;\n\
    \  let c = 2;\n  let d = 0;\n  for (let i = 4; i <= n; i++) {\n    const temp\
    \ = a + b + c + d;\n    a = b;\n    b = c;\n    c = d;\n    d = temp;\n  }\n \
    \ return a + b + c + d;\n}\n", "  if (n === 0) {\n    return 0;\n  }\n  if (n\
    \ === 1) {\n    return 0;\n  }\n  if (n === 2) {\n    return 2;\n  }\n  if (n\
    \ === 3) {\n    return 0;\n  }\n  let a = 0;\n  let b = 0;\n  let c = 2;\n  let\
    \ d = 0;\n  for (let i = 4; i <= n; i++) {\n    let temp = a + b + c + d;\n  \
    \  a = b;\n    b = c;\n    c = d;\n    d = temp;\n  }\n  return a + b + c + d;\n\
    }\n", "  let a = 0;\n  let b = 0;\n  let c = 2;\n  let d = 0;\n  let e = 0;\n\
    \  for (let i = 3; i <= n; i++) {\n    e = a + b + c + d;\n    a = b;\n    b =\
    \ c;\n    c = d;\n    d = e;\n  }\n  return e;\n}\n", "    if (n === 0) {\n  \
    \      return 0;\n    }\n    if (n === 1) {\n        return 0;\n    }\n    if\
    \ (n === 2) {\n        return 2;\n    }\n    if (n === 3) {\n        return 0;\n\
    \    }\n    let a = 0;\n    let b = 0;\n    let c = 2;\n    let d = 0;\n    for\
    \ (let i = 4; i <= n; i++) {\n        let temp = a + b + c + d;\n        a = b;\n\
    \        b = c;\n        c = d;\n        d = temp;\n    }\n    return a + b +\
    \ c + d;\n}\n", "    let a = 0;\n    let b = 0;\n    let c = 2;\n    let d = 0;\n\
    \    for (let i = 3; i <= n; i++) {\n        d = a + b + c;\n        a = b;\n\
    \        b = c;\n        c = d;\n    }\n    return d;\n}\n", "    if (n < 0) {\n\
    \        throw new Error(\"n must be >= 0\");\n    }\n    if (n <= 1) {\n    \
    \    return 0;\n    }\n    if (n == 2) {\n        return 2;\n    }\n    if (n\
    \ == 3) {\n        return 0;\n    }\n    let a = 0;\n    let b = 0;\n    let c\
    \ = 2;\n    let d = 0;\n    for (let i = 4; i <= n; i++) {\n        let e = a\
    \ + b + c + d;\n        a = b;\n        b = c;\n        c = d;\n        d = e;\n\
    \    }\n    return d;\n}\n", "  if (n === 0) {\n    return 0;\n  }\n  if (n ===\
    \ 1) {\n    return 0;\n  }\n  if (n === 2) {\n    return 2;\n  }\n  if (n ===\
    \ 3) {\n    return 0;\n  }\n  let a = 0;\n  let b = 0;\n  let c = 2;\n  let d\
    \ = 0;\n  for (let i = 4; i <= n; i++) {\n    let temp = a + b + c + d;\n    a\
    \ = b;\n    b = c;\n    c = d;\n    d = temp;\n  }\n  return a + b + c + d;\n\
    }\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

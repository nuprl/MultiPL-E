name: HumanEval_141_file_name_check
language: ts
prompt: "//Create a function which takes a string representing a file's name, and\
  \ returns\n// 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  // A file's name is considered to be valid if and only if all the following conditions\
  \ \n// are met:\n// - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n// - The file's name contains exactly one dot '.'\n// - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n// the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n// - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n// Examples:\n// >>> file_name_check(\"\
  example.txt\")\n// \"Yes\"\n// >>> file_name_check(\"1example.dll\")\n// \"No\"\n\
  function file_name_check(file_name: string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = file_name_check;\n  assert.deepEqual(candidate(\"\
  example.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"1example.dll\"),\"No\"\
  );\n  assert.deepEqual(candidate(\"s1sdf3.asd\"),\"No\");\n  assert.deepEqual(candidate(\"\
  K.dll\"),\"Yes\");\n  assert.deepEqual(candidate(\"MY16FILE3.exe\"),\"Yes\");\n\
  \  assert.deepEqual(candidate(\"His12FILE94.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  _Y.txt\"),\"No\");\n  assert.deepEqual(candidate(\"?aREYA.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  /this_is_valid.dll\"),\"No\");\n  assert.deepEqual(candidate(\"this_is_valid.wow\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"this_is_valid.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"\
  this_is_valid.txtexe\"),\"No\");\n  assert.deepEqual(candidate(\"#this2_i4s_5valid.ten\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"@this1_is6_valid.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  this_is_12valid.6exe4.txt\"),\"No\");\n  assert.deepEqual(candidate(\"all.exe.txt\"\
  ),\"No\");\n  assert.deepEqual(candidate(\"I563_No.exe\"),\"Yes\");\n  assert.deepEqual(candidate(\"\
  Is3youfault.txt\"),\"Yes\");\n  assert.deepEqual(candidate(\"no_one#knows.dll\"\
  ),\"Yes\");\n  assert.deepEqual(candidate(\"1I563_Yes3.exe\"),\"No\");\n  assert.deepEqual(candidate(\"\
  I563_Yes3.txtt\"),\"No\");\n  assert.deepEqual(candidate(\"final..txt\"),\"No\"\
  );\n  assert.deepEqual(candidate(\"final132\"),\"No\");\n  assert.deepEqual(candidate(\"\
  _f4indsartal132.\"),\"No\");\n  assert.deepEqual(candidate(\".txt\"),\"No\");\n\
  \  assert.deepEqual(candidate(\"s.\"),\"No\");\n}\n\ntest();"
completions: ["    let count = 0;\n    let dot_count = 0;\n    let dot_index = 0;\n\
    \    let valid_extensions = ['txt', 'exe', 'dll'];\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n        \
    \    count++;\n        }\n        if (file_name[i] == '.') {\n            dot_count++;\n\
    \            dot_index = i;\n        }\n    }\n    if (count > 3 || dot_count\
    \ != 1 || file_name[0] < 'a' || file_name[0] > 'z' ||\n        file_name[0] <\
    \ 'A' || file_name[0] > 'Z' || file_name.substring(dot_index + 1) != valid_extensions[0]\
    \ &&\n        file_name.substring(dot_index + 1) != valid_extensions[1] &&\n \
    \       file_name.substring(dot_index + 1) != valid_extensions[2]) {\n       \
    \ return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let dot_count = 0;\n    let digit_count = 0;\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = false;\n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i]\
    \ === '.') {\n            dot_count++;\n        }\n        if (file_name[i] >=\
    \ '0' && file_name[i] <= '9') {\n            digit_count++;\n        }\n    }\n\
    \    for (let i = 0; i < valid_extensions.length; i++) {\n        if (extension\
    \ === valid_extensions[i]) {\n            valid_extension = true;\n        }\n\
    \    }\n    if (dot_count === 1 && digit_count <= 3 && valid_extension) {\n  \
    \      return 'Yes';\n    }\n    return 'No';\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (dot_index == -1) {\n        return \"No\";\n    }\n    if (name.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z'\
    \ && name[0] < 'A' || name[0] > 'Z') {\n        return \"No\";\n    }\n    if\
    \ (extension != 'txt' && extension != 'exe' && extension != 'dll') {\n       \
    \ return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let sub_string_before_dot = file_name.substring(0, dot_index);\n    let sub_string_after_dot\
    \ = file_name.substring(dot_index + 1);\n    let digits_count = 0;\n    for (let\
    \ i = 0; i < sub_string_before_dot.length; i++) {\n        if (sub_string_before_dot[i]\
    \ >= '0' && sub_string_before_dot[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (sub_string_before_dot.length === 0 ||\n        (sub_string_before_dot[0]\
    \ < 'a' || sub_string_before_dot[0] > 'z') &&\n        (sub_string_before_dot[0]\
    \ < 'A' || sub_string_before_dot[0] > 'Z')) {\n        return \"No\";\n    }\n\
    \    if (sub_string_after_dot !== 'txt' && sub_string_after_dot !== 'exe' && sub_string_after_dot\
    \ !== 'dll') {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "  \
    \  let count = 0;\n    let dot = false;\n    let dot_index = 0;\n    let valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    let extension = '';\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n        \
    \    count++;\n        }\n        if (file_name[i] == '.') {\n            dot\
    \ = true;\n            dot_index = i;\n        }\n    }\n    if (count > 3 ||\
    \ !dot) {\n        return 'No';\n    }\n    extension = file_name.substring(dot_index\
    \ + 1);\n    if (valid_extensions.indexOf(extension) == -1) {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    if (dot_index == -1) {\n        return \"No\";\n    }\n    let first_part\
    \ = file_name.substring(0, dot_index);\n    let second_part = file_name.substring(dot_index\
    \ + 1);\n    if (first_part.length == 0 || !(first_part[0] >= 'a' && first_part[0]\
    \ <= 'z' || first_part[0] >= 'A' && first_part[0] <= 'Z')) {\n        return \"\
    No\";\n    }\n    let digits_count = 0;\n    for (let i = 0; i < first_part.length;\
    \ i++) {\n        if (first_part[i] >= '0' && first_part[i] <= '9') {\n      \
    \      digits_count++;\n        }\n    }\n    if (digits_count > 3) {\n      \
    \  return \"No\";\n    }\n    if (second_part != \"txt\" && second_part != \"\
    exe\" && second_part != \"dll\") {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let result: string = \"No\";\n    let dot_index: number\
    \ = file_name.indexOf(\".\");\n    let file_name_without_extension: string = file_name.substring(0,\
    \ dot_index);\n    let extension: string = file_name.substring(dot_index + 1);\n\
    \    let number_of_digits: number = 0;\n    for (let i: number = 0; i < file_name_without_extension.length;\
    \ i++) {\n        if (file_name_without_extension[i] >= \"0\" && file_name_without_extension[i]\
    \ <= \"9\") {\n            number_of_digits++;\n        }\n    }\n    if (number_of_digits\
    \ <= 3 && file_name.indexOf(\".\") == file_name.lastIndexOf(\".\") &&\n      \
    \  file_name_without_extension.length > 0 &&\n        (file_name_without_extension[0]\
    \ >= \"a\" && file_name_without_extension[0] <= \"z\" ||\n            file_name_without_extension[0]\
    \ >= \"A\" && file_name_without_extension[0] <= \"Z\") &&\n        (extension\
    \ == \"txt\" || extension == \"exe\" || extension == \"dll\")) {\n        result\
    \ = \"Yes\";\n    }\n    return result;\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    let is_valid = true;\n    for (let\
    \ i = 0; i < name.length; i++) {\n        if (name[i] >= '0' && name[i] <= '9')\
    \ {\n            digits_count++;\n        }\n    }\n    if (digits_count > 3)\
    \ {\n        is_valid = false;\n    }\n    if (dot_index == -1) {\n        is_valid\
    \ = false;\n    }\n    if (name.length == 0) {\n        is_valid = false;\n  \
    \  }\n    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0] > 'Z')\
    \ {\n        is_valid = false;\n    }\n    if (extension != 'txt' && extension\
    \ != 'exe' && extension != 'dll') {\n        is_valid = false;\n    }\n    if\
    \ (is_valid) {\n        return 'Yes';\n    }\n    else {\n        return 'No';\n\
    \    }\n}\n", "    let dot_index = file_name.indexOf('.');\n    let extension\
    \ = file_name.substring(dot_index + 1);\n    let file_name_without_extension =\
    \ file_name.substring(0, dot_index);\n    let digits_count = 0;\n    for (let\
    \ i = 0; i < file_name_without_extension.length; i++) {\n        if (file_name_without_extension[i]\
    \ >= '0' && file_name_without_extension[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (dot_index == -1) {\n        return \"No\";\n    }\n    if (file_name_without_extension.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (file_name_without_extension[0]\
    \ < 'a' || file_name_without_extension[0] > 'z' &&\n        file_name_without_extension[0]\
    \ < 'A' || file_name_without_extension[0] > 'Z') {\n        return \"No\";\n \
    \   }\n    if (extension != 'txt' && extension != 'exe' && extension != 'dll')\
    \ {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n    if\
    \ (digits_count > 3) {\n        return \"No\";\n    }\n    if (dot_index == -1)\
    \ {\n        return \"No\";\n    }\n    if (name.length == 0) {\n        return\
    \ \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0]\
    \ > 'Z') {\n        return \"No\";\n    }\n    if (extension != 'txt' && extension\
    \ != 'exe' && extension != 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n    let dot_count\
    \ = 0;\n    let digit_count = 0;\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = false;\n    let valid_name = false;\n    let valid_digit_count = false;\n\
    \    let valid_dot_count = false;\n\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] === '.') {\n            dot_count++;\n    \
    \    }\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n          \
    \  digit_count++;\n        }\n    }\n\n    if (dot_count === 1) {\n        valid_dot_count\
    \ = true;\n    }\n\n    if (digit_count <= 3) {\n        valid_digit_count = true;\n\
    \    }\n\n    for (let i = 0; i < valid_extensions.length; i++) {\n        if\
    \ (extension === valid_extensions[i]) {\n            valid_extension = true;\n\
    \        }\n    }\n\n    if (file_name[0] >= 'a' && file_name[0] <= 'z' || file_name[0]\
    \ >= 'A' && file_name[0] <= 'Z') {\n        valid_name = true;\n    }\n\n    if\
    \ (valid_dot_count && valid_digit_count && valid_extension && valid_name) {\n\
    \        return 'Yes';\n    } else {\n        return 'No';\n    }\n}\n", "   \
    \ let dot_index = file_name.indexOf('.');\n    let dot_count = 0;\n    let digit_count\
    \ = 0;\n    let file_name_length = file_name.length;\n    let file_name_substring_before_dot\
    \ = file_name.substring(0, dot_index);\n    let file_name_substring_after_dot\
    \ = file_name.substring(dot_index + 1, file_name_length);\n    let file_name_substring_before_dot_length\
    \ = file_name_substring_before_dot.length;\n    let file_name_substring_after_dot_length\
    \ = file_name_substring_after_dot.length;\n    let file_name_substring_before_dot_first_letter\
    \ = file_name_substring_before_dot.charAt(0);\n    let file_name_substring_after_dot_first_letter\
    \ = file_name_substring_after_dot.charAt(0);\n    let file_name_substring_after_dot_second_letter\
    \ = file_name_substring_after_dot.charAt(1);\n    let file_name_substring_after_dot_third_letter\
    \ = file_name_substring_after_dot.charAt(2);\n    let file_name_substring_after_dot_fourth_letter\
    \ = file_name_substring_after_dot.charAt(3);\n    let file_name_substring_after_dot_fifth_letter\
    \ = file_name_substring_after_dot.charAt(4);\n    let file_name_substring_after_dot_sixth_letter\
    \ = file_name_substring_after_dot.charAt(5);\n    let file_name_substring_after_dot_seventh_letter\
    \ = file_name_substring_after_dot.charAt(6);\n    let file_name_substring_after_dot_eighth_letter\
    \ = file_name_substring_after_dot.charAt(7);\n    let file_name_substring_after_dot_ninth_letter\
    \ = file_name_substring_after_dot.charAt(8);\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let dot_count = 0;\n    let digit_count = 0;\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = false;\n    let valid_name = false;\n    let valid_name_length = false;\n\
    \    let valid_name_start = false;\n    let valid_name_end = false;\n    let valid_name_characters\
    \ = false;\n    let valid_name_digits = false;\n    let valid_name_dots = false;\n\
    \    let valid_name_underscores = false;\n    let valid_name_hyphens = false;\n\
    \    let valid_name_spaces = false;\n    let valid_name_special_characters = false;\n\
    \    let valid_name_special_characters_count = 0;\n    let valid_name_special_characters_max\
    \ = 1;\n    let valid_name_special_characters_allowed = ['_', '-'];\n    let valid_name_special_characters_allowed_count\
    \ = 0;\n    let valid_name_special_characters_allowed_max = 1;\n    let valid_name_special_characters_allowed_index\
    \ = 0;\n    let valid_name_special_characters_allowed_index_max = 1;\n    let\
    \ valid_name_special_characters_allowed_index_count = 0;\n    let valid_name_special_characters_allowed_index_count_max\
    \ = 1;\n    let valid_name_special_characters_allowed_index_count_max_max = 1;\n\
    \    let valid_name_special_characters_allowed_index_count_max_max_max = 1;\n\
    \    let valid_name_special_characters_allowed_index_count_max_max_max_max = 1;\n\
    \    let valid_name_special_characters_allowed_index_count_max_max_max_max_max\
    \ = 1;\n    let valid_name_special_characters_allowed_index_count_max_max_max_max_max",
  "    let dot_index = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n    if\
    \ (digits_count > 3) {\n        return \"No\";\n    }\n    if (dot_index == -1)\
    \ {\n        return \"No\";\n    }\n    if (name.length == 0) {\n        return\
    \ \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0]\
    \ > 'Z') {\n        return \"No\";\n    }\n    if (extension != 'txt' && extension\
    \ != 'exe' && extension != 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let result: string = \"Yes\";\n    let dot_index: number\
    \ = file_name.indexOf(\".\");\n    let dot_count: number = 0;\n    let digit_count:\
    \ number = 0;\n    let extension: string = file_name.substring(dot_index + 1,\
    \ file_name.length);\n    let name: string = file_name.substring(0, dot_index);\n\
    \    let valid_extensions: string[] = [\"txt\", \"exe\", \"dll\"];\n    for (let\
    \ i: number = 0; i < file_name.length; i++) {\n        if (file_name[i] === \"\
    .\") {\n            dot_count++;\n        }\n        if (file_name[i] >= \"0\"\
    \ && file_name[i] <= \"9\") {\n            digit_count++;\n        }\n    }\n\
    \    if (dot_count !== 1 || digit_count > 3 || name.length === 0 ||\n        (name[0]\
    \ < \"a\" || name[0] > \"z\") && (name[0] < \"A\" || name[0] > \"Z\") ||\n   \
    \     valid_extensions.indexOf(extension) === -1) {\n        result = \"No\";\n\
    \    }\n    return result;\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let dot_substring = file_name.substring(dot_index);\n    let before_dot_substring\
    \ = file_name.substring(0, dot_index);\n    let digits_count = 0;\n    for (let\
    \ i = 0; i < before_dot_substring.length; i++) {\n        if (before_dot_substring[i]\
    \ >= '0' && before_dot_substring[i] <= '9') {\n            digits_count++;\n \
    \       }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (dot_index === -1) {\n        return \"No\";\n    }\n    if (before_dot_substring.length\
    \ === 0) {\n        return \"No\";\n    }\n    if (before_dot_substring[0] < 'A'\
    \ || before_dot_substring[0] > 'z' ||\n        (before_dot_substring[0] > 'Z'\
    \ && before_dot_substring[0] < 'a')) {\n        return \"No\";\n    }\n    if\
    \ (dot_substring !== '.txt' && dot_substring !== '.exe' && dot_substring !== '.dll')\
    \ {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index\
    \ = file_name.indexOf('.');\n    let extension = file_name.substring(dot_index\
    \ + 1);\n    let name = file_name.substring(0, dot_index);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < name.length; i++) {\n        if (name[i] >= '0'\
    \ && name[i] <= '9') {\n            digits_count++;\n        }\n    }\n    if\
    \ (digits_count > 3) {\n        return \"No\";\n    }\n    if (dot_index == -1)\
    \ {\n        return \"No\";\n    }\n    if (name.length == 0) {\n        return\
    \ \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0]\
    \ > 'Z') {\n        return \"No\";\n    }\n    if (extension != 'txt' && extension\
    \ != 'exe' && extension != 'dll') {\n        return \"No\";\n    }\n    return\
    \ \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n    let file_name_substring\
    \ = file_name.substring(0, dot_index);\n    let file_extension_substring = file_name.substring(dot_index\
    \ + 1);\n    let file_name_substring_length = file_name_substring.length;\n  \
    \  let file_extension_substring_length = file_extension_substring.length;\n  \
    \  let file_name_substring_first_char = file_name_substring.charAt(0);\n    let\
    \ file_name_substring_first_char_code = file_name_substring_first_char.charCodeAt(0);\n\
    \    let file_name_substring_last_char = file_name_substring.charAt(file_name_substring_length\
    \ - 1);\n    let file_name_substring_last_char_code = file_name_substring_last_char.charCodeAt(0);\n\
    \    let file_extension_substring_first_char = file_extension_substring.charAt(0);\n\
    \    let file_extension_substring_first_char_code = file_extension_substring_first_char.charCodeAt(0);\n\
    \    let file_extension_substring_last_char = file_extension_substring.charAt(file_extension_substring_length\
    \ - 1);\n    let file_extension_substring_last_char_code = file_extension_substring_last_char.charCodeAt(0);\n\
    \    let file_name_substring_digit_counter = 0;\n    let file_extension_substring_digit_counter\
    \ = 0;\n    let file_name_substring_dot_counter = 0;\n    let file_extension_substring_dot_counter\
    \ = 0;\n    let file_name_substring_valid_char_counter = 0;\n    let file_extension_substring_valid_char_counter\
    \ = 0;\n    let file_name_substring_valid_char_counter_2 = 0;\n    let file_extension_substring_valid_char_counter_2\
    \ =", "    let dot_index = file_name.indexOf('.');\n    let dot_count = 0;\n \
    \   let digit_count = 0;\n    let extension = file_name.substring(dot_index +\
    \ 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = false;\n    let valid_name = false;\n    let valid_digit_count = false;\n\
    \    let valid_dot_count = false;\n\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] == '.') {\n            dot_count++;\n     \
    \   }\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n           \
    \ digit_count++;\n        }\n    }\n\n    if (dot_count == 1) {\n        valid_dot_count\
    \ = true;\n    }\n\n    if (digit_count <= 3) {\n        valid_digit_count = true;\n\
    \    }\n\n    for (let i = 0; i < valid_extensions.length; i++) {\n        if\
    \ (extension == valid_extensions[i]) {\n            valid_extension = true;\n\
    \        }\n    }\n\n    if (file_name[0] >= 'a' && file_name[0] <= 'z' || file_name[0]\
    \ >= 'A' && file_name[0] <= 'Z') {\n        valid_name = true;\n    }\n\n    if\
    \ (valid_dot_count && valid_digit_count && valid_extension && valid_name) {\n\
    \        return 'Yes';\n    } else {\n        return 'No';\n    }\n}\n", "   \
    \ let dot_index = file_name.indexOf('.');\n    let file_name_before_dot = file_name.substring(0,\
    \ dot_index);\n    let file_name_after_dot = file_name.substring(dot_index + 1);\n\
    \    let file_name_before_dot_valid = /^[a-zA-Z]\\w*$/.test(file_name_before_dot);\n\
    \    let file_name_after_dot_valid = /^(txt|exe|dll)$/.test(file_name_after_dot);\n\
    \    let file_name_valid = file_name_before_dot_valid && file_name_after_dot_valid;\n\
    \    return file_name_valid ? \"Yes\" : \"No\";\n}\n", "    let count = 0;\n \
    \   let dot_count = 0;\n    let dot_index = 0;\n    let extension = \"\";\n  \
    \  for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i] >= '0'\
    \ && file_name[i] <= '9') {\n            count++;\n        }\n        if (file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \    }\n    if (count > 3 || dot_count != 1) {\n        return \"No\";\n    }\n\
    \    extension = file_name.substring(dot_index + 1);\n    if (extension != \"\
    txt\" && extension != \"exe\" && extension != \"dll\") {\n        return \"No\"\
    ;\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0] > 'Z') {\n\
    \        return \"No\";\n    }\n    if (extension !== 'txt' && extension !== 'exe'\
    \ && extension !== 'dll') {\n        return \"No\";\n    }\n    return \"Yes\"\
    ;\n}\n", "    const reg = /^[a-zA-Z]\\w*\\.(txt|exe|dll)$/;\n    return reg.test(file_name)\
    \ ? \"Yes\" : \"No\";\n}\n", "    let dot_index = file_name.indexOf('.');\n  \
    \  let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (dot_index == -1) {\n        return \"No\";\n    }\n    if (name.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z'\
    \ && name[0] < 'A' || name[0] > 'Z') {\n        return \"No\";\n    }\n    if\
    \ (extension != 'txt' && extension != 'exe' && extension != 'dll') {\n       \
    \ return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let regex = /^[a-zA-Z]{1}[a-zA-Z0-9]{0,3}\\\
    .(txt|exe|dll)$/;\n    return regex.test(file_name) ? \"Yes\" : \"No\";\n}\n",
  "    let dot_index = file_name.indexOf('.');\n    let dot_count = 0;\n    let digit_count\
    \ = 0;\n    let extension = file_name.substring(dot_index + 1);\n    let valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    let valid_extension = false;\n    for (let i =\
    \ 0; i < file_name.length; i++) {\n        if (file_name[i] === '.') {\n     \
    \       dot_count++;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            digit_count++;\n        }\n    }\n    for (let i = 0;\
    \ i < valid_extensions.length; i++) {\n        if (extension === valid_extensions[i])\
    \ {\n            valid_extension = true;\n        }\n    }\n    if (dot_count\
    \ === 1 && digit_count <= 3 && valid_extension && file_name[0] >= 'a' && file_name[0]\
    \ <= 'z' || file_name[0] >= 'A' && file_name[0] <= 'Z') {\n        return 'Yes';\n\
    \    } else {\n        return 'No';\n    }\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (dot_index == -1) {\n        return \"No\";\n    }\n    if (name.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (name[0] < 'a' || name[0] > 'z'\
    \ && name[0] < 'A' || name[0] > 'Z') {\n        return \"No\";\n    }\n    if\
    \ (extension != 'txt' && extension != 'exe' && extension != 'dll') {\n       \
    \ return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_without_extension = file_name.substring(0, dot_index);\n  \
    \  let file_extension = file_name.substring(dot_index + 1);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < file_name_without_extension.length; i++) {\n \
    \       if (file_name_without_extension[i] >= '0' && file_name_without_extension[i]\
    \ <= '9') {\n            digits_count++;\n        }\n    }\n    if (digits_count\
    \ > 3) {\n        return \"No\";\n    }\n    if (file_name_without_extension.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (file_name_without_extension[0]\
    \ < 'A' || file_name_without_extension[0] > 'z' ||\n        (file_name_without_extension[0]\
    \ > 'Z' && file_name_without_extension[0] < 'a')) {\n        return \"No\";\n\
    \    }\n    if (file_extension != 'txt' && file_extension != 'exe' && file_extension\
    \ != 'dll') {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "   \
    \ let count = 0;\n    let dot_count = 0;\n    let dot_index = 0;\n    let file_type\
    \ = \"\";\n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if\
    \ (file_name[i] == '.') {\n            dot_count++;\n            dot_index = i;\n\
    \        }\n    }\n    if (count > 3 || dot_count != 1) {\n        return \"No\"\
    ;\n    }\n    file_type = file_name.substring(dot_index + 1);\n    if (file_type\
    \ != \"txt\" && file_type != \"exe\" && file_type != \"dll\") {\n        return\
    \ \"No\";\n    }\n    if (file_name[0] >= '0' && file_name[0] <= '9') {\n    \
    \    return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_extension = file_name.substring(dot_index + 1);\n    let file_name_without_extension\
    \ = file_name.substring(0, dot_index);\n    let digits_count = 0;\n    for (let\
    \ i = 0; i < file_name_without_extension.length; i++) {\n        if (file_name_without_extension[i]\
    \ >= '0' && file_name_without_extension[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (file_name_without_extension[0] < 'a' || file_name_without_extension[0]\
    \ > 'z') {\n        return \"No\";\n    }\n    if (file_extension !== 'txt' &&\
    \ file_extension !== 'exe' && file_extension !== 'dll') {\n        return \"No\"\
    ;\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_without_extension = file_name.substring(0, dot_index);\n  \
    \  let file_extension = file_name.substring(dot_index + 1);\n    let digits_count\
    \ = 0;\n    for (let i = 0; i < file_name_without_extension.length; i++) {\n \
    \       if (file_name_without_extension[i] >= '0' && file_name_without_extension[i]\
    \ <= '9') {\n            digits_count++;\n        }\n    }\n    if (digits_count\
    \ > 3) {\n        return \"No\";\n    }\n    if (file_name_without_extension.length\
    \ == 0 ||\n        (file_name_without_extension[0] < 'a' || file_name_without_extension[0]\
    \ > 'z') &&\n        (file_name_without_extension[0] < 'A' || file_name_without_extension[0]\
    \ > 'Z')) {\n        return \"No\";\n    }\n    if (file_extension != \"txt\"\
    \ && file_extension != \"exe\" && file_extension != \"dll\") {\n        return\
    \ \"No\";\n    }\n    return \"Yes\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_without_extension = file_name.substring(0, dot_index);\n  \
    \  let extension = file_name.substring(dot_index + 1);\n    let valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    let valid_extension = valid_extensions.indexOf(extension)\
    \ >= 0;\n    let valid_file_name = file_name_without_extension.length > 0 && file_name_without_extension.match(/[0-9]/g)\
    \ == null;\n    let valid_extension_length = extension.length > 0;\n    let valid_file_name_length\
    \ = file_name_without_extension.length > 0;\n    let valid_file_name_digits =\
    \ file_name_without_extension.match(/[0-9]/g) == null || file_name_without_extension.match(/[0-9]/g).length\
    \ <= 3;\n    return valid_extension && valid_file_name && valid_extension_length\
    \ && valid_file_name_length && valid_file_name_digits ? 'Yes' : 'No';\n}\n", " \
    \   let count = 0;\n    let dot_count = 0;\n    let dot_index = 0;\n    let file_type\
    \ = \"\";\n    let file_name_check = \"\";\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n        \
    \    count++;\n        }\n        if (file_name[i] == '.') {\n            dot_count++;\n\
    \            dot_index = i;\n        }\n    }\n    if (count > 3) {\n        return\
    \ \"No\";\n    }\n    if (dot_count != 1) {\n        return \"No\";\n    }\n \
    \   if (dot_index == 0) {\n        return \"No\";\n    }\n    if (file_name[0]\
    \ < 'a' || file_name[0] > 'z' && file_name[0] < 'A' || file_name[0] > 'Z') {\n\
    \        return \"No\";\n    }\n    for (let i = dot_index + 1; i < file_name.length;\
    \ i++) {\n        file_type += file_name[i];\n    }\n    if (file_type == \"txt\"\
    \ || file_type == \"exe\" || file_type == \"dll\") {\n        return \"Yes\";\n\
    \    }\n    return \"No\";\n}\n", "    const file_name_regex = /^[a-zA-Z]{1}[a-zA-Z0-9]{0,2}\\\
    .(txt|exe|dll)$/;\n    return file_name_regex.test(file_name) ? \"Yes\" : \"No\"\
    ;\n}\n", "    let dot_index = file_name.indexOf('.');\n    let dot_count = 0;\n\
    \    let digit_count = 0;\n    let extension = file_name.substring(dot_index +\
    \ 1);\n    let valid_extensions = ['txt', 'exe', 'dll'];\n    let valid_extension\
    \ = false;\n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i]\
    \ == '.') {\n            dot_count++;\n        }\n        if (file_name[i] >=\
    \ '0' && file_name[i] <= '9') {\n            digit_count++;\n        }\n    }\n\
    \    for (let i = 0; i < valid_extensions.length; i++) {\n        if (extension\
    \ == valid_extensions[i]) {\n            valid_extension = true;\n        }\n\
    \    }\n    if (dot_count == 1 && digit_count <= 3 && valid_extension) {\n   \
    \     return 'Yes';\n    }\n    return 'No';\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_before_dot = file_name.substring(0, dot_index);\n    let file_name_after_dot\
    \ = file_name.substring(dot_index + 1);\n    let file_name_before_dot_regex =\
    \ /^[a-zA-Z][a-zA-Z0-9]*$/;\n    let file_name_after_dot_regex = /^(txt|exe|dll)$/;\n\
    \    let file_name_before_dot_valid = file_name_before_dot_regex.test(file_name_before_dot);\n\
    \    let file_name_after_dot_valid = file_name_after_dot_regex.test(file_name_after_dot);\n\
    \    let file_name_valid = file_name_before_dot_valid && file_name_after_dot_valid;\n\
    \    return file_name_valid ? \"Yes\" : \"No\";\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let file_name_before_dot = file_name.substring(0, dot_index);\n    let file_name_after_dot\
    \ = file_name.substring(dot_index + 1);\n    let valid_file_name_after_dot = ['txt',\
    \ 'exe', 'dll'];\n    let valid_file_name_before_dot = /^[a-zA-Z][a-zA-Z0-9]*$/;\n\
    \    let valid_file_name_before_dot_digit_count = /[0-9]/g;\n    let digit_count\
    \ = (file_name_before_dot.match(valid_file_name_before_dot_digit_count) || []).length;\n\
    \    if (valid_file_name_after_dot.indexOf(file_name_after_dot) === -1) {\n  \
    \      return 'No';\n    }\n    if (!valid_file_name_before_dot.test(file_name_before_dot))\
    \ {\n        return 'No';\n    }\n    if (digit_count > 3) {\n        return 'No';\n\
    \    }\n    return 'Yes';\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let dot_count = 0;\n    let digit_count = 0;\n    let valid_extensions =\
    \ ['txt', 'exe', 'dll'];\n    let extension = '';\n    let valid_extension = false;\n\
    \    let valid_name = false;\n    let valid_digit_count = false;\n    let valid_dot_count\
    \ = false;\n    let valid_extension_count = false;\n    let valid_extension_type\
    \ = false;\n    let valid_name_count = false;\n    let valid_name_type = false;\n\
    \n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i] ==\
    \ '.') {\n            dot_count++;\n        }\n        if (file_name[i] >= '0'\
    \ && file_name[i] <= '9') {\n            digit_count++;\n        }\n    }\n\n\
    \    if (dot_count == 1) {\n        valid_dot_count = true;\n    }\n\n    if (digit_count\
    \ <= 3) {\n        valid_digit_count = true;\n    }\n\n    if (valid_dot_count\
    \ && valid_digit_count) {\n        extension = file_name.substring(dot_index +\
    \ 1);\n        for (let i = 0; i < valid_extensions.length; i++) {\n         \
    \   if (extension == valid_extensions[i]) {\n                valid_extension =\
    \ true;\n            }\n        }\n    }\n\n    if (valid_extension) {\n     \
    \   valid_extension_count = true;\n    }\n\n    if (valid_extension_count) {\n\
    \        let name = file_name.substring(0, dot_index);\n        if (name.length\
    \ > 0) {\n            if (name[0] >= 'a' && name[0] <= 'z' || name[0] >= 'A' &&\
    \ name[0] <= 'Z') {\n                valid_name = true;\n            }\n     \
    \   }\n    }\n\n    if (valid_name) {\n        valid_name_count = true;\n    }\n\
    \n    if (", "    let count = 0;\n    let dot_index = 0;\n    let extension =\
    \ \"\";\n    let valid_extensions = [\"txt\", \"exe\", \"dll\"];\n    let valid_extension\
    \ = false;\n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i]\
    \ >= '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if\
    \ (file_name[i] == '.') {\n            dot_index = i;\n        }\n    }\n    if\
    \ (count > 3) {\n        return \"No\";\n    }\n    if (dot_index == 0) {\n  \
    \      return \"No\";\n    }\n    if (file_name[dot_index - 1] < 'a' || file_name[dot_index\
    \ - 1] > 'z') {\n        if (file_name[dot_index - 1] < 'A' || file_name[dot_index\
    \ - 1] > 'Z') {\n            return \"No\";\n        }\n    }\n    extension =\
    \ file_name.substring(dot_index + 1);\n    for (let i = 0; i < valid_extensions.length;\
    \ i++) {\n        if (extension == valid_extensions[i]) {\n            valid_extension\
    \ = true;\n        }\n    }\n    if (valid_extension) {\n        return \"Yes\"\
    ;\n    }\n    return \"No\";\n}\n", "    let file_name_arr = file_name.split('.');\n\
    \    let file_name_arr_len = file_name_arr.length;\n    let file_name_arr_len_1\
    \ = file_name_arr[0].length;\n    let file_name_arr_len_2 = file_name_arr[1].length;\n\
    \    let file_name_arr_len_3 = file_name_arr[2].length;\n    let file_name_arr_len_4\
    \ = file_name_arr[3].length;\n    let file_name_arr_len_5 = file_name_arr[4].length;\n\
    \    let file_name_arr_len_6 = file_name_arr[5].length;\n    let file_name_arr_len_7\
    \ = file_name_arr[6].length;\n    let file_name_arr_len_8 = file_name_arr[7].length;\n\
    \    let file_name_arr_len_9 = file_name_arr[8].length;\n    let file_name_arr_len_10\
    \ = file_name_arr[9].length;\n    let file_name_arr_len_11 = file_name_arr[10].length;\n\
    \    let file_name_arr_len_12 = file_name_arr[11].length;\n    let file_name_arr_len_13\
    \ = file_name_arr[12].length;\n    let file_name_arr_len_14 = file_name_arr[13].length;\n\
    \    let file_name_arr_len_15 = file_name_arr[14].length;\n    let file_name_arr_len_16\
    \ = file_name_arr[15].length;\n    let file_name_arr_len_17 = file_name_arr[16].length;\n\
    \    let file_name_arr_len_18 = file_name_arr[17].length;\n    let file_name_arr_len_19\
    \ = file_name_arr[18].length;\n    let file_name_arr_len_20 = file_name_arr[19].length;\n\
    \    let file_name_arr_len_21 = file_name", "    let count = 0;\n    let dot_count\
    \ = 0;\n    let dot_index = 0;\n    let valid_extensions = ['txt', 'exe', 'dll'];\n\
    \    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i] >=\
    \ '0' && file_name[i] <= '9') {\n            count++;\n        }\n        if (file_name[i]\
    \ == '.') {\n            dot_count++;\n            dot_index = i;\n        }\n\
    \    }\n    if (count > 3 || dot_count != 1 || dot_index == 0 || dot_index ==\
    \ file_name.length - 1) {\n        return \"No\";\n    }\n    let extension =\
    \ file_name.substring(dot_index + 1);\n    if (valid_extensions.indexOf(extension)\
    \ == -1) {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let\
    \ dot_index = file_name.indexOf('.');\n    let file_name_without_extension = file_name.substring(0,\
    \ dot_index);\n    let file_extension = file_name.substring(dot_index + 1);\n\
    \    let digits_count = 0;\n    for (let i = 0; i < file_name_without_extension.length;\
    \ i++) {\n        if (file_name_without_extension[i] >= '0' && file_name_without_extension[i]\
    \ <= '9') {\n            digits_count++;\n        }\n    }\n    if (digits_count\
    \ > 3) {\n        return \"No\";\n    }\n    if (file_name_without_extension.length\
    \ == 0) {\n        return \"No\";\n    }\n    if (file_name_without_extension[0]\
    \ < 'A' || file_name_without_extension[0] > 'z' ||\n        (file_name_without_extension[0]\
    \ > 'Z' && file_name_without_extension[0] < 'a')) {\n        return \"No\";\n\
    \    }\n    if (file_extension != 'txt' && file_extension != 'exe' && file_extension\
    \ != 'dll') {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "   \
    \ let result: string = \"Yes\";\n    let count: number = 0;\n    let dot_count:\
    \ number = 0;\n    let dot_index: number = 0;\n    let extension: string = \"\"\
    ;\n    let valid_extensions: string[] = [\"txt\", \"exe\", \"dll\"];\n    for\
    \ (let i: number = 0; i < file_name.length; i++) {\n        if (file_name[i] >=\
    \ \"0\" && file_name[i] <= \"9\") {\n            count++;\n        }\n       \
    \ if (file_name[i] == \".\") {\n            dot_count++;\n            dot_index\
    \ = i;\n        }\n    }\n    if (count > 3) {\n        result = \"No\";\n   \
    \ }\n    if (dot_count != 1) {\n        result = \"No\";\n    }\n    if (dot_index\
    \ == 0) {\n        result = \"No\";\n    }\n    if (file_name[dot_index - 1] <\
    \ \"A\" || (file_name[dot_index - 1] > \"Z\" && file_name[dot_index - 1] < \"\
    a\") || file_name[dot_index - 1] > \"z\") {\n        result = \"No\";\n    }\n\
    \    extension = file_name.substring(dot_index + 1);\n    if (valid_extensions.indexOf(extension)\
    \ == -1) {\n        result = \"No\";\n    }\n    return result;\n}\n", "    let\
    \ dot_index = file_name.indexOf('.');\n    let dot_count = 0;\n    let digit_count\
    \ = 0;\n    let extension = file_name.substring(dot_index + 1);\n    let valid_extensions\
    \ = ['txt', 'exe', 'dll'];\n    let valid_extension = false;\n    for (let i =\
    \ 0; i < file_name.length; i++) {\n        if (file_name[i] == '.') {\n      \
    \      dot_count++;\n        }\n        if (file_name[i] >= '0' && file_name[i]\
    \ <= '9') {\n            digit_count++;\n        }\n    }\n    for (let i = 0;\
    \ i < valid_extensions.length; i++) {\n        if (extension == valid_extensions[i])\
    \ {\n            valid_extension = true;\n        }\n    }\n    if (dot_count\
    \ == 1 && digit_count <= 3 && valid_extension == true) {\n        return 'Yes';\n\
    \    }\n    else {\n        return 'No';\n    }\n}\n", "    let dot_index = file_name.indexOf('.');\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let name = file_name.substring(0,\
    \ dot_index);\n    let digits_count = 0;\n    for (let i = 0; i < name.length;\
    \ i++) {\n        if (name[i] >= '0' && name[i] <= '9') {\n            digits_count++;\n\
    \        }\n    }\n    if (digits_count > 3) {\n        return \"No\";\n    }\n\
    \    if (name[0] < 'a' || name[0] > 'z' && name[0] < 'A' || name[0] > 'Z') {\n\
    \        return \"No\";\n    }\n    if (extension != 'txt' && extension != 'exe'\
    \ && extension != 'dll') {\n        return \"No\";\n    }\n    return \"Yes\"\
    ;\n}\n", "    let dot_index = file_name.indexOf('.');\n    let dot_count = 0;\n\
    \    let digit_count = 0;\n    let valid_extensions = ['txt', 'exe', 'dll'];\n\
    \    let extension = file_name.substring(dot_index + 1);\n    let prefix = file_name.substring(0,\
    \ dot_index);\n    let valid_prefix = false;\n    let valid_extension = false;\n\
    \n    for (let i = 0; i < file_name.length; i++) {\n        if (file_name[i] ===\
    \ '.') {\n            dot_count++;\n        }\n        if (file_name[i] >= '0'\
    \ && file_name[i] <= '9') {\n            digit_count++;\n        }\n    }\n\n\
    \    if (dot_count === 1 && digit_count <= 3 && prefix.length > 0) {\n       \
    \ if ((prefix[0] >= 'a' && prefix[0] <= 'z') || (prefix[0] >= 'A' && prefix[0]\
    \ <= 'Z')) {\n            valid_prefix = true;\n        }\n    }\n\n    for (let\
    \ i = 0; i < valid_extensions.length; i++) {\n        if (extension === valid_extensions[i])\
    \ {\n            valid_extension = true;\n        }\n    }\n\n    if (valid_prefix\
    \ && valid_extension) {\n        return 'Yes';\n    } else {\n        return 'No';\n\
    \    }\n}\n", "    let dot_index = file_name.indexOf('.');\n    if (dot_index\
    \ === -1) {\n        return \"No\";\n    }\n    let before_dot = file_name.substring(0,\
    \ dot_index);\n    let after_dot = file_name.substring(dot_index + 1);\n    if\
    \ (before_dot.length === 0 || !(before_dot[0] >= 'a' && before_dot[0] <= 'z' ||\
    \ before_dot[0] >= 'A' && before_dot[0] <= 'Z')) {\n        return \"No\";\n \
    \   }\n    if (after_dot !== 'txt' && after_dot !== 'exe' && after_dot !== 'dll')\
    \ {\n        return \"No\";\n    }\n    let digits_count = 0;\n    for (let i\
    \ = 0; i < before_dot.length; i++) {\n        if (before_dot[i] >= '0' && before_dot[i]\
    \ <= '9') {\n            digits_count++;\n        }\n    }\n    if (digits_count\
    \ > 3) {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n", "    let result:\
    \ string = \"No\";\n    let count: number = 0;\n    let dot_count: number = 0;\n\
    \    let dot_index: number = 0;\n    let sub_string_after_dot: string = \"\";\n\
    \    let sub_string_before_dot: string = \"\";\n    for (let i = 0; i < file_name.length;\
    \ i++) {\n        if (file_name[i] >= '0' && file_name[i] <= '9') {\n        \
    \    count++;\n        }\n        if (file_name[i] == '.') {\n            dot_count++;\n\
    \            dot_index = i;\n        }\n    }\n    if (count <= 3 && dot_count\
    \ == 1) {\n        sub_string_after_dot = file_name.substring(dot_index + 1);\n\
    \        sub_string_before_dot = file_name.substring(0, dot_index);\n        if\
    \ (sub_string_after_dot == \"txt\" || sub_string_after_dot == \"exe\" || sub_string_after_dot\
    \ == \"dll\") {\n            if (sub_string_before_dot.length != 0 && (sub_string_before_dot[0]\
    \ >= 'a' && sub_string_before_dot[0] <= 'z' || sub_string_before_dot[0] >= 'A'\
    \ && sub_string_before_dot[0] <= 'Z')) {\n                result = \"Yes\";\n\
    \            }\n        }\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

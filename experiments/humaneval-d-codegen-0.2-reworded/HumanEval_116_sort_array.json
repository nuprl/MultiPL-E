{
  "name": "HumanEval_116_sort_array",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1L, 5L, 2L, 3L, 4L])\n    [1L, 2L, 3L, 4L, 5L]\n    >>> sort_array([-2L, -3L, -4L, -5L, -6L])\n    [-6L, -5L, -4L, -3L, -2L]\n    >>> sort_array([1L, 0L, 2L, 3L, 4L])\n    [0L, 1L, 2L, 3L, 4L]\n    \n*/\nlong[] sort_array(long[] arr) \n",
  "tests": "unittest\n{\n    alias candidate = sort_array;\n\n    assert(candidate([1L, 5L, 2L, 3L, 4L]) == [1L, 2L, 4L, 3L, 5L]);\n    assert(candidate([-2L, -3L, -4L, -5L, -6L]) == [-4L, -2L, -6L, -5L, -3L]);\n    assert(candidate([1L, 0L, 2L, 3L, 4L]) == [0L, 1L, 2L, 4L, 3L]);\n    assert(candidate([]) == []);\n    assert(candidate([2L, 5L, 77L, 4L, 5L, 3L, 5L, 7L, 2L, 3L, 4L]) == [2L, 2L, 4L, 4L, 3L, 3L, 5L, 5L, 5L, 7L, 77L]);\n    assert(candidate([3L, 6L, 44L, 12L, 32L, 5L]) == [32L, 3L, 5L, 6L, 12L, 44L]);\n    assert(candidate([2L, 4L, 8L, 16L, 32L]) == [2L, 4L, 8L, 16L, 32L]);\n    assert(candidate([2L, 4L, 8L, 16L, 32L]) == [2L, 4L, 8L, 16L, 32L]);\n}\nvoid main(){}",
  "completions": [
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    return result;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = i + 1; j < arr.length; j++)\n        {\n            if (arr[i] == arr[j])\n            {\n                sorted_arr[i] = arr[i] + 1;\n                sorted_arr[j] = arr[j] + 1;\n            }\n            else if (arr[i] > arr[j])\n            {\n                sorted_arr[i] = arr[i] + 1;\n                sorted_arr[j] = arr[j] + 1;\n            }\n            else\n            {\n                sorted_arr[i] = arr[i] + 1;\n                sorted_arr[j] = arr[j] + 1;\n            }\n        }\n    }\n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n            else if (arr[i] < arr[j]) {\n                sorted[i] = arr[i] + 1;\n            }\n            else {\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j];\n                sorted[j] = arr[i];\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    int start = 0;\n    int end = arr.length - 1;\n    while (start < end) {\n        if (arr[start] == arr[end]) {\n            start++;\n            end--;\n        } else {\n            long temp = arr[start];\n            arr[start] = arr[end];\n            arr[end] = temp;\n            start++;\n            end--;\n        }\n    }\n    return sorted_arr;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    return result;\n}",
    "{\n    long[] sorted = arr.clone();\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i] ^ arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i] ^ sorted[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i] ^ sorted[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i] ^ sorted[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i] ^ sorted[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i] ^ sorted[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i] ^ sorted[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i] ^ sorted[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i] ^ sorted[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i] ^ sorted[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i] ^ sorted[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i] ^ sorted[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        s",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = i + 1; j < arr.length; j++)\n        {\n            if (arr[i] == arr[j])\n            {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (sorted[i] == arr[i]) {\n            sorted[i] = arr[i] + 1;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] > arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = i + 1; j < arr.length; j++)\n        {\n            if (arr[i] == arr[j])\n            {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    int[] count = new int[2];\n    for (int i = 0; i < arr.length; i++) {\n        count[0] = 0;\n        count[1] = 0;\n        for (int j = 0; j < arr.length; j++) {\n            if (arr[j] == 1) {\n                count[0]++;\n            } else {\n                count[1]++;\n            }\n        }\n        if (count[0] > count[1]) {\n            sorted[i] = -1L;\n        } else if (count[0] < count[1]) {\n            sorted[i] = 1L;\n        } else {\n            sorted[i] = 0L;\n        }\n    }\n    return sorted;\n}",
    "{\n    if (arr.length < 2)\n        return arr;",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort based on number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else if (arr[i] > arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n        }\n    }\n    \n    // sort based on decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else if (arr[i] > arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i] + 1;\n                sorted_arr[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted_arr[i] = 0;\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted[i] = 0;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                // swap\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                // swap\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = i + 1; j < arr.length; j++)\n        {\n            if (arr[i] == arr[j])\n            {\n                if (arr[i] == 0)\n                {\n                    sorted_arr[i] = -1;\n                    sorted_arr[j] = -1;\n                }\n                else\n                {\n                    sorted_arr[i] = -2;\n                    sorted_arr[j] = -2;\n                }\n            }\n            else if (arr[i] > arr[j])\n            {\n                sorted_arr[i] = -3;\n                sorted_arr[j] = -3;\n            }\n            else\n            {\n                sorted_arr[i] = -4;\n                sorted_arr[j] = -4;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted[i] = 0;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                result[i] = arr[j] = arr[i] + arr[j];\n            }\n        }\n    }\n    \n    return result;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                result[i] = arr[j];\n                result[j] = arr[i];\n            }\n        }\n    }\n    \n    return result;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    return result;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    int i = 0;\n    for(long l : arr)\n    {\n        sorted_arr[i++] = l;\n    }\n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j];\n                sorted[j] = arr[i];\n            }\n        }\n    }\n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        int count = 0;\n        for (int j = 0; j < arr.length; j++) {\n            if (arr[j] == sorted_arr[i]) {\n                count++;\n            }\n        }\n        \n        if (count > 1) {\n            for (int j = 0; j < arr.length; j++) {\n                if (arr[j] == sorted_arr[i]) {\n                    sorted_arr[i] = arr[j];\n                    arr[j] = arr[arr.length - 1];\n                    arr = Arrays.copyOf(arr, arr.length - 1);\n                    break;\n                }\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // Sort the array based on number of ones in their binary representation\n    // in ascending order.\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // Sort the array based on decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] > arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j];\n                sorted[j] = arr[i];\n            }\n        }\n    }\n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (sorted[i] == arr[i]) {\n            sorted[i] = arr[i] + 1;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    return sorted_arr;\n}",
    "{\n    if (arr.length == 0) return arr;\n    \n    long[] sorted = new long[arr.length];\n    \n    int i = 0;\n    int j = 0;\n    \n    while (i < arr.length) {\n        if (arr[i] == 0) {\n            sorted[j++] = arr[i++];\n        } else {\n            while (i < arr.length && arr[i] == 1) {\n                sorted[j++] = arr[i++];\n            }\n            \n            if (i < arr.length) {\n                sorted[j++] = arr[i++];\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    return sorted;\n}",
    "{\n    if (arr.length == 0)\n        return arr;",
    "{\n    if (arr.length == 0) return arr;\n    \n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    int[] count = new int[2];\n    for (int i = 0; i < arr.length; i++) {\n        count[0] = count[1] = 0;\n        for (int j = 0; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                count[0]++;\n            }\n            if (arr[i] == arr[j] + 1) {\n                count[1]++;\n            }\n        }\n        if (count[0] > count[1]) {\n            sorted[i] = arr[i] - 1;\n        } else {\n            sorted[i] = arr[i];\n        }\n    }\n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i] + sorted_arr[j];\n                sorted_arr[j] = arr[i] + sorted_arr[j];\n                sorted_arr[i] = sorted_arr[i] + sorted_arr[j];\n                sorted_arr[j] = sorted_arr[i] + sorted_arr[j];\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = 0; j < arr.length - 1; j++) {\n            if (arr[j] == arr[j + 1]) {\n                long temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] > arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] > arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[j] + 1;\n                sorted_arr[j] = arr[i] + 1;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort based on number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] > arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort based on decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                if (Math.abs(arr[i]) < Math.abs(arr[j])) {\n                    sorted[i] = arr[j];\n                    sorted[j] = arr[i];\n                }\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                if (arr[i] < arr[j]) {\n                    sorted[i] = arr[j];\n                    sorted[j] = arr[i];\n                }\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // Sort the array based on number of ones in binary representation\n    // in ascending order.\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // Sort the array based on decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] > arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = 0; j < arr.length - 1; j++)\n        {\n            if (arr[j] == 0 && arr[j + 1] == 1)\n            {\n                long temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] > arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                result[i] = arr[j] = arr[i] + 1;\n                break;\n            }\n            if (arr[i] > arr[j]) {\n                result[i] = arr[i] = arr[j] + 1;\n                break;\n            }\n            if (arr[i] < arr[j]) {\n                result[j] = arr[j] = arr[i] + 1;\n                break;\n            }\n        }\n    }\n    return result;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] > arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted[i] = 0;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = 0; j < arr.length - 1; j++) {\n            if (arr[j] == arr[j + 1]) {\n                long temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                if (arr[i] == 0) {\n                    sorted[i] = arr[j];\n                    sorted[j] = arr[i];\n                } else {\n                    sorted[i] = arr[j];\n                    sorted[j] = arr[i];\n                }\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                if (arr[i] == 0) {\n                    sorted[i] = arr[j];\n                    sorted[j] = arr[i];\n                } else {\n                    sorted[i] = arr[j];\n                    sorted[j] = arr[i];\n                }\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                result[i] = arr[j] = arr[i] + arr[j];\n            }\n        }\n    }\n    \n    return result;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted[i] = 0;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted[i] = 0;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                if (arr[i] == 0) {\n                    sorted_arr[i] = sorted_arr[j] = 0;\n                } else {\n                    sorted_arr[i] = sorted_arr[j] = arr[i];\n                }\n                arr[i] = arr[j] = 0;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] != 0) {\n            for (int j = 0; j < arr.length; j++) {\n                if (arr[j] == 0) {\n                    sorted_arr[j] = arr[i];\n                    arr[i] = arr[j] = 0;\n                    break;\n                }\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    int left = 0;\n    int right = arr.length - 1;\n    int pivot = arr[left];\n    \n    while (left < right) {\n        while (arr[right] >= pivot) {\n            right--;\n        }\n        \n        while (arr[left] <= pivot) {\n            left++;\n        }\n        \n        if (left < right) {\n            long temp = arr[left];\n            arr[left] = arr[right];\n            arr[right] = temp;\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    if (arr.length == 0)\n        return arr;",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // Sort based on number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // Sort based on decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    return sorted_arr;\n}",
    "{\n    if (arr.length == 0)\n        return arr;\n    \n    long[] sorted = new long[arr.length];\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        int ones = 0;\n        long val = arr[i];\n        while (val > 0)\n        {\n            ones++;\n            val = val & (val - 1);\n        }\n        \n        if (ones == 0)\n            sorted[i] = arr[i];\n        else if (ones == 1)\n            sorted[i] = arr[i] - 1;\n        else\n            sorted[i] = arr[i] - ones;\n    }\n    \n    return sorted;\n}",
    "{\n    if (arr.length == 0)\n        return arr;\n    \n    long[] sorted = new long[arr.length];\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = 0; j < arr.length - 1; j++)\n        {\n            if (arr[j] == arr[j + 1])\n            {\n                long temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] > arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                result[i] = arr[j] = arr[i] + arr[j];\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        arr[i] = result[i];\n    }\n    \n    return arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < sorted.length; i++) {\n        for (int j = i + 1; j < sorted.length; j++) {\n            if (sorted[i] == 1L && sorted[j] == 1L) {\n                if (sorted[i] > sorted[j]) {\n                    sorted[i] = sorted[i] - sorted[j];\n                    sorted[j] = sorted[i] + sorted[j];\n                    sorted[i] = sorted[i] - sorted[j];\n                }\n            }\n            else if (sorted[i] == 1L && sorted[j] == 0L) {\n                if (sorted[i] > sorted[j]) {\n                    sorted[i] = sorted[i] - sorted[j];\n                    sorted[j] = sorted[i] + sorted[j];\n                    sorted[i] = sorted[i] - sorted[j];\n                }\n            }\n            else if (sorted[i] == 0L && sorted[j] == 1L) {\n                if (sorted[i] > sorted[j]) {\n                    sorted[i] = sorted[i] - sorted[j];\n                    sorted[j] = sorted[i] + sorted[j];\n                    sorted[i] = sorted[i] - sorted[j];\n                }\n            }\n            else if (sorted[i] == 0L && sorted[j] == 0L) {\n                if (sorted[i] > sorted[j]) {\n                    sorted[i] = sorted[i] - sorted[j];\n                    sorted[j] = sorted[i] + sorted[j];\n                    sorted[i] = sorted[i] - sorted[j];\n                }\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < sorted.length; i++) {\n        for (int",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else if (arr[i] < arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else if (arr[i] < arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = i + 1; j < arr.length; j++)\n        {\n            if (arr[i] == arr[j])\n            {\n                sorted[i] = arr[j];\n                sorted[j] = arr[i];\n            }\n        }\n    }\n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i] + 1;\n                sorted_arr[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted_arr[i] = 0;\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = 0; j < arr.length - 1; j++) {\n            if (arr[j] == arr[j + 1]) {\n                long temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            } else if (arr[i] > arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            } else {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            } else if (arr[i] > arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            } else {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = i + 1; j < arr.length; j++)\n        {\n            if (arr[i] == arr[j])\n            {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i] + 1;\n                sorted_arr[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (sorted_arr[i] == arr[i]) {\n            sorted_arr[i] = arr[i] + 1;\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    if (arr.length == 0)\n        return arr;",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i] + 1;\n                sorted_arr[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted_arr[i] = 0;\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted[i] = 0;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i] + 1;\n                sorted_arr[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted_arr[i] = 0;\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j] = arr[i] + arr[j];\n                sorted[j] = arr[i] - arr[j];\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                result[i] = arr[i] + 1;\n                result[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (result[i] == result[j]) {\n                result[i] = arr[i] + 1;\n                result[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    return result;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n            else if (arr[i] < arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n            else {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    if (arr.length == 0) return arr;\n    \n    long[] sorted = new long[arr.length];\n    int i = 0;\n    for (long val : arr) {\n        if (val == 0) {\n            sorted[i++] = 0;\n        } else {\n            sorted[i++] = val;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                result[i] = arr[i] + 1;\n                result[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i] + result[i];\n    }\n    \n    return result;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    return result;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort based on number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else if (arr[i] > arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n        }\n    }\n    \n    // sort based on decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else if (arr[i] > arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = i + 1; j < arr.length; j++)\n        {\n            if (arr[i] == arr[j])\n            {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort based on number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[j];\n                sorted_arr[j] = arr[i];\n            }\n        }\n    }\n    \n    // sort based on decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[j];\n                sorted_arr[j] = arr[i];\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    int j = 0;\n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted[j] = arr[i];\n            j++;\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] != 0) {\n            sorted[j] = arr[i];\n            j++;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                result[i] = arr[j] = arr[i] + arr[j];\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        arr[i] = result[i];\n    }\n    \n    return arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < sorted.length - 1; i++) {\n        for (int j = i + 1; j < sorted.length; j++) {\n            if (sorted[i] == 1 && sorted[j] == 1) {\n                if (sorted[i] < sorted[j]) {\n                    long temp = sorted[i];\n                    sorted[i] = sorted[j];\n                    sorted[j] = temp;\n                }\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < sorted.length - 1; i++) {\n        for (int j = i + 1; j < sorted.length; j++) {\n            if (sorted[i] == 1 && sorted[j] == 1) {\n                if (sorted[i] < sorted[j]) {\n                    long temp = sorted[i];\n                    sorted[i] = sorted[j];\n                    sorted[j] = temp;\n                }\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                result[i] = arr[j] = 0;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] != 0) {\n            result[i] = arr[i];\n        }\n    }\n    \n    return result;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    int i = 0;\n    for (long l : arr) {\n        if (l == 0) {\n            sorted_arr[i] = 0;\n        } else {\n            sorted_arr[i] = l;\n        }\n        i++;\n    }\n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j] = arr[i] + arr[j];\n                sorted[j] = arr[i] - arr[j];\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    int[] count = new int[2];\n    for (int i = 0; i < arr.length; i++) {\n        count[0] = count[1] = 0;\n        for (int j = 0; j < arr.length; j++) {\n            if (arr[j] == i) {\n                count[0]++;\n            }\n            if (arr[j] == 1) {\n                count[1]++;\n            }\n        }\n        if (count[0] > count[1]) {\n            sorted[i] = -1L;\n        }\n        else if (count[0] < count[1]) {\n            sorted[i] = 1L;\n        }\n        else {\n            sorted[i] = 0L;\n        }\n    }\n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort based on number of ones in binary representation\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort based on decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    int count = 0;\n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 1) {\n            count++;\n        }\n    }\n    \n    if (count == 0) {\n        return sorted_arr;\n    }\n    \n    int[] count_arr = new int[count];\n    int count_index = 0;\n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 1) {\n            count_arr[count_index] = i;\n            count_index++;\n        }\n    }\n    \n    for (int i = 0; i < count_arr.length; i++) {\n        int index = count_arr[i];\n        long temp = arr[index];\n        arr[index] = arr[count_arr[i] - 1];\n        arr[count_arr[i] - 1] = temp;\n    }\n    \n    return sorted_arr;\n}",
    "{\n    if (arr.length == 0)\n        return arr;",
    "{\n    if (arr.length == 0)\n        return arr;",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    int count = 0;\n    for (int i = 0; i < sorted.length; i++) {\n        if (sorted[i] == 1) {\n            count++;\n        }\n    }\n    \n    if (count == 0) {\n        return sorted;\n    }\n    \n    int[] count_arr = new int[count];\n    int count_index = 0;\n    for (int i = 0; i < sorted.length; i++) {\n        if (sorted[i] == 1) {\n            count_arr[count_index] = i;\n            count_index++;\n        }\n    }\n    \n    for (int i = 0; i < count_arr.length; i++) {\n        sorted[count_arr[i]] = i + 1;\n    }\n    \n    return sorted;\n}",
    "{\n    if (arr.length == 0)\n        return arr;\n    \n    long[] sorted = new long[arr.length];\n    int i = 0;\n    int j = 0;\n    \n    while (i < arr.length)\n    {\n        if (arr[i] == 0)\n        {\n            sorted[j] = arr[i];\n            i++;\n            j++;\n        }\n        else\n        {\n            while (i < arr.length && arr[i] == 1)\n            {\n                sorted[j] = arr[i];\n                i++;\n                j++;\n            }\n            \n            if (i < arr.length)\n            {\n                sorted[j] = arr[i];\n                i++;\n                j++;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j];\n                sorted[j] = arr[i];\n            }\n        }\n    }\n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[j] + 1;\n                sorted_arr[j] = arr[i] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == sorted_arr[i]) {\n            sorted_arr[i] = arr[i] + 1;\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        int ones = 0;\n        for (int j = 0; j < arr.length; j++) {\n            if (arr[j] == 1) {\n                ones++;\n            }\n        }\n        \n        if (ones == 0) {\n            sorted[i] = -1;\n        } else if (ones == 1) {\n            sorted[i] = arr[i];\n        } else {\n            sorted[i] = arr[i] - ones;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = i + 1; j < arr.length; j++)\n        {\n            if (arr[i] == arr[j])\n            {\n                sorted[i] = arr[j];\n                sorted[j] = arr[i];\n            }\n            else if (arr[i] < arr[j])\n            {\n                sorted[i] = arr[j];\n                sorted[j] = arr[i];\n            }\n        }\n    }\n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort based on number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort based on decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = i + 1; j < arr.length; j++)\n        {\n            if (arr[i] == arr[j])\n            {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                if (Math.abs(arr[i]) < Math.abs(arr[j])) {\n                    sorted_arr[i] = arr[i];\n                    sorted_arr[j] = arr[j];\n                }\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                if (arr[i] < arr[j]) {\n                    sorted_arr[i] = arr[i];\n                    sorted_arr[j] = arr[j];\n                }\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] > arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j] = 0;\n                break;\n            }\n            \n            if (arr[i] > arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = 0; j < arr.length - 1; j++)\n        {\n            if (arr[j] == 0 && arr[j + 1] == 1)\n            {\n                long temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort based on number of ones in binary representation\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort based on decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort based on number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort based on decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = 0; j < arr.length - 1; j++) {\n            if (arr[j] == 1 && arr[j+1] == 0) {\n                long temp = sorted_arr[j];\n                sorted_arr[j] = sorted_arr[j+1];\n                sorted_arr[j+1] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i] + 1;\n                sorted_arr[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted_arr[i] = 0;\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i] + 1;\n                sorted_arr[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (sorted_arr[i] == arr[i]) {\n            sorted_arr[i] = arr[i] + 1;\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j];\n                sorted[j] = arr[i];\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return result;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[j];\n                sorted_arr[j] = arr[i];\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n        sorted[i] = arr[i];\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        int j = i;\n        while (j < arr.length - 1 && arr[j] == arr[j + 1])\n            j++;\n        \n        if (j > i)\n        {\n            long temp = sorted[i];\n            sorted[i] = sorted[j];\n            sorted[j] = temp;\n        }\n    }\n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted[i] = 0;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                result[i] = arr[i] + 1;\n                result[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (result[i] == result[j]) {\n                result[i] = arr[i] + 1;\n                result[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    return result;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j] = arr[i] + arr[j];\n                break;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        arr[i] = sorted[i];\n    }\n    \n    return arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = i + 1; j < arr.length; j++)\n        {\n            if (arr[i] == arr[j])\n            {\n                if (arr[i] == 0)\n                {\n                    sorted_arr[i] = sorted_arr[j];\n                    sorted_arr[j] = arr[i];\n                }\n                else\n                {\n                    sorted_arr[i] = sorted_arr[j] - sorted_arr[i];\n                    sorted_arr[j] = arr[i];\n                }\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else if (arr[i] < arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else if (arr[i] > arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else if (arr[i] < arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n            else if (arr[i] > arr[j]) {\n                sorted_arr[i] = arr[i];\n                sorted_arr[j] = arr[j];\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] > arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j];\n                sorted[j] = arr[i];\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    // sort based on number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort based on decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[j] + 1;\n                sorted_arr[j] = arr[i] + 1;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted[i] = 0;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    int count = 0;\n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 1) {\n            count++;\n        }\n    }\n    \n    if (count == 0) {\n        return sorted;\n    }\n    \n    int[] count_ones = new int[count];\n    int[] count_twos = new int[count];\n    int[] count_threes = new int[count];\n    int[] count_fours = new int[count];\n    int[] count_fives = new int[count];\n    int[] count_sixes = new int[count];\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 1) {\n            count_ones[count - 1]++;\n        } else if (arr[i] == 2) {\n            count_twos[count - 1]++;\n        } else if (arr[i] == 3) {\n            count_threes[count - 1]++;\n        } else if (arr[i] == 4) {\n            count_fours[count - 1]++;\n        } else if (arr[i] == 5) {\n            count_fives[count - 1]++;\n        } else if (arr[i] == 6) {\n            count_sixes[count - 1]++;\n        }\n    }\n    \n    for (int i = 0; i < count; i++) {\n        for (int j = 0; j < count_ones[i]; j++) {\n            sorted[count_ones[i] + j] = 1L;\n        }\n        for (int j = 0; j < count_twos[i]; j++) {\n            sorted[count_ones[i] + count_twos[i] + j] = 2L;\n        }\n        for (int j = 0; j < count_threes[i]; j++) {\n            s",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j];\n                sorted[j] = arr[i];\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i] + 1;\n                sorted_arr[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted_arr[i] = 0;\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j];\n                sorted[j] = arr[i];\n            }\n        }\n    }\n    return sorted;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    return result;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted[i] = 0;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++)\n    {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        for (int j = i + 1; j < arr.length; j++)\n        {\n            if (arr[i] == arr[j])\n            {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j] = arr[i] + arr[j];\n                break;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        arr[i] = sorted[i];\n    }\n    \n    return arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[i] + 1;\n                sorted[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == 0) {\n            sorted[i] = 0;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    return sorted;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                result[i] = arr[j] = arr[i] + arr[j];\n            }\n        }\n    }\n    \n    return result;\n}",
    "{\n    if (arr.length == 0)\n        return arr;\n    \n    long[] sorted = new long[arr.length];\n    int count = 0;\n    for (long i : arr)\n    {\n        if (i == 0)\n            continue;\n        \n        count = count + 1;\n        sorted[count - 1] = i;\n    }\n    \n    for (int i = 0; i < count; i++)\n    {\n        for (int j = 0; j < count - 1; j++)\n        {\n            if (sorted[j] == 1 && sorted[j + 1] == 0)\n            {\n                long temp = sorted[j];\n                sorted[j] = sorted[j + 1];\n                sorted[j + 1] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted_arr[i] = arr[i] + 1;\n                sorted_arr[j] = arr[j] + 1;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] == sorted_arr[i]) {\n            sorted_arr[i] = arr[i] + 1;\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] result = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        result[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                result[i] = arr[j];\n                result[j] = arr[i];\n            }\n        }\n    }\n    \n    return result;\n}",
    "{\n    if (arr.length == 0)\n        return arr;\n    \n    long[] sorted = new long[arr.length];\n    \n    for (int i = 0; i < arr.length; i++)\n    {\n        long num = arr[i];\n        int ones = 0;\n        while (num > 0)\n        {\n            ones++;\n            num = num & (num - 1);\n        }\n        \n        int j = 0;\n        for (j = 0; j < sorted.length; j++)\n        {\n            if (sorted[j] == ones)\n                break;\n        }\n        \n        if (j == sorted.length)\n        {\n            sorted[j] = ones;\n        }\n        else\n        {\n            sorted[j] = ones;\n            for (int k = j; k < sorted.length - 1; k++)\n            {\n                sorted[k] = sorted[k + 1];\n            }\n            sorted[sorted.length - 1] = ones;\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    return arr;\n}",
    "{\n    long[] sorted_arr = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted_arr[i] = arr[i];\n    }\n    \n    // sort by number of ones\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    // sort by decimal value\n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] < arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted_arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j] = arr[i] + arr[j];\n                sorted[j] = arr[i] - arr[j];\n                arr[i] = arr[j] - arr[i];\n                arr[j] = arr[i] + arr[j];\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j] = arr[i] + 1;\n                break;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        arr[i] = sorted[i];\n    }\n    \n    return arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n    }\n    \n    return sorted;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                if (arr[i] == 0) {\n                    sorted[i] = arr[i] + sorted[i];\n                    sorted[j] = arr[j] + sorted[j];\n                } else {\n                    sorted[i] = arr[i] - sorted[i];\n                    sorted[j] = arr[j] - sorted[j];\n                }\n            } else if (arr[i] < arr[j]) {\n                sorted[i] = arr[i] - sorted[i];\n                sorted[j] = arr[j] - sorted[j];\n            } else {\n                sorted[i] = arr[i] + sorted[i];\n                sorted[j] = arr[j] + sorted[j];\n            }\n        }\n    }\n    return sorted;\n}",
    "{\n    if (arr.length < 2) return arr;\n    \n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        for (int j = i + 1; j < arr.length; j++) {\n            if (arr[i] == arr[j]) {\n                sorted[i] = arr[j] = arr[i] + arr[j];\n                break;\n            }\n        }\n    }\n    \n    for (int i = 0; i < arr.length; i++) {\n        arr[i] = sorted[i];\n    }\n    \n    return arr;\n}",
    "{\n    long[] sorted = new long[arr.length];\n    for (int i = 0; i < arr.length; i++) {\n        sorted[i] = arr[i];\n    }\n    \n    return sorted;\n}"
  ],
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ]
}
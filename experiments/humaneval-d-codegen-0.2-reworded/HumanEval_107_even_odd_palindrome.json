{
  "name": "HumanEval_107_even_odd_palindrome",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\n\n    Given a positive integer n, return a tuple that has the number of even and odd\n    integer palindromes that fall within the range(1, n), inclusive.\n\n    Example 1:\n\n    >>> even_odd_palindrome(3L)\n    tuple(1L, 2L)\n        Explanation:\n        Integer palindrome are 1, 2, 3. one of them is even, and two of them are odd.\n\n    Example 2:\n\n    >>> even_odd_palindrome(12L)\n    tuple(4L, 6L)\n        Explanation:\n        Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9, 11. four of them are even, and 6 of them are odd.\n\n    Note:\n        1. 1 <= n <= 10^3\n        2. returned tuple has the number of even and odd integer palindromes respectively.\n    \n*/\nTuple!(long, long) even_odd_palindrome(long n) \n",
  "tests": "unittest\n{\n    alias candidate = even_odd_palindrome;\n\n    assert(candidate(123L) == tuple(8L, 13L));\n    assert(candidate(12L) == tuple(4L, 6L));\n    assert(candidate(3L) == tuple(1L, 2L));\n    assert(candidate(63L) == tuple(6L, 8L));\n    assert(candidate(25L) == tuple(5L, 6L));\n    assert(candidate(19L) == tuple(4L, 6L));\n    assert(candidate(9L) == tuple(4L, 5L));\n    assert(candidate(1L) == tuple(0L, 1L));\n}\nvoid main(){}",
  "completions": [
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(2 * n / 2, n / 2);\n    else return Tuple(n, n / 2);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    Tuple!(long, long) result = Tuple.empty();\n    if (n < 1) return result;\n    \n    long odd = 0, even = 0;\n    for (long i = 1; i <= n; ++i) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) {\n                ++even;\n            } else {\n                ++odd;\n            }\n        }\n    }\n    result = Tuple.from(odd, even);\n    return result;\n}",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(6, 3);\n    if (n == 8) return Tuple(6, 3);\n    if (n == 9) return Tuple(6, 3);\n    if (n == 10) return Tuple(8, 4);\n    if (n == 11) return Tuple(8, 4);\n    if (n == 12) return Tuple(8, 4);\n    if (n == 13) return Tuple(10, 5);\n    if (n == 14) return Tuple(10, 5);\n    if (n == 15) return Tuple(10, 5);\n    if (n == 16) return Tuple(12, 6);\n    if (n == 17) return Tuple(12, 6);\n    if (n == 18) return Tuple(12, 6);\n    if (n == 19) return Tuple(14, 7);\n    if (n == 20) return Tuple(14, 7);\n    if (n == 21) return Tuple(14, 7);\n    if (n == 22) return Tuple(16, 8);\n    if (n == 23) return Tuple(16, 8);\n    if (n == 24) return Tuple(16, 8);\n    if (n == 25) return Tuple(18, 9);\n    if (n == 26) return Tuple(18, 9);\n    if (n == 27) return Tuple(18, 9);\n    if (n == 28) return Tuple(20, 10);\n    if (n == 29) return Tuple(20, 10);\n    if (n == 30) return Tuple(20, 10);\n    if (n == 31) return Tuple(22, 11);\n    if (n == 32) return Tuple(22, 11",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(1L, 2L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    Tuple!(long, long) even_odd_palindrome(long n, long odd, long even) \n    {\n        if (n < 2) \n        {\n            return Tuple!(long, long)(0, 0);\n        }\n        else if (n == 2) \n        {\n            return Tuple!(long, long)(1, 1);\n        }\n        else \n        {\n            odd = odd_palindrome(n - 1);\n            even = even_palindrome(n - 1);\n            return Tuple!(long, long)(odd + even, odd);\n        }\n    }\n    \n    long odd_palindrome(long n) \n    {\n        if (n < 2) \n        {\n            return 0;\n        }\n        else \n        {\n            long odd = 0;\n            for (long i = 1; i <= n; i++) \n            {\n                if (math.is_palindrome(i)) \n                {\n                    odd++;\n                }\n            }\n            return odd;\n        }\n    }\n    \n    long even_palindrome(long n) \n    {\n        if (n < 2) \n        {\n            return 0;\n        }\n        else \n        {\n            long even = 0;\n            for (long i = 1; i <= n; i++) \n            {\n                if (math.is_palindrome(i) && i % 2 == 0) \n                {\n                    even++;\n                }\n            }\n            return even;\n        }\n    }\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(2, 2);\n    if (n == 5) return Tuple(3, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 3);\n    if (n == 8) return Tuple(4, 4);\n    if (n == 9) return Tuple(5, 4);\n    if (n == 10) return Tuple(6, 4);\n    if (n == 11) return Tuple(6, 5);\n    if (n == 12) return Tuple(6, 6);\n    if (n == 13) return Tuple(7, 6);\n    if (n == 14) return Tuple(8, 6);\n    if (n == 15) return Tuple(8, 7);\n    if (n == 16) return Tuple(8, 8);\n    if (n == 17) return Tuple(9, 8);\n    if (n == 18) return Tuple(10, 8);\n    if (n == 19) return Tuple(10, 9);\n    if (n == 20) return Tuple(10, 10);\n    if (n == 21) return Tuple(11, 10);\n    if (n == 22) return Tuple(12, 10);\n    if (n == 23) return Tuple(12, 11);\n    if (n == 24) return Tuple(12, 12);\n    if (n == 25) return Tuple(13, 12);\n    if (n == 26) return Tuple(14, 12);\n    if (n == 27) return Tuple(14, 13);\n    if (n == 28) return Tuple(14, 14);\n    if (n == 29) return Tuple(15, 14);\n    if (n == 30) return Tuple(16, 14);\n    if (n == 31) return Tuple(16, 15);\n    if (n == 32) return Tuple(16, 16",
    "{\n    if (n == 1) return Tuple(1L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 2L);\n    if (n == 8) return Tuple(4L, 2L);\n    if (n == 9) return Tuple(4L, 2L);\n    if (n == 10) return Tuple(4L, 2L);\n    if (n == 11) return Tuple(4L, 2L);\n    if (n == 12) return Tuple(6L, 4L);\n    if (n == 13) return Tuple(6L, 4L);\n    if (n == 14) return Tuple(6L, 4L);\n    if (n == 15) return Tuple(6L, 4L);\n    if (n == 16) return Tuple(6L, 4L);\n    if (n == 17) return Tuple(6L, 4L);\n    if (n == 18) return Tuple(6L, 4L);\n    if (n == 19) return Tuple(6L, 4L);\n    if (n == 20) return Tuple(6L, 4L);\n    if (n == 21) return Tuple(6L, 4L);\n    if (n == 22) return Tuple(6L, 4L);\n    if (n == 23) return Tuple(6L, 4L);\n    if (n == 24) return Tuple(6L, 4L);\n    if (n == 25) return Tuple(6L, 4L);\n    if (n == 26) return Tuple(6L, 4L);\n    if (n == 27) return Tuple(6L, 4L);\n    if (n == 28) return Tuple(6L, 4L);\n    if (n == 29",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0;\n    long odd = 0;\n    \n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    \n    return Tuple(even, odd);\n}",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0L;\n    long odd = 0L;\n    for (long i = 1L; i <= n; ++i) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) {\n                ++even;\n            } else {\n                ++odd;\n            }\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4);\n    if (n == 32) return Tuple(6, 4",
    "{\n    if (n < 2) return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 1);\n    if (n == 2) return Tuple(2, 2);\n    if (n == 3) return Tuple(2, 2);\n    if (n == 4) return Tuple(4, 4);\n    if (n == 5) return Tuple(4, 4);\n    if (n == 6) return Tuple(4, 4);\n    if (n == 7) return Tuple(6, 6);\n    if (n == 8) return Tuple(6, 6);\n    if (n == 9) return Tuple(6, 6);\n    if (n == 10) return Tuple(8, 8);\n    if (n == 11) return Tuple(8, 8);\n    if (n == 12) return Tuple(8, 8);\n    if (n == 13) return Tuple(10, 10);\n    if (n == 14) return Tuple(10, 10);\n    if (n == 15) return Tuple(10, 10);\n    if (n == 16) return Tuple(12, 12);\n    if (n == 17) return Tuple(12, 12);\n    if (n == 18) return Tuple(12, 12);\n    if (n == 19) return Tuple(14, 14);\n    if (n == 20) return Tuple(14, 14);\n    if (n == 21) return Tuple(14, 14);\n    if (n == 22) return Tuple(16, 16);\n    if (n == 23) return Tuple(16, 16);\n    if (n == 24) return Tuple(16, 16);\n    if (n == 25) return Tuple(18, 18);\n    if (n == 26) return Tuple(18, 18);\n    if (n == 27) return Tuple(18, 18);\n    if (n == 28) return Tuple(20, 20);\n    if (n == 29) return Tuple(20, 20);\n    if (n == 30) return Tuple(20, 20);\n    if (n == 31) return Tuple(22, 22",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4);\n    if (n == 32) return Tuple(6, 4",
    "{\n    Tuple!(long, long) result;\n    if (n == 1) {\n        result = Tuple!(long, long)(1, 0);\n    }\n    else if (n == 2) {\n        result = Tuple!(long, long)(2, 1);\n    }\n    else {\n        long even = 0;\n        long odd = 0;\n        for (long i = 1; i <= n; i++) {\n            if (math.is_palindrome(i)) {\n                if (i % 2 == 0) {\n                    even++;\n                }\n                else {\n                    odd++;\n                }\n            }\n        }\n        result = Tuple!(long, long)(even, odd);\n    }\n    return result;\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    for (long i = 1L; i <= n; ++i) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) {\n                ++even;\n            } else {\n                ++odd;\n            }\n        }\n    }\n    \n    return Tuple(even, odd);\n}",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0L, odd = 0L;\n    for (long i = 1L; i <= n; ++i) {\n        if (is_palindrome(i)) {\n            if (i % 2L == 0L) {\n                ++even;\n            } else {\n                ++odd;\n            }\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1)\n        return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    for (long i = 1L; i <= n; ++i) {\n        if (is_palindrome(i)) {\n            if (i % 2L == 0L)\n                ++even;\n            else\n                ++odd;\n        }\n    }\n    \n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    long i = 1;\n    while (i <= n) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n        i++;\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0L;\n    long odd = 0L;\n    for (long i = 1L; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    for (long i = 1L; i <= n; ++i) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) {\n                ++even;\n            } else {\n                ++odd;\n            }\n        }\n    }\n    \n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2)\n        return Tuple(0, 0);\n    \n    long even = 0;\n    long odd = 0;\n    \n    for (long i = 1; i <= n; ++i) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0)\n                ++even;\n            else\n                ++odd;\n        }\n    }\n    \n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1) return Tuple(0L, 0L);\n    if (n == 1) return Tuple(1L, 1L);\n    if (n == 2) return Tuple(2L, 2L);\n    if (n == 3) return Tuple(2L, 2L);\n    if (n == 4) return Tuple(4L, 4L);\n    if (n == 5) return Tuple(4L, 4L);\n    if (n == 6) return Tuple(4L, 4L);\n    if (n == 7) return Tuple(4L, 4L);\n    if (n == 8) return Tuple(4L, 4L);\n    if (n == 9) return Tuple(4L, 4L);\n    if (n == 10) return Tuple(4L, 4L);\n    if (n == 11) return Tuple(6L, 6L);\n    if (n == 12) return Tuple(6L, 6L);\n    if (n == 13) return Tuple(6L, 6L);\n    if (n == 14) return Tuple(6L, 6L);\n    if (n == 15) return Tuple(6L, 6L);\n    if (n == 16) return Tuple(6L, 6L);\n    if (n == 17) return Tuple(6L, 6L);\n    if (n == 18) return Tuple(6L, 6L);\n    if (n == 19) return Tuple(6L, 6L);\n    if (n == 20) return Tuple(6L, 6L);\n    if (n == 21) return Tuple(6L, 6L);\n    if (n == 22) return Tuple(6L, 6L);\n    if (n == 23) return Tuple(6L, 6L);\n    if (n == 24) return Tuple(6L, 6L);\n    if (n == 25) return Tuple(6L, 6L);\n    if (n == 26) return Tuple(6L, 6L);\n    if (n == 27) return Tuple(6L, 6L);\n    if (n == 28",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(2L, 2L);\n    if (n == 5) return Tuple(3L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 3L);\n    if (n == 8) return Tuple(5L, 3L);\n    if (n == 9) return Tuple(6L, 3L);\n    if (n == 10) return Tuple(6L, 4L);\n    if (n == 11) return Tuple(7L, 4L);\n    if (n == 12) return Tuple(8L, 4L);\n    if (n == 13) return Tuple(8L, 5L);\n    if (n == 14) return Tuple(9L, 5L);\n    if (n == 15) return Tuple(10L, 5L);\n    if (n == 16) return Tuple(10L, 6L);\n    if (n == 17) return Tuple(11L, 6L);\n    if (n == 18) return Tuple(12L, 6L);\n    if (n == 19) return Tuple(12L, 7L);\n    if (n == 20) return Tuple(13L, 7L);\n    if (n == 21) return Tuple(14L, 7L);\n    if (n == 22) return Tuple(14L, 8L);\n    if (n == 23) return Tuple(15L, 8L);\n    if (n == 24) return Tuple(16L, 8L);\n    if (n == 25) return Tuple(16L, 9L);\n    if (n == 26) return Tuple(17L, 9L);\n    if (n == 27) return Tuple(18L, 9L);\n    if (n == 28) return Tuple(18L, 10L);\n    if (n == 29",
    "{\n    if (n < 1) return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; ++i) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) ++even;\n            else ++odd;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n == 1) return Tuple(1L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 2L);\n    if (n == 8) return Tuple(4L, 2L);\n    if (n == 9) return Tuple(4L, 2L);\n    if (n == 10) return Tuple(4L, 2L);\n    if (n == 11) return Tuple(4L, 2L);\n    if (n == 12) return Tuple(6L, 4L);\n    if (n == 13) return Tuple(6L, 4L);\n    if (n == 14) return Tuple(6L, 4L);\n    if (n == 15) return Tuple(6L, 4L);\n    if (n == 16) return Tuple(6L, 4L);\n    if (n == 17) return Tuple(6L, 4L);\n    if (n == 18) return Tuple(6L, 4L);\n    if (n == 19) return Tuple(6L, 4L);\n    if (n == 20) return Tuple(6L, 4L);\n    if (n == 21) return Tuple(6L, 4L);\n    if (n == 22) return Tuple(6L, 4L);\n    if (n == 23) return Tuple(6L, 4L);\n    if (n == 24) return Tuple(6L, 4L);\n    if (n == 25) return Tuple(6L, 4L);\n    if (n == 26) return Tuple(6L, 4L);\n    if (n == 27) return Tuple(6L, 4L);\n    if (n == 28) return Tuple(6L, 4L);\n    if (n == 29",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0L, odd = 0L;\n    for (long i = 1L; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 1);\n    if (n == 2) return Tuple(2, 2);\n    if (n == 3) return Tuple(2, 2);\n    if (n == 4) return Tuple(4, 4);\n    if (n == 5) return Tuple(4, 4);\n    if (n == 6) return Tuple(4, 4);\n    if (n == 7) return Tuple(4, 4);\n    if (n == 8) return Tuple(4, 4);\n    if (n == 9) return Tuple(4, 4);\n    if (n == 10) return Tuple(4, 4);\n    if (n == 11) return Tuple(4, 4);\n    if (n == 12) return Tuple(6, 6);\n    if (n == 13) return Tuple(6, 6);\n    if (n == 14) return Tuple(6, 6);\n    if (n == 15) return Tuple(6, 6);\n    if (n == 16) return Tuple(6, 6);\n    if (n == 17) return Tuple(6, 6);\n    if (n == 18) return Tuple(6, 6);\n    if (n == 19) return Tuple(6, 6);\n    if (n == 20) return Tuple(6, 6);\n    if (n == 21) return Tuple(6, 6);\n    if (n == 22) return Tuple(6, 6);\n    if (n == 23) return Tuple(6, 6);\n    if (n == 24) return Tuple(6, 6);\n    if (n == 25) return Tuple(6, 6);\n    if (n == 26) return Tuple(6, 6);\n    if (n == 27) return Tuple(6, 6);\n    if (n == 28) return Tuple(6, 6);\n    if (n == 29) return Tuple(6, 6);\n    if (n == 30) return Tuple(6, 6);\n    if (n == 31) return Tuple(6, 6",
    "{\n    if (n < 1)\n        return Tuple(0L, 0L);\n    if (n == 1)\n        return Tuple(1L, 1L);\n    if (n == 2)\n        return Tuple(2L, 2L);\n    if (n == 3)\n        return Tuple(2L, 3L);\n    if (n == 4)\n        return Tuple(4L, 4L);\n    if (n == 5)\n        return Tuple(4L, 5L);\n    if (n == 6)\n        return Tuple(4L, 6L);\n    if (n == 7)\n        return Tuple(4L, 7L);\n    if (n == 8)\n        return Tuple(4L, 8L);\n    if (n == 9)\n        return Tuple(4L, 9L);\n    if (n == 10)\n        return Tuple(4L, 10L);\n    if (n == 11)\n        return Tuple(4L, 11L);\n    if (n == 12)\n        return Tuple(4L, 12L);\n    if (n == 13)\n        return Tuple(4L, 13L);\n    if (n == 14)\n        return Tuple(4L, 14L);\n    if (n == 15)\n        return Tuple(4L, 15L);\n    if (n == 16)\n        return Tuple(4L, 16L);\n    if (n == 17)\n        return Tuple(4L, 17L);\n    if (n == 18)\n        return Tuple(4L, 18L);\n    if (n == 19)\n        return Tuple(4L, 19L);\n    if (n == 20)\n        return Tuple(4L, 20L);\n    if (n == 21)\n        return Tuple(4L, 21L);\n    if (n == 22)\n        return Tuple(4L, 22L);\n    if (n == 23)\n        return Tuple(4L, 23L);\n    if (n == 24)\n        return Tuple(4L, 24L);\n    if (n == 25)\n        return",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(2, 2);\n    if (n == 5) return Tuple(3, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 3);\n    if (n == 8) return Tuple(5, 3);\n    if (n == 9) return Tuple(6, 3);\n    if (n == 10) return Tuple(6, 4);\n    if (n == 11) return Tuple(7, 4);\n    if (n == 12) return Tuple(8, 4);\n    if (n == 13) return Tuple(8, 5);\n    if (n == 14) return Tuple(9, 5);\n    if (n == 15) return Tuple(10, 5);\n    if (n == 16) return Tuple(10, 6);\n    if (n == 17) return Tuple(11, 6);\n    if (n == 18) return Tuple(12, 6);\n    if (n == 19) return Tuple(12, 7);\n    if (n == 20) return Tuple(13, 7);\n    if (n == 21) return Tuple(14, 7);\n    if (n == 22) return Tuple(14, 8);\n    if (n == 23) return Tuple(15, 8);\n    if (n == 24) return Tuple(16, 8);\n    if (n == 25) return Tuple(16, 9);\n    if (n == 26) return Tuple(17, 9);\n    if (n == 27) return Tuple(18, 9);\n    if (n == 28) return Tuple(18, 10);\n    if (n == 29) return Tuple(19, 10);\n    if (n == 30) return Tuple(20, 10);\n    if (n == 31) return Tuple(20, 11);\n    if (n == 32) return Tuple(21, 11",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    for (long i = 1L; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2L == 0L) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n    }\n    \n    return Tuple(even, odd);\n}",
    "{\n    Tuple!(long, long) result;\n    long even = 0;\n    long odd = 0;\n    long i = 1;\n    while (i <= n) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n        i++;\n    }\n    result = tuple(even, odd);\n    return result;\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}",
    "{\n    if (n < 1)\n        return Tuple(0L, 0L);\n    \n    long even = 0;\n    long odd = 0;\n    \n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0)\n                even++;\n            else\n                odd++;\n        }\n    }\n    \n    return Tuple(even, odd);\n}",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4);\n    if (n == 32) return Tuple(6, 4",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0L, odd = 0L;\n    \n    for (long i = 1L; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n    }\n    \n    return Tuple(even, odd);\n}\n",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4);\n    if (n == 32) return Tuple(6, 4",
    "{\n    if (n < 1)\n        return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    for (long i = 1L; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2L == 0L)\n                even++;\n            else\n                odd++;\n        }\n    }\n    \n    return Tuple(even, odd);\n}",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0L;\n    long odd = 0L;\n    for (long i = 1L; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2L == 0L) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n == 1) return Tuple(1L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 2L);\n    if (n == 8) return Tuple(4L, 2L);\n    if (n == 9) return Tuple(4L, 2L);\n    if (n == 10) return Tuple(4L, 2L);\n    if (n == 11) return Tuple(4L, 2L);\n    if (n == 12) return Tuple(4L, 2L);\n    if (n == 13) return Tuple(4L, 2L);\n    if (n == 14) return Tuple(4L, 2L);\n    if (n == 15) return Tuple(4L, 2L);\n    if (n == 16) return Tuple(4L, 2L);\n    if (n == 17) return Tuple(4L, 2L);\n    if (n == 18) return Tuple(4L, 2L);\n    if (n == 19) return Tuple(4L, 2L);\n    if (n == 20) return Tuple(4L, 2L);\n    if (n == 21) return Tuple(4L, 2L);\n    if (n == 22) return Tuple(4L, 2L);\n    if (n == 23) return Tuple(4L, 2L);\n    if (n == 24) return Tuple(4L, 2L);\n    if (n == 25) return Tuple(4L, 2L);\n    if (n == 26) return Tuple(4L, 2L);\n    if (n == 27) return Tuple(4L, 2L);\n    if (n == 28) return Tuple(4L, 2L);\n    if (n == 29",
    "{\n    if (n < 1) return Tuple(0L, 0L);\n    if (n == 1) return Tuple(1L, 1L);\n    if (n == 2) return Tuple(2L, 2L);\n    if (n == 3) return Tuple(2L, 2L);\n    if (n == 4) return Tuple(4L, 4L);\n    if (n == 5) return Tuple(4L, 4L);\n    if (n == 6) return Tuple(4L, 4L);\n    if (n == 7) return Tuple(4L, 4L);\n    if (n == 8) return Tuple(4L, 4L);\n    if (n == 9) return Tuple(4L, 4L);\n    if (n == 10) return Tuple(4L, 4L);\n    if (n == 11) return Tuple(6L, 6L);\n    if (n == 12) return Tuple(6L, 6L);\n    if (n == 13) return Tuple(6L, 6L);\n    if (n == 14) return Tuple(6L, 6L);\n    if (n == 15) return Tuple(6L, 6L);\n    if (n == 16) return Tuple(6L, 6L);\n    if (n == 17) return Tuple(6L, 6L);\n    if (n == 18) return Tuple(6L, 6L);\n    if (n == 19) return Tuple(6L, 6L);\n    if (n == 20) return Tuple(6L, 6L);\n    if (n == 21) return Tuple(6L, 6L);\n    if (n == 22) return Tuple(6L, 6L);\n    if (n == 23) return Tuple(6L, 6L);\n    if (n == 24) return Tuple(6L, 6L);\n    if (n == 25) return Tuple(6L, 6L);\n    if (n == 26) return Tuple(6L, 6L);\n    if (n == 27) return Tuple(6L, 6L);\n    if (n == 28",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0L;\n    long odd = 0L;\n    for (long i = 1L; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2L == 0L) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1) return Tuple(0L, 0L);\n    if (n == 1) return Tuple(1L, 1L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 2L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 4L);\n    if (n == 6) return Tuple(4L, 4L);\n    if (n == 7) return Tuple(4L, 6L);\n    if (n == 8) return Tuple(4L, 4L);\n    if (n == 9) return Tuple(4L, 6L);\n    if (n == 10) return Tuple(4L, 4L);\n    if (n == 11) return Tuple(4L, 6L);\n    if (n == 12) return Tuple(4L, 4L);\n    if (n == 13) return Tuple(4L, 6L);\n    if (n == 14) return Tuple(4L, 4L);\n    if (n == 15) return Tuple(4L, 6L);\n    if (n == 16) return Tuple(4L, 4L);\n    if (n == 17) return Tuple(4L, 6L);\n    if (n == 18) return Tuple(4L, 4L);\n    if (n == 19) return Tuple(4L, 6L);\n    if (n == 20) return Tuple(4L, 4L);\n    if (n == 21) return Tuple(4L, 6L);\n    if (n == 22) return Tuple(4L, 4L);\n    if (n == 23) return Tuple(4L, 6L);\n    if (n == 24) return Tuple(4L, 4L);\n    if (n == 25) return Tuple(4L, 6L);\n    if (n == 26) return Tuple(4L, 4L);\n    if (n == 27) return Tuple(4L, 6L);\n    if (n == 28",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 1);\n    if (n == 2) return Tuple(2, 2);\n    if (n == 3) return Tuple(2, 2);\n    if (n == 4) return Tuple(4, 4);\n    if (n == 5) return Tuple(4, 4);\n    if (n == 6) return Tuple(4, 4);\n    if (n == 7) return Tuple(4, 4);\n    if (n == 8) return Tuple(4, 4);\n    if (n == 9) return Tuple(4, 4);\n    if (n == 10) return Tuple(4, 4);\n    if (n == 11) return Tuple(6, 6);\n    if (n == 12) return Tuple(6, 6);\n    if (n == 13) return Tuple(6, 6);\n    if (n == 14) return Tuple(6, 6);\n    if (n == 15) return Tuple(6, 6);\n    if (n == 16) return Tuple(6, 6);\n    if (n == 17) return Tuple(6, 6);\n    if (n == 18) return Tuple(6, 6);\n    if (n == 19) return Tuple(6, 6);\n    if (n == 20) return Tuple(6, 6);\n    if (n == 21) return Tuple(6, 6);\n    if (n == 22) return Tuple(6, 6);\n    if (n == 23) return Tuple(6, 6);\n    if (n == 24) return Tuple(6, 6);\n    if (n == 25) return Tuple(6, 6);\n    if (n == 26) return Tuple(6, 6);\n    if (n == 27) return Tuple(6, 6);\n    if (n == 28) return Tuple(6, 6);\n    if (n == 29) return Tuple(6, 6);\n    if (n == 30) return Tuple(6, 6);\n    if (n == 31) return Tuple(6, 6",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    return Tuple(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    Tuple!(long, long) result = Tuple!(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n    }\n    result = Tuple!(even, odd);\n    return result;\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n % 2 == 0) return Tuple(0, n / 2);\n    else return Tuple(n / 2, 0);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4);\n    if (n == 32) return Tuple(6, 4",
    "{\n    if (n < 2) return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2)\n        return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    \n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0)\n                even++;\n            else\n                odd++;\n        }\n    }\n    \n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0L;\n    long odd = 0L;\n    for (long i = 1L; i <= n; ++i) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) {\n                ++even;\n            } else {\n                ++odd;\n            }\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(2, 2);\n    if (n == 5) return Tuple(3, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 3);\n    if (n == 8) return Tuple(5, 3);\n    if (n == 9) return Tuple(6, 3);\n    if (n == 10) return Tuple(6, 4);\n    if (n == 11) return Tuple(7, 4);\n    if (n == 12) return Tuple(8, 4);\n    if (n == 13) return Tuple(8, 5);\n    if (n == 14) return Tuple(9, 5);\n    if (n == 15) return Tuple(10, 5);\n    if (n == 16) return Tuple(10, 6);\n    if (n == 17) return Tuple(11, 6);\n    if (n == 18) return Tuple(12, 6);\n    if (n == 19) return Tuple(12, 7);\n    if (n == 20) return Tuple(13, 7);\n    if (n == 21) return Tuple(14, 7);\n    if (n == 22) return Tuple(14, 8);\n    if (n == 23) return Tuple(15, 8);\n    if (n == 24) return Tuple(16, 8);\n    if (n == 25) return Tuple(16, 9);\n    if (n == 26) return Tuple(17, 9);\n    if (n == 27) return Tuple(18, 9);\n    if (n == 28) return Tuple(18, 10);\n    if (n == 29) return Tuple(19, 10);\n    if (n == 30) return Tuple(20, 10);\n    if (n == 31) return Tuple(20, 11);\n    if (n == 32) return Tuple(21, 11",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    \n    long even = 0L;\n    long odd = 0L;\n    for (long i = 1L; i <= n; ++i) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) {\n                ++even;\n            } else {\n                ++odd;\n            }\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    for (long i = 1L; i <= n; ++i) {\n        if (is_palindrome(i)) {\n            if (i % 2L == 0L) {\n                ++even;\n            } else {\n                ++odd;\n            }\n        }\n    }\n    \n    return Tuple(even, odd);\n}",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4);\n    if (n == 32) return Tuple(6, 4",
    "{\n    Tuple!(long, long) result;\n    if (n == 1)\n        return Tuple!(1L, 0L);\n    if (n == 2)\n        return Tuple!(2L, 1L);\n    if (n % 2 == 0)\n        result = Tuple!(n / 2, n / 2);\n    else\n        result = Tuple!(n / 2, (n - 1) / 2);\n    return result;\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(2L, 2L);\n    if (n == 5) return Tuple(3L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 3L);\n    if (n == 8) return Tuple(5L, 3L);\n    if (n == 9) return Tuple(6L, 3L);\n    if (n == 10) return Tuple(6L, 4L);\n    if (n == 11) return Tuple(7L, 4L);\n    if (n == 12) return Tuple(8L, 4L);\n    if (n == 13) return Tuple(8L, 5L);\n    if (n == 14) return Tuple(9L, 5L);\n    if (n == 15) return Tuple(10L, 5L);\n    if (n == 16) return Tuple(10L, 6L);\n    if (n == 17) return Tuple(11L, 6L);\n    if (n == 18) return Tuple(12L, 6L);\n    if (n == 19) return Tuple(12L, 7L);\n    if (n == 20) return Tuple(13L, 7L);\n    if (n == 21) return Tuple(14L, 7L);\n    if (n == 22) return Tuple(14L, 8L);\n    if (n == 23) return Tuple(15L, 8L);\n    if (n == 24) return Tuple(16L, 8L);\n    if (n == 25) return Tuple(16L, 9L);\n    if (n == 26) return Tuple(17L, 9L);\n    if (n == 27) return Tuple(18L, 9L);\n    if (n == 28) return Tuple(18L, 10L);\n    if (n == 29",
    "{\n    if (n < 1)\n        return Tuple(0L, 0L);\n    if (n == 1)\n        return Tuple(1L, 1L);\n    if (n == 2)\n        return Tuple(2L, 2L);\n    if (n == 3)\n        return Tuple(2L, 2L);\n    if (n == 4)\n        return Tuple(4L, 4L);\n    if (n == 5)\n        return Tuple(4L, 4L);\n    if (n == 6)\n        return Tuple(4L, 4L);\n    if (n == 7)\n        return Tuple(4L, 4L);\n    if (n == 8)\n        return Tuple(4L, 4L);\n    if (n == 9)\n        return Tuple(4L, 4L);\n    if (n == 10)\n        return Tuple(4L, 4L);\n    if (n == 11)\n        return Tuple(4L, 4L);\n    if (n == 12)\n        return Tuple(4L, 4L);\n    if (n == 13)\n        return Tuple(4L, 4L);\n    if (n == 14)\n        return Tuple(4L, 4L);\n    if (n == 15)\n        return Tuple(4L, 4L);\n    if (n == 16)\n        return Tuple(4L, 4L);\n    if (n == 17)\n        return Tuple(4L, 4L);\n    if (n == 18)\n        return Tuple(4L, 4L);\n    if (n == 19)\n        return Tuple(4L, 4L);\n    if (n == 20)\n        return Tuple(4L, 4L);\n    if (n == 21)\n        return Tuple(4L, 4L);\n    if (n == 22)\n        return Tuple(4L, 4L);\n    if (n == 23)\n        return Tuple(4L, 4L);\n    if (n == 24)\n        return Tuple(4L, 4L);\n    if (n == 25)\n        return",
    "{\n    if (n == 1) return Tuple(1L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 2L);\n    if (n == 8) return Tuple(4L, 2L);\n    if (n == 9) return Tuple(4L, 2L);\n    if (n == 10) return Tuple(4L, 2L);\n    if (n == 11) return Tuple(6L, 3L);\n    if (n == 12) return Tuple(6L, 3L);\n    if (n == 13) return Tuple(6L, 3L);\n    if (n == 14) return Tuple(6L, 3L);\n    if (n == 15) return Tuple(6L, 3L);\n    if (n == 16) return Tuple(6L, 3L);\n    if (n == 17) return Tuple(6L, 3L);\n    if (n == 18) return Tuple(6L, 3L);\n    if (n == 19) return Tuple(6L, 3L);\n    if (n == 20) return Tuple(6L, 3L);\n    if (n == 21) return Tuple(6L, 3L);\n    if (n == 22) return Tuple(6L, 3L);\n    if (n == 23) return Tuple(6L, 3L);\n    if (n == 24) return Tuple(6L, 3L);\n    if (n == 25) return Tuple(6L, 3L);\n    if (n == 26) return Tuple(6L, 3L);\n    if (n == 27) return Tuple(6L, 3L);\n    if (n == 28) return Tuple(6L, 3L);\n    if (n == 29",
    "{\n    if (n < 1)\n        return Tuple(0, 0);\n    if (n == 1)\n        return Tuple(1, 1);\n    if (n == 2)\n        return Tuple(2, 2);\n    if (n == 3)\n        return Tuple(2, 3);\n    long even = 0;\n    long odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0)\n                even++;\n            else\n                odd++;\n        }\n    }\n    return Tuple(even, odd);\n}",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    return Tuple(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; ++i) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}",
    "{\n    if (n < 1) return Tuple(0L, 0L);\n    if (n == 1) return Tuple(1L, 1L);\n    if (n == 2) return Tuple(2L, 2L);\n    if (n == 3) return Tuple(2L, 2L);\n    if (n == 4) return Tuple(4L, 4L);\n    if (n == 5) return Tuple(4L, 4L);\n    if (n == 6) return Tuple(4L, 4L);\n    if (n == 7) return Tuple(4L, 4L);\n    if (n == 8) return Tuple(4L, 4L);\n    if (n == 9) return Tuple(4L, 4L);\n    if (n == 10) return Tuple(4L, 4L);\n    if (n == 11) return Tuple(6L, 6L);\n    if (n == 12) return Tuple(6L, 6L);\n    if (n == 13) return Tuple(6L, 6L);\n    if (n == 14) return Tuple(6L, 6L);\n    if (n == 15) return Tuple(6L, 6L);\n    if (n == 16) return Tuple(6L, 6L);\n    if (n == 17) return Tuple(6L, 6L);\n    if (n == 18) return Tuple(6L, 6L);\n    if (n == 19) return Tuple(6L, 6L);\n    if (n == 20) return Tuple(6L, 6L);\n    if (n == 21) return Tuple(6L, 6L);\n    if (n == 22) return Tuple(6L, 6L);\n    if (n == 23) return Tuple(6L, 6L);\n    if (n == 24) return Tuple(6L, 6L);\n    if (n == 25) return Tuple(6L, 6L);\n    if (n == 26) return Tuple(6L, 6L);\n    if (n == 27) return Tuple(6L, 6L);\n    if (n == 28",
    "{\n    if (n == 1) return Tuple(1L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 2L);\n    if (n == 8) return Tuple(4L, 2L);\n    if (n == 9) return Tuple(4L, 2L);\n    if (n == 10) return Tuple(4L, 2L);\n    if (n == 11) return Tuple(4L, 2L);\n    if (n == 12) return Tuple(6L, 4L);\n    if (n == 13) return Tuple(6L, 4L);\n    if (n == 14) return Tuple(6L, 4L);\n    if (n == 15) return Tuple(6L, 4L);\n    if (n == 16) return Tuple(6L, 4L);\n    if (n == 17) return Tuple(6L, 4L);\n    if (n == 18) return Tuple(6L, 4L);\n    if (n == 19) return Tuple(6L, 4L);\n    if (n == 20) return Tuple(6L, 4L);\n    if (n == 21) return Tuple(6L, 4L);\n    if (n == 22) return Tuple(6L, 4L);\n    if (n == 23) return Tuple(6L, 4L);\n    if (n == 24) return Tuple(6L, 4L);\n    if (n == 25) return Tuple(6L, 4L);\n    if (n == 26) return Tuple(6L, 4L);\n    if (n == 27) return Tuple(6L, 4L);\n    if (n == 28) return Tuple(6L, 4L);\n    if (n == 29",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 1);\n    if (n == 2) return Tuple(2, 2);\n    if (n == 3) return Tuple(2, 2);\n    if (n == 4) return Tuple(4, 4);\n    if (n == 5) return Tuple(4, 4);\n    if (n == 6) return Tuple(4, 4);\n    if (n == 7) return Tuple(4, 4);\n    if (n == 8) return Tuple(4, 4);\n    if (n == 9) return Tuple(4, 4);\n    if (n == 10) return Tuple(4, 4);\n    if (n == 11) return Tuple(4, 4);\n    if (n == 12) return Tuple(6, 6);\n    if (n == 13) return Tuple(6, 6);\n    if (n == 14) return Tuple(6, 6);\n    if (n == 15) return Tuple(6, 6);\n    if (n == 16) return Tuple(6, 6);\n    if (n == 17) return Tuple(6, 6);\n    if (n == 18) return Tuple(6, 6);\n    if (n == 19) return Tuple(6, 6);\n    if (n == 20) return Tuple(6, 6);\n    if (n == 21) return Tuple(6, 6);\n    if (n == 22) return Tuple(6, 6);\n    if (n == 23) return Tuple(6, 6);\n    if (n == 24) return Tuple(6, 6);\n    if (n == 25) return Tuple(6, 6);\n    if (n == 26) return Tuple(6, 6);\n    if (n == 27) return Tuple(6, 6);\n    if (n == 28) return Tuple(6, 6);\n    if (n == 29) return Tuple(6, 6);\n    if (n == 30) return Tuple(6, 6);\n    if (n == 31) return Tuple(6, 6",
    "{\n    if (n == 1) return Tuple(1L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 2L);\n    if (n == 8) return Tuple(4L, 2L);\n    if (n == 9) return Tuple(4L, 2L);\n    if (n == 10) return Tuple(4L, 2L);\n    if (n == 11) return Tuple(4L, 2L);\n    if (n == 12) return Tuple(6L, 4L);\n    if (n == 13) return Tuple(6L, 4L);\n    if (n == 14) return Tuple(6L, 4L);\n    if (n == 15) return Tuple(6L, 4L);\n    if (n == 16) return Tuple(6L, 4L);\n    if (n == 17) return Tuple(6L, 4L);\n    if (n == 18) return Tuple(6L, 4L);\n    if (n == 19) return Tuple(6L, 4L);\n    if (n == 20) return Tuple(6L, 4L);\n    if (n == 21) return Tuple(6L, 4L);\n    if (n == 22) return Tuple(6L, 4L);\n    if (n == 23) return Tuple(6L, 4L);\n    if (n == 24) return Tuple(6L, 4L);\n    if (n == 25) return Tuple(6L, 4L);\n    if (n == 26) return Tuple(6L, 4L);\n    if (n == 27) return Tuple(6L, 4L);\n    if (n == 28) return Tuple(6L, 4L);\n    if (n == 29",
    "{\n    if (n < 1)\n        return Tuple(0, 0);\n    if (n == 1)\n        return Tuple(1, 1);\n    if (n == 2)\n        return Tuple(2, 2);\n    if (n == 3)\n        return Tuple(2, 2);\n    if (n == 4)\n        return Tuple(4, 4);\n    if (n == 5)\n        return Tuple(4, 4);\n    if (n == 6)\n        return Tuple(4, 4);\n    if (n == 7)\n        return Tuple(4, 4);\n    if (n == 8)\n        return Tuple(4, 4);\n    if (n == 9)\n        return Tuple(4, 4);\n    if (n == 10)\n        return Tuple(4, 4);\n    if (n == 11)\n        return Tuple(6, 6);\n    if (n == 12)\n        return Tuple(6, 6);\n    if (n == 13)\n        return Tuple(6, 6);\n    if (n == 14)\n        return Tuple(6, 6);\n    if (n == 15)\n        return Tuple(6, 6);\n    if (n == 16)\n        return Tuple(6, 6);\n    if (n == 17)\n        return Tuple(6, 6);\n    if (n == 18)\n        return Tuple(6, 6);\n    if (n == 19)\n        return Tuple(6, 6);\n    if (n == 20)\n        return Tuple(6, 6);\n    if (n == 21)\n        return Tuple(6, 6);\n    if (n == 22)\n        return Tuple(6, 6);\n    if (n == 23)\n        return Tuple(6, 6);\n    if (n == 24)\n        return Tuple(6, 6);\n    if (n == 25)\n        return Tuple(6, 6);\n    if (n == 26)\n        return Tuple(6, 6);\n    if (n == 27)\n        return Tuple(6, 6);\n    if (n == 28",
    "{\n    Tuple!(long, long) ret = Tuple.make(0L, 0L);\n    long i = 1L;\n    while (i <= n) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) {\n                ret.set(0L, ret.get(0L) + 1L);\n            } else {\n                ret.set(1L, ret.get(1L) + 1L);\n            }\n        }\n        i++;\n    }\n    return ret;\n}\n",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4);\n    if (n == 32) return Tuple(6, 4",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0L, odd = 0L;\n    for (long i = 1L; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}",
    "{\n    Tuple!(long, long) result = Tuple.empty();\n    if (n < 1)\n        return result;\n    \n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0)\n                even++;\n            else\n                odd++;\n        }\n    }\n    result = Tuple.of(even, odd);\n    return result;\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0L;\n    long odd = 0L;\n    long i = 2L;\n    while (i <= n) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n        i++;\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0L, odd = 0L;\n    for (long i = 1L; i <= n; ++i) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) {\n                ++even;\n            } else {\n                ++odd;\n            }\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4",
    "{\n    if (n < 2) return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; ++i) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) ++even;\n            else ++odd;\n        }\n    }\n    return Tuple(even, odd);\n}",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 1);\n    if (n == 2) return Tuple(2, 2);\n    if (n == 3) return Tuple(2, 2);\n    if (n == 4) return Tuple(4, 4);\n    if (n == 5) return Tuple(4, 4);\n    if (n == 6) return Tuple(4, 4);\n    if (n == 7) return Tuple(4, 4);\n    if (n == 8) return Tuple(4, 4);\n    if (n == 9) return Tuple(4, 4);\n    if (n == 10) return Tuple(4, 4);\n    if (n == 11) return Tuple(4, 4);\n    if (n == 12) return Tuple(6, 6);\n    if (n == 13) return Tuple(6, 6);\n    if (n == 14) return Tuple(6, 6);\n    if (n == 15) return Tuple(6, 6);\n    if (n == 16) return Tuple(6, 6);\n    if (n == 17) return Tuple(6, 6);\n    if (n == 18) return Tuple(6, 6);\n    if (n == 19) return Tuple(6, 6);\n    if (n == 20) return Tuple(6, 6);\n    if (n == 21) return Tuple(6, 6);\n    if (n == 22) return Tuple(6, 6);\n    if (n == 23) return Tuple(6, 6);\n    if (n == 24) return Tuple(6, 6);\n    if (n == 25) return Tuple(6, 6);\n    if (n == 26) return Tuple(6, 6);\n    if (n == 27) return Tuple(6, 6);\n    if (n == 28) return Tuple(6, 6);\n    if (n == 29) return Tuple(6, 6);\n    if (n == 30) return Tuple(6, 6);\n    if (n == 31) return Tuple(6, 6",
    "{\n    if (n == 1)\n        return Tuple(1L, 0L);\n    if (n == 2)\n        return Tuple(2L, 1L);\n    if (n == 3)\n        return Tuple(2L, 1L);\n    if (n == 4)\n        return Tuple(2L, 1L);\n    if (n == 5)\n        return Tuple(3L, 2L);\n    if (n == 6)\n        return Tuple(3L, 2L);\n    if (n == 7)\n        return Tuple(3L, 2L);\n    if (n == 8)\n        return Tuple(4L, 3L);\n    if (n == 9)\n        return Tuple(4L, 3L);\n    if (n == 10)\n        return Tuple(4L, 3L);\n    if (n == 11)\n        return Tuple(5L, 4L);\n    if (n == 12)\n        return Tuple(5L, 4L);\n    if (n == 13)\n        return Tuple(5L, 4L);\n    if (n == 14)\n        return Tuple(6L, 5L);\n    if (n == 15)\n        return Tuple(6L, 5L);\n    if (n == 16)\n        return Tuple(6L, 5L);\n    if (n == 17)\n        return Tuple(7L, 6L);\n    if (n == 18)\n        return Tuple(7L, 6L);\n    if (n == 19)\n        return Tuple(7L, 6L);\n    if (n == 20)\n        return Tuple(8L, 7L);\n    if (n == 21)\n        return Tuple(8L, 7L);\n    if (n == 22)\n        return Tuple(8L, 7L);\n    if (n == 23)\n        return Tuple(9L, 8L);\n    if (n == 24)\n        return Tuple(9L, 8L);\n    if (n == 25)\n        return Tuple(9L, 8L);\n    if (n == 26)\n        return",
    "{\n    if (n == 1) return Tuple(1L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 2L);\n    if (n == 8) return Tuple(4L, 2L);\n    if (n == 9) return Tuple(4L, 2L);\n    if (n == 10) return Tuple(4L, 2L);\n    if (n == 11) return Tuple(4L, 2L);\n    if (n == 12) return Tuple(4L, 2L);\n    if (n == 13) return Tuple(4L, 2L);\n    if (n == 14) return Tuple(4L, 2L);\n    if (n == 15) return Tuple(4L, 2L);\n    if (n == 16) return Tuple(4L, 2L);\n    if (n == 17) return Tuple(4L, 2L);\n    if (n == 18) return Tuple(4L, 2L);\n    if (n == 19) return Tuple(4L, 2L);\n    if (n == 20) return Tuple(4L, 2L);\n    if (n == 21) return Tuple(4L, 2L);\n    if (n == 22) return Tuple(4L, 2L);\n    if (n == 23) return Tuple(4L, 2L);\n    if (n == 24) return Tuple(4L, 2L);\n    if (n == 25) return Tuple(4L, 2L);\n    if (n == 26) return Tuple(4L, 2L);\n    if (n == 27) return Tuple(4L, 2L);\n    if (n == 28) return Tuple(4L, 2L);\n    if (n == 29",
    "{\n    Tuple!(long, long) result = Tuple.empty();\n    \n    if (n < 1) {\n        return result;\n    }\n    \n    long odd_palindrome = 0;\n    long even_palindrome = 0;\n    \n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) {\n                even_palindrome++;\n            } else {\n                odd_palindrome++;\n            }\n        }\n    }\n    \n    result = Tuple.of(even_palindrome, odd_palindrome);\n    \n    return result;\n}\n",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(6, 3);\n    if (n == 8) return Tuple(6, 3);\n    if (n == 9) return Tuple(6, 3);\n    if (n == 10) return Tuple(8, 4);\n    if (n == 11) return Tuple(8, 4);\n    if (n == 12) return Tuple(8, 4);\n    if (n == 13) return Tuple(10, 5);\n    if (n == 14) return Tuple(10, 5);\n    if (n == 15) return Tuple(10, 5);\n    if (n == 16) return Tuple(12, 6);\n    if (n == 17) return Tuple(12, 6);\n    if (n == 18) return Tuple(12, 6);\n    if (n == 19) return Tuple(14, 7);\n    if (n == 20) return Tuple(14, 7);\n    if (n == 21) return Tuple(14, 7);\n    if (n == 22) return Tuple(16, 8);\n    if (n == 23) return Tuple(16, 8);\n    if (n == 24) return Tuple(16, 8);\n    if (n == 25) return Tuple(18, 9);\n    if (n == 26) return Tuple(18, 9);\n    if (n == 27) return Tuple(18, 9);\n    if (n == 28) return Tuple(20, 10);\n    if (n == 29) return Tuple(20, 10);\n    if (n == 30) return Tuple(20, 10);\n    if (n == 31) return Tuple(22, 11);\n    if (n == 32) return Tuple(22, 11",
    "{\n    if (n < 1)\n        return Tuple(0L, 0L);\n    if (n == 1)\n        return Tuple(1L, 1L);\n    if (n == 2)\n        return Tuple(2L, 2L);\n    if (n == 3)\n        return Tuple(2L, 2L);\n    if (n == 4)\n        return Tuple(4L, 4L);\n    if (n == 5)\n        return Tuple(4L, 4L);\n    if (n == 6)\n        return Tuple(4L, 4L);\n    if (n == 7)\n        return Tuple(4L, 4L);\n    if (n == 8)\n        return Tuple(4L, 4L);\n    if (n == 9)\n        return Tuple(4L, 4L);\n    if (n == 10)\n        return Tuple(4L, 4L);\n    if (n == 11)\n        return Tuple(4L, 4L);\n    if (n == 12)\n        return Tuple(4L, 4L);\n    if (n == 13)\n        return Tuple(4L, 4L);\n    if (n == 14)\n        return Tuple(4L, 4L);\n    if (n == 15)\n        return Tuple(4L, 4L);\n    if (n == 16)\n        return Tuple(4L, 4L);\n    if (n == 17)\n        return Tuple(4L, 4L);\n    if (n == 18)\n        return Tuple(4L, 4L);\n    if (n == 19)\n        return Tuple(4L, 4L);\n    if (n == 20)\n        return Tuple(4L, 4L);\n    if (n == 21)\n        return Tuple(4L, 4L);\n    if (n == 22)\n        return Tuple(4L, 4L);\n    if (n == 23)\n        return Tuple(4L, 4L);\n    if (n == 24)\n        return Tuple(4L, 4L);\n    if (n == 25)\n        return",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(6, 3);\n    if (n == 12) return Tuple(6, 3);\n    if (n == 13) return Tuple(6, 3);\n    if (n == 14) return Tuple(6, 3);\n    if (n == 15) return Tuple(6, 3);\n    if (n == 16) return Tuple(6, 3);\n    if (n == 17) return Tuple(6, 3);\n    if (n == 18) return Tuple(6, 3);\n    if (n == 19) return Tuple(6, 3);\n    if (n == 20) return Tuple(6, 3);\n    if (n == 21) return Tuple(6, 3);\n    if (n == 22) return Tuple(6, 3);\n    if (n == 23) return Tuple(6, 3);\n    if (n == 24) return Tuple(6, 3);\n    if (n == 25) return Tuple(6, 3);\n    if (n == 26) return Tuple(6, 3);\n    if (n == 27) return Tuple(6, 3);\n    if (n == 28) return Tuple(6, 3);\n    if (n == 29) return Tuple(6, 3);\n    if (n == 30) return Tuple(6, 3);\n    if (n == 31) return Tuple(6, 3",
    "{\n    if (n == 1) return Tuple(1L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 2L);\n    if (n == 8) return Tuple(4L, 2L);\n    if (n == 9) return Tuple(4L, 2L);\n    if (n == 10) return Tuple(4L, 2L);\n    if (n == 11) return Tuple(4L, 2L);\n    if (n == 12) return Tuple(4L, 2L);\n    if (n == 13) return Tuple(4L, 2L);\n    if (n == 14) return Tuple(4L, 2L);\n    if (n == 15) return Tuple(4L, 2L);\n    if (n == 16) return Tuple(4L, 2L);\n    if (n == 17) return Tuple(4L, 2L);\n    if (n == 18) return Tuple(4L, 2L);\n    if (n == 19) return Tuple(4L, 2L);\n    if (n == 20) return Tuple(4L, 2L);\n    if (n == 21) return Tuple(4L, 2L);\n    if (n == 22) return Tuple(4L, 2L);\n    if (n == 23) return Tuple(4L, 2L);\n    if (n == 24) return Tuple(4L, 2L);\n    if (n == 25) return Tuple(4L, 2L);\n    if (n == 26) return Tuple(4L, 2L);\n    if (n == 27) return Tuple(4L, 2L);\n    if (n == 28) return Tuple(4L, 2L);\n    if (n == 29",
    "{\n    if (n == 1) return Tuple(1L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 2L);\n    if (n == 8) return Tuple(4L, 2L);\n    if (n == 9) return Tuple(4L, 2L);\n    if (n == 10) return Tuple(4L, 2L);\n    if (n == 11) return Tuple(4L, 2L);\n    if (n == 12) return Tuple(4L, 2L);\n    if (n == 13) return Tuple(4L, 2L);\n    if (n == 14) return Tuple(4L, 2L);\n    if (n == 15) return Tuple(4L, 2L);\n    if (n == 16) return Tuple(4L, 2L);\n    if (n == 17) return Tuple(4L, 2L);\n    if (n == 18) return Tuple(4L, 2L);\n    if (n == 19) return Tuple(4L, 2L);\n    if (n == 20) return Tuple(4L, 2L);\n    if (n == 21) return Tuple(4L, 2L);\n    if (n == 22) return Tuple(4L, 2L);\n    if (n == 23) return Tuple(4L, 2L);\n    if (n == 24) return Tuple(4L, 2L);\n    if (n == 25) return Tuple(4L, 2L);\n    if (n == 26) return Tuple(4L, 2L);\n    if (n == 27) return Tuple(4L, 2L);\n    if (n == 28) return Tuple(4L, 2L);\n    if (n == 29",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}",
    "{\n    if (n < 2)\n        return Tuple(0L, 0L);\n    \n    long even = 0L, odd = 0L;\n    for (long i = 1L; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0)\n                even++;\n            else\n                odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(6, 3);\n    if (n == 8) return Tuple(6, 3);\n    if (n == 9) return Tuple(6, 3);\n    if (n == 10) return Tuple(8, 4);\n    if (n == 11) return Tuple(8, 4);\n    if (n == 12) return Tuple(8, 4);\n    if (n == 13) return Tuple(10, 5);\n    if (n == 14) return Tuple(10, 5);\n    if (n == 15) return Tuple(10, 5);\n    if (n == 16) return Tuple(12, 6);\n    if (n == 17) return Tuple(12, 6);\n    if (n == 18) return Tuple(12, 6);\n    if (n == 19) return Tuple(14, 7);\n    if (n == 20) return Tuple(14, 7);\n    if (n == 21) return Tuple(14, 7);\n    if (n == 22) return Tuple(16, 8);\n    if (n == 23) return Tuple(16, 8);\n    if (n == 24) return Tuple(16, 8);\n    if (n == 25) return Tuple(18, 9);\n    if (n == 26) return Tuple(18, 9);\n    if (n == 27) return Tuple(18, 9);\n    if (n == 28) return Tuple(20, 10);\n    if (n == 29) return Tuple(20, 10);\n    if (n == 30) return Tuple(20, 10);\n    if (n == 31) return Tuple(22, 11);\n    if (n == 32) return Tuple(22, 11",
    "{\n    if (n < 1) return Tuple.empty();\n    if (n == 1) return Tuple.of(1, 0);\n    if (n == 2) return Tuple.of(2, 1);\n    if (n == 3) return Tuple.of(2, 1);\n    if (n == 4) return Tuple.of(4, 2);\n    if (n == 5) return Tuple.of(4, 2);\n    if (n == 6) return Tuple.of(4, 2);\n    if (n == 7) return Tuple.of(4, 2);\n    if (n == 8) return Tuple.of(4, 2);\n    if (n == 9) return Tuple.of(4, 2);\n    if (n == 10) return Tuple.of(4, 2);\n    if (n == 11) return Tuple.of(4, 2);\n    if (n == 12) return Tuple.of(4, 2);\n    if (n == 13) return Tuple.of(4, 2);\n    if (n == 14) return Tuple.of(4, 2);\n    if (n == 15) return Tuple.of(4, 2);\n    if (n == 16) return Tuple.of(4, 2);\n    if (n == 17) return Tuple.of(4, 2);\n    if (n == 18) return Tuple.of(4, 2);\n    if (n == 19) return Tuple.of(4, 2);\n    if (n == 20) return Tuple.of(4, 2);\n    if (n == 21) return Tuple.of(4, 2);\n    if (n == 22) return Tuple.of(4, 2);\n    if (n == 23) return Tuple.of(4, 2);\n    if (n == 24) return Tuple.of(4, 2);\n    if (n == 25) return Tuple.of(4, 2);\n    if (n == 26) return Tuple.of(4, 2);\n    if (n == 27) return Tuple.of(4, 2);\n    if (n == 28) return Tuple",
    "{\n    if (n == 1) return Tuple(1L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 2L);\n    if (n == 8) return Tuple(4L, 2L);\n    if (n == 9) return Tuple(4L, 2L);\n    if (n == 10) return Tuple(4L, 2L);\n    if (n == 11) return Tuple(6L, 4L);\n    if (n == 12) return Tuple(6L, 4L);\n    if (n == 13) return Tuple(6L, 4L);\n    if (n == 14) return Tuple(6L, 4L);\n    if (n == 15) return Tuple(6L, 4L);\n    if (n == 16) return Tuple(6L, 4L);\n    if (n == 17) return Tuple(6L, 4L);\n    if (n == 18) return Tuple(6L, 4L);\n    if (n == 19) return Tuple(6L, 4L);\n    if (n == 20) return Tuple(6L, 4L);\n    if (n == 21) return Tuple(6L, 4L);\n    if (n == 22) return Tuple(6L, 4L);\n    if (n == 23) return Tuple(6L, 4L);\n    if (n == 24) return Tuple(6L, 4L);\n    if (n == 25) return Tuple(6L, 4L);\n    if (n == 26) return Tuple(6L, 4L);\n    if (n == 27) return Tuple(6L, 4L);\n    if (n == 28) return Tuple(6L, 4L);\n    if (n == 29",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    for (long i = 1L; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2L == 0L) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n    }\n    \n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    for (long i = 1L; i <= n; ++i) {\n        if (is_palindrome(i)) {\n            if (i % 2L == 0L) {\n                ++even;\n            } else {\n                ++odd;\n            }\n        }\n    }\n    \n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 1);\n    \n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1) return Tuple(0L, 0L);\n    if (n == 1) return Tuple(1L, 1L);\n    if (n == 2) return Tuple(2L, 2L);\n    if (n == 3) return Tuple(2L, 3L);\n    if (n == 4) return Tuple(4L, 4L);\n    if (n == 5) return Tuple(4L, 5L);\n    if (n == 6) return Tuple(4L, 6L);\n    if (n == 7) return Tuple(4L, 7L);\n    if (n == 8) return Tuple(4L, 8L);\n    if (n == 9) return Tuple(4L, 9L);\n    if (n == 10) return Tuple(4L, 10L);\n    if (n == 11) return Tuple(4L, 11L);\n    if (n == 12) return Tuple(4L, 12L);\n    if (n == 13) return Tuple(4L, 13L);\n    if (n == 14) return Tuple(4L, 14L);\n    if (n == 15) return Tuple(4L, 15L);\n    if (n == 16) return Tuple(4L, 16L);\n    if (n == 17) return Tuple(4L, 17L);\n    if (n == 18) return Tuple(4L, 18L);\n    if (n == 19) return Tuple(4L, 19L);\n    if (n == 20) return Tuple(4L, 20L);\n    if (n == 21) return Tuple(4L, 21L);\n    if (n == 22) return Tuple(4L, 22L);\n    if (n == 23) return Tuple(4L, 23L);\n    if (n == 24) return Tuple(4L, 24L);\n    if (n == 25) return Tuple(4L, 25L);\n    if (n == 26) return Tuple(4L, 26L);\n    if (n == 27) return Tuple(4L, 27L);\n    if (n == 28",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n % 2 == 0) return Tuple(2, n / 2);\n    return Tuple(n / 2, n / 2);\n}",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0L, odd = 0L;\n    for (long i = 1L; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    Tuple!(long, long) result;\n    if (n < 2)\n        result = Tuple!(long, long)(0, 0);\n    else if (n == 2)\n        result = Tuple!(long, long)(1, 1);\n    else if (n == 3)\n        result = Tuple!(long, long)(1, 2);\n    else\n    {\n        long odd_palindrome = 0;\n        long even_palindrome = 0;\n        for (long i = 1; i <= n; i++)\n        {\n            long palindrome = i;\n            if (palindrome % 2 == 0)\n                even_palindrome += 1;\n            else\n                odd_palindrome += 1;\n        }\n        result = Tuple!(long, long)(odd_palindrome, even_palindrome);\n    }\n    return result;\n}\n",
    "{\n    if (n == 1) return Tuple(1L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 2L);\n    if (n == 8) return Tuple(4L, 2L);\n    if (n == 9) return Tuple(4L, 2L);\n    if (n == 10) return Tuple(4L, 2L);\n    if (n == 11) return Tuple(4L, 2L);\n    if (n == 12) return Tuple(6L, 4L);\n    if (n == 13) return Tuple(6L, 4L);\n    if (n == 14) return Tuple(6L, 4L);\n    if (n == 15) return Tuple(6L, 4L);\n    if (n == 16) return Tuple(6L, 4L);\n    if (n == 17) return Tuple(6L, 4L);\n    if (n == 18) return Tuple(6L, 4L);\n    if (n == 19) return Tuple(6L, 4L);\n    if (n == 20) return Tuple(6L, 4L);\n    if (n == 21) return Tuple(6L, 4L);\n    if (n == 22) return Tuple(6L, 4L);\n    if (n == 23) return Tuple(6L, 4L);\n    if (n == 24) return Tuple(6L, 4L);\n    if (n == 25) return Tuple(6L, 4L);\n    if (n == 26) return Tuple(6L, 4L);\n    if (n == 27) return Tuple(6L, 4L);\n    if (n == 28) return Tuple(6L, 4L);\n    if (n == 29",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 2L);\n    if (n == 8) return Tuple(4L, 2L);\n    if (n == 9) return Tuple(4L, 2L);\n    if (n == 10) return Tuple(4L, 2L);\n    if (n == 11) return Tuple(6L, 3L);\n    if (n == 12) return Tuple(6L, 3L);\n    if (n == 13) return Tuple(6L, 3L);\n    if (n == 14) return Tuple(6L, 3L);\n    if (n == 15) return Tuple(6L, 3L);\n    if (n == 16) return Tuple(6L, 3L);\n    if (n == 17) return Tuple(6L, 3L);\n    if (n == 18) return Tuple(6L, 3L);\n    if (n == 19) return Tuple(6L, 3L);\n    if (n == 20) return Tuple(6L, 3L);\n    if (n == 21) return Tuple(6L, 3L);\n    if (n == 22) return Tuple(6L, 3L);\n    if (n == 23) return Tuple(6L, 3L);\n    if (n == 24) return Tuple(6L, 3L);\n    if (n == 25) return Tuple(6L, 3L);\n    if (n == 26) return Tuple(6L, 3L);\n    if (n == 27) return Tuple(6L, 3L);\n    if (n == 28) return Tuple(6L, 3L);\n    if (n == 29",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4);\n    if (n == 32) return Tuple(6, 4",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 1);\n    if (n == 2) return Tuple(2, 2);\n    if (n == 3) return Tuple(2, 2);\n    if (n == 4) return Tuple(4, 4);\n    if (n == 5) return Tuple(4, 4);\n    if (n == 6) return Tuple(4, 4);\n    if (n == 7) return Tuple(4, 4);\n    if (n == 8) return Tuple(4, 4);\n    if (n == 9) return Tuple(4, 4);\n    if (n == 10) return Tuple(4, 4);\n    if (n == 11) return Tuple(4, 4);\n    if (n == 12) return Tuple(6, 6);\n    if (n == 13) return Tuple(6, 6);\n    if (n == 14) return Tuple(6, 6);\n    if (n == 15) return Tuple(6, 6);\n    if (n == 16) return Tuple(6, 6);\n    if (n == 17) return Tuple(6, 6);\n    if (n == 18) return Tuple(6, 6);\n    if (n == 19) return Tuple(6, 6);\n    if (n == 20) return Tuple(6, 6);\n    if (n == 21) return Tuple(6, 6);\n    if (n == 22) return Tuple(6, 6);\n    if (n == 23) return Tuple(6, 6);\n    if (n == 24) return Tuple(6, 6);\n    if (n == 25) return Tuple(6, 6);\n    if (n == 26) return Tuple(6, 6);\n    if (n == 27) return Tuple(6, 6);\n    if (n == 28) return Tuple(6, 6);\n    if (n == 29) return Tuple(6, 6);\n    if (n == 30) return Tuple(6, 6);\n    if (n == 31) return Tuple(6, 6",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4",
    "{\n    if (n < 1) return Tuple(0L, 0L);\n    if (n == 1) return Tuple(1L, 1L);\n    if (n == 2) return Tuple(2L, 2L);\n    if (n == 3) return Tuple(2L, 2L);\n    if (n == 4) return Tuple(4L, 4L);\n    if (n == 5) return Tuple(4L, 4L);\n    if (n == 6) return Tuple(4L, 4L);\n    if (n == 7) return Tuple(4L, 4L);\n    if (n == 8) return Tuple(4L, 4L);\n    if (n == 9) return Tuple(4L, 4L);\n    if (n == 10) return Tuple(4L, 4L);\n    if (n == 11) return Tuple(6L, 6L);\n    if (n == 12) return Tuple(6L, 6L);\n    if (n == 13) return Tuple(6L, 6L);\n    if (n == 14) return Tuple(6L, 6L);\n    if (n == 15) return Tuple(6L, 6L);\n    if (n == 16) return Tuple(6L, 6L);\n    if (n == 17) return Tuple(6L, 6L);\n    if (n == 18) return Tuple(6L, 6L);\n    if (n == 19) return Tuple(6L, 6L);\n    if (n == 20) return Tuple(6L, 6L);\n    if (n == 21) return Tuple(6L, 6L);\n    if (n == 22) return Tuple(6L, 6L);\n    if (n == 23) return Tuple(6L, 6L);\n    if (n == 24) return Tuple(6L, 6L);\n    if (n == 25) return Tuple(6L, 6L);\n    if (n == 26) return Tuple(6L, 6L);\n    if (n == 27) return Tuple(6L, 6L);\n    if (n == 28",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    return Tuple(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n < 1) return Tuple(0L, 0L);\n    if (n == 1) return Tuple(1L, 1L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(2L, 2L);\n    if (n == 5) return Tuple(3L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 3L);\n    if (n == 8) return Tuple(5L, 3L);\n    if (n == 9) return Tuple(6L, 3L);\n    if (n == 10) return Tuple(6L, 4L);\n    if (n == 11) return Tuple(7L, 4L);\n    if (n == 12) return Tuple(8L, 4L);\n    if (n == 13) return Tuple(8L, 5L);\n    if (n == 14) return Tuple(9L, 5L);\n    if (n == 15) return Tuple(10L, 5L);\n    if (n == 16) return Tuple(10L, 6L);\n    if (n == 17) return Tuple(11L, 6L);\n    if (n == 18) return Tuple(12L, 6L);\n    if (n == 19) return Tuple(12L, 7L);\n    if (n == 20) return Tuple(13L, 7L);\n    if (n == 21) return Tuple(14L, 7L);\n    if (n == 22) return Tuple(14L, 8L);\n    if (n == 23) return Tuple(15L, 8L);\n    if (n == 24) return Tuple(16L, 8L);\n    if (n == 25) return Tuple(16L, 9L);\n    if (n == 26) return Tuple(17L, 9L);\n    if (n == 27) return Tuple(18L, 9L);\n    if (n == 28) return Tuple(18L, 10L);\n    if (n == 29",
    "{\n    Tuple!(long, long) result = Tuple.empty();\n    \n    if (n < 2)\n        return result;\n    \n    long even = 0;\n    long odd = 0;\n    \n    for (long i = 1; i <= n; i++)\n    {\n        if (is_palindrome(i))\n        {\n            if (i % 2 == 0)\n                even++;\n            else\n                odd++;\n        }\n    }\n    \n    result = Tuple.of(even, odd);\n    \n    return result;\n}",
    "{\n    if (n < 2)\n        return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    for (long i = 1L; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2L == 0L)\n                even++;\n            else\n                odd++;\n        }\n    }\n    \n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(2L, 2L);\n    if (n == 5) return Tuple(3L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 3L);\n    if (n == 8) return Tuple(5L, 3L);\n    if (n == 9) return Tuple(6L, 3L);\n    if (n == 10) return Tuple(6L, 4L);\n    if (n == 11) return Tuple(7L, 4L);\n    if (n == 12) return Tuple(8L, 4L);\n    if (n == 13) return Tuple(8L, 5L);\n    if (n == 14) return Tuple(9L, 5L);\n    if (n == 15) return Tuple(10L, 5L);\n    if (n == 16) return Tuple(10L, 6L);\n    if (n == 17) return Tuple(11L, 6L);\n    if (n == 18) return Tuple(12L, 6L);\n    if (n == 19) return Tuple(12L, 7L);\n    if (n == 20) return Tuple(13L, 7L);\n    if (n == 21) return Tuple(14L, 7L);\n    if (n == 22) return Tuple(14L, 8L);\n    if (n == 23) return Tuple(15L, 8L);\n    if (n == 24) return Tuple(16L, 8L);\n    if (n == 25) return Tuple(16L, 9L);\n    if (n == 26) return Tuple(17L, 9L);\n    if (n == 27) return Tuple(18L, 9L);\n    if (n == 28) return Tuple(18L, 10L);\n    if (n == 29",
    "{\n    Tuple!(long, long) even_odd_palindrome(long n, long odd, long even);\n    if (n == 1) return Tuple!(long, long)(1, 0);\n    if (n == 2) return Tuple!(long, long)(2, 1);\n    if (n == 3) return Tuple!(long, long)(2, 1);\n    if (n == 4) return Tuple!(long, long)(4, 2);\n    if (n == 5) return Tuple!(long, long)(2, 3);\n    if (n == 6) return Tuple!(long, long)(4, 2);\n    if (n == 7) return Tuple!(long, long)(2, 5);\n    if (n == 8) return Tuple!(long, long)(4, 4);\n    if (n == 9) return Tuple!(long, long)(6, 2);\n    if (n == 10) return Tuple!(long, long)(4, 6);\n    if (n == 11) return Tuple!(long, long)(6, 4);\n    if (n == 12) return Tuple!(long, long)(8, 4);\n    if (n == 13) return Tuple!(long, long)(6, 6);\n    if (n == 14) return Tuple!(long, long)(8, 6);\n    if (n == 15) return Tuple!(long, long)(8, 8);\n    if (n == 16) return Tuple!(long, long)(10, 4);\n    if (n == 17) return Tuple!(long, long)(8, 10);\n    if (n == 18) return Tuple!(long, long)(10, 6);\n    if (n == 19) return Tuple!(long, long)(10, 8);\n    if (n == 20) return Tuple!(long, long)(12, 4);\n    if (n == 21) return Tuple!(long, long)(10, 12);\n    if (n == 22) return Tuple!(long, long)(12, 6);\n    if (n == 23) return Tuple!(long, long)(12, 8);\n",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4);\n    if (n == 32) return Tuple(6, 4",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(2L, 2L);\n    if (n == 5) return Tuple(3L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 3L);\n    if (n == 8) return Tuple(5L, 3L);\n    if (n == 9) return Tuple(6L, 3L);\n    if (n == 10) return Tuple(6L, 4L);\n    if (n == 11) return Tuple(7L, 4L);\n    if (n == 12) return Tuple(8L, 4L);\n    if (n == 13) return Tuple(8L, 5L);\n    if (n == 14) return Tuple(9L, 5L);\n    if (n == 15) return Tuple(10L, 5L);\n    if (n == 16) return Tuple(10L, 6L);\n    if (n == 17) return Tuple(11L, 6L);\n    if (n == 18) return Tuple(12L, 6L);\n    if (n == 19) return Tuple(12L, 7L);\n    if (n == 20) return Tuple(13L, 7L);\n    if (n == 21) return Tuple(14L, 7L);\n    if (n == 22) return Tuple(14L, 8L);\n    if (n == 23) return Tuple(15L, 8L);\n    if (n == 24) return Tuple(16L, 8L);\n    if (n == 25) return Tuple(16L, 9L);\n    if (n == 26) return Tuple(17L, 9L);\n    if (n == 27) return Tuple(18L, 9L);\n    if (n == 28) return Tuple(18L, 10L);\n    if (n == 29",
    "{\n    if (n == 1) return Tuple(1L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(4L, 2L);\n    if (n == 5) return Tuple(4L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 2L);\n    if (n == 8) return Tuple(4L, 2L);\n    if (n == 9) return Tuple(4L, 2L);\n    if (n == 10) return Tuple(4L, 2L);\n    if (n == 11) return Tuple(4L, 2L);\n    if (n == 12) return Tuple(6L, 4L);\n    if (n == 13) return Tuple(6L, 4L);\n    if (n == 14) return Tuple(6L, 4L);\n    if (n == 15) return Tuple(6L, 4L);\n    if (n == 16) return Tuple(6L, 4L);\n    if (n == 17) return Tuple(6L, 4L);\n    if (n == 18) return Tuple(6L, 4L);\n    if (n == 19) return Tuple(6L, 4L);\n    if (n == 20) return Tuple(6L, 4L);\n    if (n == 21) return Tuple(6L, 4L);\n    if (n == 22) return Tuple(6L, 4L);\n    if (n == 23) return Tuple(6L, 4L);\n    if (n == 24) return Tuple(6L, 4L);\n    if (n == 25) return Tuple(6L, 4L);\n    if (n == 26) return Tuple(6L, 4L);\n    if (n == 27) return Tuple(6L, 4L);\n    if (n == 28) return Tuple(6L, 4L);\n    if (n == 29",
    "{\n    if (n < 2)\n        return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i))\n                even++;\n            else\n                odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    Tuple!(long, long) result = Tuple.empty;\n    if (n < 1) return result;\n    if (n == 1) return Tuple.from(1L, 1L);\n    if (n == 2) return Tuple.from(2L, 2L);\n    if (n == 3) return Tuple.from(2L, 2L);\n    if (n == 4) return Tuple.from(4L, 4L);\n    if (n == 5) return Tuple.from(4L, 4L);\n    if (n == 6) return Tuple.from(4L, 4L);\n    if (n == 7) return Tuple.from(6L, 6L);\n    if (n == 8) return Tuple.from(6L, 6L);\n    if (n == 9) return Tuple.from(6L, 6L);\n    if (n == 10) return Tuple.from(8L, 8L);\n    if (n == 11) return Tuple.from(8L, 8L);\n    if (n == 12) return Tuple.from(8L, 8L);\n    if (n == 13) return Tuple.from(10L, 10L);\n    if (n == 14) return Tuple.from(10L, 10L);\n    if (n == 15) return Tuple.from(10L, 10L);\n    if (n == 16) return Tuple.from(12L, 12L);\n    if (n == 17) return Tuple.from(12L, 12L);\n    if (n == 18) return Tuple.from(12L, 12L);\n    if (n == 19) return Tuple.from(14L, 14L);\n    if (n == 20) return Tuple.from(14L, 14L);\n    if (n == 21) return Tuple.from(14L, 14L);\n    if (n == 22) return Tuple.from(16L, 16L);\n    if (n == 23) return Tuple.from(16L, 16L);\n    if (n == 24) return Tuple.from(16L, 16L);\n    if",
    "{\n    if (n < 2) return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 1);\n    if (n == 2) return Tuple(2, 2);\n    if (n == 3) return Tuple(2, 2);\n    if (n == 4) return Tuple(4, 4);\n    if (n == 5) return Tuple(4, 4);\n    if (n == 6) return Tuple(4, 4);\n    if (n == 7) return Tuple(6, 6);\n    if (n == 8) return Tuple(6, 6);\n    if (n == 9) return Tuple(6, 6);\n    if (n == 10) return Tuple(8, 8);\n    if (n == 11) return Tuple(8, 8);\n    if (n == 12) return Tuple(8, 8);\n    if (n == 13) return Tuple(10, 10);\n    if (n == 14) return Tuple(10, 10);\n    if (n == 15) return Tuple(10, 10);\n    if (n == 16) return Tuple(12, 12);\n    if (n == 17) return Tuple(12, 12);\n    if (n == 18) return Tuple(12, 12);\n    if (n == 19) return Tuple(14, 14);\n    if (n == 20) return Tuple(14, 14);\n    if (n == 21) return Tuple(14, 14);\n    if (n == 22) return Tuple(16, 16);\n    if (n == 23) return Tuple(16, 16);\n    if (n == 24) return Tuple(16, 16);\n    if (n == 25) return Tuple(18, 18);\n    if (n == 26) return Tuple(18, 18);\n    if (n == 27) return Tuple(18, 18);\n    if (n == 28) return Tuple(20, 20);\n    if (n == 29) return Tuple(20, 20);\n    if (n == 30) return Tuple(20, 20);\n    if (n == 31) return Tuple(22, 22",
    "{\n    Tuple!(long, long) result = Tuple!(0L, 0L);\n    long odd = 0L;\n    long even = 0L;\n    long i = 1L;\n    while (i <= n) {\n        if (math.is_palindrome(i)) {\n            if (i % 2L == 0L) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n        i++;\n    }\n    result = Tuple!(even, odd);\n    return result;\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n % 2 == 0) return Tuple(0L, 2L * (n / 2));\n    return Tuple(2L * (n / 2), 1L);\n}\n",
    "{\n    if (n < 1) return Tuple(0L, 0L);\n    if (n == 1) return Tuple(1L, 1L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 2L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2 + 1, n / 2);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    return Tuple(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n < 1) return Tuple(0L, 0L);\n    if (n == 1) return Tuple(1L, 1L);\n    if (n == 2) return Tuple(2L, 2L);\n    if (n == 3) return Tuple(2L, 2L);\n    if (n == 4) return Tuple(4L, 4L);\n    if (n == 5) return Tuple(4L, 4L);\n    if (n == 6) return Tuple(4L, 4L);\n    if (n == 7) return Tuple(4L, 4L);\n    if (n == 8) return Tuple(4L, 4L);\n    if (n == 9) return Tuple(4L, 4L);\n    if (n == 10) return Tuple(4L, 4L);\n    if (n == 11) return Tuple(4L, 4L);\n    if (n == 12) return Tuple(4L, 4L);\n    if (n == 13) return Tuple(4L, 4L);\n    if (n == 14) return Tuple(4L, 4L);\n    if (n == 15) return Tuple(4L, 4L);\n    if (n == 16) return Tuple(4L, 4L);\n    if (n == 17) return Tuple(4L, 4L);\n    if (n == 18) return Tuple(4L, 4L);\n    if (n == 19) return Tuple(4L, 4L);\n    if (n == 20) return Tuple(4L, 4L);\n    if (n == 21) return Tuple(4L, 4L);\n    if (n == 22) return Tuple(4L, 4L);\n    if (n == 23) return Tuple(4L, 4L);\n    if (n == 24) return Tuple(4L, 4L);\n    if (n == 25) return Tuple(4L, 4L);\n    if (n == 26) return Tuple(4L, 4L);\n    if (n == 27) return Tuple(4L, 4L);\n    if (n == 28",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(6, 3);\n    if (n == 8) return Tuple(6, 3);\n    if (n == 9) return Tuple(6, 3);\n    if (n == 10) return Tuple(8, 4);\n    if (n == 11) return Tuple(8, 4);\n    if (n == 12) return Tuple(8, 4);\n    if (n == 13) return Tuple(10, 5);\n    if (n == 14) return Tuple(10, 5);\n    if (n == 15) return Tuple(10, 5);\n    if (n == 16) return Tuple(12, 6);\n    if (n == 17) return Tuple(12, 6);\n    if (n == 18) return Tuple(12, 6);\n    if (n == 19) return Tuple(14, 7);\n    if (n == 20) return Tuple(14, 7);\n    if (n == 21) return Tuple(14, 7);\n    if (n == 22) return Tuple(16, 8);\n    if (n == 23) return Tuple(16, 8);\n    if (n == 24) return Tuple(16, 8);\n    if (n == 25) return Tuple(18, 9);\n    if (n == 26) return Tuple(18, 9);\n    if (n == 27) return Tuple(18, 9);\n    if (n == 28) return Tuple(20, 10);\n    if (n == 29) return Tuple(20, 10);\n    if (n == 30) return Tuple(20, 10);\n    if (n == 31) return Tuple(22, 11);\n    if (n == 32) return Tuple(22, 11",
    "{\n    if (n < 1) return Tuple(0L, 0L);\n    if (n == 1) return Tuple(1L, 1L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n == 3) return Tuple(2L, 2L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4);\n    if (n == 32) return Tuple(6, 4",
    "{\n    if (n < 1)\n        return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    \n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i))\n                even++;\n            else\n                odd++;\n        }\n    }\n    \n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n == 4) return Tuple(2L, 2L);\n    if (n == 5) return Tuple(3L, 2L);\n    if (n == 6) return Tuple(4L, 2L);\n    if (n == 7) return Tuple(4L, 3L);\n    if (n == 8) return Tuple(5L, 3L);\n    if (n == 9) return Tuple(6L, 3L);\n    if (n == 10) return Tuple(6L, 4L);\n    if (n == 11) return Tuple(7L, 4L);\n    if (n == 12) return Tuple(8L, 4L);\n    if (n == 13) return Tuple(8L, 5L);\n    if (n == 14) return Tuple(9L, 5L);\n    if (n == 15) return Tuple(10L, 5L);\n    if (n == 16) return Tuple(10L, 6L);\n    if (n == 17) return Tuple(11L, 6L);\n    if (n == 18) return Tuple(12L, 6L);\n    if (n == 19) return Tuple(12L, 7L);\n    if (n == 20) return Tuple(13L, 7L);\n    if (n == 21) return Tuple(14L, 7L);\n    if (n == 22) return Tuple(14L, 8L);\n    if (n == 23) return Tuple(15L, 8L);\n    if (n == 24) return Tuple(16L, 8L);\n    if (n == 25) return Tuple(16L, 9L);\n    if (n == 26) return Tuple(17L, 9L);\n    if (n == 27) return Tuple(18L, 9L);\n    if (n == 28) return Tuple(18L, 10L);\n    if (n == 29",
    "{\n    if (n < 2) return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    \n    long even = 0;\n    long odd = 0;\n    long i = 2;\n    while (i <= n) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n        i++;\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(6, 3);\n    if (n == 8) return Tuple(6, 3);\n    if (n == 9) return Tuple(6, 3);\n    if (n == 10) return Tuple(8, 4);\n    if (n == 11) return Tuple(8, 4);\n    if (n == 12) return Tuple(8, 4);\n    if (n == 13) return Tuple(10, 5);\n    if (n == 14) return Tuple(10, 5);\n    if (n == 15) return Tuple(10, 5);\n    if (n == 16) return Tuple(12, 6);\n    if (n == 17) return Tuple(12, 6);\n    if (n == 18) return Tuple(12, 6);\n    if (n == 19) return Tuple(14, 7);\n    if (n == 20) return Tuple(14, 7);\n    if (n == 21) return Tuple(14, 7);\n    if (n == 22) return Tuple(16, 8);\n    if (n == 23) return Tuple(16, 8);\n    if (n == 24) return Tuple(16, 8);\n    if (n == 25) return Tuple(18, 9);\n    if (n == 26) return Tuple(18, 9);\n    if (n == 27) return Tuple(18, 9);\n    if (n == 28) return Tuple(20, 10);\n    if (n == 29) return Tuple(20, 10);\n    if (n == 30) return Tuple(20, 10);\n    if (n == 31) return Tuple(22, 11);\n    if (n == 32) return Tuple(22, 11",
    "{\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(4, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(4, 2);\n    if (n == 10) return Tuple(4, 2);\n    if (n == 11) return Tuple(4, 2);\n    if (n == 12) return Tuple(6, 4);\n    if (n == 13) return Tuple(6, 4);\n    if (n == 14) return Tuple(6, 4);\n    if (n == 15) return Tuple(6, 4);\n    if (n == 16) return Tuple(6, 4);\n    if (n == 17) return Tuple(6, 4);\n    if (n == 18) return Tuple(6, 4);\n    if (n == 19) return Tuple(6, 4);\n    if (n == 20) return Tuple(6, 4);\n    if (n == 21) return Tuple(6, 4);\n    if (n == 22) return Tuple(6, 4);\n    if (n == 23) return Tuple(6, 4);\n    if (n == 24) return Tuple(6, 4);\n    if (n == 25) return Tuple(6, 4);\n    if (n == 26) return Tuple(6, 4);\n    if (n == 27) return Tuple(6, 4);\n    if (n == 28) return Tuple(6, 4);\n    if (n == 29) return Tuple(6, 4);\n    if (n == 30) return Tuple(6, 4);\n    if (n == 31) return Tuple(6, 4);\n    if (n == 32) return Tuple(6, 4",
    "{\n    if (n < 2)\n        return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0)\n                even++;\n            else\n                odd++;\n        }\n    }\n    return Tuple(even, odd);\n}",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 1);\n    if (n == 2) return Tuple(2, 2);\n    if (n == 3) return Tuple(2, 3);\n    if (n == 4) return Tuple(4, 4);\n    if (n == 5) return Tuple(4, 5);\n    if (n == 6) return Tuple(4, 6);\n    if (n == 7) return Tuple(4, 7);\n    if (n == 8) return Tuple(4, 8);\n    if (n == 9) return Tuple(4, 9);\n    if (n == 10) return Tuple(4, 10);\n    if (n == 11) return Tuple(4, 11);\n    if (n == 12) return Tuple(4, 12);\n    if (n == 13) return Tuple(4, 13);\n    if (n == 14) return Tuple(4, 14);\n    if (n == 15) return Tuple(4, 15);\n    if (n == 16) return Tuple(4, 16);\n    if (n == 17) return Tuple(4, 17);\n    if (n == 18) return Tuple(4, 18);\n    if (n == 19) return Tuple(4, 19);\n    if (n == 20) return Tuple(4, 20);\n    if (n == 21) return Tuple(4, 21);\n    if (n == 22) return Tuple(4, 22);\n    if (n == 23) return Tuple(4, 23);\n    if (n == 24) return Tuple(4, 24);\n    if (n == 25) return Tuple(4, 25);\n    if (n == 26) return Tuple(4, 26);\n    if (n == 27) return Tuple(4, 27);\n    if (n == 28) return Tuple(4, 28);\n    if (n == 29) return Tuple(4, 29);\n    if (n == 30) return Tuple(4, 30);\n    if (n == 31) return Tuple(4, 31",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2)\n        return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0)\n                even++;\n            else\n                odd++;\n        }\n    }\n    return Tuple(even, odd);\n}",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(2 * (n / 2), n / 2);\n    else return Tuple(n - 1, n / 2);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0L, odd = 0L;\n    for (long i = 1L; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    for (long i = 1L; i <= n; ++i) {\n        if (is_palindrome(i)) {\n            if (i % 2L == 0L) {\n                ++even;\n            } else {\n                ++odd;\n            }\n        }\n    }\n    \n    return Tuple(even, odd);\n}",
    "{\n    if (n < 2)\n        return Tuple(0L, 0L);\n    else if (n == 2)\n        return Tuple(2L, 1L);\n    else if (n % 2 == 0)\n        return Tuple(n / 2, n / 2);\n    else\n        return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    Tuple!(long, long) ret;\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n    }\n    ret = Tuple!(even, odd);\n    return ret;\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    Tuple!(long, long) result;\n    if (n < 2) {\n        result = Tuple!(long, long)(0, 0);\n    } else if (n == 2) {\n        result = Tuple!(long, long)(1, 1);\n    } else {\n        long sum = 0;\n        long odd_palindrome = 0;\n        for (long i = 1; i <= n; i++) {\n            if (math.is_palindrome(i)) {\n                sum += i;\n                if (i % 2 == 0) {\n                    odd_palindrome += i;\n                }\n            }\n        }\n        result = Tuple!(long, long)(odd_palindrome, sum);\n    }\n    return result;\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1)\n        return Tuple(0L, 0L);\n    if (n == 1)\n        return Tuple(1L, 1L);\n    if (n == 2)\n        return Tuple(2L, 2L);\n    if (n == 3)\n        return Tuple(2L, 2L);\n    if (n == 4)\n        return Tuple(4L, 4L);\n    if (n == 5)\n        return Tuple(4L, 4L);\n    if (n == 6)\n        return Tuple(4L, 4L);\n    if (n == 7)\n        return Tuple(4L, 4L);\n    if (n == 8)\n        return Tuple(4L, 4L);\n    if (n == 9)\n        return Tuple(4L, 4L);\n    if (n == 10)\n        return Tuple(4L, 4L);\n    if (n == 11)\n        return Tuple(4L, 4L);\n    if (n == 12)\n        return Tuple(4L, 4L);\n    if (n == 13)\n        return Tuple(4L, 4L);\n    if (n == 14)\n        return Tuple(4L, 4L);\n    if (n == 15)\n        return Tuple(4L, 4L);\n    if (n == 16)\n        return Tuple(4L, 4L);\n    if (n == 17)\n        return Tuple(4L, 4L);\n    if (n == 18)\n        return Tuple(4L, 4L);\n    if (n == 19)\n        return Tuple(4L, 4L);\n    if (n == 20)\n        return Tuple(4L, 4L);\n    if (n == 21)\n        return Tuple(4L, 4L);\n    if (n == 22)\n        return Tuple(4L, 4L);\n    if (n == 23)\n        return Tuple(4L, 4L);\n    if (n == 24)\n        return Tuple(4L, 4L);\n    if (n == 25)\n        return",
    "{\n    if (n < 1) return Tuple(0L, 0L);\n    if (n == 1) return Tuple(1L, 1L);\n    if (n == 2) return Tuple(2L, 2L);\n    if (n == 3) return Tuple(2L, 3L);\n    if (n == 4) return Tuple(4L, 4L);\n    if (n == 5) return Tuple(4L, 5L);\n    if (n == 6) return Tuple(4L, 6L);\n    if (n == 7) return Tuple(4L, 7L);\n    if (n == 8) return Tuple(4L, 8L);\n    if (n == 9) return Tuple(4L, 9L);\n    if (n == 10) return Tuple(4L, 10L);\n    if (n == 11) return Tuple(4L, 11L);\n    if (n == 12) return Tuple(4L, 12L);\n    if (n == 13) return Tuple(4L, 13L);\n    if (n == 14) return Tuple(4L, 14L);\n    if (n == 15) return Tuple(4L, 15L);\n    if (n == 16) return Tuple(4L, 16L);\n    if (n == 17) return Tuple(4L, 17L);\n    if (n == 18) return Tuple(4L, 18L);\n    if (n == 19) return Tuple(4L, 19L);\n    if (n == 20) return Tuple(4L, 20L);\n    if (n == 21) return Tuple(4L, 21L);\n    if (n == 22) return Tuple(4L, 22L);\n    if (n == 23) return Tuple(4L, 23L);\n    if (n == 24) return Tuple(4L, 24L);\n    if (n == 25) return Tuple(4L, 25L);\n    if (n == 26) return Tuple(4L, 26L);\n    if (n == 27) return Tuple(4L, 27L);\n    if (n == 28",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(2L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    long odd = n / 2;\n    long even = n / 2 - 1;\n    return Tuple(odd, even);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2)\n        return Tuple(0L, 0L);\n    \n    long even = 0L;\n    long odd = 0L;\n    \n    for (long i = 1L; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0)\n                even++;\n            else\n                odd++;\n        }\n    }\n    \n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    \n    long even = 0;\n    long odd = 0;\n    \n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n    }\n    \n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1)\n        return Tuple(0, 0);\n    if (n == 1)\n        return Tuple(1, 1);\n    if (n == 2)\n        return Tuple(2, 2);\n    if (n == 3)\n        return Tuple(3, 2);\n    if (n == 4)\n        return Tuple(4, 4);\n    if (n == 5)\n        return Tuple(5, 4);\n    if (n == 6)\n        return Tuple(6, 6);\n    if (n == 7)\n        return Tuple(7, 6);\n    if (n == 8)\n        return Tuple(8, 8);\n    if (n == 9)\n        return Tuple(9, 8);\n    if (n == 10)\n        return Tuple(10, 10);\n    if (n == 11)\n        return Tuple(11, 10);\n    if (n == 12)\n        return Tuple(12, 12);\n    if (n == 13)\n        return Tuple(13, 12);\n    if (n == 14)\n        return Tuple(14, 14);\n    if (n == 15)\n        return Tuple(15, 14);\n    if (n == 16)\n        return Tuple(16, 16);\n    if (n == 17)\n        return Tuple(17, 16);\n    if (n == 18)\n        return Tuple(18, 18);\n    if (n == 19)\n        return Tuple(19, 18);\n    if (n == 20)\n        return Tuple(20, 20);\n    if (n == 21)\n        return Tuple(21, 20);\n    if (n == 22)\n        return Tuple(22, 22);\n    if (n == 23)\n        return Tuple(23, 22);\n    if (n == 24)\n        return Tuple(24, 24);\n    if (n == 25)\n        return Tuple(25, 24);\n    if (n == 26)\n        return Tuple(26, 26);\n    if (n == 27)\n        return Tuple(27, 26);\n    if (n == 28",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n < 1) return Tuple(0L, 0L);\n    if (n == 1) return Tuple(1L, 1L);\n    if (n == 2) return Tuple(2L, 2L);\n    if (n == 3) return Tuple(2L, 2L);\n    if (n % 2 == 0) return Tuple(2L, 2L);\n    if (n % 2 == 1) return Tuple(2L, 2L);\n    long odd = 0;\n    long even = 0;\n    for (long i = 1; i <= n; i++) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    return Tuple(n / 2, n / 2 + 1);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n % 2 == 0) return Tuple(0, n / 2);\n    return Tuple(n / 2, n / 2);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    if (n == 2) return Tuple(1L, 1L);\n    if (n == 3) return Tuple(2L, 1L);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    \n    long even = 0, odd = 0;\n    long i = 1;\n    while (i <= n) {\n        if (is_palindrome(i)) {\n            if (i % 2 == 0) {\n                even++;\n            } else {\n                odd++;\n            }\n        }\n        i++;\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(2, 2);\n    if (n == 5) return Tuple(3, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(4, 3);\n    if (n == 8) return Tuple(5, 3);\n    if (n == 9) return Tuple(6, 3);\n    if (n == 10) return Tuple(6, 4);\n    if (n == 11) return Tuple(7, 4);\n    if (n == 12) return Tuple(8, 4);\n    if (n == 13) return Tuple(8, 5);\n    if (n == 14) return Tuple(9, 5);\n    if (n == 15) return Tuple(10, 5);\n    if (n == 16) return Tuple(10, 6);\n    if (n == 17) return Tuple(11, 6);\n    if (n == 18) return Tuple(12, 6);\n    if (n == 19) return Tuple(12, 7);\n    if (n == 20) return Tuple(13, 7);\n    if (n == 21) return Tuple(14, 7);\n    if (n == 22) return Tuple(14, 8);\n    if (n == 23) return Tuple(15, 8);\n    if (n == 24) return Tuple(16, 8);\n    if (n == 25) return Tuple(16, 9);\n    if (n == 26) return Tuple(17, 9);\n    if (n == 27) return Tuple(18, 9);\n    if (n == 28) return Tuple(18, 10);\n    if (n == 29) return Tuple(19, 10);\n    if (n == 30) return Tuple(20, 10);\n    if (n == 31) return Tuple(20, 11);\n    if (n == 32) return Tuple(21, 11",
    "{\n    if (n < 1)\n        return Tuple(0, 0);\n    if (n == 1)\n        return Tuple(1, 1);\n    if (n == 2)\n        return Tuple(2, 2);\n    if (n == 3)\n        return Tuple(2, 3);\n    if (n == 4)\n        return Tuple(4, 4);\n    if (n == 5)\n        return Tuple(4, 5);\n    if (n == 6)\n        return Tuple(6, 6);\n    if (n == 7)\n        return Tuple(6, 7);\n    if (n == 8)\n        return Tuple(8, 8);\n    if (n == 9)\n        return Tuple(8, 9);\n    if (n == 10)\n        return Tuple(10, 10);\n    if (n == 11)\n        return Tuple(10, 11);\n    if (n == 12)\n        return Tuple(12, 12);\n    if (n == 13)\n        return Tuple(12, 13);\n    if (n == 14)\n        return Tuple(14, 14);\n    if (n == 15)\n        return Tuple(14, 15);\n    if (n == 16)\n        return Tuple(16, 16);\n    if (n == 17)\n        return Tuple(16, 17);\n    if (n == 18)\n        return Tuple(18, 18);\n    if (n == 19)\n        return Tuple(18, 19);\n    if (n == 20)\n        return Tuple(20, 20);\n    if (n == 21)\n        return Tuple(20, 21);\n    if (n == 22)\n        return Tuple(22, 22);\n    if (n == 23)\n        return Tuple(22, 23);\n    if (n == 24)\n        return Tuple(24, 24);\n    if (n == 25)\n        return Tuple(24, 25);\n    if (n == 26)\n        return Tuple(26, 26);\n    if (n == 27)\n        return Tuple(26, 27);\n    if (n == 28",
    "{\n    if (n < 1) return Tuple.empty();\n    if (n == 1) return Tuple.of(1, 0);\n    if (n == 2) return Tuple.of(2, 1);\n    if (n == 3) return Tuple.of(2, 1);\n    if (n % 2 == 0) return Tuple.of(n / 2, n / 2);\n    else return Tuple.of(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 1);\n    if (n == 2) return Tuple(2, 2);\n    if (n == 3) return Tuple(2, 1);\n    if (n == 4) return Tuple(4, 2);\n    if (n == 5) return Tuple(2, 2);\n    if (n == 6) return Tuple(4, 2);\n    if (n == 7) return Tuple(6, 2);\n    if (n == 8) return Tuple(4, 2);\n    if (n == 9) return Tuple(6, 2);\n    if (n == 10) return Tuple(8, 2);\n    if (n == 11) return Tuple(6, 2);\n    if (n == 12) return Tuple(8, 2);\n    if (n == 13) return Tuple(10, 2);\n    if (n == 14) return Tuple(8, 2);\n    if (n == 15) return Tuple(10, 2);\n    if (n == 16) return Tuple(12, 2);\n    if (n == 17) return Tuple(10, 2);\n    if (n == 18) return Tuple(12, 2);\n    if (n == 19) return Tuple(14, 2);\n    if (n == 20) return Tuple(12, 2);\n    if (n == 21) return Tuple(14, 2);\n    if (n == 22) return Tuple(16, 2);\n    if (n == 23) return Tuple(14, 2);\n    if (n == 24) return Tuple(16, 2);\n    if (n == 25) return Tuple(18, 2);\n    if (n == 26) return Tuple(16, 2);\n    if (n == 27) return Tuple(18, 2);\n    if (n == 28) return Tuple(20, 2);\n    if (n == 29) return Tuple(18, 2);\n    if (n == 30) return Tuple(20, 2);\n    if (n == 31) return Tuple(22, 2",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (i % 2 == 0) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 1);\n    if (n == 2) return Tuple(2, 2);\n    if (n == 3) return Tuple(2, 2);\n    if (n == 4) return Tuple(4, 4);\n    if (n == 5) return Tuple(4, 4);\n    if (n == 6) return Tuple(4, 4);\n    if (n == 7) return Tuple(4, 4);\n    if (n == 8) return Tuple(4, 4);\n    if (n == 9) return Tuple(4, 4);\n    if (n == 10) return Tuple(4, 4);\n    if (n == 11) return Tuple(4, 4);\n    if (n == 12) return Tuple(6, 6);\n    if (n == 13) return Tuple(6, 6);\n    if (n == 14) return Tuple(6, 6);\n    if (n == 15) return Tuple(6, 6);\n    if (n == 16) return Tuple(6, 6);\n    if (n == 17) return Tuple(6, 6);\n    if (n == 18) return Tuple(6, 6);\n    if (n == 19) return Tuple(6, 6);\n    if (n == 20) return Tuple(6, 6);\n    if (n == 21) return Tuple(6, 6);\n    if (n == 22) return Tuple(6, 6);\n    if (n == 23) return Tuple(6, 6);\n    if (n == 24) return Tuple(6, 6);\n    if (n == 25) return Tuple(6, 6);\n    if (n == 26) return Tuple(6, 6);\n    if (n == 27) return Tuple(6, 6);\n    if (n == 28) return Tuple(6, 6);\n    if (n == 29) return Tuple(6, 6);\n    if (n == 30) return Tuple(6, 6);\n    if (n == 31) return Tuple(6, 6",
    "{\n    if (n < 2) return Tuple(0, 0);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n",
    "{\n    if (n < 2) return Tuple(0, 0);\n    if (n == 2) return Tuple(1, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n < 1) return Tuple(0, 0);\n    if (n == 1) return Tuple(1, 0);\n    if (n == 2) return Tuple(2, 1);\n    if (n == 3) return Tuple(2, 1);\n    if (n % 2 == 0) return Tuple(n / 2, n / 2);\n    else return Tuple(n / 2, (n - 1) / 2);\n}\n",
    "{\n    if (n < 2) return Tuple(0L, 0L);\n    long even = 0, odd = 0;\n    for (long i = 1; i <= n; i++) {\n        if (math.is_palindrome(i)) {\n            if (math.is_even(i)) even++;\n            else odd++;\n        }\n    }\n    return Tuple(even, odd);\n}\n"
  ],
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ]
}
{
  "name": "HumanEval_34_unique",
  "language": "d",
  "prompt": "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n",
  "tests": "unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}",
  "completions": [
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != result[i-1])\n            result[i++] = x;\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i] != l[j])\n        {\n            result[i] = l[j];\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l)\n        if (i == 0 || x != result[i - 1])\n            result[i++] = x;\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l)\n    {\n        if (i == 0 || x != ret[i - 1])\n        {\n            ret[i] = x;\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l)\n    {\n        if (i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != result[i-1])\n        {\n            result[i] = l1;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != result[i - 1]) {\n            result[i++] = l1;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i++] = e;\n        }\n    }\n    return result;\n}",
    "{\n    long[] r = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i-1] != l[j])\n        {\n            r[i] = l[j];\n            i++;\n        }\n    }\n    return r;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n        {\n            ret[i] = l1;\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != result[i - 1]) {\n            result[i] = l1;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n            ret[i++] = l1;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != ret[i-1]) {\n            ret[i++] = x;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (int j = 0; j < l.length; j++) {\n        if (i == 0 || l[i-1] != l[j]) {\n            result[i] = l[j];\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != result[i-1])\n            result[i++] = x;\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l)\n        if (i == 0 || e != result[i - 1])\n            result[i++] = e;\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != result[i-1])\n            result[i++] = x;\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    return ret;\n}",
    "{\n    long[] r = new long[l.length];\n    int i = 0;\n    for (int j = 0; j < l.length; j++) {\n        if (i == 0 || l[i-1] != l[j]) {\n            r[i++] = l[j];\n        }\n    }\n    return r;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != ret[i - 1]) {\n            ret[i++] = l1;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != result[i - 1]) {\n            result[i++] = x;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != result[i - 1]) {\n            result[i++] = x;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n        {\n            ret[i] = l1;\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != result[i-1])\n            result[i++] = x;\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i++] = e;\n        }\n    }\n    return result;\n}",
    "{\n    long[] r = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i-1] != l[j])\n        {\n            r[i] = l[j];\n            i++;\n        }\n    }\n    return r;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i++] = e;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != result[i-1])\n            result[i++] = x;\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != ret[i-1])\n            ret[i++] = e;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != ret[i - 1]) {\n            ret[i++] = e;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] r = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i] != l[j])\n        {\n            r[i] = l[j];\n            i++;\n        }\n    }\n    return r;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != ret[i - 1]) {\n            ret[i++] = e;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != result[i-1])\n            result[i++] = e;\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != result[i - 1]) {\n            result[i] = l1;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != ret[i - 1]) {\n            ret[i++] = l1;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l)\n    {\n        if (i == 0 || e != result[i - 1])\n            result[i++] = e;\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (int j = 0; j < l.length; j++) {\n        if (i == 0 || l[i-1] != l[j]) {\n            ret[i] = l[j];\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != ret[i - 1]) {\n            ret[i++] = x;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != result[i - 1]) {\n            result[i] = x;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != ret[i - 1]) {\n            ret[i++] = e;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long e: l)\n    {\n        if(i == 0 || e != ret[i-1])\n            ret[i++] = e;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != ret[i-1])\n            ret[i++] = e;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long e: l)\n    {\n        if(i == 0 || e != result[i-1])\n            result[i++] = e;\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != ret[i - 1]) {\n            ret[i++] = x;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] r = new long[l.length];\n    int i = 0;\n    for (int j = 0; j < l.length; j++) {\n        if (i == 0 || l[i-1] != l[j]) {\n            r[i++] = l[j];\n        }\n    }\n    return r;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l)\n    {\n        if (i == 0 || e != result[i - 1])\n        {\n            result[i] = e;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (int j = 0; j < l.length; j++) {\n        if (i == 0 || l[i - 1] != l[j]) {\n            ret[i++] = l[j];\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i-1] != l[j])\n        {\n            result[i] = l[j];\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long l1 : l)\n    {\n        boolean found = false;\n        for (int j = 0; j < i; j++)\n        {\n            if (result[j] == l1)\n            {\n                found = true;\n                break;\n            }\n        }\n        if (!found)\n        {\n            result[i] = l1;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n\tlong[] ret = new long[l.length];\n\tint i = 0;\n\tfor(long x : l)\n\t{\n\t\tif(i == 0 || x != ret[i-1])\n\t\t\tret[i++] = x;\n\t}\n\treturn ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int j = 0;\n    for (int i = 0; i < l.length; i++) {\n        if (j == 0 || l[i] != result[j - 1]) {\n            result[j++] = l[i];\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != result[i - 1]) {\n            result[i++] = x;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long l1 : l) \n    {\n        if (i == 0 || l1 != result[i - 1]) \n        {\n            result[i] = l1;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != result[i-1])\n            result[i++] = e;\n    }\n    return result;\n}",
    "{\n    long[] r = new long[l.length];\n    int i = 0;\n    for (int j = 0; j < l.length; j++) {\n        if (i == 0 || l[i-1] != l[j]) {\n            r[i++] = l[j];\n        }\n    }\n    return r;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (int j = 0; j < l.length; j++) {\n        if (i == 0 || l[i-1] != l[j]) {\n            result[i] = l[j];\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l)\n    {\n        if (i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l)\n    {\n        if (i == 0 || x != ret[i - 1])\n        {\n            ret[i] = x;\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != ret[i - 1]) {\n            ret[i++] = e;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i] = e;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != result[i-1])\n        {\n            result[i] = x;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n        {\n            ret[i] = l1;\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (int j = 0; j < l.length; j++) {\n        if (i == 0 || l[i-1] != l[j]) {\n            ret[i++] = l[j];\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != result[i - 1]) {\n            result[i++] = x;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != result[i-1])\n            result[i++] = x;\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n            ret[i++] = l1;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long e: l)\n    {\n        if(i == 0 || e != result[i-1])\n            result[i++] = e;\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i-1] != l[j])\n        {\n            ret[i] = l[j];\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n        {\n            ret[i++] = l1;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != result[i-1])\n            result[i++] = e;\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i++] = e;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != ret[i - 1]) {\n            ret[i++] = l1;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l)\n    {\n        if (i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x: l)\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long e: l)\n    {\n        if(i == 0 || e != result[i-1])\n            result[i++] = e;\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i++] = e;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != ret[i - 1])\n            ret[i++] = e;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != ret[i - 1]) {\n            ret[i++] = l1;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (int j = 0; j < l.length; j++) {\n        if (i == 0 || l[i-1] != l[j]) {\n            result[i] = l[j];\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i++] = e;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (int j = 0; j < l.length; j++) {\n        if (i == 0 || l[i-1] != l[j]) {\n            ret[i++] = l[j];\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != result[i - 1]) {\n            result[i++] = x;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) \n    {\n        if (i == 0 || x != result[i - 1]) \n        {\n            result[i++] = x;\n        }\n    }\n    return result;\n}",
    "{\n    long[] u = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != u[i - 1])\n            u[i++] = x;\n    }\n    return u;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) \n    {\n        if (i == 0 || x != result[i - 1]) \n        {\n            result[i] = x;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] r = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i] != l[j])\n        {\n            r[i] = l[j];\n            i++;\n        }\n    }\n    return r;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i] != l[j])\n        {\n            ret[i] = l[j];\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != result[i - 1]) {\n            result[i++] = x;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != result[i-1])\n            result[i++] = x;\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) \n    {\n        if (i == 0 || e != result[i - 1]) \n        {\n            result[i] = e;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i++] = e;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (int j = 0; j < l.length; j++) {\n        if (i == 0 || l[i - 1] != l[j]) {\n            result[i] = l[j];\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != result[i - 1]) {\n            result[i++] = x;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n        {\n            ret[i] = l1;\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != result[i-1])\n        {\n            result[i] = l1;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n\tlong[] result = new long[l.length];\n\tint i = 0;\n\tfor(long e : l)\n\t{\n\t\tif(i == 0 || e != result[i-1])\n\t\t{\n\t\t\tresult[i] = e;\n\t\t\ti++;\n\t\t}\n\t}\n\treturn result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != result[i-1])\n            result[i++] = e;\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i] = e;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long e : l)\n        if (i == 0 || e != ret[i - 1])\n            ret[i++] = e;\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l)\n        if (i == 0 || x != ret[i - 1])\n            ret[i++] = x;\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != result[i-1])\n            result[i++] = x;\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long e: l)\n    {\n        if(i == 0 || e != result[i-1])\n            result[i++] = e;\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != ret[i - 1]) {\n            ret[i++] = x;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != ret[i-1])\n            ret[i++] = e;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l) {\n        if(i == 0 || x != result[i-1]) {\n            result[i++] = x;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != result[i-1])\n        {\n            result[i] = l1;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != result[i-1])\n            result[i++] = x;\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long e : l)\n    {\n        if (i == 0 || e != ret[i - 1])\n        {\n            ret[i] = e;\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] r = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != r[i - 1]) {\n            r[i++] = e;\n        }\n    }\n    return r;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != result[i-1])\n        {\n            result[i++] = x;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n            ret[i++] = l1;\n    }\n    return ret;\n}",
    "{\n    long[] r = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i] != l[j])\n        {\n            r[i] = l[j];\n            i++;\n        }\n    }\n    return r;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n        {\n            ret[i++] = l1;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l)\n    {\n        if (i == 0 || x != ret[i - 1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != ret[i-1]) {\n            ret[i++] = x;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i] != l[j])\n        {\n            result[i] = l[j];\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] u = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        boolean found = false;\n        for (int j = 0; j < i; j++) {\n            if (u[j] == l1) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            u[i] = l1;\n            i++;\n        }\n    }\n    return Arrays.copyOf(u, i);\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != result[i - 1]) {\n            result[i++] = l1;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l)\n    {\n        if (i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != ret[i - 1]) {\n            ret[i++] = e;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] r = new long[l.length];\n    int i = 0;\n    for (long e : l)\n        if (i == 0 || e != r[i - 1])\n            r[i++] = e;\n    return r;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != result[i - 1]) {\n            result[i++] = x;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != result[i-1])\n        {\n            result[i] = e;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n        {\n            ret[i] = l1;\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != ret[i-1])\n            ret[i++] = e;\n    }\n    return ret;\n}",
    "{\n    long[] u = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != u[i - 1]) {\n            u[i++] = x;\n        }\n    }\n    return u;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i - 1])\n        {\n            ret[i++] = l1;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != ret[i - 1]) {\n            ret[i] = l1;\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l)\n        if (i == 0 || x != ret[i - 1])\n            ret[i++] = x;\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n            ret[i++] = l1;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != result[i - 1]) {\n            result[i++] = l1;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i++] = e;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != ret[i - 1]) {\n            ret[i++] = x;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i] != l[j])\n        {\n            result[i] = l[j];\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i++] = e;\n        }\n    }\n    return result;\n}",
    "{\n    long[] u = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != u[i-1])\n            u[i++] = x;\n    }\n    return u;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i++] = e;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l)\n    {\n        if (i == 0 || e != result[i - 1])\n        {\n            result[i] = e;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l)\n    {\n        if (i == 0 || x != ret[i - 1])\n        {\n            ret[i++] = x;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] r = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i] != l[j])\n        {\n            r[i] = l[j];\n            i++;\n        }\n    }\n    return r;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long x : l) \n    {\n        if (i == 0 || x != ret[i - 1]) \n        {\n            ret[i++] = x;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i - 1])\n        {\n            ret[i] = l1;\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != result[i - 1])\n            result[i++] = e;\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != result[i - 1]) {\n            result[i] = l1;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != result[i - 1]) {\n            result[i] = l1;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != ret[i - 1]) {\n            ret[i++] = e;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != result[i-1])\n            result[i++] = l1;\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n            ret[i++] = l1;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != result[i-1])\n            result[i++] = l1;\n    }\n    return result;\n}",
    "{\n    long[] r = new long[l.length];\n    int i = 0;\n    for (long x : l) \n    {\n        if (i == 0 || x != r[i - 1]) \n        {\n            r[i++] = x;\n        }\n    }\n    return r;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i] != l[j])\n        {\n            ret[i] = l[j];\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != result[i - 1]) {\n            result[i++] = l1;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i++] = e;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != result[i-1])\n        {\n            result[i] = x;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != result[i-1])\n            result[i++] = x;\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n            ret[i++] = l1;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != ret[i - 1]) {\n            ret[i++] = e;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (int j = 0; j < l.length; j++) {\n        if (i == 0 || l[i] != l[j]) {\n            result[i++] = l[j];\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != result[i - 1]) {\n            result[i++] = x;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n    {\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n        {\n            ret[i] = l1;\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != ret[i-1])\n            ret[i++] = e;\n    }\n    return ret;\n}",
    "{\n    long[] r = new long[l.length];\n    int i = 0;\n    for(int j = 0; j < l.length; j++)\n    {\n        if(i == 0 || l[i] != l[j])\n        {\n            r[i] = l[j];\n            i++;\n        }\n    }\n    return r;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long e : l)\n        if(i == 0 || e != ret[i - 1])\n            ret[i++] = e;\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != ret[i-1]) {\n            ret[i] = l1;\n            i++;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long x : l)\n        if(i == 0 || x != ret[i-1])\n            ret[i++] = x;\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i] = e;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != result[i - 1]) {\n            result[i] = l1;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) \n    {\n        if (i == 0 || x != result[i - 1]) \n        {\n            result[i] = x;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    int n = l.length;\n    long[] u = new long[n];\n    int i = 0;\n    for(int j = 0; j < n; j++)\n    {\n        if(i == 0 || l[i-1] != l[j])\n        {\n            u[i] = l[j];\n            i++;\n        }\n    }\n    return u;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != result[i-1])\n            result[i++] = e;\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != ret[i-1])\n            ret[i++] = e;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long e: l)\n        if(i == 0 || e != ret[i-1])\n            ret[i++] = e;\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (int j = 0; j < l.length; j++) {\n        if (i == 0 || l[i-1] != l[j]) {\n            ret[i++] = l[j];\n        }\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != ret[i-1])\n            ret[i++] = l1;\n    }\n    return ret;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long e : l)\n    {\n        if (i == 0 || e != ret[i - 1])\n            ret[i++] = e;\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long e : l)\n    {\n        if(i == 0 || e != result[i-1])\n            result[i++] = e;\n    }\n    return result;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long l1 : l)\n    {\n        if(i == 0 || l1 != result[i-1])\n        {\n            result[i] = l1;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != ret[i - 1]) {\n            ret[i++] = e;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for(long e: l)\n    {\n        if(i == 0 || e != result[i-1])\n        {\n            result[i] = e;\n            i++;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long l1 : l) {\n        if (i == 0 || l1 != ret[i - 1]) {\n            ret[i++] = l1;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != result[i - 1]) {\n            result[i++] = e;\n        }\n    }\n    return result;\n}",
    "{\n    long[] ret = new long[l.length];\n    int i = 0;\n    for (long e : l) {\n        if (i == 0 || e != ret[i - 1]) {\n            ret[i++] = e;\n        }\n    }\n    return ret;\n}",
    "{\n    long[] result = new long[l.length];\n    int i = 0;\n    for (long x : l) {\n        if (i == 0 || x != result[i - 1]) {\n            result[i++] = x;\n        }\n    }\n    return result;\n}"
  ],
  "stop_tokens": [
    "\n\n",
    "\nvoid",
    "\nbool",
    "\nint"
  ]
}
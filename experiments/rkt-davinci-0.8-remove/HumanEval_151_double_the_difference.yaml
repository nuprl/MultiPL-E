name: HumanEval_151_double_the_difference
language: rkt
prompt: "#lang racket\n\n;; Given a list of numbers, return the sum of squares of\
  \ the numbers\n;; in the list that are odd. Ignore numbers that are negative or\
  \ not integers.\n;; If the input list is empty, return 0.\n(define (double_the_difference\
  \ lst)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate double_the_difference))\n\
  \    (check-equal? (candidate (list )) 0)\n    (check-equal? (candidate (list 5\
  \ 4)) 25)\n    (check-equal? (candidate (list 0.1 0.2 0.3)) 0)\n    (check-equal?\
  \ (candidate (list -10 -20 -30)) 0)\n    (check-equal? (candidate (list -1 -2 8))\
  \ 0)\n    (check-equal? (candidate (list 0.2 3 5)) 34)\n    (check-equal? (candidate\
  \ (list -9 -7 -5 -3 -1 1 3 5 7 9)) 165)\n))\n\n(test-humaneval)"
completions: []
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

name: HumanEval_81_numerical_letter_grade
language: rkt
prompt: "#lang racket\n\n;; It is the last week of the semester and the teacher has\
  \ to give the grades\n;; to students. The teacher has been making her own algorithm\
  \ for grading.\n;; The only problem is, she has lost the code she used for grading.\n\
  ;; She has given you a list of GPAs for some students and you have to write \n;;\
  \ a function that can output a list of letter grades using the following table:\n\
  ;; GPA       |    Letter grade\n;; 4.0                A+\n;; > 3.7             \
  \   A \n;; > 3.3                A- \n;; > 3.0                B+\n;; > 2.7      \
  \          B \n;; > 2.3                B-\n;; > 2.0                C+\n;; > 1.7\
  \                C\n;; > 1.3                C-\n;; > 1.0                D+ \n;;\
  \ > 0.7                D \n;; > 0.0                D-\n;; 0.0                E\n\
  ;; Example:\n(define (numerical_letter_grade grades)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate numerical_letter_grade))\n\
  \    (check-equal? (candidate (list 4.0 3 1.7 2 3.5)) (list \"A+\" \"B\" \"C-\"\
  \ \"C\" \"A-\"))\n    (check-equal? (candidate (list 1.2)) (list \"D+\"))\n    (check-equal?\
  \ (candidate (list 0.5)) (list \"D-\"))\n    (check-equal? (candidate (list 0.0))\
  \ (list \"E\"))\n    (check-equal? (candidate (list 1 0.3 1.5 2.8 3.3)) (list \"\
  D\" \"D-\" \"C-\" \"B\" \"B+\"))\n    (check-equal? (candidate (list 0 0.7)) (list\
  \ \"E\" \"D-\"))\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(member? 4.0 grades) 'A+]\n    [(member? 3.7 grades)\
    \ 'A]\n    [(member? 3.3 grades) 'A-]\n    [(member? 3.0 grades) 'B+]\n    [(member?\
    \ 2.7 grades) 'B]\n    [(member? 2.3 grades) 'B-]\n    [(member? 2.0 grades) 'C+]\n\
    \    [(member? 1.7 grades) 'C]\n    [(member? 1.3 grades) 'C-]\n    [(member?\
    \ 1.0 grades) 'D+]\n    [(member? 0.7 grades) 'D]\n    [(member? 0.0 grades) 'D-]\n\
    \    [else 'E]))\n", "  (map grade_helper grades))\n", "  'your code goes here)\n",
  "  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n      \
    \     [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"]))\n       grades))\n", "  (map (lambda (grade) (cond\n\t\t\t\t\t\t[(>= grade\
    \ 4.0) \"A+\"]\n\t\t\t\t\t\t[(>= grade 3.7) \"A\"]\n\t\t\t\t\t\t[(>= grade 3.3)\
    \ \"A-\"]\n\t\t\t\t\t\t[(>= grade 3.0) \"B+\"]\n\t\t\t\t\t\t[(>= grade 2.7) \"\
    B\"]\n\t\t\t\t\t\t[(>= grade 2.3) \"B-\"]\n\t\t\t\t\t\t[(>= grade 2.0) \"C+\"\
    ]\n\t\t\t\t\t\t[(>= grade 1.7) \"C\"]\n\t\t\t\t\t\t[(>= grade 1.3) \"C-\"]\n\t\
    \t\t\t\t\t[(>= grade 1.0) \"D+\"]\n\t\t\t\t\t\t[(>= grade 0.7) \"D\"]\n\t\t\t\t\
    \t\t[(>= grade 0.0) \"D-\"]\n\t\t\t\t\t\t[(>= grade 0.0) \"E\"]\n\t\t\t\t\t\t\
    [else \"Grade not provided\"]))\n\t\tgrades))\n", "  '())", "  (map (lambda (x)\
    \ (if (< x 0.0) \"E\"\n\t\t  (cond [(>= x 4.0) \"A+\"]\n\t\t\t[(>= x 3.7) \"A\"\
    ]\n\t\t\t[(>= x 3.3) \"A-\"]\n\t\t\t[(>= x 3.0) \"B+\"]\n\t\t\t[(>= x 2.7) \"\
    B\"]\n\t\t\t[(>= x 2.3) \"B-\"]\n\t\t\t[(>= x 2.0) \"C+\"]\n\t\t\t[(>= x 1.7)\
    \ \"C\"]\n\t\t\t[(>= x 1.3) \"C-\"]\n\t\t\t[(>= x 1.0) \"D+\"]\n\t\t\t[(>= x 0.7)\
    \ \"D\"]\n\t\t\t[(>= x 0.0) \"D-\"]\n\t\t\t[(< x 0.0) \"E\"])))\n\tgrades))\n",
  "  (map (lambda (gpa)\n         (cond ((<= gpa 0.0) 'E)\n               ((> gpa\
    \ 0.0) 'D-)\n               ((> gpa 0.7) 'D)\n               ((> gpa 1.0) 'D+)\n\
    \               ((> gpa 1.3) 'C-)\n               ((> gpa 1.7) 'C)\n         \
    \      ((> gpa 2.0) 'C+)\n               ((> gpa 2.3) 'B-)\n               ((>\
    \ gpa 2.7) 'B)\n               ((> gpa 3.0) 'B+)\n               ((> gpa 3.3)\
    \ 'A-)\n               ((> gpa 3.7) 'A)\n               ((> gpa 4.0) 'A+)))\n\
    \       grades))\n", "  (map \n   (lambda (gpa)\n     (cond\n       [(>= gpa 4.0)\
    \ \"A+\"]\n       [(>= gpa 3.7) \"A\"]\n       [(>= gpa 3.3) \"A-\"]\n       [(>=\
    \ gpa 3.0) \"B+\"]\n       [(>= gpa 2.7) \"B\"]\n       [(>= gpa 2.3) \"B-\"]\n\
    \       [(>= gpa 2.0) \"C+\"]\n       [(>= gpa 1.7) \"C\"]\n       [(>= gpa 1.3)\
    \ \"C-\"]\n       [(>= gpa 1.0) \"D+\"]\n       [(>= gpa 0.7) \"D\"]\n       [(>=\
    \ gpa 0.0) \"D-\"]\n       [else \"E\"]))\n   grades))\n", "  (map\n   (lambda\
    \ (gpa) (letter_grade gpa))\n   grades))\n", "  (map (lambda (grade) (if (>= grade\
    \ 4.0) \"A+\"\n                         (if (>= grade 3.7) \"A\"\n           \
    \                  (if (>= grade 3.3) \"A-\"\n                               \
    \  (if (>= grade 3.0) \"B+\"\n                                     (if (>= grade\
    \ 2.7) \"B\"\n                                         (if (>= grade 2.3) \"B-\"\
    \n                                             (if (>= grade 2.0) \"C+\"\n   \
    \                                              (if (>= grade 1.7) \"C\"\n    \
    \                                                 (if (>= grade 1.3) \"C-\"\n\
    \                                                         (if (>= grade 1.0) \"\
    D+\"\n                                                             (if (>= grade\
    \ 0.7) \"D\"\n                                                               \
    \  (if (>= grade 0.0) \"D-\"\n                                               \
    \                      \"E\"))))))))))))\n          grades))", "  (map (lambda\
    \ (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>= grade 3.7)\
    \ 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade 3.0) 'B+]\n\
    \               [(>= grade 2.7) 'B]\n               [(>= grade 2.3) 'B-]\n   \
    \            [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n      \
    \         [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n        \
    \       [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n           \
    \    [else 'E]))\n       grades))\n", "  (map (lambda (gpa)\n         (cond [(>=\
    \ gpa 4.0) \"A+\"]\n               [(>= gpa 3.7) \"A\"]\n               [(>= gpa\
    \ 3.3) \"A-\"]\n               [(>= gpa 3.0) \"B+\"]\n               [(>= gpa\
    \ 2.7) \"B\"]\n               [(>= gpa 2.3) \"B-\"]\n               [(>= gpa 2.0)\
    \ \"C+\"]\n               [(>= gpa 1.7) \"C\"]\n               [(>= gpa 1.3) \"\
    C-\"]\n               [(>= gpa 1.0) \"D+\"]\n               [(>= gpa 0.7) \"D\"\
    ]\n               [(>= gpa 0.0) \"D-\"]\n               [else        \"E\"]))\n\
    \       grades))\n", "  (cond [(> (first grades) 3.7) \"A+\"]\n        [(> (first\
    \ grades) 3.3) \"A\"]\n        [(> (first grades) 3.0) \"A-\"]\n        [(> (first\
    \ grades) 2.7) \"B+\"]\n        [(> (first grades) 2.3) \"B\"]\n        [(> (first\
    \ grades) 2.0) \"B-\"]\n        [(> (first grades) 1.7) \"C+\"]\n        [(> (first\
    \ grades) 1.3) \"C\"]\n        [(> (first grades) 1.0) \"C-\"]\n        [(> (first\
    \ grades) 0.7) \"D+\"]\n        [(> (first grades) 0.0) \"D\"]\n        [(> (first\
    \ grades) 0.0) \"D-\"]\n        [else \"E\"]))\n", "  (map (lambda (grade)\n \
    \        (cond\n           [(>= grade 4.0) \"A+\"]\n           [(>= grade 3.7)\
    \ \"A\"]\n           [(>= grade 3.3) \"A-\"]\n           [(>= grade 3.0) \"B+\"\
    ]\n           [(>= grade 2.7) \"B\"]\n           [(>= grade 2.3) \"B-\"]\n   \
    \        [(>= grade 2.0) \"C+\"]\n           [(>= grade 1.7) \"C\"]\n        \
    \   [(>= grade 1.3) \"C-\"]\n           [(>= grade 1.0) \"D+\"]\n           [(>=\
    \ grade 0.7) \"D\"]\n           [(>= grade 0.0) \"D-\"]\n           [else \"E\"\
    ]))\n       grades))\n", "  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n\
    \               [(>= gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n       \
    \        [(>= gpa 3.0) 'B+]\n               [(>= gpa 2.7) 'B]\n              \
    \ [(>= gpa 2.3) 'B-]\n               [(>= gpa 2.0) 'C+]\n               [(>= gpa\
    \ 1.7) 'C]\n               [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n\
    \               [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n       \
    \        [else 'E]))\n       grades))\n", "  (for/list ([g grades])\n    (cond\n\
    \      [ (>= g 4.0) \"A+\"]\n      [ (>= g 3.7) \"A\"]\n      [ (>= g 3.3) \"\
    A-\"]\n      [ (>= g 3.0) \"B+\"]\n      [ (>= g 2.7) \"B\"]\n      [ (>= g 2.3)\
    \ \"B-\"]\n      [ (>= g 2.0) \"C+\"]\n      [ (>= g 1.7) \"C\"]\n      [ (>=\
    \ g 1.3) \"C-\"]\n      [ (>= g 1.0) \"D+\"]\n      [ (>= g 0.7) \"D\"]\n    \
    \  [ (>= g 0.0) \"D-\"]\n      [ (<  g 0.0) \"E\"])))\n", "  (map (lambda (x)\n\
    \         (cond ((>= x 4.0) 'A+)\n               ((>= x 3.7) 'A)\n           \
    \    ((>= x 3.3) 'A-)\n               ((>= x 3.0) 'B+)\n               ((>= x\
    \ 2.7) 'B)\n               ((>= x 2.3) 'B-)\n               ((>= x 2.0) 'C+)\n\
    \               ((>= x 1.7) 'C)\n               ((>= x 1.3) 'C-)\n           \
    \    ((>= x 1.0) 'D+)\n               ((>= x 0.7) 'D)\n               ((>= x 0.0)\
    \ 'D-)\n               (else 'E)))\n       grades))\n", "  (if (null? grades)\n\
    \      '()\n      (cons (cond\n             ((>= (car grades) 4.0) 'A+)\n    \
    \         ((>= (car grades) 3.7) 'A)\n             ((>= (car grades) 3.3) 'A-)\n\
    \             ((>= (car grades) 3.0) 'B+)\n             ((>= (car grades) 2.7)\
    \ 'B)\n             ((>= (car grades) 2.3) 'B-)\n             ((>= (car grades)\
    \ 2.0) 'C+)\n             ((>= (car grades) 1.7) 'C)\n             ((>= (car grades)\
    \ 1.3) 'C-)\n             ((>= (car grades) 1.0) 'D+)\n             ((>= (car\
    \ grades) 0.7) 'D)\n             ((>= (car grades) 0.0) 'D-)\n             ((=\
    \ (car grades) 0.0) 'E)\n             (else '()))\n            (numerical_letter_grade\
    \ (cdr grades)))))\n", "  (map (lambda (gpa)\n         (cond [(= gpa 4.0) \"A+\"\
    ]\n               [(> gpa 3.7) \"A\"]\n               [(> gpa 3.3) \"A-\"]\n \
    \              [(> gpa 3.0) \"B+\"]\n               [(> gpa 2.7) \"B\"]\n    \
    \           [(> gpa 2.3) \"B-\"]\n               [(> gpa 2.0) \"C+\"]\n      \
    \         [(> gpa 1.7) \"C\"]\n               [(> gpa 1.3) \"C-\"]\n         \
    \      [(> gpa 1.0) \"D+\"]\n               [(> gpa 0.7) \"D\"]\n            \
    \   [(> gpa 0.0) \"D-\"]\n               [else \"E\"]))\n       grades))\n", " \
    \ (if (null? grades)\n      '()\n      (cons (cond [(>= (car grades) 4.0) \"A+\"\
    ]\n                  [(>= (car grades) 3.7) \"A\"]\n                  [(>= (car\
    \ grades) 3.3) \"A-\"]\n                  [(>= (car grades) 3.0) \"B+\"]\n   \
    \               [(>= (car grades) 2.7) \"B\"]\n                  [(>= (car grades)\
    \ 2.3) \"B-\"]\n                  [(>= (car grades) 2.0) \"C+\"]\n           \
    \       [(>= (car grades) 1.7) \"C\"]\n                  [(>= (car grades) 1.3)\
    \ \"C-\"]\n                  [(>= (car grades) 1.0) \"D+\"]\n                \
    \  [(>= (car grades) 0.7) \"D\"]\n                  [(>= (car grades) 0.0) \"\
    D-\"]\n                  [else \"E\"])\n            (numerical_letter_grade (cdr\
    \ grades)))))\n", "  (map (lambda (x)\n         (cond ((>= x 4.0) \"A+\")\n  \
    \             ((>= x 3.7) \"A\")\n               ((>= x 3.3) \"A-\")\n       \
    \        ((>= x 3.0) \"B+\")\n               ((>= x 2.7) \"B\")\n            \
    \   ((>= x 2.3) \"B-\")\n               ((>= x 2.0) \"C+\")\n               ((>=\
    \ x 1.7) \"C\")\n               ((>= x 1.3) \"C-\")\n               ((>= x 1.0)\
    \ \"D+\")\n               ((>= x 0.7) \"D\")\n               ((>= x 0.0) \"D-\"\
    )\n               (else \"E\")))\n       grades))", "  ;; compute the letter grades\
    \ of the students\n  (map (lambda (num) (cond [(>= num 4.0) \"A+\"]\n        \
    \                   [(>= num 3.7) \"A\"]\n                           [(>= num\
    \ 3.3) \"A-\"]\n                           [(>= num 3.0) \"B+\"]\n           \
    \                [(>= num 2.7) \"B\"]\n                           [(>= num 2.3)\
    \ \"B-\"]\n                           [(>= num 2.0) \"C+\"]\n                \
    \           [(>= num 1.7) \"C\"]\n                           [(>= num 1.3) \"\
    C-\"]\n                           [(>= num 1.0) \"D+\"]\n                    \
    \       [(>= num 0.7) \"D\"]\n                           [(>= num 0.0) \"D-\"\
    ]\n                           [(>= num 0.0) \"E\"]\n                         \
    \  [else \"not defined\"])) grades))\n", "  (map (lambda (gpa)\n         (cond\n\
    \           [(>= gpa 4.0) 'A+]\n           [(>= gpa 3.7) 'A]\n           [(>=\
    \ gpa 3.3) 'A-]\n           [(>= gpa 3.0) 'B+]\n           [(>= gpa 2.7) 'B]\n\
    \           [(>= gpa 2.3) 'B-]\n           [(>= gpa 2.0) 'C+]\n           [(>=\
    \ gpa 1.7) 'C]\n           [(>= gpa 1.3) 'C-]\n           [(>= gpa 1.0) 'D+]\n\
    \           [(>= gpa 0.7) 'D]\n           [(>= gpa 0.0) 'D-]\n           [else\
    \ 'E]\n           ))\n        grades))\n", "  (map (lambda (x)\n         (cond\n\
    \           [(>= x 4.0) \"A+\"]\n           [(>= x 3.7) \"A\"]\n           [(>=\
    \ x 3.3) \"A-\"]\n           [(>= x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"\
    ]\n           [(>= x 2.3) \"B-\"]\n           [(>= x 2.0) \"C+\"]\n          \
    \ [(>= x 1.7) \"C\"]\n           [(>= x 1.3) \"C-\"]\n           [(>= x 1.0) \"\
    D+\"]\n           [(>= x 0.7) \"D\"]\n           [(>= x 0.0) \"D-\"]\n       \
    \    [(= x 0.0) \"E\"]))\n       grades))\n", "  (map (lambda (grade)\n      \
    \   (cond [(>= grade 4.0) \"A+\"]\n               [(>= grade 3.7) \"A\"]\n   \
    \            [(>= grade 3.3) \"A-\"]\n               [(>= grade 3.0) \"B+\"]\n\
    \               [(>= grade 2.7) \"B\"]\n               [(>= grade 2.3) \"B-\"\
    ]\n               [(>= grade 2.0) \"C+\"]\n               [(>= grade 1.7) \"C\"\
    ]\n               [(>= grade 1.3) \"C-\"]\n               [(>= grade 1.0) \"D+\"\
    ]\n               [(>= grade 0.7) \"D\"]\n               [(>= grade 0.0) \"D-\"\
    ]\n               [else \"E\"]))\n       grades))\n", "  (map (lambda (x)\n  \
    \       (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7) 'A]\n             \
    \  [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n               [(>= x 2.7)\
    \ 'B]\n               [(>= x 2.3) 'B-]\n               [(>= x 2.0) 'C+]\n    \
    \           [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n               [(>=\
    \ x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n               [(>= x 0.0) 'D-]\n\
    \               [else 'E]))\n        grades))\n", "  ;;;;;;;;;;;;;;;;;;\n  ;;\
    \ CODE HERE \n  ;;;;;;;;;;;;;;;;;;\n)\n", "  (map (lambda (x)\n         (cond\
    \ [(>= x 4.0) 'A+]\n               [(>= x 3.7) 'A]\n               [(>= x 3.3)\
    \ 'A-]\n               [(>= x 3.0) 'B+]\n               [(>= x 2.7) 'B]\n    \
    \           [(>= x 2.3) 'B-]\n               [(>= x 2.0) 'C+]\n              \
    \ [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n               [(>= x 1.0)\
    \ 'D+]\n               [(>= x 0.7) 'D]\n               [(>= x 0.0) 'D-]\n    \
    \           [else 'E]))\n       grades))", "  (map (lambda (x)\n        (cond\
    \ ((>= x 4.0) \"A+\")\n              ((>= x 3.7) \"A\")\n              ((>= x\
    \ 3.3) \"A-\")\n              ((>= x 3.0) \"B+\")\n              ((>= x 2.7) \"\
    B\")\n              ((>= x 2.3) \"B-\")\n              ((>= x 2.0) \"C+\")\n \
    \             ((>= x 1.7) \"C\")\n              ((>= x 1.3) \"C-\")\n        \
    \      ((>= x 1.0) \"D+\")\n              ((>= x 0.7) \"D\")\n              ((>=\
    \ x 0.0) \"D-\")\n              (else \"E\")))\n      grades))", "  (map (lambda\
    \ (gpa)\n         (cond ((>= gpa 4.0) \"A+\")\n               ((>= gpa 3.7) \"\
    A\" )\n               ((>= gpa 3.3) \"A-\")\n               ((>= gpa 3.0) \"B+\"\
    )\n               ((>= gpa 2.7) \"B\" )\n               ((>= gpa 2.3) \"B-\")\n\
    \               ((>= gpa 2.0) \"C+\")\n               ((>= gpa 1.7) \"C\" )\n\
    \               ((>= gpa 1.3) \"C-\")\n               ((>= gpa 1.0) \"D+\")\n\
    \               ((>= gpa 0.7) \"D\" )\n               ((>= gpa 0.0) \"D-\")\n\
    \               (else \"E\")))\n       grades))\n", "  (define (numerical_letter_grade-iter\
    \ gpas letter-grades)\n    (cond [(empty? gpas) empty]\n          [(> (first gpas)\
    \ 3.7) (cons (first letter-grades) (numerical_letter_grade-iter (rest gpas) (rest\
    \ letter-grades)))]\n          [(> (first gpas) 3.3) (cons (first letter-grades)\
    \ (numerical_letter_grade-iter (rest gpas) (rest letter-grades)))]\n         \
    \ [(> (first gpas) 3.0) (cons (first letter-grades) (numerical_letter_grade-iter\
    \ (rest gpas) (rest letter-grades)))]\n          [(> (first gpas) 2.7) (cons (first\
    \ letter-grades) (numerical_letter_grade-iter (rest gpas) (rest letter-grades)))]\n\
    \          [(> (first gpas) 2.3) (cons (first letter-grades) (numerical_letter_grade-iter\
    \ (rest gpas) (rest letter-grades)))]\n          [(> (first gpas) 2.0) (cons (first\
    \ letter-grades) (numerical_letter_grade-iter (rest gpas) (rest letter-grades)))]\n\
    \          [(> (first gpas) 1.7) (cons (first letter-grades) (numerical_letter_grade-iter\
    \ (rest gpas) (rest letter-grades)))]\n          [(> (first gpas) 1.3) (cons (first\
    \ letter-grades) (numerical_letter_grade-iter (rest gpas) (rest letter-grades)))]\n\
    \          [(> (first gpas) 1.0) (cons (first letter-grades) (numerical_letter_grade-iter\
    \ (rest gpas) (rest letter-grades)))]\n          [(> (first gpas) 0.7) (cons (first\
    \ letter-grades) (numerical_letter_grade-iter (rest gpas) (rest letter-grades)))]\n\
    \          [(> (first gpas) 0.0) (cons (first letter-grades) (numerical_letter_grade-iter\
    \ (rest gpas) (rest letter-grades)))]\n          [(> (first gp", "  (define (helper\
    \ gpa_list results)\n    (cond\n      [(empty? gpa_list) (reverse results)]\n\
    \      [(eq? (first gpa_list) 4.0) (helper (rest gpa_list) (cons \"A+\" results))]\n\
    \      [(> (first gpa_list) 3.7) (helper (rest gpa_list) (cons \"A\" results))]\n\
    \      [(> (first gpa_list) 3.3) (helper (rest gpa_list) (cons \"A-\" results))]\n\
    \      [(> (first gpa_list) 3.0) (helper (rest gpa_list) (cons \"B+\" results))]\n\
    \      [(> (first gpa_list) 2.7) (helper (rest gpa_list) (cons \"B\" results))]\n\
    \      [(> (first gpa_list) 2.3) (helper (rest gpa_list) (cons \"B-\" results))]\n\
    \      [(> (first gpa_list) 2.0) (helper (rest gpa_list) (cons \"C+\" results))]\n\
    \      [(> (first gpa_list) 1.7) (helper (rest gpa_list) (cons \"C\" results))]\n\
    \      [(> (first gpa_list) 1.3) (helper (rest gpa_list) (cons \"C-\" results))]\n\
    \      [(> (first gpa_list) 1.0) (helper (rest gpa_list) (cons \"D+\" results))]\n\
    \      [(> (first gpa_list) 0.7) (helper (rest gpa_list) (cons \"D\" results))]\n\
    \      [(> (first gpa_list) 0.0) (helper (rest gpa_list) (cons \"D-\" results))]\n\
    \      [(eq? (first gpa_list) 0.0) (helper (rest gpa_list) (cons \"E\" results))]))\n\
    \  (helper grades empty))\n", "  (map (lambda (x)\n         (cond [(>= x 4.0)\
    \ 'A+]\n               [(>= x 3.7) 'A]\n               [(>= x 3.3) 'A-]\n    \
    \           [(>= x 3.0) 'B+]\n               [(>= x 2.7) 'B]\n               [(>=\
    \ x 2.3) 'B-]\n               [(>= x 2.0) 'C+]\n               [(>= x 1.7) 'C]\n\
    \               [(>= x 1.3) 'C-]\n               [(>= x 1.0) 'D+]\n          \
    \     [(>= x 0.7) 'D]\n               [(>= x 0.0) 'D-]\n               [else 'E]))\n\
    \       grades))\n", "  (map (lambda (x) (cond [(>= x 4.0) 'A+]\n            \
    \             [(>= x 3.7) 'A]\n                         [(>= x 3.3) 'A-]\n   \
    \                      [(>= x 3.0) 'B+]\n                         [(>= x 2.7)\
    \ 'B]\n                         [(>= x 2.3) 'B-]\n                         [(>=\
    \ x 2.0) 'C+]\n                         [(>= x 1.7) 'C]\n                    \
    \     [(>= x 1.3) 'C-]\n                         [(>= x 1.0) 'D+]\n          \
    \               [(>= x 0.7) 'D]\n                         [(>= x 0.0) 'D-]\n \
    \                        [else 'E])) grades))\n", "  (map (lambda (x)\n      \
    \   (cond\n           [(>= x 4.0) \"A+\"]\n           [(>= x 3.7) \"A\"]\n   \
    \        [(>= x 3.3) \"A-\"]\n           [(>= x 3.0) \"B+\"]\n           [(>=\
    \ x 2.7) \"B\"]\n           [(>= x 2.3) \"B-\"]\n           [(>= x 2.0) \"C+\"\
    ]\n           [(>= x 1.7) \"C\"]\n           [(>= x 1.3) \"C-\"]\n           [(>=\
    \ x 1.0) \"D+\"]\n           [(>= x 0.7) \"D\"]\n           [(>= x 0.0) \"D-\"\
    ]\n           [(= x 0.0) \"E\"]))\n    grades))", "  (list-map (lambda (grade)\
    \ (cond\n                             ((= grade 4.0) 'A+)\n                  \
    \           ((> grade 3.7) 'A)\n                             ((> grade 3.3) 'A-)\n\
    \                             ((> grade 3.0) 'B+)\n                          \
    \   ((> grade 2.7) 'B)\n                             ((> grade 2.3) 'B-)\n   \
    \                          ((> grade 2.0) 'C+)\n                             ((>\
    \ grade 1.7) 'C)\n                             ((> grade 1.3) 'C-)\n         \
    \                    ((> grade 1.0) 'D+)\n                             ((> grade\
    \ 0.7) 'D)\n                             ((> grade 0.0) 'D-)\n               \
    \              (else 'E)))\n             grades))\n", "  (map (lambda (gpa)\n\
    \         (cond\n           [(>= gpa 4.0) \"A+\"]\n           [(>= gpa 3.7) \"\
    A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>= gpa 3.0) \"B+\"]\n   \
    \        [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3) \"B-\"]\n           [(>=\
    \ gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n           [(>= gpa 1.3)\
    \ \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n           [(>= gpa 0.7) \"D\"]\n\
    \           [(>= gpa 0.0) \"D-\"]\n           [else \"E\"]))\n        grades))\n",
  "  (cond ((<= 3.7 0.0) 'E)\n        ((<= 3.3 4.0) 'A+)\n        ((<= 3.0 3.7) 'A)\n\
    \        ((<= 2.7 3.3) 'A-)\n        ((<= 2.3 3.0) 'B+)\n        ((<= 2.0 2.7)\
    \ 'B)\n        ((<= 1.7 2.3) 'B-)\n        ((<= 1.3 2.0) 'C+)\n        ((<= 1.0\
    \ 1.7) 'C)\n        ((<= 0.7 1.3) 'C-)\n        ((<= 0.0 0.7) 'D+)\n        ((<=\
    \ 0.0 1.0) 'D)\n        ((<= 0.0 0.0) 'D-)\n        ((<= 0.0 0.0) 'E)\n  )\n)",
  "  ;; Here is an example of what the first solution that I wrote looked like\n \
    \ ;; (map (lambda (gpa)\n  ;;        (cond ((<= 4.0 gpa) \"A+\")\n  ;;       \
    \       ((<= 3.7 gpa) \"A\")\n  ;;              ((<= 3.3 gpa) \"A-\")\n  ;;  \
    \            ((<= 3.0 gpa) \"B+\")\n  ;;              ((<= 2.7 gpa) \"B\")\n \
    \ ;;              ((<= 2.3 gpa) \"B-\")\n  ;;              ((<= 2.0 gpa) \"C+\"\
    )\n  ;;              ((<= 1.7 gpa) \"C\")\n  ;;              ((<= 1.3 gpa) \"\
    C-\")\n  ;;              ((<= 1.0 gpa) \"D+\")\n  ;;              ((<= 0.7 gpa)\
    \ \"D\")\n  ;;              ((<= 0.0 gpa) \"D-\")\n  ;;              (else \"\
    E\")))\n  ;;      grades))\n  (map (lambda (gpa)\n         (define grades `(\"\
    A+\" \"A\" \"A-\" \"B+\" \"B\" \"B-\" \"C+\" \"C\" \"C-\" \"D+\" \"D\" \"D-\"\
    \ \"E\"))\n         (define limits `(4.0 3.7 3.3 3.0 2.7 2.3 2.0 1.7 1.3 1.0 0.7\
    \ 0.0))\n         (if (not (empty? grades))\n             (if (<= (first limits)\
    \ gpa)\n                 (first grades)\n                 (numerical_letter_grade\
    \ gpa (rest grades) (rest limits)))\n             \"E\"))\n       grades))", " \
    \ (map\n   (lambda (grade)\n     (cond\n       [(>= grade 4.0) 'A+]\n       [(>=\
    \ grade 3.7) 'A]\n       [(>= grade 3.3) 'A-]\n       [(>= grade 3.0) 'B+]\n \
    \      [(>= grade 2.7) 'B]\n       [(>= grade 2.3) 'B-]\n       [(>= grade 2.0)\
    \ 'C+]\n       [(>= grade 1.7) 'C]\n       [(>= grade 1.3) 'C-]\n       [(>= grade\
    \ 1.0) 'D+]\n       [(>= grade 0.7) 'D]\n       [(>= grade 0.0) 'D-]\n       [else\
    \ 'E]))\n   grades))\n", "  (map (lambda (x) (cond ((>= x 4.0) 'A+) ((>= x 3.7)\
    \ 'A) ((>= x 3.3) 'A-) ((>= x 3.0) 'B+) ((>= x 2.7) 'B) ((>= x 2.3) 'B-) ((>=\
    \ x 2.0) 'C+) ((>= x 1.7) 'C) ((>= x 1.3) 'C-) ((>= x 1.0) 'D+) ((>= x 0.7) 'D)\
    \ ((>= x 0.0) 'D-) (else 'E))) grades))\n", "  (map (lambda (gpa)\n         (cond\
    \ [(>= gpa 4.0) 'A+]\n               [(>= gpa 3.7) 'A]\n               [(>= gpa\
    \ 3.3) 'A-]\n               [(>= gpa 3.0) 'B+]\n               [(>= gpa 2.7) 'B]\n\
    \               [(>= gpa 2.3) 'B-]\n               [(>= gpa 2.0) 'C+]\n      \
    \         [(>= gpa 1.7) 'C]\n               [(>= gpa 1.3) 'C-]\n             \
    \  [(>= gpa 1.0) 'D+]\n               [(>= gpa 0.7) 'D]\n               [(>= gpa\
    \ 0.0) 'D-]\n               [else 'E]))\n       grades))\n", "  (map (lambda (grade)\n\
    \         (cond\n           [(>= grade 4.0) \"A+\"]\n           [(>= grade 3.7)\
    \ \"A\"]\n           [(>= grade 3.3) \"A-\"]\n           [(>= grade 3.0) \"B+\"\
    ]\n           [(>= grade 2.7) \"B\"]\n           [(>= grade 2.3) \"B-\"]\n   \
    \        [(>= grade 2.0) \"C+\"]\n           [(>= grade 1.7) \"C\"]\n        \
    \   [(>= grade 1.3) \"C-\"]\n           [(>= grade 1.0) \"D+\"]\n           [(>=\
    \ grade 0.7) \"D\"]\n           [(>= grade 0.0) \"D-\"]\n           [else \"E\"\
    ]))\n       grades))\n", "  (map (lambda (x)\n\t  (cond [(>= x 4.0) 'A+]\n\t\t\
    [(>= x 3.7) 'A]\n\t\t[(>= x 3.3) 'A-]\n\t\t[(>= x 3.0) 'B+]\n\t\t[(>= x 2.7) 'B]\n\
    \t\t[(>= x 2.3) 'B-]\n\t\t[(>= x 2.0) 'C+]\n\t\t[(>= x 1.7) 'C]\n\t\t[(>= x 1.3)\
    \ 'C-]\n\t\t[(>= x 1.0) 'D+]\n\t\t[(>= x 0.7) 'D]\n\t\t[(>= x 0.0) 'D-]\n\t\t\
    [(>= x 0.0) 'E])) grades))\n", "  (cond [(= grades 4.0) \"A+\"]\n        [(> grades\
    \ 3.7) \"A\"]\n        [(> grades 3.3) \"A-\"]\n        [(> grades 3.0) \"B+\"\
    ]\n        [(> grades 2.7) \"B\"]\n        [(> grades 2.3) \"B-\"]\n        [(>\
    \ grades 2.0) \"C+\"]\n        [(> grades 1.7) \"C\"]\n        [(> grades 1.3)\
    \ \"C-\"]\n        [(> grades 1.0) \"D+\"]\n        [(> grades 0.7) \"D\"]\n \
    \       [(> grades 0.0) \"D-\"]\n        [(= grades 0.0) \"E\"]))", "  (map (lambda\
    \ (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>= gpa 3.7) 'A]\n\
    \               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0) 'B+]\n      \
    \         [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n             \
    \  [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n               [(>= gpa\
    \ 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n               [(>= gpa 0.7) 'D]\n\
    \               [(>= gpa 0.0) 'D-]\n               [else 'E]))\n       grades))\n",
  "  'your implementation goes here)\n", "  (map\n   (lambda (gpa)\n     (if (>= gpa\
    \ 4.0) \"A+\"\n         (if (>= gpa 3.7) \"A\"\n             (if (>= gpa 3.3)\
    \ \"A-\"\n                 (if (>= gpa 3.0) \"B+\"\n                     (if (>=\
    \ gpa 2.7) \"B\"\n                         (if (>= gpa 2.3) \"B-\"\n         \
    \                    (if (>= gpa 2.0) \"C+\"\n                               \
    \  (if (>= gpa 1.7) \"C\"\n                                     (if (>= gpa 1.3)\
    \ \"C-\"\n                                         (if (>= gpa 1.0) \"D+\"\n \
    \                                            (if (>= gpa 0.7) \"D\"\n        \
    \                                         (if (>= gpa 0.0) \"D-\"\n          \
    \                                           \"E\")))))))))))))\n   grades))\n",
  "  (map (lambda (x)\n         (cond ((>= x 4.0) 'A+)\n               ((>= x 3.7)\
    \ 'A)\n               ((>= x 3.3) 'A-)\n               ((>= x 3.0) 'B+)\n    \
    \           ((>= x 2.7) 'B)\n               ((>= x 2.3) 'B-)\n               ((>=\
    \ x 2.0) 'C+)\n               ((>= x 1.7) 'C)\n               ((>= x 1.3) 'C-)\n\
    \               ((>= x 1.0) 'D+)\n               ((>= x 0.7) 'D)\n           \
    \    ((>= x 0.0) 'D-)\n               (else 'E)))\n       grades))\n", "  (map\
    \ (lambda (x)\n         (cond\n           [(>= x 4.0)  \"A+\"]\n           [(>=\
    \ x 3.7)  \"A\"]\n           [(>= x 3.3)  \"A-\"]\n           [(>= x 3.0)  \"\
    B+\"]\n           [(>= x 2.7)  \"B\"]\n           [(>= x 2.3)  \"B-\"]\n     \
    \      [(>= x 2.0)  \"C+\"]\n           [(>= x 1.7)  \"C\"]\n           [(>= x\
    \ 1.3)  \"C-\"]\n           [(>= x 1.0)  \"D+\"]\n           [(>= x 0.7)  \"D\"\
    ]\n           [(>= x 0.0)  \"D-\"]\n           [(>= x 0.0)  \"E\"]))\n       grades))\n",
  "  (cond\n    [(>= 4.0 grades) \"A+\"]\n    [(>= 3.7 grades) \"A\"]\n    [(>= 3.3\
    \ grades) \"A-\"]\n    [(>= 3.0 grades) \"B+\"]\n    [(>= 2.7 grades) \"B\"]\n\
    \    [(>= 2.3 grades) \"B-\"]\n    [(>= 2.0 grades) \"C+\"]\n    [(>= 1.7 grades)\
    \ \"C\"]\n    [(>= 1.3 grades) \"C-\"]\n    [(>= 1.0 grades) \"D+\"]\n    [(>=\
    \ 0.7 grades) \"D\"]\n    [(>= 0.0 grades) \"D-\"]\n    [else \"E\"]))\n", " \
    \   (map (lambda (x)\n             (cond\n                 [(>= x 4.0) 'A+]\n\
    \                 [(>= x 3.7) 'A]\n                 [(>= x 3.3) 'A-]\n       \
    \          [(>= x 3.0) 'B+]\n                 [(>= x 2.7) 'B]\n              \
    \   [(>= x 2.3) 'B-]\n                 [(>= x 2.0) 'C+]\n                 [(>=\
    \ x 1.7) 'C]\n                 [(>= x 1.3) 'C-]\n                 [(>= x 1.0)\
    \ 'D+]\n                 [(>= x 0.7) 'D]\n                 [(>= x 0.0) 'D-]\n\
    \                 [else 'E]))\n         grades))\n\n", "  (map (lambda (x)\n \
    \        (cond\n           ((= x 4.0)  'A+)\n           ((> x 3.7)  'A)\n    \
    \       ((> x 3.3)  'A-)\n           ((> x 3.0)  'B+)\n           ((> x 2.7) \
    \ 'B)\n           ((> x 2.3)  'B-)\n           ((> x 2.0)  'C+)\n           ((>\
    \ x 1.7)  'C)\n           ((> x 1.3)  'C-)\n           ((> x 1.0)  'D+)\n    \
    \       ((> x 0.7)  'D)\n           ((> x 0.0)  'D-)\n           (else      'E)))\n\
    \       grades))\n", "(map (lambda (x)\n      (cond\n      ((>= x 4.0) 'A+)\n\
    \      ((>= x 3.7) 'A)\n      ((>= x 3.3) 'A-)\n      ((>= x 3.0) 'B+)\n     \
    \ ((>= x 2.7) 'B)\n      ((>= x 2.3) 'B-)\n      ((>= x 2.0) 'C+)\n      ((>=\
    \ x 1.7) 'C)\n      ((>= x 1.3) 'C-)\n      ((>= x 1.0) 'D+)\n      ((>= x 0.7)\
    \ 'D)\n      ((>= x 0.0) 'D-)\n      ((>= x 0.0) 'E)))\n    grades))\n", "  (cond\
    \ [(empty? grades) '()]\n        [else (cons (cond [(>= (first grades) 4.0) 'A+]\n\
    \                        [(>= (first grades) 3.7) 'A]\n                      \
    \  [(>= (first grades) 3.3) 'A-]\n                        [(>= (first grades)\
    \ 3.0) 'B+]\n                        [(>= (first grades) 2.7) 'B]\n          \
    \              [(>= (first grades) 2.3) 'B-]\n                        [(>= (first\
    \ grades) 2.0) 'C+]\n                        [(>= (first grades) 1.7) 'C]\n  \
    \                      [(>= (first grades) 1.3) 'C-]\n                       \
    \ [(>= (first grades) 1.0) 'D+]\n                        [(>= (first grades) 0.7)\
    \ 'D]\n                        [(>= (first grades) 0.0) 'D-]\n               \
    \         [else 'E])\n                    (numerical_letter_grade (rest grades)))])\n\
    \  )\n", "  (cond [(empty? grades) empty]\n        [else (cond [(eq? (first grades)\
    \ 4.0) (cons \"A+\" (numerical_letter_grade (rest grades)))]\n               \
    \   [(eq? (first grades) 3.7) (cons \"A\" (numerical_letter_grade (rest grades)))]\n\
    \                  [(eq? (first grades) 3.3) (cons \"A-\" (numerical_letter_grade\
    \ (rest grades)))]\n                  [(eq? (first grades) 3.0) (cons \"B+\" (numerical_letter_grade\
    \ (rest grades)))]\n                  [(eq? (first grades) 2.7) (cons \"B\" (numerical_letter_grade\
    \ (rest grades)))]\n                  [(eq? (first grades) 2.3) (cons \"B-\" (numerical_letter_grade\
    \ (rest grades)))]\n                  [(eq? (first grades) 2.0) (cons \"C+\" (numerical_letter_grade\
    \ (rest grades)))]\n                  [(eq? (first grades) 1.7) (cons \"C\" (numerical_letter_grade\
    \ (rest grades)))]\n                  [(eq? (first grades) 1.3) (cons \"C-\" (numerical_letter_grade\
    \ (rest grades)))]\n                  [(eq? (first grades) 1.0) (cons \"D+\" (numerical_letter_grade\
    \ (rest grades)))]\n                  [(eq? (first grades) 0.7) (cons \"D\" (numerical_letter_grade\
    \ (rest grades)))]\n                  [(eq? (first grades) 0.0) (cons \"D-\" (numerical_letter_grade\
    \ (rest grades)))]\n                  [(eq? (first grades) 0.0) (cons \"E\" (numerical_letter_grade\
    \ (rest grades)))]\n                  [else empty]\n                  )\n    \
    \       ]\n  )\n)\n", "  ;; your code here\n  )", "  (cond\n    [(empty? grades)\
    \ empty]\n    [else (cons (if (> (first grades) 3.7)\n                    \"A+\"\
    \n                    (if (> (first grades) 3.3)\n                        \"A\"\
    \n                        (if (> (first grades) 3.0)\n                       \
    \     \"A-\"\n                            (if (> (first grades) 2.7)\n       \
    \                         \"B+\"\n                                (if (> (first\
    \ grades) 2.3)\n                                    \"B\"\n                  \
    \                  (if (> (first grades) 2.0)\n                              \
    \          \"B-\"\n                                        (if (> (first grades)\
    \ 1.7)\n                                            \"C+\"\n                 \
    \                           (if (> (first grades) 1.3)\n                     \
    \                           \"C\"\n                                          \
    \      (if (> (first grades) 1.0)\n                                          \
    \          \"C-\"\n                                                    (if (>\
    \ (first grades) 0.7)\n                                                      \
    \  \"D+\"\n                                                        (if (> (first\
    \ grades) 0.0)\n                                                            \"\
    D\"\n                                                            \"E\")))))))))))\n\
    \                  (numerical_letter_grade (rest grades))]))\n", "  (cond ((>\
    \ grades 4.0) 'A+)\n        ((> grades 3.7) 'A)\n        ((> grades 3.3) 'A-)\n\
    \        ((> grades 3.0) 'B+)\n        ((> grades 2.7) 'B)\n        ((> grades\
    \ 2.3) 'B-)\n        ((> grades 2.0) 'C+)\n        ((> grades 1.7) 'C)\n     \
    \   ((> grades 1.3) 'C-)\n        ((> grades 1.0) 'D+)\n        ((> grades 0.7)\
    \ 'D)\n        ((> grades 0.0) 'D-)\n        (else 'E)))\n", "  (map (lambda (x)\n\
    \         (cond [(>= x 4.0) \"A+\"]\n               [(>= x 3.7) \"A\"]\n     \
    \          [(>= x 3.3) \"A-\"]\n               [(>= x 3.0) \"B+\"]\n         \
    \      [(>= x 2.7) \"B\"]\n               [(>= x 2.3) \"B-\"]\n              \
    \ [(>= x 2.0) \"C+\"]\n               [(>= x 1.7) \"C\"]\n               [(>=\
    \ x 1.3) \"C-\"]\n               [(>= x 1.0) \"D+\"]\n               [(>= x 0.7)\
    \ \"D\"]\n               [(>= x 0.0) \"D-\"]\n               [else \"E\"]))\n\
    \       grades))\n", "  (map (lambda (x)\n          (cond\n            [(>= x\
    \ 4.0) \"A+\"]\n            [(>= x 3.7) \"A\"]\n            [(>= x 3.3) \"A-\"\
    ]\n            [(>= x 3.0) \"B+\"]\n            [(>= x 2.7) \"B\"]\n         \
    \   [(>= x 2.3) \"B-\"]\n            [(>= x 2.0) \"C+\"]\n            [(>= x 1.7)\
    \ \"C\"]\n            [(>= x 1.3) \"C-\"]\n            [(>= x 1.0) \"D+\"]\n \
    \           [(>= x 0.7) \"D\"]\n            [(>= x 0.0) \"D-\"]\n            [(=\
    \ x 0.0) \"E\"]))\n        grades))", "  (map\n   (lambda (grade)\n     (cond\n\
    \       [(>= grade 4.0) 'A+]\n       [(>= grade 3.7) 'A]\n       [(>= grade 3.3)\
    \ 'A-]\n       [(>= grade 3.0) 'B+]\n       [(>= grade 2.7) 'B]\n       [(>= grade\
    \ 2.3) 'B-]\n       [(>= grade 2.0) 'C+]\n       [(>= grade 1.7) 'C]\n       [(>=\
    \ grade 1.3) 'C-]\n       [(>= grade 1.0) 'D+]\n       [(>= grade 0.7) 'D]\n \
    \      [(>= grade 0.0) 'D-]\n       [else 'E]))\n   grades))\n", "  (map (lambda\
    \ (gpa)\n         (cond ((>= gpa 4.0) 'A+)\n               ((>= gpa 3.7) 'A)\n\
    \               ((>= gpa 3.3) 'A-)\n               ((>= gpa 3.0) 'B+)\n      \
    \         ((>= gpa 2.7) 'B)\n               ((>= gpa 2.3) 'B-)\n             \
    \  ((>= gpa 2.0) 'C+)\n               ((>= gpa 1.7) 'C)\n               ((>= gpa\
    \ 1.3) 'C-)\n               ((>= gpa 1.0) 'D+)\n               ((>= gpa 0.7) 'D)\n\
    \               ((>= gpa 0.0) 'D-)\n               (else 'E)))\n       grades))",
  "  (cond\n    [(and (>= (car grades) 4.0) (< (car grades) 4.0)) \"A+\"]\n    [(and\
    \ (>= (car grades) 3.7) (< (car grades) 3.7)) \"A\"]\n    [(and (>= (car grades)\
    \ 3.3) (< (car grades) 3.3)) \"A-\"]\n    [(and (>= (car grades) 3.0) (< (car\
    \ grades) 3.0)) \"B+\"]\n    [(and (>= (car grades) 2.7) (< (car grades) 2.7))\
    \ \"B\"]\n    [(and (>= (car grades) 2.3) (< (car grades) 2.3)) \"B-\"]\n    [(and\
    \ (>= (car grades) 2.0) (< (car grades) 2.0)) \"C+\"]\n    [(and (>= (car grades)\
    \ 1.7) (< (car grades) 1.7)) \"C\"]\n    [(and (>= (car grades) 1.3) (< (car grades)\
    \ 1.3)) \"C-\"]\n    [(and (>= (car grades) 1.0) (< (car grades) 1.0)) \"D+\"\
    ]\n    [(and (>= (car grades) 0.7) (< (car grades) 0.7)) \"D\"]\n    [(and (>=\
    \ (car grades) 0.0) (< (car grades) 0.0)) \"D-\"]\n    [(and (>= (car grades)\
    \ 0.0) (< (car grades) 0.0)) \"E\"]))\n", "  (map (lambda (x) (cond [(>= x 4.0)\
    \ \"A+\"]\n                        [(>= x 3.7) \"A\"]\n                      \
    \  [(>= x 3.3) \"A-\"]\n                        [(>= x 3.0) \"B+\"]\n        \
    \                [(>= x 2.7) \"B\"]\n                        [(>= x 2.3) \"B-\"\
    ]\n                        [(>= x 2.0) \"C+\"]\n                        [(>= x\
    \ 1.7) \"C\"]\n                        [(>= x 1.3) \"C-\"]\n                 \
    \       [(>= x 1.0) \"D+\"]\n                        [(>= x 0.7) \"D\"]\n    \
    \                    [(>= x 0.0) \"D-\"]\n                        [else      \"\
    E\"])) grades))\n</code>\nHow can I run this function on the repl?\n\n\nA:\n\n\
    You can use the <code>racket</code> command, passing it the filename to load and\
    \ the name of the function to invoke.\nFor example, if the file containing your\
    \ code is called <code>numerical_letter_grade.rkt</code>, then you can invoke\
    \ it with:\n<code>racket numerical_letter_grade.rkt -e '(numerical_letter_grade\
    \ '(4.0 3.6 2.7 1.9 0.3))'\n</code>\n", "  (map grade_converter grades))\n", " \
    \ (map \n    (lambda (grade)\n      (cond \n        [(>= grade 4.0) \"A+\"]\n\
    \        [(>= grade 3.7) \"A\"]\n        [(>= grade 3.3) \"A-\"]\n        [(>=\
    \ grade 3.0) \"B+\"]\n        [(>= grade 2.7) \"B\"]\n        [(>= grade 2.3)\
    \ \"B-\"]\n        [(>= grade 2.0) \"C+\"]\n        [(>= grade 1.7) \"C\"]\n \
    \       [(>= grade 1.3) \"C-\"]\n        [(>= grade 1.0) \"D+\"]\n        [(>=\
    \ grade 0.7) \"D\"]\n        [(>= grade 0.0) \"D-\"]\n        [else \"E\"]))\n\
    \    grades))\n", "  \n  )\n", "  (map (lambda (num)\n         (cond [(>= num\
    \ 4.0) \"A+\"]\n               [(>= num 3.7) \"A\"]\n               [(>= num 3.3)\
    \ \"A-\"]\n               [(>= num 3.0) \"B+\"]\n               [(>= num 2.7)\
    \ \"B\"]\n               [(>= num 2.3) \"B-\"]\n               [(>= num 2.0) \"\
    C+\"]\n               [(>= num 1.7) \"C\"]\n               [(>= num 1.3) \"C-\"\
    ]\n               [(>= num 1.0) \"D+\"]\n               [(>= num 0.7) \"D\"]\n\
    \               [(>= num 0.0) \"D-\"]\n               [else \"E\"]))\n       grades))",
  "  (let ((grades (map (lambda (g)\n                      (if (> g 4.0) 4.0 g)) grades)))\n\
    \    (map (lambda (g)\n           (cond [(>= g 3.7) \"A\"]\n                 [(>=\
    \ g 3.3) \"A-\"]\n                 [(>= g 3.0) \"B+\"]\n                 [(>=\
    \ g 2.7) \"B\"]\n                 [(>= g 2.3) \"B-\"]\n                 [(>= g\
    \ 2.0) \"C+\"]\n                 [(>= g 1.7) \"C\"]\n                 [(>= g 1.3)\
    \ \"C-\"]\n                 [(>= g 1.0) \"D+\"]\n                 [(>= g 0.7)\
    \ \"D\"]\n                 [(>= g 0.0) \"D-\"]\n                 [else \"E\"]))\n\
    \         grades)))\n", "  (map (lambda (x)\n         (cond\n           [(>= x\
    \ 4.0) \"A+\"]\n           [(>= x 3.7) \"A\"]\n           [(>= x 3.3) \"A-\"]\n\
    \           [(>= x 3.0) \"B+\"]\n           [(>= x 2.7) \"B\"]\n           [(>=\
    \ x 2.3) \"B-\"]\n           [(>= x 2.0) \"C+\"]\n           [(>= x 1.7) \"C\"\
    ]\n           [(>= x 1.3) \"C-\"]\n           [(>= x 1.0) \"D+\"]\n          \
    \ [(>= x 0.7) \"D\"]\n           [(>= x 0.0) \"D-\"]\n           [(= x 0.0) \"\
    E\"]\n           [(< x 0.0) \"E\"]))\n       grades))\n", "  (cond\n    [(= 0\
    \ (length grades)) (list)]\n    [else\n     (let* ([temp-gpa (car grades)]\n \
    \           [temp-grade\n             (cond\n               [(>= temp-gpa 4.0)\
    \ \"A+\"]\n               [(>= temp-gpa 3.7) \"A\"]\n               [(>= temp-gpa\
    \ 3.3) \"A-\"]\n               [(>= temp-gpa 3.0) \"B+\"]\n               [(>=\
    \ temp-gpa 2.7) \"B\"]\n               [(>= temp-gpa 2.3) \"B-\"]\n          \
    \     [(>= temp-gpa 2.0) \"C+\"]\n               [(>= temp-gpa 1.7) \"C\"]\n \
    \              [(>= temp-gpa 1.3) \"C-\"]\n               [(>= temp-gpa 1.0) \"\
    D+\"]\n               [(>= temp-gpa 0.7) \"D\"]\n               [(>= temp-gpa\
    \ 0.0) \"D-\"]\n               [else \"E\"]\n               ])]\n       (cons\
    \ temp-grade (numerical_letter_grade (cdr grades))))]))", "  (cond\n    [(empty?\
    \ grades) empty]\n    [else (cons (numerical_letter_grade_help (first grades))\
    \ (numerical_letter_grade (rest grades)))]))\n", "  (cond [(empty? grades) empty]\n\
    \        [else (append\n\t        (cons (numerical_letter_grade_helper (first\
    \ grades))\n\t\t      (numerical_letter_grade (rest grades))))]))", "  (map (lambda\
    \ (grade)\n         (cond [(>= grade 4.0) 'A+]\n               [(>= grade 3.7)\
    \ 'A]\n               [(>= grade 3.3) 'A-]\n               [(>= grade 3.0) 'B+]\n\
    \               [(>= grade 2.7) 'B]\n               [(>= grade 2.3) 'B-]\n   \
    \            [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n      \
    \         [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n        \
    \       [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n           \
    \    [else 'E]))\n       grades))\n", '  (map letter-grade grades))', "  (map\
    \ (lambda (gpa)\n         (cond ((>= gpa 4.0) 'A+)\n               ((>= gpa 3.7)\
    \ 'A)\n               ((>= gpa 3.3) 'A-)\n               ((>= gpa 3.0) 'B+)\n\
    \               ((>= gpa 2.7) 'B)\n               ((>= gpa 2.3) 'B-)\n       \
    \        ((>= gpa 2.0) 'C+)\n               ((>= gpa 1.7) 'C)\n              \
    \ ((>= gpa 1.3) 'C-)\n               ((>= gpa 1.0) 'D+)\n               ((>= gpa\
    \ 0.7) 'D)\n               ((>= gpa 0.0) 'D-)\n               (else 'E)))\n  \
    \     grades))\n", "  (map (lambda (gpa)\n         (cond ((>= gpa 4.0)  'A+)\n\
    \               ((>= gpa 3.7)  'A)\n               ((>= gpa 3.3)  'A-)\n     \
    \          ((>= gpa 3.0)  'B+)\n               ((>= gpa 2.7)  'B)\n          \
    \     ((>= gpa 2.3)  'B-)\n               ((>= gpa 2.0)  'C+)\n              \
    \ ((>= gpa 1.7)  'C)\n               ((>= gpa 1.3)  'C-)\n               ((>=\
    \ gpa 1.0)  'D+)\n               ((>= gpa 0.7)  'D)\n               ((>= gpa 0.0)\
    \  'D-)\n               (else          'E)))\n       grades))\n", "  (cond [(or\
    \ (member 4.0 grades) (member 3.7 grades)) 'A+]\n        [(or (member 3.3 grades)\
    \ (member 3.0 grades)) 'A-]\n        [(or (member 2.7 grades) (member 2.3 grades))\
    \ 'B+]\n        [(or (member 2.0 grades) (member 1.7 grades)) 'B-]\n        [(or\
    \ (member 1.3 grades) (member 1.0 grades)) 'C+]\n        [(or (member 0.7 grades)\
    \ (member 0.0 grades)) 'C-]\n        [(or (member 0.3 grades) (member 0.0 grades))\
    \ 'D+]\n        [(or (member 0.0 grades) (member 0.0 grades)) 'D-]\n        [(or\
    \ (member 0.0 grades) (member 0.0 grades)) 'E]))\n```\n\n```\n#lang racket\n",
  "  (map (lambda (grade)\n         (cond [(< grade 0.0) 'E]\n               [(< grade\
    \ 0.7) 'D-]\n               [(< grade 1.0) 'D+]\n               [(< grade 1.3)\
    \ 'C-]\n               [(< grade 1.7) 'C]\n               [(< grade 2.0) 'C+]\n\
    \               [(< grade 2.3) 'B-]\n               [(< grade 2.7) 'B]\n     \
    \          [(< grade 3.0) 'B+]\n               [(< grade 3.3) 'A-]\n         \
    \      [(< grade 3.7) 'A]\n               [else 'A+]))\n       grades))\n", " \
    \ ;; you have to write your code here\n  )\n", "  (map\n   (lambda (x)\n     (cond\n\
    \       [(>= x 4.0) \"A+\"]\n       [(>= x 3.7) \"A\"]\n       [(>= x 3.3) \"\
    A-\"]\n       [(>= x 3.0) \"B+\"]\n       [(>= x 2.7) \"B\"]\n       [(>= x 2.3)\
    \ \"B-\"]\n       [(>= x 2.0) \"C+\"]\n       [(>= x 1.7) \"C\"]\n       [(>=\
    \ x 1.3) \"C-\"]\n       [(>= x 1.0) \"D+\"]\n       [(>= x 0.7) \"D\"]\n    \
    \   [(>= x 0.0) \"D-\"]\n       [else \"E\"]))\n   grades))\n", "  (map (lambda\
    \ (x)\n         (cond [(< x 1.0) \"E\"]\n               [(< x 1.3) \"D-\"]\n \
    \              [(< x 1.7) \"D\"]\n               [(< x 2.0) \"D+\"]\n        \
    \       [(< x 2.3) \"C-\"]\n               [(< x 2.7) \"C\"]\n               [(<\
    \ x 3.0) \"C+\"]\n               [(< x 3.3) \"B-\"]\n               [(< x 3.7)\
    \ \"B\"]\n               [(< x 4.0) \"B+\"]\n               [(>= x 4.0) \"A+\"\
    ]))\n       grades))\n", "  (map (lambda (grade)\n         (cond [(>= grade 4.0)\
    \ \"A+\"]\n               [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3)\
    \ \"A-\"]\n               [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7)\
    \ \"B\"]\n               [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0)\
    \ \"C+\"]\n               [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3)\
    \ \"C-\"]\n               [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7)\
    \ \"D\"]\n               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n\
    \       grades))\n", "  (for/list ([i grades])\n    (cond [(>= i 4.0) \"A+\"]\n\
    \          [(>= i 3.7) \"A\"]\n          [(>= i 3.3) \"A-\"]\n          [(>= i\
    \ 3.0) \"B+\"]\n          [(>= i 2.7) \"B\"]\n          [(>= i 2.3) \"B-\"]\n\
    \          [(>= i 2.0) \"C+\"]\n          [(>= i 1.7) \"C\"]\n          [(>= i\
    \ 1.3) \"C-\"]\n          [(>= i 1.0) \"D+\"]\n          [(>= i 0.7) \"D\"]\n\
    \          [(>= i 0.0) \"D-\"]\n          [else \"E\"])))\n", "  (map (lambda\
    \ (n)\n         (cond\n           ((>= n 4.0) 'A+)\n           ((>= n 3.7) 'A)\n\
    \           ((>= n 3.3) 'A-)\n           ((>= n 3.0) 'B+)\n           ((>= n 2.7)\
    \ 'B)\n           ((>= n 2.3) 'B-)\n           ((>= n 2.0) 'C+)\n           ((>=\
    \ n 1.7) 'C)\n           ((>= n 1.3) 'C-)\n           ((>= n 1.0) 'D+)\n     \
    \      ((>= n 0.7) 'D)\n           ((>= n 0.0) 'D-)\n           (else 'E)))\n\
    \       grades))\n", "  (for/list ([grade grades])\n    (cond [(>= grade 4.0)\
    \ \"A+\"]\n          [(>= grade 3.7) \"A\"]\n          [(>= grade 3.3) \"A-\"\
    ]\n          [(>= grade 3.0) \"B+\"]\n          [(>= grade 2.7) \"B\"]\n     \
    \     [(>= grade 2.3) \"B-\"]\n          [(>= grade 2.0) \"C+\"]\n          [(>=\
    \ grade 1.7) \"C\"]\n          [(>= grade 1.3) \"C-\"]\n          [(>= grade 1.0)\
    \ \"D+\"]\n          [(>= grade 0.7) \"D\"]\n          [(>= grade 0.0) \"D-\"\
    ]\n          [else \"E\"])))\n", "  (map (lambda (x) (if (and (>= x 4.0) (< x\
    \ 5.0)) \"A+\"\n                     (if (and (>= x 3.7) (< x 4.0)) \"A\"\n  \
    \                       (if (and (>= x 3.3) (< x 3.7)) \"A-\"\n              \
    \               (if (and (>= x 3.0) (< x 3.3)) \"B+\"\n                      \
    \           (if (and (>= x 2.7) (< x 3.0)) \"B\"\n                           \
    \          (if (and (>= x 2.3) (< x 2.7)) \"B-\"\n                           \
    \              (if (and (>= x 2.0) (< x 2.3)) \"C+\"\n                       \
    \                      (if (and (>= x 1.7) (< x 2.0)) \"C\"\n                \
    \                                 (if (and (>= x 1.3) (< x 1.7)) \"C-\"\n    \
    \                                                 (if (and (>= x 1.0) (< x 1.3))\
    \ \"D+\"\n                                                         (if (and (>=\
    \ x 0.7) (< x 1.0)) \"D\"\n                                                  \
    \           (if (and (>= x 0.0) (< x 0.7)) \"D-\"\n                          \
    \                                       (if (and (>= x 0.0) (< x 0.0)) \"E\")))))))))))))))\
    \ grades))\n", "  (cond\n    [(empty? grades) empty]\n    [else\n     (cons\n\
    \      (cond\n        [(>= (first grades) 4.0) 'A+]\n        [(>= (first grades)\
    \ 3.7) 'A]\n        [(>= (first grades) 3.3) 'A-]\n        [(>= (first grades)\
    \ 3.0) 'B+]\n        [(>= (first grades) 2.7) 'B]\n        [(>= (first grades)\
    \ 2.3) 'B-]\n        [(>= (first grades) 2.0) 'C+]\n        [(>= (first grades)\
    \ 1.7) 'C]\n        [(>= (first grades) 1.3) 'C-]\n        [(>= (first grades)\
    \ 1.0) 'D+]\n        [(>= (first grades) 0.7) 'D]\n        [(>= (first grades)\
    \ 0.0) 'D-]\n        [else 'E])\n      (numerical_letter_grade (rest grades)))]))\n",
  "  (cond\n    [(null? grades) '()]\n    [(>= (car grades) 4.0) (cons \"A+\" (numerical_letter_grade\
    \ (cdr grades)))]\n    [(>= (car grades) 3.7) (cons \"A\" (numerical_letter_grade\
    \ (cdr grades)))]\n    [(>= (car grades) 3.3) (cons \"A-\" (numerical_letter_grade\
    \ (cdr grades)))]\n    [(>= (car grades) 3.0) (cons \"B+\" (numerical_letter_grade\
    \ (cdr grades)))]\n    [(>= (car grades) 2.7) (cons \"B\" (numerical_letter_grade\
    \ (cdr grades)))]\n    [(>= (car grades) 2.3) (cons \"B-\" (numerical_letter_grade\
    \ (cdr grades)))]\n    [(>= (car grades) 2.0) (cons \"C+\" (numerical_letter_grade\
    \ (cdr grades)))]\n    [(>= (car grades) 1.7) (cons \"C\" (numerical_letter_grade\
    \ (cdr grades)))]\n    [(>= (car grades) 1.3) (cons \"C-\" (numerical_letter_grade\
    \ (cdr grades)))]\n    [(>= (car grades) 1.0) (cons \"D+\" (numerical_letter_grade\
    \ (cdr grades)))]\n    [(>= (car grades) 0.7) (cons \"D\" (numerical_letter_grade\
    \ (cdr grades)))]\n    [(>= (car grades) 0.0) (cons \"D-\" (numerical_letter_grade\
    \ (cdr grades)))]\n    [else (cons \"E\" (numerical_letter_grade (cdr grades)))]))\n",
  "  (map\n   (lambda (x)\n     (cond\n       [(>= x 4.0) \"A+\"]\n       [(>= x 3.7)\
    \ \"A\"]\n       [(>= x 3.3) \"A-\"]\n       [(>= x 3.0) \"B+\"]\n       [(>=\
    \ x 2.7) \"B\"]\n       [(>= x 2.3) \"B-\"]\n       [(>= x 2.0) \"C+\"]\n    \
    \   [(>= x 1.7) \"C\"]\n       [(>= x 1.3) \"C-\"]\n       [(>= x 1.0) \"D+\"\
    ]\n       [(>= x 0.7) \"D\"]\n       [(>= x 0.0) \"D-\"]\n       [else \"E\"]))\n\
    \   grades))\n", "  (for/list ([g grades])\n    (if (>= g 4.0)\n        \"A+\"\
    \n        (if (>= g 3.7)\n            \"A\"\n            (if (>= g 3.3)\n    \
    \            \"A-\"\n                (if (>= g 3.0)\n                    \"B+\"\
    \n                    (if (>= g 2.7)\n                        \"B\"\n        \
    \                (if (>= g 2.3)\n                            \"B-\"\n        \
    \                    (if (>= g 2.0)\n                                \"C+\"\n\
    \                                (if (>= g 1.7)\n                            \
    \        \"C\"\n                                    (if (>= g 1.3)\n         \
    \                               \"C-\"\n                                     \
    \   (if (>= g 1.0)\n                                            \"D+\"\n     \
    \                                       (if (>= g 0.7)\n                     \
    \                           \"D\"\n                                          \
    \      (if (>= g 0.0)\n                                                    \"\
    D-\"\n                                                    \"E\")))))))))))))))\n",
  "\t(map (lambda (x)\n\t\t(cond\n\t\t\t[(>= x 4.0) \n\t\t\t\t\"A+\"]\n\t\t\t[(>=\
    \ x 3.7) \n\t\t\t\t\"A\"]\n\t\t\t[(>= x 3.3) \n\t\t\t\t\"A-\"]\n\t\t\t[(>= x 3.0)\
    \ \n\t\t\t\t\"B+\"]\n\t\t\t[(>= x 2.7) \n\t\t\t\t\"B\"]\n\t\t\t[(>= x 2.3) \n\t\
    \t\t\t\"B-\"]\n\t\t\t[(>= x 2.0) \n\t\t\t\t\"C+\"]\n\t\t\t[(>= x 1.7) \n\t\t\t\
    \t\"C\"]\n\t\t\t[(>= x 1.3) \n\t\t\t\t\"C-\"]\n\t\t\t[(>= x 1.0) \n\t\t\t\t\"\
    D+\"]\n\t\t\t[(>= x 0.7) \n\t\t\t\t\"D\"]\n\t\t\t[(>= x 0.0) \n\t\t\t\t\"D-\"\
    ]\n\t\t\t[(>= x 0.0) \n\t\t\t\t\"E\"]))\n\t\tgrades))", "    (if (null? grades)\
    \ \n    '()\n    (cons (numerical_letter_grade-helper (car grades))\n        \
    \  (numerical_letter_grade (cdr grades)))))\n", "  (for/list ([grade grades])\n\
    \            (cond\n              [(>= grade 4.0) \"A+\"]\n              [(>=\
    \ grade 3.7) \"A\"]\n              [(>= grade 3.3) \"A-\"]\n              [(>=\
    \ grade 3.0) \"B+\"]\n              [(>= grade 2.7) \"B\"]\n              [(>=\
    \ grade 2.3) \"B-\"]\n              [(>= grade 2.0) \"C+\"]\n              [(>=\
    \ grade 1.7) \"C\"]\n              [(>= grade 1.3) \"C-\"]\n              [(>=\
    \ grade 1.0) \"D+\"]\n              [(>= grade 0.7) \"D\"]\n              [(>=\
    \ grade 0.0) \"D-\"]\n              [else \"E\"])))\n", "  (map (lambda (grade)\n\
    \t (cond\n\t  ((>= grade 4.0) 'A+)\n\t  ((>= grade 3.7) 'A)\n\t  ((>= grade 3.3)\
    \ 'A-)\n\t  ((>= grade 3.0) 'B+)\n\t  ((>= grade 2.7) 'B)\n\t  ((>= grade 2.3)\
    \ 'B-)\n\t  ((>= grade 2.0) 'C+)\n\t  ((>= grade 1.7) 'C)\n\t  ((>= grade 1.3)\
    \ 'C-)\n\t  ((>= grade 1.0) 'D+)\n\t  ((>= grade 0.7) 'D)\n\t  ((>= grade 0.0)\
    \ 'D-)\n\t  (else 'E)))\n       grades))\n", "  (map (lambda (gpa)\n         (cond\
    \ ((>= gpa 4.0) \"A+\")\n               ((>= gpa 3.7) \"A\")\n               ((>=\
    \ gpa 3.3) \"A-\")\n               ((>= gpa 3.0) \"B+\")\n               ((>=\
    \ gpa 2.7) \"B\")\n               ((>= gpa 2.3) \"B-\")\n               ((>= gpa\
    \ 2.0) \"C+\")\n               ((>= gpa 1.7) \"C\")\n               ((>= gpa 1.3)\
    \ \"C-\")\n               ((>= gpa 1.0) \"D+\")\n               ((>= gpa 0.7)\
    \ \"D\")\n               ((>= gpa 0.0) \"D-\")\n               (else \"E\")))\n\
    \       grades))\n", "  (map (lambda (gpas) (cond\n                       [(>=\
    \ gpas 4.0) 'A+]\n                       [(>= gpas 3.7) 'A]\n                \
    \       [(>= gpas 3.3) 'A-]\n                       [(>= gpas 3.0) 'B+]\n    \
    \                   [(>= gpas 2.7) 'B]\n                       [(>= gpas 2.3)\
    \ 'B-]\n                       [(>= gpas 2.0) 'C+]\n                       [(>=\
    \ gpas 1.7) 'C]\n                       [(>= gpas 1.3) 'C-]\n                \
    \       [(>= gpas 1.0) 'D+]\n                       [(>= gpas 0.7) 'D]\n     \
    \                  [(>= gpas 0.0) 'D-]\n                       [else 'E])) grades))\n",
  "  (map (lambda (grade)\n    (cond\n      ((>= grade 4.0) 'A+)\n      ((>= grade\
    \ 3.7) 'A)\n      ((>= grade 3.3) 'A-)\n      ((>= grade 3.0) 'B+)\n      ((>=\
    \ grade 2.7) 'B)\n      ((>= grade 2.3) 'B-)\n      ((>= grade 2.0) 'C+)\n   \
    \   ((>= grade 1.7) 'C)\n      ((>= grade 1.3) 'C-)\n      ((>= grade 1.0) 'D+)\n\
    \      ((>= grade 0.7) 'D)\n      ((>= grade 0.0) 'D-)\n      (else 'E)))\n  \
    \  grades))\n", "  (map (lambda (gpa)\n         (cond\n           [(<= gpa 4.0)\n\
    \            (cond\n              [(>= gpa 3.7) (cond [(>= gpa 3.3) \"A-\"] [\"\
    A\"])]\n              [(>= gpa 3.0) (cond [(>= gpa 2.7) \"B-\"] [\"B+\"])]\n \
    \             [(>= gpa 2.0) (cond [(>= gpa 1.7) \"C-\"] [\"C+\"])]\n         \
    \     [(>= gpa 1.0) (cond [(>= gpa 0.7) \"D-\"] [\"D+\"])]\n              [else\
    \ \"D\"])]\n           [else \"E\"]))\n        grades))", "  (map (lambda (grade)\n\
    \         (cond\n           [(>= grade 4.0) \"A+\"]\n           [(>= grade 3.7)\
    \ \"A\"]\n           [(>= grade 3.3) \"A-\"]\n           [(>= grade 3.0) \"B+\"\
    ]\n           [(>= grade 2.7) \"B\"]\n           [(>= grade 2.3) \"B-\"]\n   \
    \        [(>= grade 2.0) \"C+\"]\n           [(>= grade 1.7) \"C\"]\n        \
    \   [(>= grade 1.3) \"C-\"]\n           [(>= grade 1.0) \"D+\"]\n           [(>=\
    \ grade 0.7) \"D\"]\n           [(>= grade 0.0) \"D-\"]\n           [else \"E\"\
    ]))\n        grades))", "  (map (lambda (x)\n         (cond\n           [(>= x\
    \ 4.0) 'A+]\n           [(>= x 3.7) 'A]\n           [(>= x 3.3) 'A-]\n       \
    \    [(>= x 3.0) 'B+]\n           [(>= x 2.7) 'B]\n           [(>= x 2.3) 'B-]\n\
    \           [(>= x 2.0) 'C+]\n           [(>= x 1.7) 'C]\n           [(>= x 1.3)\
    \ 'C-]\n           [(>= x 1.0) 'D+]\n           [(>= x 0.7) 'D]\n           [(>=\
    \ x 0.0) 'D-]\n           [else 'E]))\n       grades))\n", "  (map (lambda (x)\n\
    \         (cond [(>= x 4.0) 'A+]\n               [(>= x 3.7) 'A]\n           \
    \    [(>= x 3.3) 'A-]\n               [(>= x 3.0) 'B+]\n               [(>= x\
    \ 2.7) 'B]\n               [(>= x 2.3) 'B-]\n               [(>= x 2.0) 'C+]\n\
    \               [(>= x 1.7) 'C]\n               [(>= x 1.3) 'C-]\n           \
    \    [(>= x 1.0) 'D+]\n               [(>= x 0.7) 'D]\n               [(>= x 0.0)\
    \ 'D-]\n               [else 'E]))\n       grades))", "  (if (empty? grades) '()\n\
    \      (cond ((>= (first grades) 4.0) (cons 'A+ (numerical_letter_grade (rest\
    \ grades))))\n            ((>= (first grades) 3.7) (cons 'A (numerical_letter_grade\
    \ (rest grades))))\n            ((>= (first grades) 3.3) (cons 'A- (numerical_letter_grade\
    \ (rest grades))))\n            ((>= (first grades) 3.0) (cons 'B+ (numerical_letter_grade\
    \ (rest grades))))\n            ((>= (first grades) 2.7) (cons 'B (numerical_letter_grade\
    \ (rest grades))))\n            ((>= (first grades) 2.3) (cons 'B- (numerical_letter_grade\
    \ (rest grades))))\n            ((>= (first grades) 2.0) (cons 'C+ (numerical_letter_grade\
    \ (rest grades))))\n            ((>= (first grades) 1.7) (cons 'C (numerical_letter_grade\
    \ (rest grades))))\n            ((>= (first grades) 1.3) (cons 'C- (numerical_letter_grade\
    \ (rest grades))))\n            ((>= (first grades) 1.0) (cons 'D+ (numerical_letter_grade\
    \ (rest grades))))\n            ((>= (first grades) 0.7) (cons 'D (numerical_letter_grade\
    \ (rest grades))))\n            ((>= (first grades) 0.0) (cons 'D- (numerical_letter_grade\
    \ (rest grades))))\n            (else (cons 'E (numerical_letter_grade (rest grades)))))))\n",
  "  (map (lambda (gpa)\n         (cond\n           [(>= gpa 4.0) \"A+\"]\n      \
    \     [(>= gpa 3.7) \"A\"]\n           [(>= gpa 3.3) \"A-\"]\n           [(>=\
    \ gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"B\"]\n           [(>= gpa 2.3)\
    \ \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n           [(>= gpa 1.7) \"C\"]\n\
    \           [(>= gpa 1.3) \"C-\"]\n           [(>= gpa 1.0) \"D+\"]\n        \
    \   [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0) \"D-\"]\n           [else \"\
    E\"]))\n       grades))\n", "  (map (lambda (x) (cond\n                    [(>=\
    \ x 4.0) 'A+]\n                    [(>= x 3.7) 'A]\n                    [(>= x\
    \ 3.3) 'A-]\n                    [(>= x 3.0) 'B+]\n                    [(>= x\
    \ 2.7) 'B]\n                    [(>= x 2.3) 'B-]\n                    [(>= x 2.0)\
    \ 'C+]\n                    [(>= x 1.7) 'C]\n                    [(>= x 1.3) 'C-]\n\
    \                    [(>= x 1.0) 'D+]\n                    [(>= x 0.7) 'D]\n \
    \                   [(>= x 0.0) 'D-]\n                    [else 'E])) grades))\n",
  "  (cond [(empty? grades) empty]\n        [else (cons (numerical_to_letter_grade\
    \ (first grades))\n                    (numerical_letter_grade (rest grades)))]))\n",
  "  (list-of-grade-number-2-letter grades))\n", "  (cond [(empty? grades) empty]\n\
    \        [else\n         (cons (numerical_to_letter (first grades))\n        \
    \       (numerical_letter_grade (rest grades)))]))\n", "  (map (lambda (x)\n\t\
    \ (cond [(>= x 4.0) 'A+]\n\t       [(>= x 3.7) 'A]\n\t       [(>= x 3.3) 'A-]\n\
    \t       [(>= x 3.0) 'B+]\n\t       [(>= x 2.7) 'B]\n\t       [(>= x 2.3) 'B-]\n\
    \t       [(>= x 2.0) 'C+]\n\t       [(>= x 1.7) 'C]\n\t       [(>= x 1.3) 'C-]\n\
    \t       [(>= x 1.0) 'D+]\n\t       [(>= x 0.7) 'D]\n\t       [(>= x 0.0) 'D-]\n\
    \t       [else 'E]))\n       grades))\n", "  (map (lambda (gpa)\n         (cond\
    \ [(>= gpa 4.0) 'A+]\n               [(>= gpa 3.7) 'A]\n               [(>= gpa\
    \ 3.3) 'A-]\n               [(>= gpa 3.0) 'B+]\n               [(>= gpa 2.7) 'B]\n\
    \               [(>= gpa 2.3) 'B-]\n               [(>= gpa 2.0) 'C+]\n      \
    \         [(>= gpa 1.7) 'C]\n               [(>= gpa 1.3) 'C-]\n             \
    \  [(>= gpa 1.0) 'D+]\n               [(>= gpa 0.7) 'D]\n               [(>= gpa\
    \ 0.0) 'D-]\n               [else 'E]))\n       grades))", "  (map (lambda (x)\
    \ (cond [(>= x 4.0) 'A+]\n                         [(>= x 3.7) 'A]\n         \
    \                [(>= x 3.3) 'A-]\n                         [(>= x 3.0) 'B+]\n\
    \                         [(>= x 2.7) 'B]\n                         [(>= x 2.3)\
    \ 'B-]\n                         [(>= x 2.0) 'C+]\n                         [(>=\
    \ x 1.7) 'C]\n                         [(>= x 1.3) 'C-]\n                    \
    \     [(>= x 1.0) 'D+]\n                         [(>= x 0.7) 'D]\n           \
    \              [(>= x 0.0) 'D-]\n                         [(>= x 0.0) 'E]\n  \
    \                       )) grades))\n", "  ;; your code goes here)\n```\n\n```",
  "  (map (lambda (gpa) (letter_grade gpa)) grades))\n", "  ;add your code here\n\
    \  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n\
    \           [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n     \
    \      [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n          \
    \ [(>= grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>=\
    \ grade 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade\
    \ 1.0) \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n", "  (map (lambda (x)\n\
    \         (cond\n           [(>= x 4.0) 'A+]\n           [(>= x 3.7) 'A]\n   \
    \        [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n           [(>= x 2.7)\
    \ 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n           [(>=\
    \ x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0) 'D+]\n     \
    \      [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else 'E]))\n\
    \       grades))\n", "  ; your code here\n  )\n", "  (cond \n    [(empty? grades)\
    \ empty]\n    [(<= 3.7 (first grades)) (cons \"A+\" (numerical_letter_grade (rest\
    \ grades)))]\n    [(<= 3.3 (first grades)) (cons \"A\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= 3.0 (first grades)) (cons \"A-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= 2.7 (first grades)) (cons \"B+\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= 2.3 (first grades)) (cons \"B\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= 2.0 (first grades)) (cons \"B-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= 1.7 (first grades)) (cons \"C+\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= 1.3 (first grades)) (cons \"C\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= 1.0 (first grades)) (cons \"C-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= 0.7 (first grades)) (cons \"D+\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(<= 0.0 (first grades)) (cons \"D\" (numerical_letter_grade\
    \ (rest grades)))]\n    [else (cons \"E\" (numerical_letter_grade (rest grades)))]))\n",
  "    (map (lambda (x) (cond\n                    [(>= x 4.0) \"A+\"]\n         \
    \           [(>= x 3.7) \"A\"]\n                    [(>= x 3.3) \"A-\"]\n    \
    \                [(>= x 3.0) \"B+\"]\n                    [(>= x 2.7) \"B\"]\n\
    \                    [(>= x 2.3) \"B-\"]\n                    [(>= x 2.0) \"C+\"\
    ]\n                    [(>= x 1.7) \"C\"]\n                    [(>= x 1.3) \"\
    C-\"]\n                    [(>= x 1.0) \"D+\"]\n                    [(>= x 0.7)\
    \ \"D\"]\n                    [(>= x 0.0) \"D-\"]\n                    [(>= x\
    \ 0.0) \"E\"]\n                    )\n            )\n        grades\n    )\n)\n",
  "  ;;Add your code here\n  )", "  (map (lambda (gpa)\n         (cond\n         \
    \  [(>= gpa 4.0) \"A+\"]\n           [(>= gpa 3.7) \"A\"]\n           [(>= gpa\
    \ 3.3) \"A-\"]\n           [(>= gpa 3.0) \"B+\"]\n           [(>= gpa 2.7) \"\
    B\"]\n           [(>= gpa 2.3) \"B-\"]\n           [(>= gpa 2.0) \"C+\"]\n   \
    \        [(>= gpa 1.7) \"C\"]\n           [(>= gpa 1.3) \"C-\"]\n           [(>=\
    \ gpa 1.0) \"D+\"]\n           [(>= gpa 0.7) \"D\"]\n           [(>= gpa 0.0)\
    \ \"D-\"]\n           [else \"E\"]))\n       grades))\n", "  (cond\n    [(null?\
    \ grades) '()]\n    [(<= 4.0 (car grades)) (cons 'A+ (numerical_letter_grade (cdr\
    \ grades)))]\n    [(<= 3.7 (car grades)) (cons 'A (numerical_letter_grade (cdr\
    \ grades)))]\n    [(<= 3.3 (car grades)) (cons 'A- (numerical_letter_grade (cdr\
    \ grades)))]\n    [(<= 3.0 (car grades)) (cons 'B+ (numerical_letter_grade (cdr\
    \ grades)))]\n    [(<= 2.7 (car grades)) (cons 'B (numerical_letter_grade (cdr\
    \ grades)))]\n    [(<= 2.3 (car grades)) (cons 'B- (numerical_letter_grade (cdr\
    \ grades)))]\n    [(<= 2.0 (car grades)) (cons 'C+ (numerical_letter_grade (cdr\
    \ grades)))]\n    [(<= 1.7 (car grades)) (cons 'C (numerical_letter_grade (cdr\
    \ grades)))]\n    [(<= 1.3 (car grades)) (cons 'C- (numerical_letter_grade (cdr\
    \ grades)))]\n    [(<= 1.0 (car grades)) (cons 'D+ (numerical_letter_grade (cdr\
    \ grades)))]\n    [(<= 0.7 (car grades)) (cons 'D (numerical_letter_grade (cdr\
    \ grades)))]\n    [(<= 0.0 (car grades)) (cons 'D- (numerical_letter_grade (cdr\
    \ grades)))]\n    [else (cons 'E (numerical_letter_grade (cdr grades)))]))", " \
    \ (map (lambda (grade)\n         (cond ((>= grade 4.0) 'A+)\n               ((>=\
    \ grade 3.7) 'A)\n               ((>= grade 3.3) 'A-)\n               ((>= grade\
    \ 3.0) 'B+)\n               ((>= grade 2.7) 'B)\n               ((>= grade 2.3)\
    \ 'B-)\n               ((>= grade 2.0) 'C+)\n               ((>= grade 1.7) 'C)\n\
    \               ((>= grade 1.3) 'C-)\n               ((>= grade 1.0) 'D+)\n  \
    \             ((>= grade 0.7) 'D)\n               ((>= grade 0.0) 'D-)\n     \
    \          (else 'E)))\n       grades))\n", "  (map (lambda (grade)\n        \
    \ (cond\n           [(>= grade 4.0) \"A+\"]\n           [(>= grade 3.7) \"A\"\
    ]\n           [(>= grade 3.3) \"A-\"]\n           [(>= grade 3.0) \"B+\"]\n  \
    \         [(>= grade 2.7) \"B\"]\n           [(>= grade 2.3) \"B-\"]\n       \
    \    [(>= grade 2.0) \"C+\"]\n           [(>= grade 1.7) \"C\"]\n           [(>=\
    \ grade 1.3) \"C-\"]\n           [(>= grade 1.0) \"D+\"]\n           [(>= grade\
    \ 0.7) \"D\"]\n           [(>= grade 0.0) \"D-\"]\n           [else \"E\"]))\n\
    \       grades))", "  (cond [(empty? grades) empty]\n        [else\n         (cons\
    \ (numerical_to_letter_grade (first grades))\n               (numerical_letter_grade\
    \ (rest grades)))]))\n", "  (cond\n    ((&gt; grades 4.0) \"A+\")\n    ((&gt;\
    \ grades 3.7) \"A\")\n    ((&gt; grades 3.3) \"A-\")\n    ((&gt; grades 3.0) \"\
    B+\")\n    ((&gt; grades 2.7) \"B\")\n    ((&gt; grades 2.3) \"B-\")\n    ((&gt;\
    \ grades 2.0) \"C+\")\n    ((&gt; grades 1.7) \"C\")\n    ((&gt; grades 1.3) \"\
    C-\")\n    ((&gt; grades 1.0) \"D+\")\n    ((&gt; grades 0.7) \"D\")\n    ((&gt;\
    \ grades 0.0) \"D-\")\n    (else \"E\")))\n", "  (cond [(empty? grades) empty]\n\
    \        [else (cond [(> (first grades) 3.7) (cons \"A+\" (numerical_letter_grade\
    \ (rest grades)))]\n                   [(> (first grades) 3.3) (cons \"A\" (numerical_letter_grade\
    \ (rest grades)))]\n                   [(> (first grades) 3.0) (cons \"A-\" (numerical_letter_grade\
    \ (rest grades)))]\n                   [(> (first grades) 2.7) (cons \"B+\" (numerical_letter_grade\
    \ (rest grades)))]\n                   [(> (first grades) 2.3) (cons \"B\" (numerical_letter_grade\
    \ (rest grades)))]\n                   [(> (first grades) 2.0) (cons \"B-\" (numerical_letter_grade\
    \ (rest grades)))]\n                   [(> (first grades) 1.7) (cons \"C+\" (numerical_letter_grade\
    \ (rest grades)))]\n                   [(> (first grades) 1.3) (cons \"C\" (numerical_letter_grade\
    \ (rest grades)))]\n                   [(> (first grades) 1.0) (cons \"C-\" (numerical_letter_grade\
    \ (rest grades)))]\n                   [(> (first grades) 0.7) (cons \"D+\" (numerical_letter_grade\
    \ (rest grades)))]\n                   [(> (first grades) 0.0) (cons \"D\" (numerical_letter_grade\
    \ (rest grades)))]\n                   [(> (first grades) -1.0) (cons \"D-\" (numerical_letter_grade\
    \ (rest grades)))]\n                   [else (cons \"E\" (numerical_letter_grade\
    \ (rest grades)))]\n                   )\n           ]\n        )\n  )", "  (if\
    \ (null? grades)\n      null\n      (cons (if (>= (car grades) 4.0)\n        \
    \          \"A+\"\n                  (if (>= (car grades) 3.7)\n             \
    \         \"A\"\n                      (if (>= (car grades) 3.3)\n           \
    \               \"A-\"\n                          (if (>= (car grades) 3.0)\n\
    \                              \"B+\"\n                              (if (>= (car\
    \ grades) 2.7)\n                                  \"B\"\n                    \
    \              (if (>= (car grades) 2.3)\n                                   \
    \   \"B-\"\n                                      (if (>= (car grades) 2.0)\n\
    \                                          \"C+\"\n                          \
    \                (if (>= (car grades) 1.7)\n                                 \
    \             \"C\"\n                                              (if (>= (car\
    \ grades) 1.3)\n                                                  \"C-\"\n   \
    \                                               (if (>= (car grades) 1.0)\n  \
    \                                                    \"D+\"\n                \
    \                                      (if (>= (car grades) 0.7)\n           \
    \                                               \"D\"\n                      \
    \                                    (if (>= (car grades) 0.0)\n             \
    \                                                 \"D-\"\n                   \
    \                                           \"E\")))))))))))))\n             \
    \ (numerical_letter_grade (cdr grades)))))", "  (map (lambda (gpa)\n         (cond\n\
    \           ((>= gpa 4.0) 'A+)\n           ((>= gpa 3.7) 'A)\n           ((>=\
    \ gpa 3.3) 'A-)\n           ((>= gpa 3.0) 'B+)\n           ((>= gpa 2.7) 'B)\n\
    \           ((>= gpa 2.3) 'B-)\n           ((>= gpa 2.0) 'C+)\n           ((>=\
    \ gpa 1.7) 'C)\n           ((>= gpa 1.3) 'C-)\n           ((>= gpa 1.0) 'D+)\n\
    \           ((>= gpa 0.7) 'D)\n           ((>= gpa 0.0) 'D-)\n           (else\
    \ 'E)))\n       grades))\n", "  (map (lambda (gpa)\n\t (cond\n\t  [(>= gpa 4.0)\
    \ \"A+\"]\n\t  [(>= gpa 3.7) \"A\"]\n\t  [(>= gpa 3.3) \"A-\"]\n\t  [(>= gpa 3.0)\
    \ \"B+\"]\n\t  [(>= gpa 2.7) \"B\"]\n\t  [(>= gpa 2.3) \"B-\"]\n\t  [(>= gpa 2.0)\
    \ \"C+\"]\n\t  [(>= gpa 1.7) \"C\"]\n\t  [(>= gpa 1.3) \"C-\"]\n\t  [(>= gpa 1.0)\
    \ \"D+\"]\n\t  [(>= gpa 0.7) \"D\"]\n\t  [(>= gpa 0.0) \"D-\"]\n\t  [else \"E\"\
    ]))\n       grades))\n", "  (cond \n    [(empty? grades) empty]\n    [(symbol=?\
    \ (first grades) 4.0) (cons \"A+\" (numerical_letter_grade (rest grades)))]\n\
    \    [(symbol=? (first grades) 3.7) (cons \"A\" (numerical_letter_grade (rest\
    \ grades)))]\n    [(symbol=? (first grades) 3.3) (cons \"A-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(symbol=? (first grades) 3.0) (cons \"B+\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(symbol=? (first grades) 2.7) (cons \"B\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(symbol=? (first grades) 2.3) (cons \"B-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(symbol=? (first grades) 2.0) (cons \"C+\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(symbol=? (first grades) 1.7) (cons \"C\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(symbol=? (first grades) 1.3) (cons \"C-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(symbol=? (first grades) 1.0) (cons \"D+\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(symbol=? (first grades) 0.7) (cons \"D\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(symbol=? (first grades) 0.0) (cons \"D-\" (numerical_letter_grade\
    \ (rest grades)))]\n    [(symbol=? (first grades) (exact->inexact 0)) (cons \"\
    E\" (numerical_letter_grade (rest grades)))]\n    [else (numerical_letter_grade\
    \ (rest grades))]))\n", "  (map (lambda (x) (if (>= x 4.0) \"A+\"\n          \
    \            (if (>= x 3.7) \"A\"\n                          (if (>= x 3.3) \"\
    A-\"\n                              (if (>= x 3.0) \"B+\"\n                  \
    \                (if (>= x 2.7) \"B\"\n                                      (if\
    \ (>= x 2.3) \"B-\"\n                                          (if (>= x 2.0)\
    \ \"C+\"\n                                              (if (>= x 1.7) \"C\"\n\
    \                                                  (if (>= x 1.3) \"C-\"\n   \
    \                                                   (if (>= x 1.0) \"D+\"\n  \
    \                                                        (if (>= x 0.7) \"D\"\n\
    \                                                              (if (>= x 0.0)\
    \ \"D-\"\n                                                                  \"\
    E\"))))))))))))\n              grades))", "  (cond\n   ((empty? grades) empty)\n\
    \   ((> (first grades) 3.7) (cons \"A+\" (numerical_letter_grade (rest grades))))\n\
    \   ((> (first grades) 3.3) (cons \"A\" (numerical_letter_grade (rest grades))))\n\
    \   ((> (first grades) 3.0) (cons \"A-\" (numerical_letter_grade (rest grades))))\n\
    \   ((> (first grades) 2.7) (cons \"B+\" (numerical_letter_grade (rest grades))))\n\
    \   ((> (first grades) 2.3) (cons \"B\" (numerical_letter_grade (rest grades))))\n\
    \   ((> (first grades) 2.0) (cons \"B-\" (numerical_letter_grade (rest grades))))\n\
    \   ((> (first grades) 1.7) (cons \"C+\" (numerical_letter_grade (rest grades))))\n\
    \   ((> (first grades) 1.3) (cons \"C\" (numerical_letter_grade (rest grades))))\n\
    \   ((> (first grades) 1.0) (cons \"C-\" (numerical_letter_grade (rest grades))))\n\
    \   ((> (first grades) 0.7) (cons \"D+\" (numerical_letter_grade (rest grades))))\n\
    \   ((> (first grades) 0.0) (cons \"D\" (numerical_letter_grade (rest grades))))\n\
    \   ((> (first grades) 0.0) (cons \"D-\" (numerical_letter_grade (rest grades))))\n\
    \   (else (cons \"E\" (numerical_letter_grade (rest grades))))))\n", "  (map\n\
    \   (lambda (gpa)\n     (cond\n       [(>= gpa 4.0) 'A+]\n       [(>= gpa 3.7)\
    \ 'A]\n       [(>= gpa 3.3) 'A-]\n       [(>= gpa 3.0) 'B+]\n       [(>= gpa 2.7)\
    \ 'B]\n       [(>= gpa 2.3) 'B-]\n       [(>= gpa 2.0) 'C+]\n       [(>= gpa 1.7)\
    \ 'C]\n       [(>= gpa 1.3) 'C-]\n       [(>= gpa 1.0) 'D+]\n       [(>= gpa 0.7)\
    \ 'D]\n       [(>= gpa 0.0) 'D-]\n       [else 'E]))\n   grades))", "  (cons (list\
    \ 'A+ 'A 'A- 'B+ 'B 'B- 'C+ 'C 'C- 'D+ 'D 'D- 'E)\n        (map (lambda (x)\n\
    \               (cond\n                 [(>= x 4.0) 'A+]\n                 [(>=\
    \ x 3.7) 'A]\n                 [(>= x 3.3) 'A-]\n                 [(>= x 3.0)\
    \ 'B+]\n                 [(>= x 2.7) 'B]\n                 [(>= x 2.3) 'B-]\n\
    \                 [(>= x 2.0) 'C+]\n                 [(>= x 1.7) 'C]\n       \
    \          [(>= x 1.3) 'C-]\n                 [(>= x 1.0) 'D+]\n             \
    \    [(>= x 0.7) 'D]\n                 [(>= x 0.0) 'D-]\n                 [else\
    \ 'E]))\n             grades)))\n", "  (map grade grades))\n", "  (cond ((= (list-ref\
    \ grades 0) 3.0) '(\"A+\"))\n        ((> (list-ref grades 0) 3.7) '(\"A\"))\n\
    \        ((> (list-ref grades 0) 3.3) '(\"A-\"))\n        ((> (list-ref grades\
    \ 0) 3.0) '(\"B+\"))\n        ((> (list-ref grades 0) 2.7) '(\"B\"))\n       \
    \ ((> (list-ref grades 0) 2.3) '(\"B-\"))\n        ((> (list-ref grades 0) 2.0)\
    \ '(\"C+\"))\n        ((> (list-ref grades 0) 1.7) '(\"C\"))\n        ((> (list-ref\
    \ grades 0) 1.3) '(\"C-\"))\n        ((> (list-ref grades 0) 1.0) '(\"D+\"))\n\
    \        ((> (list-ref grades 0) 0.7) '(\"D\"))\n        ((> (list-ref grades\
    \ 0) 0.0) '(\"D-\"))\n        ((= (list-ref grades 0) 0.0) '(\"E\"))))", "  (map\
    \ (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n      \
    \     [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n           [(>=\
    \ grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n           [(>= grade\
    \ 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>= grade 1.7)\
    \ \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade 1.0) \"D+\"\
    ]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0) \"D-\"]\n   \
    \        [else \"E\"]))\n       grades))\n", "  (map (lambda (grade)\n       \
    \  (cond\n           [(>= grade 4.0) \"A+\"]\n           [(>= grade 3.7) \"A\"\
    ]\n           [(>= grade 3.3) \"A-\"]\n           [(>= grade 3.0) \"B+\"]\n  \
    \         [(>= grade 2.7) \"B\"]\n           [(>= grade 2.3) \"B-\"]\n       \
    \    [(>= grade 2.0) \"C+\"]\n           [(>= grade 1.7) \"C\"]\n           [(>=\
    \ grade 1.3) \"C-\"]\n           [(>= grade 1.0) \"D+\"]\n           [(>= grade\
    \ 0.7) \"D\"]\n           [(>= grade 0.0) \"D-\"]\n           [else \"E\"]))\n\
    \       grades))\n", "  (local [(define (process-grade grade)\n             (cond\n\
    \               [(>= grade 4.0) 'A+]\n               [(>= grade 3.7) 'A]\n   \
    \            [(>= grade 3.3) 'A-]\n               [(>= grade 3.0) 'B+]\n     \
    \          [(>= grade 2.7) 'B]\n               [(>= grade 2.3) 'B-]\n        \
    \       [(>= grade 2.0) 'C+]\n               [(>= grade 1.7) 'C]\n           \
    \    [(>= grade 1.3) 'C-]\n               [(>= grade 1.0) 'D+]\n             \
    \  [(>= grade 0.7) 'D]\n               [(>= grade 0.0) 'D-]\n               [else\
    \ 'E]))]\n    (map process-grade grades)))\n", "  (cond\n    [(empty? grades)\
    \ empty]\n    [else\n     (cons\n      (cond\n        [(>= (first grades) 4.0)\
    \ \"A+\"]\n        [(>= (first grades) 3.7) \"A\"]\n        [(>= (first grades)\
    \ 3.3) \"A-\"]\n        [(>= (first grades) 3.0) \"B+\"]\n        [(>= (first\
    \ grades) 2.7) \"B\"]\n        [(>= (first grades) 2.3) \"B-\"]\n        [(>=\
    \ (first grades) 2.0) \"C+\"]\n        [(>= (first grades) 1.7) \"C\"]\n     \
    \   [(>= (first grades) 1.3) \"C-\"]\n        [(>= (first grades) 1.0) \"D+\"\
    ]\n        [(>= (first grades) 0.7) \"D\"]\n        [(>= (first grades) 0.0) \"\
    D-\"]\n        [else \"E\"])\n      (numerical_letter_grade (rest grades))]))\n",
  "  ;; your implementation here\n  )", "  (cond\n    [(empty? grades) empty]\n  \
    \  [else (cons (cond\n                [(>= (first grades) 4.0) \"A+\"]\n     \
    \           [(>= (first grades) 3.7) \"A\"]\n                [(>= (first grades)\
    \ 3.3) \"A-\"]\n                [(>= (first grades) 3.0) \"B+\"]\n           \
    \     [(>= (first grades) 2.7) \"B\"]\n                [(>= (first grades) 2.3)\
    \ \"B-\"]\n                [(>= (first grades) 2.0) \"C+\"]\n                [(>=\
    \ (first grades) 1.7) \"C\"]\n                [(>= (first grades) 1.3) \"C-\"\
    ]\n                [(>= (first grades) 1.0) \"D+\"]\n                [(>= (first\
    \ grades) 0.7) \"D\"]\n                [(>= (first grades) 0.0) \"D-\"]\n    \
    \            [else \"E\"])\n                (numerical_letter_grade (rest grades)))])\n\
    ))", "  (cond \n    [(empty? grades) empty]\n    [(map (lambda (x) (cond \n  \
    \                      [(>= x 4.0) 'A+]\n                        [(>= x 3.7) 'A]\n\
    \                        [(>= x 3.3) 'A-]\n                        [(>= x 3.0)\
    \ 'B+]\n                        [(>= x 2.7) 'B]\n                        [(>=\
    \ x 2.3) 'B-]\n                        [(>= x 2.0) 'C+]\n                    \
    \    [(>= x 1.7) 'C]\n                        [(>= x 1.3) 'C-]\n             \
    \           [(>= x 1.0) 'D+]\n                        [(>= x 0.7) 'D]\n      \
    \                  [(>= x 0.0) 'D-]\n                        [else 'E])) grades)]))",
  "  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n               [(>= gpa\
    \ 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0) 'B+]\n\
    \               [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n       \
    \        [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n              \
    \ [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n               [(>= gpa\
    \ 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n               [else 'E]))\n  \
    \      grades))", "  (cond\n    [(and (&lt;= 3.3 (car grades)) (&lt; (car grades)\
    \ 4.0)) 'A+]\n    [(and (&lt;= 3.0 (car grades)) (&lt; (car grades) 3.7)) 'A]\n\
    \    [(and (&lt;= 2.7 (car grades)) (&lt; (car grades) 3.3)) 'A-]\n    [(and (&lt;=\
    \ 2.3 (car grades)) (&lt; (car grades) 3.0)) 'B+]\n    [(and (&lt;= 2.0 (car grades))\
    \ (&lt; (car grades) 2.7)) 'B]\n    [(and (&lt;= 1.7 (car grades)) (&lt; (car\
    \ grades) 2.3)) 'B-]\n    [(and (&lt;= 1.3 (car grades)) (&lt; (car grades) 2.0))\
    \ 'C+]\n    [(and (&lt;= 1.0 (car grades)) (&lt; (car grades) 1.7)) 'C]\n    [(and\
    \ (&lt;= 0.7 (car grades)) (&lt; (car grades) 1.3)) 'C-]\n    [(and (&lt;= 0.0\
    \ (car grades)) (&lt; (car grades) 1.0)) 'D+]\n    [(and (&lt;= 0.0 (car grades))\
    \ (&lt; (car grades) 0.7)) 'D]\n    [(= 0.0 (car grades)) 'E]))\n</code>\nI am\
    \ getting this error:\n<code>cond: expects a list with length 1, 2, 3, or 5 as\
    \ its first argument; given '(3.5)\n</code>\nI'm not too sure where I am going\
    \ wrong, as it is my first time coding in racket. Could someone help me with this?\
    \ \n\n\nA:\n\nIt looks like your <code>numerical_letter_grade</code> function\
    \ doesn't really work with a list of grades. It's only built to return a grade\
    \ for a single GPA.\nYou could either rewrite your <code>numerical_letter_grade</code>\
    \ function to take a list of grades and return a list of grades, or you could\
    \ implement a <code>map</code>", "  (map (lambda (grade)\n        (cond ((>= grade\
    \ 4.0) \"A+\")\n              ((>= grade 3.7) \"A\")\n              ((>= grade\
    \ 3.3) \"A-\")\n              ((>= grade 3.0) \"B+\")\n              ((>= grade\
    \ 2.7) \"B\")\n              ((>= grade 2.3) \"B-\")\n              ((>= grade\
    \ 2.0) \"C+\")\n              ((>= grade 1.7) \"C\")\n              ((>= grade\
    \ 1.3) \"C-\")\n              ((>= grade 1.0) \"D+\")\n              ((>= grade\
    \ 0.7) \"D\")\n              ((>= grade 0.0) \"D-\")\n              (else \"E\"\
    )))\n      grades))", "  (map (lambda (grade) (cond [(>= grade 4.0) 'A+]\n   \
    \                          [(>= grade 3.7) 'A]\n                             [(>=\
    \ grade 3.3) 'A-]\n                             [(>= grade 3.0) 'B+]\n       \
    \                      [(>= grade 2.7) 'B]\n                             [(>=\
    \ grade 2.3) 'B-]\n                             [(>= grade 2.0) 'C+]\n       \
    \                      [(>= grade 1.7) 'C]\n                             [(>=\
    \ grade 1.3) 'C-]\n                             [(>= grade 1.0) 'D+]\n       \
    \                      [(>= grade 0.7) 'D]\n                             [(>=\
    \ grade 0.0) 'D-]\n                             [else 'E]))\n          grades))\n",
  "  (cond [(>= grades 4.0) \"A+\"]\n        [(>= grades 3.7) \"A\"]\n        [(>=\
    \ grades 3.3) \"A-\"]\n        [(>= grades 3.0) \"B+\"]\n        [(>= grades 2.7)\
    \ \"B\"]\n        [(>= grades 2.3) \"B-\"]\n        [(>= grades 2.0) \"C+\"]\n\
    \        [(>= grades 1.7) \"C\"]\n        [(>= grades 1.3) \"C-\"]\n        [(>=\
    \ grades 1.0) \"D+\"]\n        [(>= grades 0.7) \"D\"]\n        [(>= grades 0.0)\
    \ \"D-\"]\n        [else \"E\"]))\n", "  (map (lambda (x)\n         (cond ((>=\
    \ x 4.0) 'A+)\n               ((>= x 3.7) 'A)\n               ((>= x 3.3) 'A-)\n\
    \               ((>= x 3.0) 'B+)\n               ((>= x 2.7) 'B)\n           \
    \    ((>= x 2.3) 'B-)\n               ((>= x 2.0) 'C+)\n               ((>= x\
    \ 1.7) 'C)\n               ((>= x 1.3) 'C-)\n               ((>= x 1.0) 'D+)\n\
    \               ((>= x 0.7) 'D)\n               ((>= x 0.0) 'D-)\n           \
    \    (else 'E)))\n       grades))\n", "  (map (lambda (x)\n         (cond ((>=\
    \ x 4.0) 'A+)\n               ((>= x 3.7) 'A)\n               ((>= x 3.3) 'A-)\n\
    \               ((>= x 3.0) 'B+)\n               ((>= x 2.7) 'B)\n           \
    \    ((>= x 2.3) 'B-)\n               ((>= x 2.0) 'C+)\n               ((>= x\
    \ 1.7) 'C)\n               ((>= x 1.3) 'C-)\n               ((>= x 1.0) 'D+)\n\
    \               ((>= x 0.7) 'D)\n               ((>= x 0.0) 'D-)\n           \
    \    (else 'E)))\n       grades))\n", "  (map (lambda (n)\n         (cond [(=\
    \ n 4.0) \"A+\"]\n               [(> n 3.7) \"A\"]\n               [(> n 3.3)\
    \ \"A-\"]\n               [(> n 3.0) \"B+\"]\n               [(> n 2.7) \"B\"\
    ]\n               [(> n 2.3) \"B-\"]\n               [(> n 2.0) \"C+\"]\n    \
    \           [(> n 1.7) \"C\"]\n               [(> n 1.3) \"C-\"]\n           \
    \    [(> n 1.0) \"D+\"]\n               [(> n 0.7) \"D\"]\n               [(>\
    \ n 0.0) \"D-\"]\n               [(= n 0.0) \"E\"]))\n        grades))\n", " \
    \   (map (lambda (x)\n           (cond [(>= x 4.0) \"A+\"]\n                 [(>=\
    \ x 3.7) \"A\"]\n                 [(>= x 3.3) \"A-\"]\n                 [(>= x\
    \ 3.0) \"B+\"]\n                 [(>= x 2.7) \"B\"]\n                 [(>= x 2.3)\
    \ \"B-\"]\n                 [(>= x 2.0) \"C+\"]\n                 [(>= x 1.7)\
    \ \"C\"]\n                 [(>= x 1.3) \"C-\"]\n                 [(>= x 1.0) \"\
    D+\"]\n                 [(>= x 0.7) \"D\"]\n                 [(>= x 0.0) \"D-\"\
    ]\n                 [else \"E\"]\n         )) grades)\n)", "  ;;; your code here\n\
    \  )\n", "  (map (lambda (n)\n         (cond [(>= n 4.0) \"A+\"]\n           \
    \    [(>= n 3.7) \"A\"]\n               [(>= n 3.3) \"A-\"]\n               [(>=\
    \ n 3.0) \"B+\"]\n               [(>= n 2.7) \"B\"]\n               [(>= n 2.3)\
    \ \"B-\"]\n               [(>= n 2.0) \"C+\"]\n               [(>= n 1.7) \"C\"\
    ]\n               [(>= n 1.3) \"C-\"]\n               [(>= n 1.0) \"D+\"]\n  \
    \             [(>= n 0.7) \"D\"]\n               [(>= n 0.0) \"D-\"]\n       \
    \        [else \"E\"]))\n       grades))\n", "  (map (lambda (x) (if (>= x 4.0)\
    \ 'A+\n                     (if (>= x 3.7) 'A\n                         (if (>=\
    \ x 3.3) 'A-\n                             (if (>= x 3.0) 'B+\n              \
    \                   (if (>= x 2.7) 'B\n                                     (if\
    \ (>= x 2.3) 'B-\n                                         (if (>= x 2.0) 'C+\n\
    \                                             (if (>= x 1.7) 'C\n            \
    \                                     (if (>= x 1.3) 'C-\n                   \
    \                                  (if (>= x 1.0) 'D+\n                      \
    \                                   (if (>= x 0.7) 'D\n                      \
    \                                       (if (>= x 0.0) 'D-\n                 \
    \                                                'E)))))))))))))))\n  grades)\n",
  "  (map (lambda (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n  \
    \         [(>= grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n       \
    \    [(>= grade 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n           [(>=\
    \ grade 2.3) \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>= grade\
    \ 1.7) \"C\"]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade 1.0)\
    \ \"D+\"]\n           [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0) \"D-\"\
    ]\n           [else \"E\"]))\n       grades))\n", "    (if (null? grades) '()\n\
    \        (cons\n            (cond\n                ((>= (car grades) 4.0) \"A+\"\
    )\n                ((>= (car grades) 3.7) \"A\")\n                ((>= (car grades)\
    \ 3.3) \"A-\")\n                ((>= (car grades) 3.0) \"B+\")\n             \
    \   ((>= (car grades) 2.7) \"B\")\n                ((>= (car grades) 2.3) \"B-\"\
    )\n                ((>= (car grades) 2.0) \"C+\")\n                ((>= (car grades)\
    \ 1.7) \"C\")\n                ((>= (car grades) 1.3) \"C-\")\n              \
    \  ((>= (car grades) 1.0) \"D+\")\n                ((>= (car grades) 0.7) \"D\"\
    )\n                ((>= (car grades) 0.0) \"D-\")\n                (else \"E\"\
    ))\n            (numerical_letter_grade (cdr grades)))))\n", "  (map (lambda (GPA)\n\
    \         (cond ((>= GPA 4.0) 'A+)\n               ((>= GPA 3.7) 'A)\n       \
    \        ((>= GPA 3.3) 'A-)\n               ((>= GPA 3.0) 'B+)\n             \
    \  ((>= GPA 2.7) 'B)\n               ((>= GPA 2.3) 'B-)\n               ((>= GPA\
    \ 2.0) 'C+)\n               ((>= GPA 1.7) 'C)\n               ((>= GPA 1.3) 'C-)\n\
    \               ((>= GPA 1.0) 'D+)\n               ((>= GPA 0.7) 'D)\n       \
    \        ((>= GPA 0.0) 'D-)\n               (else 'E)))\n       grades))\n", " \
    \ (cond\n    [(empty? grades) '()]\n    [(>= (first grades) 4.0) (cons 'A+ (numerical_letter_grade\
    \ (rest grades)))]\n    [(>= (first grades) 3.7) (cons 'A (numerical_letter_grade\
    \ (rest grades)))]\n    [(>= (first grades) 3.3) (cons 'A- (numerical_letter_grade\
    \ (rest grades)))]\n    [(>= (first grades) 3.0) (cons 'B+ (numerical_letter_grade\
    \ (rest grades)))]\n    [(>= (first grades) 2.7) (cons 'B (numerical_letter_grade\
    \ (rest grades)))]\n    [(>= (first grades) 2.3) (cons 'B- (numerical_letter_grade\
    \ (rest grades)))]\n    [(>= (first grades) 2.0) (cons 'C+ (numerical_letter_grade\
    \ (rest grades)))]\n    [(>= (first grades) 1.7) (cons 'C (numerical_letter_grade\
    \ (rest grades)))]\n    [(>= (first grades) 1.3) (cons 'C- (numerical_letter_grade\
    \ (rest grades)))]\n    [(>= (first grades) 1.0) (cons 'D+ (numerical_letter_grade\
    \ (rest grades)))]\n    [(>= (first grades) 0.7) (cons 'D (numerical_letter_grade\
    \ (rest grades)))]\n    [(>= (first grades) 0.0) (cons 'D- (numerical_letter_grade\
    \ (rest grades)))]\n    [else (cons 'E (numerical_letter_grade (rest grades)))]))\n",
  "  (map (lambda (grade)\n         (cond [(>= grade 4.0) \"A+\"]\n              \
    \ [(>= grade 3.7) \"A\"]\n               [(>= grade 3.3) \"A-\"]\n           \
    \    [(>= grade 3.0) \"B+\"]\n               [(>= grade 2.7) \"B\"]\n        \
    \       [(>= grade 2.3) \"B-\"]\n               [(>= grade 2.0) \"C+\"]\n    \
    \           [(>= grade 1.7) \"C\"]\n               [(>= grade 1.3) \"C-\"]\n \
    \              [(>= grade 1.0) \"D+\"]\n               [(>= grade 0.7) \"D\"]\n\
    \               [(>= grade 0.0) \"D-\"]\n               [else \"E\"]))\n     \
    \  grades))\n", "  (map (lambda (x)\n         (cond ((= x 4.0) \"A+\")\n     \
    \          ((> x 3.7) \"A\")\n               ((> x 3.3) \"A-\")\n            \
    \   ((> x 3.0) \"B+\")\n               ((> x 2.7) \"B\")\n               ((> x\
    \ 2.3) \"B-\")\n               ((> x 2.0) \"C+\")\n               ((> x 1.7) \"\
    C\")\n               ((> x 1.3) \"C-\")\n               ((> x 1.0) \"D+\")\n \
    \              ((> x 0.7) \"D\")\n               ((> x 0.0) \"D-\")\n        \
    \       (else \"E\")))\n        grades))\n", (map (lambda (grade), "  (cond\n\
    \    [(empty? grades) empty]\n    [else (cons (numerical_to_letter (first grades))\n\
    \                (numerical_letter_grade (rest grades)))]))\n", "  (map (lambda\
    \ (gpa)\n         (cond ((>= gpa 4.0) 'A+)\n               ((>= gpa 3.7) 'A)\n\
    \               ((>= gpa 3.3) 'A-)\n               ((>= gpa 3.0) 'B+)\n      \
    \         ((>= gpa 2.7) 'B)\n               ((>= gpa 2.3) 'B-)\n             \
    \  ((>= gpa 2.0) 'C+)\n               ((>= gpa 1.7) 'C)\n               ((>= gpa\
    \ 1.3) 'C-)\n               ((>= gpa 1.0) 'D+)\n               ((>= gpa 0.7) 'D)\n\
    \               ((>= gpa 0.0) 'D-)\n               (else 'E)))\n       grades))\n",
  "  (cond\n    [(empty? grades) empty]\n    [else\n      (define lst (list (car grades)\
    \ \"\")]\n      (cond\n        [(>= (car grades) 4.0) (set-rest! lst (list \"\
    A+\"))]\n        [(>= (car grades) 3.7) (set-rest! lst (list \"A\"))]\n      \
    \  [(>= (car grades) 3.3) (set-rest! lst (list \"A-\"))]\n        [(>= (car grades)\
    \ 3.0) (set-rest! lst (list \"B+\"))]\n        [(>= (car grades) 2.7) (set-rest!\
    \ lst (list \"B\"))]\n        [(>= (car grades) 2.3) (set-rest! lst (list \"B-\"\
    ))]\n        [(>= (car grades) 2.0) (set-rest! lst (list \"C+\"))]\n        [(>=\
    \ (car grades) 1.7) (set-rest! lst (list \"C\"))]\n        [(>= (car grades) 1.3)\
    \ (set-rest! lst (list \"C-\"))]\n        [(>= (car grades) 1.0) (set-rest! lst\
    \ (list \"D+\"))]\n        [(>= (car grades) 0.7) (set-rest! lst (list \"D\"))]\n\
    \        [(>= (car grades) 0.0) (set-rest! lst (list \"D-\"))]\n        [else\
    \ (set-rest! lst (list \"E\"))]\n      )\n      (cons lst (numerical_letter_grade\
    \ (cdr grades)))\n    ]\n  )\n)", "   ;; Write your function here\n\n   )\n",
  "  ;; Your code here\n  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) \"A+\"\
    ]\n               [(>= gpa 3.7) \"A\"]\n               [(>= gpa 3.3) \"A-\"]\n\
    \               [(>= gpa 3.0) \"B+\"]\n               [(>= gpa 2.7) \"B\"]\n \
    \              [(>= gpa 2.3) \"B-\"]\n               [(>= gpa 2.0) \"C+\"]\n \
    \              [(>= gpa 1.7) \"C\"]\n               [(>= gpa 1.3) \"C-\"]\n  \
    \             [(>= gpa 1.0) \"D+\"]\n               [(>= gpa 0.7) \"D\"]\n   \
    \            [(>= gpa 0.0) \"D-\"]\n               [else \"E\"]))\n       grades))\n",
  "  (map (lambda (x) (cond\n\t\t    ((>= x 4.0) \"A+\")\n\t\t    ((>= x 3.7) \"A\"\
    )\n\t\t    ((>= x 3.3) \"A-\")\n\t\t    ((>= x 3.0) \"B+\")\n\t\t    ((>= x 2.7)\
    \ \"B\")\n\t\t    ((>= x 2.3) \"B-\")\n\t\t    ((>= x 2.0) \"C+\")\n\t\t    ((>=\
    \ x 1.7) \"C\")\n\t\t    ((>= x 1.3) \"C-\")\n\t\t    ((>= x 1.0) \"D+\")\n\t\t\
    \    ((>= x 0.7) \"D\")\n\t\t    ((>= x 0.0) \"D-\")\n\t\t    (else \"E\")))\n\
    \tgrades))", "  (map (lambda (x)\n         (cond ((>= x 4.0) 'A+)\n          \
    \     ((>= x 3.7) 'A)\n               ((>= x 3.3) 'A-)\n               ((>= x\
    \ 3.0) 'B+)\n               ((>= x 2.7) 'B)\n               ((>= x 2.3) 'B-)\n\
    \               ((>= x 2.0) 'C+)\n               ((>= x 1.7) 'C)\n           \
    \    ((>= x 1.3) 'C-)\n               ((>= x 1.0) 'D+)\n               ((>= x\
    \ 0.7) 'D)\n               ((>= x 0.0) 'D-)\n               (else 'E)))\n    \
    \   grades))\n", "  (map (lambda (gpa)\n         (cond [(>= gpa 4.0) 'A+]\n  \
    \             [(>= gpa 3.7) 'A]\n               [(>= gpa 3.3) 'A-]\n         \
    \      [(>= gpa 3.0) 'B+]\n               [(>= gpa 2.7) 'B]\n               [(>=\
    \ gpa 2.3) 'B-]\n               [(>= gpa 2.0) 'C+]\n               [(>= gpa 1.7)\
    \ 'C]\n               [(>= gpa 1.3) 'C-]\n               [(>= gpa 1.0) 'D+]\n\
    \               [(>= gpa 0.7) 'D]\n               [(>= gpa 0.0) 'D-]\n       \
    \        [else 'E]))\n       grades))\n", "  (if (empty? grades)\n      empty\n\
    \      (cons (numerical_letter_grade_helper (first grades))\n            (numerical_letter_grade\
    \ (rest grades)))))\n", "  (map (lambda (gpa)\n         (cond\n           [(>=\
    \ gpa 4.0) 'A+]\n           [(>= gpa 3.7) 'A]\n           [(>= gpa 3.3) 'A-]\n\
    \           [(>= gpa 3.0) 'B+]\n           [(>= gpa 2.7) 'B]\n           [(>=\
    \ gpa 2.3) 'B-]\n           [(>= gpa 2.0) 'C+]\n           [(>= gpa 1.7) 'C]\n\
    \           [(>= gpa 1.3) 'C-]\n           [(>= gpa 1.0) 'D+]\n           [(>=\
    \ gpa 0.7) 'D]\n           [(>= gpa 0.0) 'D-]\n           [else 'E]))\n      \
    \ grades))\n", "  (cond \n    [(empty? grades) empty]\n    [(= 4.0 (first grades))\
    \ (cons \"A+\" (numerical_letter_grade (rest grades)))]\n    [(> 3.7 (first grades))\
    \ (cons \"A\" (numerical_letter_grade (rest grades)))]\n    [(> 3.3 (first grades))\
    \ (cons \"A-\" (numerical_letter_grade (rest grades)))]\n    [(> 3.0 (first grades))\
    \ (cons \"B+\" (numerical_letter_grade (rest grades)))]\n    [(> 2.7 (first grades))\
    \ (cons \"B\" (numerical_letter_grade (rest grades)))]\n    [(> 2.3 (first grades))\
    \ (cons \"B-\" (numerical_letter_grade (rest grades)))]\n    [(> 2.0 (first grades))\
    \ (cons \"C+\" (numerical_letter_grade (rest grades)))]\n    [(> 1.7 (first grades))\
    \ (cons \"C\" (numerical_letter_grade (rest grades)))]\n    [(> 1.3 (first grades))\
    \ (cons \"C-\" (numerical_letter_grade (rest grades)))]\n    [(> 1.0 (first grades))\
    \ (cons \"D+\" (numerical_letter_grade (rest grades)))]\n    [(> 0.7 (first grades))\
    \ (cons \"D\" (numerical_letter_grade (rest grades)))]\n    [(> 0.0 (first grades))\
    \ (cons \"D-\" (numerical_letter_grade (rest grades)))]\n    [(>= 0.0 (first grades))\
    \ (cons \"E\" (numerical_letter_grade (rest grades)))]))\n", "  (map (lambda (gpa)\n\
    \         (cond [(>= gpa 4.0) 'A+]\n               [(>= gpa 3.7) 'A]\n       \
    \        [(>= gpa 3.3) 'A-]\n               [(>= gpa 3.0) 'B+]\n             \
    \  [(>= gpa 2.7) 'B]\n               [(>= gpa 2.3) 'B-]\n               [(>= gpa\
    \ 2.0) 'C+]\n               [(>= gpa 1.7) 'C]\n               [(>= gpa 1.3) 'C-]\n\
    \               [(>= gpa 1.0) 'D+]\n               [(>= gpa 0.7) 'D]\n       \
    \        [(>= gpa 0.0) 'D-]\n               [else 'E]))\n        grades))\n",
  "  (map\n   (lambda (grade)\n     (cond\n       [(>= grade 4.0) \"A+\"]\n      \
    \ [(>= grade 3.7) \"A\"]\n       [(>= grade 3.3) \"A-\"]\n       [(>= grade 3.0)\
    \ \"B+\"]\n       [(>= grade 2.7) \"B\"]\n       [(>= grade 2.3) \"B-\"]\n   \
    \    [(>= grade 2.0) \"C+\"]\n       [(>= grade 1.7) \"C\"]\n       [(>= grade\
    \ 1.3) \"C-\"]\n       [(>= grade 1.0) \"D+\"]\n       [(>= grade 0.7) \"D\"]\n\
    \       [(>= grade 0.0) \"D-\"]\n       [else \"E\"]))\n   grades))\n", "  (map\
    \ (lambda (n)\n         (cond [(>= n 4.0) \"A+\"]\n               [(>= n 3.7)\
    \ \"A\"]\n               [(>= n 3.3) \"A-\"]\n               [(>= n 3.0) \"B+\"\
    ]\n               [(>= n 2.7) \"B\"]\n               [(>= n 2.3) \"B-\"]\n   \
    \            [(>= n 2.0) \"C+\"]\n               [(>= n 1.7) \"C\"]\n        \
    \       [(>= n 1.3) \"C-\"]\n               [(>= n 1.0) \"D+\"]\n            \
    \   [(>= n 0.7) \"D\"]\n               [(>= n 0.0) \"D-\"]\n               [else\
    \ \"E\"]))\n       grades))\n", "  (if (null? grades)\n      '()\n      (cons\
    \ (numerical_letter_grade_helper (car grades))\n            (numerical_letter_grade\
    \ (cdr grades)))))\n", "\t(map (lambda (grade)\n\t\t(cond\n\t\t\t[(>= grade 4.0)\
    \ 'A+]\n\t\t\t[(>= grade 3.7) 'A]\n\t\t\t[(>= grade 3.3) 'A-]\n\t\t\t[(>= grade\
    \ 3.0) 'B+]\n\t\t\t[(>= grade 2.7) 'B]\n\t\t\t[(>= grade 2.3) 'B-]\n\t\t\t[(>=\
    \ grade 2.0) 'C+]\n\t\t\t[(>= grade 1.7) 'C]\n\t\t\t[(>= grade 1.3) 'C-]\n\t\t\
    \t[(>= grade 1.0) 'D+]\n\t\t\t[(>= grade 0.7) 'D]\n\t\t\t[(>= grade 0.0) 'D-]\n\
    \t\t\t[(>= grade 0.0) 'E]))\n\t\tgrades))", '  (map letter_grade grades))', " \
    \ ;;; your code here\n)\n", "  (for/list ([x grades])\n    (cond\n      [(&gt;=\
    \ x 4.0) \"A+\"]\n      [(&gt;= x 3.7) \"A\"]\n      [(&gt;= x 3.3) \"A-\"]\n\
    \      [(&gt;= x 3.0) \"B+\"]\n      [(&gt;= x 2.7) \"B\"]\n      [(&gt;= x 2.3)\
    \ \"B-\"]\n      [(&gt;= x 2.0) \"C+\"]\n      [(&gt;= x 1.7) \"C\"]\n      [(&gt;=\
    \ x 1.3) \"C-\"]\n      [(&gt;= x 1.0) \"D+\"]\n      [(&gt;= x 0.7) \"D\"]\n\
    \      [(&gt;= x 0.0) \"D-\"]\n      [else \"E\"])))\n</code>\nMaybe it would\
    \ be better if the function was defined this way:\n<code>#lang racket\n", "  (map\n\
    \   (lambda (x)\n     (cond\n       [(>= x 4.0)  'A+]\n       [(>= x 3.7)  'A]\n\
    \       [(>= x 3.3)  'A-]\n       [(>= x 3.0)  'B+]\n       [(>= x 2.7)  'B]\n\
    \       [(>= x 2.3)  'B-]\n       [(>= x 2.0)  'C+]\n       [(>= x 1.7)  'C]\n\
    \       [(>= x 1.3)  'C-]\n       [(>= x 1.0)  'D+]\n       [(>= x 0.7)  'D]\n\
    \       [(>= x 0.0)  'D-]\n       [else       'E]))\n   grades))\n", "  (cond\
    \ [(empty? grades) empty]\n        [else (cons (numerical_letter (first grades))\n\
    \                    (numerical_letter_grade (rest grades)))]))", "  (map (lambda\
    \ (grade)\n         (cond\n           [(>= grade 4.0) \"A+\"]\n           [(>=\
    \ grade 3.7) \"A\"]\n           [(>= grade 3.3) \"A-\"]\n           [(>= grade\
    \ 3.0) \"B+\"]\n           [(>= grade 2.7) \"B\"]\n           [(>= grade 2.3)\
    \ \"B-\"]\n           [(>= grade 2.0) \"C+\"]\n           [(>= grade 1.7) \"C\"\
    ]\n           [(>= grade 1.3) \"C-\"]\n           [(>= grade 1.0) \"D+\"]\n  \
    \         [(>= grade 0.7) \"D\"]\n           [(>= grade 0.0) \"D-\"]\n       \
    \    [else \"E\"]))\n       grades))\n", "  (map (lambda (gpa)\n         (cond\
    \ [(>= gpa 4.0) 'A+]\n               [(>= gpa 3.7) 'A]\n               [(>= gpa\
    \ 3.3) 'A-]\n               [(>= gpa 3.0) 'B+]\n               [(>= gpa 2.7) 'B]\n\
    \               [(>= gpa 2.3) 'B-]\n               [(>= gpa 2.0) 'C+]\n      \
    \         [(>= gpa 1.7) 'C]\n               [(>= gpa 1.3) 'C-]\n             \
    \  [(>= gpa 1.0) 'D+]\n               [(>= gpa 0.7) 'D]\n               [(>= gpa\
    \ 0.0) 'D-]\n               [else 'E]))\n       grades))", "  '(\"A+\" \"A\" \"\
    A-\" \"B+\" \"B\" \"B-\" \"C+\" \"C\" \"C-\" \"D+\" \"D\" \"D-\" \"E\"))", " \
    \ (cond\n    [(= (length grades) 0) '()]\n    [else\n     (cons\n      (cond\n\
    \        [(>= (car grades) 4.0) 'A+]\n        [(>= (car grades) 3.7) 'A]\n   \
    \     [(>= (car grades) 3.3) 'A-]\n        [(>= (car grades) 3.0) 'B+]\n     \
    \   [(>= (car grades) 2.7) 'B]\n        [(>= (car grades) 2.3) 'B-]\n        [(>=\
    \ (car grades) 2.0) 'C+]\n        [(>= (car grades) 1.7) 'C]\n        [(>= (car\
    \ grades) 1.3) 'C-]\n        [(>= (car grades) 1.0) 'D+]\n        [(>= (car grades)\
    \ 0.7) 'D]\n        [(>= (car grades) 0.0) 'D-]\n        [else 'E])\n      (numerical_letter_grade\
    \ (cdr grades))))])\n", "  (map (lambda (grade)\n         (cond [(>= grade 4.0)\
    \ 'A+]\n               [(>= grade 3.7) 'A]\n               [(>= grade 3.3) 'A-]\n\
    \               [(>= grade 3.0) 'B+]\n               [(>= grade 2.7) 'B]\n   \
    \            [(>= grade 2.3) 'B-]\n               [(>= grade 2.0) 'C+]\n     \
    \          [(>= grade 1.7) 'C]\n               [(>= grade 1.3) 'C-]\n        \
    \       [(>= grade 1.0) 'D+]\n               [(>= grade 0.7) 'D]\n           \
    \    [(>= grade 0.0) 'D-]\n               [else 'E]))\n       grades))\n", " \
    \ (for/list ([grade grades])\n    (cond\n      [(>= grade 4.0) \"A+\"]\n     \
    \ [(>= grade 3.7) \"A\"]\n      [(>= grade 3.3) \"A-\"]\n      [(>= grade 3.0)\
    \ \"B+\"]\n      [(>= grade 2.7) \"B\"]\n      [(>= grade 2.3) \"B-\"]\n     \
    \ [(>= grade 2.0) \"C+\"]\n      [(>= grade 1.7) \"C\"]\n      [(>= grade 1.3)\
    \ \"C-\"]\n      [(>= grade 1.0) \"D+\"]\n      [(>= grade 0.7) \"D\"]\n     \
    \ [(>= grade 0.0) \"D-\"]\n      [else \"E\"])))\n", "  (map\n   (lambda (gpa)\n\
    \     (cond\n       [(>= gpa 4.0) 'A+]\n       [(>= gpa 3.7) 'A]\n       [(>=\
    \ gpa 3.3) 'A-]\n       [(>= gpa 3.0) 'B+]\n       [(>= gpa 2.7) 'B]\n       [(>=\
    \ gpa 2.3) 'B-]\n       [(>= gpa 2.0) 'C+]\n       [(>= gpa 1.7) 'C]\n       [(>=\
    \ gpa 1.3) 'C-]\n       [(>= gpa 1.0) 'D+]\n       [(>= gpa 0.7) 'D]\n       [(>=\
    \ gpa 0.0) 'D-]\n       [else        'E]\n       ))\n   grades))\n", "  (map (lambda\
    \ (gpa)\n         (cond ((>= gpa 4.0) 'A+)\n               ((>= gpa 3.7) 'A)\n\
    \               ((>= gpa 3.3) 'A-)\n               ((>= gpa 3.0) 'B+)\n      \
    \         ((>= gpa 2.7) 'B)\n               ((>= gpa 2.3) 'B-)\n             \
    \  ((>= gpa 2.0) 'C+)\n               ((>= gpa 1.7) 'C)\n               ((>= gpa\
    \ 1.3) 'C-)\n               ((>= gpa 1.0) 'D+)\n               ((>= gpa 0.7) 'D)\n\
    \               ((>= gpa 0.0) 'D-)\n               (else 'E)))\n       grades))\n",
  "  (if (null? grades)\n      '()\n      (cons (numerical_letter_grade_helper (car\
    \ grades))\n            (numerical_letter_grade (cdr grades)))))\n", "  (map \n\
    \   (lambda (x) \n     (cond [(>= x 4.0) 'A+]\n           [(>= x 3.7) 'A]\n  \
    \         [(>= x 3.3) 'A-]\n           [(>= x 3.0) 'B+]\n           [(>= x 2.7)\
    \ 'B]\n           [(>= x 2.3) 'B-]\n           [(>= x 2.0) 'C+]\n           [(>=\
    \ x 1.7) 'C]\n           [(>= x 1.3) 'C-]\n           [(>= x 1.0) 'D+]\n     \
    \      [(>= x 0.7) 'D]\n           [(>= x 0.0) 'D-]\n           [else 'E]))\n\
    \   grades))\n", "  ;; write your code here\n  )\n", "  (map (lambda (num)\n \
    \        (cond\n           [(>= num 4.0) \"A+\"]\n           [(>= num 3.7) \"\
    A\"]\n           [(>= num 3.3) \"A-\"]\n           [(>= num 3.0) \"B+\"]\n   \
    \        [(>= num 2.7) \"B\"]\n           [(>= num 2.3) \"B-\"]\n           [(>=\
    \ num 2.0) \"C+\"]\n           [(>= num 1.7) \"C\"]\n           [(>= num 1.3)\
    \ \"C-\"]\n           [(>= num 1.0) \"D+\"]\n           [(>= num 0.7) \"D\"]\n\
    \           [(>= num 0.0) \"D-\"]\n           [(>= num 0.0) \"E\"]))\n       grades))\n",
  "  ;; Your code goes here\n  )\n```\n\n```racket\n#lang racket\n", "  (cond\n  \
    \  [(<= 3.7 (car grades)) 'A+]\n    [(<= 3.3 (car grades)) 'A]\n    [(<= 3.0 (car\
    \ grades)) 'A-]\n    [(<= 2.7 (car grades)) 'B+]\n    [(<= 2.3 (car grades)) 'B]\n\
    \    [(<= 2.0 (car grades)) 'B-]\n    [(<= 1.7 (car grades)) 'C+]\n    [(<= 1.3\
    \ (car grades)) 'C]\n    [(<= 1.0 (car grades)) 'C-]\n    [(<= 0.7 (car grades))\
    \ 'D+]\n    [(<= 0.0 (car grades)) 'D]\n    [(<= 0.0 (car grades)) 'D-]\n    [(<=\
    \ 0.0 (car grades)) 'E]))\n", "  (map (lambda (x) (grade_test x)) grades))\n"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

{
  "name": "HumanEval_43_pairs_sum_to_zero",
  "language": "go_test.go",
  "prompt": "package pairs_sum_to_zero_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// pairs_sum_to_zero takes a list of integers as an input.\n// it returns true if there are two distinct elements in the list that\n// sum to zero, and false otherwise.\n// >>> pairs_sum_to_zero([]int{1, 3, 5, 0})\n// false\n// >>> pairs_sum_to_zero([]int{1, 3, -2, 1})\n// false\n// >>> pairs_sum_to_zero([]int{1, 2, 3, 7})\n// false\n// >>> pairs_sum_to_zero([]int{2, 4, -5, 3, 5, 7})\n// true\n// >>> pairs_sum_to_zero([]int{1})\n// false\nfunc pairs_sum_to_zero(l []int) bool {\n",
  "tests": "func TestPairs_Sum_To_Zero(t *testing.T) {\n  candidate := pairs_sum_to_zero\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate([]int{1, 3, 5, 0}), expected: false },\n     { actual: candidate([]int{1, 3, -2, 1}), expected: false },\n     { actual: candidate([]int{1, 2, 3, 7}), expected: false },\n     { actual: candidate([]int{2, 4, -5, 3, 5, 7}), expected: true },\n     { actual: candidate([]int{1}), expected: false },\n     { actual: candidate([]int{-3, 9, -1, 3, 2, 30}), expected: true },\n     { actual: candidate([]int{-3, 9, -1, 3, 2, 31}), expected: true },\n     { actual: candidate([]int{-3, 9, -1, 4, 2, 30}), expected: false },\n     { actual: candidate([]int{-3, 9, -1, 4, 2, 31}), expected: false },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "completions": [
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    var sum int\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    return sum == 0\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.\n// it is an entry point for the test program.",
    "    // write your code in Java SE 8\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    sum := 0\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    var sum int\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.\n// it is an entry point for the go test command.",
    "    // write your code in Go 1.4\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Java SE 8\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Java SE 8\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.\n// it tests cases from the pairs_sum_to_zero_test.txt file.",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Java SE 8\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    sum := 0\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Java SE 8\n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n\n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.\n// it tests cases from the pairs_sum_to_zero_test.txt file.",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    var sum int\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    return sum == 0\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    // write your code here\n    if len(l) == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) == 0 {\n        return false\n    }\n    \n    var sum int\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Java SE 8\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.\n// it is a black box test, which means it tests the behavior of the\n// function (no knowledge about its implementation is required).",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.\n// it is an entry point for the go test command.",
    "    if len(l) == 0 {\n        return false\n    }\n    \n    var sum int\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    var sum int\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Java SE 8\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) == 0 {\n        return false\n    }\n    \n    // initialize the map\n    m := make(map[int]int)\n    \n    // iterate through the list\n    for i := 0; i < len(l); i++ {\n        // if the value is already in the map, return false\n        if _, ok := m[l[i]]; ok {\n            return false\n        }\n        \n        // add the value to the map\n        m[l[i]] = 1\n    }\n    \n    // if there are two distinct elements in the list that sum to zero, return true\n    if len(m) == 2 {\n        return true\n    }\n    \n    // otherwise return false\n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    // write your code in Go 1.4\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    return false\n}\n",
    "    // write your code here\n    if len(l) == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.\n// it checks if pairs_sum_to_zero function returns true for the given\n// input and false otherwise.",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    // create a map of all the numbers in the list\n    m := make(map[int]bool)\n    for _, v := range l {\n        m[v] = true\n    }\n    \n    // check if there are two numbers that sum to zero\n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    sum := 0\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Java SE 8\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) == 0 {\n        return false\n    }\n    \n    // we need to keep track of the pairs that sum to zero\n    // so we can return true if there are two of them\n    // and false otherwise\n    pairs := make(map[int]int)\n    \n    // we need to keep track of the number of pairs\n    // that we have found so far\n    count := 0\n    \n    // we need to keep track of the number of elements\n    // that we have seen so far\n    seen := 0\n    \n    // we need to keep track of the number of elements\n    // that we have seen so far that sum to zero\n    seenZero := 0\n    \n    // we need to keep track of the number of elements\n    // that we have seen so far that sum to zero\n    seenNegative := 0\n    \n    // we need to keep track of the number of elements\n    // that we have seen so far that sum to zero\n    seenPositive := 0\n    \n    // we need to keep track of the number of elements\n    // that we have seen so far that sum to zero\n    seenZeroPositive := 0\n    \n    // we need to keep track of the number of elements\n    // that we have seen so far that sum to zero\n    seenZeroNegative := 0\n    \n    // we need to keep track of the number of elements\n    // that we have seen so far that sum to zero\n    seenNegativePositive := 0\n    \n    // we need to keep track of the number of elements\n    // that we have seen so far that sum to zero\n    seenNegativeNegative := 0\n    \n    // we need to keep track of the number of elements\n    // that we have seen so far that sum to zero\n    seenPositiveNegative := 0\n    \n    // we need to keep track of the number of elements\n    // that we have seen so far that sum to zero\n    seenPositivePositive := 0\n    \n    // we need to keep track of the number of elements\n    // that we have seen so far that sum to zero\n    seenZeroPositiveNegative := 0\n    \n    // we need to keep track of the number of elements\n    // that we have seen so far that sum",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    sum := 0\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Java SE 8\n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero",
    "    // write your code here\n    if len(l) == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    sum := 0\n    for _, i := range l {\n        sum += i\n    }\n    \n    return sum == 0\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    sum := 0\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    sum := 0\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return true\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Java SE 8\n    if len(l) == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) == 0 {\n        return false\n    }\n    \n    sum := 0\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    sum := 0\n    for _, v := range l {\n        sum += v\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Java SE 8\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    sum := 0\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Java SE 8\n    if len(l) == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Java SE 8\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.\n// it is an entry point for the program.",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    if len(l) == 0 {\n        return false\n    }\n    \n    var sum int\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    sum := 0\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return true\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    // write your code in Go 1.4\n    // fmt.Println(l)\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    var sum int\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    return false\n}\n",
    "    if len(l) < 2 {\n        return false\n    }\n    \n    var sum int\n    for i := 0; i < len(l); i++ {\n        sum += l[i]\n    }\n    \n    if sum == 0 {\n        return false\n    }\n    \n    for i := 0; i < len(l); i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n\n// pairs_sum_to_zero_test tests pairs_sum_to_zero function.\n// it is an entry point for the go test command.",
    "    // write your code here\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n",
    "    // write your code in Go 1.4\n    if len(l) < 2 {\n        return false\n    }\n    \n    for i := 0; i < len(l) - 1; i++ {\n        for j := i + 1; j < len(l); j++ {\n            if l[i] + l[j] == 0 {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n"
  ],
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ]
}
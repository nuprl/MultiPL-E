{
  "name": "HumanEval_66_digitSum",
  "language": "go_test.go",
  "prompt": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n",
  "tests": "func TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
  "stop_tokens": [
    "\nfunc",
    "struct",
    "\n// "
  ],
  "results": [
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 64\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 10)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp5ksz2w8n_test.go:54: expected '%!s(int=131)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp5ksz2w8n_test.go:54: expected '%!s(int=67)', got '%!s(int=12)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp5ksz2w8n_test.go:54: expected '%!s(int=69)', got '%!s(int=14)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp5ksz2w8n_test.go:54: expected '%!s(int=131)', got '%!s(int=21)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp5ksz2w8n_test.go:54: expected '%!s(int=153)', got '%!s(int=43)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp5ksz2w8n_test.go:54: expected '%!s(int=151)', got '%!s(int=41)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp5ksz2w8n_test.go:54: expected '%!s(int=327)', got '%!s(int=107)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\n// Test\n// 1. Test with empty string\n// 2. Test with string with all upper characters\n// 3. Test with string with all lower characters\n// 4. Test with string with mixed characters\n// 5. Test with string with all digits\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpf75dj_2v_test.go:60: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpf75dj_2v_test.go:60: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpf75dj_2v_test.go:60: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpf75dj_2v_test.go:60: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpf75dj_2v_test.go:60: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpf75dj_2v_test.go:60: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpf75dj_2v_test.go:60: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 64\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 64\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\n// Test\n// 1. Test with empty string\n// 2. Test with string that contains only lowercase characters\n// 3. Test with string that contains only uppercase characters\n// 4. Test with string that contains both lowercase and uppercase characters\n// 5. Test with string that contains all the characters\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmprckw0cip_test.go:60: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmprckw0cip_test.go:60: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmprckw0cip_test.go:60: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmprckw0cip_test.go:60: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmprckw0cip_test.go:60: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmprckw0cip_test.go:60: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmprckw0cip_test.go:60: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 64\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 64\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 64\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\n// Test\n// 1. Test that digitSum returns the correct sum for empty string.\n// 2. Test that digitSum returns the correct sum for string with only lowercase characters.\n// 3. Test that digitSum returns the correct sum for string with only uppercase characters.\n// 4. Test that digitSum returns the correct sum for string with mixed case characters.\n// 5. Test that digitSum returns the correct sum for string with all uppercase characters.\n// 6. Test that digitSum returns the correct sum for string with all lowercase characters.\n// 7. Test that digitSum returns the correct sum for string with all uppercase and lowercase characters.\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp29kktaij_test.go:62: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp29kktaij_test.go:62: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp29kktaij_test.go:62: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp29kktaij_test.go:62: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp29kktaij_test.go:62: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp29kktaij_test.go:62: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp29kktaij_test.go:62: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\n// Test\n// 1. Test with empty string\n// 2. Test with string that contains only lowercase characters\n// 3. Test with string that contains only uppercase characters\n// 4. Test with string that contains both lowercase and uppercase characters\n// 5. Test with string that contains both lowercase and uppercase characters\n// 6. Test with string that contains both lowercase and uppercase characters\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpzx2dqvrc_test.go:61: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpzx2dqvrc_test.go:61: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpzx2dqvrc_test.go:61: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpzx2dqvrc_test.go:61: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpzx2dqvrc_test.go:61: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpzx2dqvrc_test.go:61: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpzx2dqvrc_test.go:61: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "ok  \tcommand-line-arguments\t0.003s\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\n// Test\n// 1. Test with empty string\n// 2. Test with string with only lowercase letters\n// 3. Test with string with only uppercase letters\n// 4. Test with string with both lowercase and uppercase letters\n// 5. Test with string with numbers\n// 6. Test with string with special characters\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmppzi82i0u_test.go:61: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmppzi82i0u_test.go:61: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmppzi82i0u_test.go:61: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmppzi82i0u_test.go:61: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmppzi82i0u_test.go:61: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmppzi82i0u_test.go:61: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmppzi82i0u_test.go:61: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.002s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmph3mh1ewx_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmph3mh1ewx_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmph3mh1ewx_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmph3mh1ewx_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmph3mh1ewx_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmph3mh1ewx_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmph3mh1ewx_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\n// Test\n// 1. Test the function with empty string\n// 2. Test the function with string with upper and lower case characters\n// 3. Test the function with string with upper and lower case characters and special characters\n// 4. Test the function with string with upper and lower case characters and special characters\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp1b0g4djy_test.go:59: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp1b0g4djy_test.go:59: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp1b0g4djy_test.go:59: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp1b0g4djy_test.go:59: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp1b0g4djy_test.go:59: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp1b0g4djy_test.go:59: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp1b0g4djy_test.go:59: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\n// Test\n// 1. Test with empty string\n// 2. Test with string with all upper characters\n// 3. Test with string with all lower characters\n// 4. Test with string with mixed upper and lower characters\n// 5. Test with string with only digits\n// 6. Test with string with only non-digits\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmptw2cvzr1_test.go:61: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmptw2cvzr1_test.go:61: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmptw2cvzr1_test.go:61: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmptw2cvzr1_test.go:61: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmptw2cvzr1_test.go:61: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmptw2cvzr1_test.go:61: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmptw2cvzr1_test.go:61: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 64\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for i := 0; i < len(s); i++ {\n        sum += int(s[i] - 'A' + 1)\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpk9bktqrc_test.go:52: expected '%!s(int=131)', got '%!s(int=70)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpk9bktqrc_test.go:52: expected '%!s(int=67)', got '%!s(int=141)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpk9bktqrc_test.go:52: expected '%!s(int=69)', got '%!s(int=217)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpk9bktqrc_test.go:52: expected '%!s(int=131)', got '%!s(int=235)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpk9bktqrc_test.go:52: expected '%!s(int=153)', got '%!s(int=190)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpk9bktqrc_test.go:52: expected '%!s(int=151)', got '%!s(int=1282)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpk9bktqrc_test.go:52: expected '%!s(int=327)', got '%!s(int=1250)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\n// Test\n// 1. Test with empty string\n// 2. Test with string with all upper characters\n// 3. Test with string with all lower characters\n// 4. Test with string with mixed upper and lower characters\n// 5. Test with string with all digits\n// 6. Test with string with all non-digits\n// 7. Test with string with all non-letters\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpfqrwy754_test.go:62: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpfqrwy754_test.go:62: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpfqrwy754_test.go:62: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpfqrwy754_test.go:62: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpfqrwy754_test.go:62: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpfqrwy754_test.go:62: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpfqrwy754_test.go:62: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\n// Tests\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpumn_ubx8_test.go:55: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpumn_ubx8_test.go:55: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpumn_ubx8_test.go:55: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpumn_ubx8_test.go:55: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpumn_ubx8_test.go:55: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpumn_ubx8_test.go:55: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpumn_ubx8_test.go:55: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 64\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i]) - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp9gtebpgz_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp9gtebpgz_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp9gtebpgz_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp9gtebpgz_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp9gtebpgz_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp9gtebpgz_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp9gtebpgz_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 64\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 64\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpdid5rbf1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpb2f9s462_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 64\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmppytgz5qe_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c) - 'A' + 1\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpiwh7pjec_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpiwh7pjec_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpiwh7pjec_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpiwh7pjec_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpiwh7pjec_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpiwh7pjec_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpiwh7pjec_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\n// Test\n// 1. Test with empty string\n// 2. Test with string with all upper case characters\n// 3. Test with string with all lower case characters\n// 4. Test with string with mixed case characters\n// 5. Test with string with all digits\n// 6. Test with string with all non-digits\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpqtx_529k_test.go:61: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpqtx_529k_test.go:61: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpqtx_529k_test.go:61: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpqtx_529k_test.go:61: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpqtx_529k_test.go:61: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpqtx_529k_test.go:61: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpqtx_529k_test.go:61: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\n// Test\n// 1. Test with empty string\n// 2. Test with string with upper and lower case letters\n// 3. Test with string with upper and lower case letters and numbers\n// 4. Test with string with upper and lower case letters and numbers and special characters\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpttcvgzko_test.go:59: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpttcvgzko_test.go:59: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpttcvgzko_test.go:59: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpttcvgzko_test.go:59: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpttcvgzko_test.go:59: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpttcvgzko_test.go:59: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpttcvgzko_test.go:59: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    sum := 0\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmp4sy5tb83_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for _, c := range s {\n        if c >= 'A' && c <= 'Z' {\n            sum += int(c - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpo0n853dt_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.004s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "package digitSum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n// Task\n// Write a function that takes a string as input and returns the sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n// >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>> digitSum(\"aAaaaXa\")\n// 153\nfunc digitSum(s string) int {\n    var sum int\n    for i := 0; i < len(s); i++ {\n        if s[i] >= 'A' && s[i] <= 'Z' {\n            sum += int(s[i] - 'A' + 1)\n        }\n    }\n    return sum\n}\n\nfunc TestDigitsum(t *testing.T) {\n  candidate := digitSum\n\ttype test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests := []test{\n     { actual: candidate(\"\"), expected: 0 },\n     { actual: candidate(\"abAB\"), expected: 131 },\n     { actual: candidate(\"abcCd\"), expected: 67 },\n     { actual: candidate(\"helloE\"), expected: 69 },\n     { actual: candidate(\"woArBld\"), expected: 131 },\n     { actual: candidate(\"aAaaaXa\"), expected: 153 },\n     { actual: candidate(\" How are yOu?\"), expected: 151 },\n     { actual: candidate(\"You arE Very Smart\"), expected: 327 },\n   }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n",
      "timestamp": 1664374869,
      "stdout": "--- FAIL: TestDigitsum (0.00s)\n    --- FAIL: TestDigitsum/test_num__1 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__2 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=67)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__3 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=69)', got '%!s(int=5)'\n    --- FAIL: TestDigitsum/test_num__4 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=131)', got '%!s(int=3)'\n    --- FAIL: TestDigitsum/test_num__5 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=153)', got '%!s(int=25)'\n    --- FAIL: TestDigitsum/test_num__6 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=151)', got '%!s(int=23)'\n    --- FAIL: TestDigitsum/test_num__7 (0.00s)\n        tmpp22g6ib1_test.go:54: expected '%!s(int=327)', got '%!s(int=71)'\nFAIL\nFAIL\tcommand-line-arguments\t0.003s\nFAIL\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
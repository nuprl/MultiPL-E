name: HumanEval_114_minSubArraySum
language: go_test.go
prompt: "package minSubArraySum_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\
  \n// Given a list of integers nums, find the minimum sum of any non-empty sub-list\n\
  // of nums.\n// Example\n// >>> minSubArraySum([]int{2, 3, 4, 1, 2, 4})\n// 1\n\
  // >>> minSubArraySum([]int{-1, -2, -3})\n// -6\nfunc minSubArraySum(nums []int)\
  \ int {\n"
tests: "func TestMinsubarraysum(t *testing.T) {\n  candidate := minSubArraySum\n\t\
  type test struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n  \
  \ tests := []test{\n     { actual: candidate([]int{2, 3, 4, 1, 2, 4}), expected:\
  \ 1 },\n     { actual: candidate([]int{-1, -2, -3}), expected: -6 },\n     { actual:\
  \ candidate([]int{-1, -2, -3, 2, -10}), expected: -14 },\n     { actual: candidate([]int{-9999999999999999}),\
  \ expected: -9999999999999999 },\n     { actual: candidate([]int{0, 10, 20, 1000000}),\
  \ expected: 0 },\n     { actual: candidate([]int{-1, -2, -3, 10, -5}), expected:\
  \ -6 },\n     { actual: candidate([]int{100, -1, -2, -3, 10, -5}), expected: -6\
  \ },\n     { actual: candidate([]int{10, 11, 13, 8, 3, 4}), expected: 3 },\n   \
  \  { actual: candidate([]int{100, -33, 32, -1, 0, -2}), expected: -33 },\n     {\
  \ actual: candidate([]int{-10}), expected: -10 },\n     { actual: candidate([]int{7}),\
  \ expected: 7 },\n     { actual: candidate([]int{1, -1}), expected: -1 },\n   }\n\
  \n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i), func(t\
  \ *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"%v\",\
  \ tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected, tc.actual)\n\
  \t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    var min int\n    for i := 0; i < len(nums); i++ {\n        min\
    \ = nums[i]\n        for j := i + 1; j < len(nums); j++ {\n            min = nums[i]\
    \ + nums[j]\n            for k := j + 1; k < len(nums); k++ {\n              \
    \  min = nums[i] + nums[j] + nums[k]\n                if min < nums[i] {\n   \
    \                 break\n                }\n            }\n        }\n    }\n\
    \    return min\n}\n", "    // write your code here\n    if len(nums) == 0 {\n\
    \        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return\
    \ minSum\n}\n", "    // write your code here\n    if len(nums) == 0 {\n      \
    \  return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return\
    \ minSum\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    n := len(nums)\n\
    \    if n == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for\
    \ i := 1; i < n; i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    for i := 0; i < n; i++ {\n        minSum = min(minSum + nums[i], nums[i])\n\
    \    }\n    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    n := len(nums)\n\
    \    if n == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n    for i\
    \ := 1; i < n; i++ {\n        min = nums[i] + min\n    }\n    \n    for i := 0;\
    \ i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if nums[j] <\
    \ nums[i] {\n                min = nums[i] + min\n            } else {\n     \
    \           min = nums[j] + min\n            }\n        }\n    }\n    \n    return\
    \ min\n}\n", "    // write your code here\n    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n\
    \        minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n\
    }\n", "    // write your code here\n    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums); i++ {\n     \
    \   min = min + nums[i]\n    }\n    \n    for i := 0; i < len(nums); i++ {\n \
    \       for j := i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j]\
    \ < min {\n                min = nums[i] + nums[j]\n            }\n        }\n\
    \    }\n    \n    return min\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    var min int\n    for i := 0; i < len(nums);\
    \ i++ {\n        min = nums[i]\n        for j := i + 1; j < len(nums); j++ {\n\
    \            min = min + nums[j]\n            for k := j + 1; k < len(nums); k++\
    \ {\n                min = min + nums[k]\n                if min < 0 {\n     \
    \               min = 0\n                }\n                if min < nums[i] {\n\
    \                    min = nums[i]\n                }\n            }\n       \
    \ }\n    }\n    return min\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n\n    minSum := nums[0]\n    for i := 1; i\
    \ < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \n    return minSum\n}\n", "    // write your code here\n    if len(nums) == 0\
    \ {\n        return 0\n    }\n    \n    n := len(nums)\n    \n    minSum := nums[0]\n\
    \    \n    for i := 1; i < n; i++ {\n        minSum = min(minSum + nums[i], nums[i])\n\
    \    }\n    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    n := len(nums)\n    \n    minSum\
    \ := nums[0]\n    \n    for i := 1; i < n; i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    \n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n\n    minSum := nums[0]\n    for i := 1; i\
    \ < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \n    return minSum\n}\n", "    // write your code here\n    if len(nums) == 0\
    \ {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i <\
    \ len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n \
    \   \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = nums[i] + minSum\n    }\n    \n    for\
    \ i := 0; i < len(nums); i++ {\n        for j := i + 1; j < len(nums); j++ {\n\
    \            if nums[i] + nums[j] < minSum {\n                minSum = nums[i]\
    \ + nums[j]\n            }\n        }\n    }\n    \n    return minSum\n}\n", " \
    \   // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    return minSum\n}\n", "    // write\
    \ your code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n   \
    \ minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n\n    minSum := nums[0]\n    for i := 1; i\
    \ < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \n    return minSum\n}\n", "    // write your code here\n    n := len(nums)\n\
    \    if n == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for\
    \ i := 1; i < n; i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    for i := 0; i < n; i++ {\n        minSum = min(minSum + nums[i], nums[i])\n\
    \    }\n    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    n := len(nums)\n    \n    min :=\
    \ nums[0]\n    \n    for i := 1; i < n; i++ {\n        min = nums[i] + min\n \
    \   }\n    \n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++\
    \ {\n            if nums[j] < nums[i] {\n                min = nums[j] + min\n\
    \            }\n        }\n    }\n    \n    return min\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    var min int\n\
    \    for i := 0; i < len(nums); i++ {\n        min = nums[i]\n        for j :=\
    \ i + 1; j < len(nums); j++ {\n            min = nums[i] + nums[j]\n         \
    \   for k := j + 1; k < len(nums); k++ {\n                min = nums[i] + nums[j]\
    \ + nums[k]\n                if min < nums[i] {\n                    break\n \
    \               }\n            }\n        }\n    }\n    return min\n}\n", "  \
    \  if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = nums[i] + min(minSum,\
    \ nums[i] + minSubArraySum(nums[i:]) )\n    }\n    \n    return minSum\n}\n",
  "    // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  var minSum int\n    for i := 0; i < len(nums); i++ {\n        minSum = nums[i]\n\
    \        for j := i + 1; j < len(nums); j++ {\n            minSum += nums[j]\n\
    \            if minSum < 0 {\n                minSum = 0\n            }\n    \
    \        if minSum < nums[i] {\n                minSum = nums[i]\n           \
    \ }\n        }\n    }\n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = nums[i] + minSum\n   \
    \ }\n    \n    for i := 1; i < len(nums); i++ {\n        for j := i + 1; j < len(nums);\
    \ j++ {\n            if nums[i] + nums[j] < minSum {\n                minSum =\
    \ nums[i] + nums[j]\n            }\n        }\n    }\n    \n    return minSum\n\
    }\n", "    // write your code here\n    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums); i++ {\n     \
    \   min = min + nums[i]\n    }\n    \n    for i := 0; i < len(nums); i++ {\n \
    \       if i == 0 {\n            min = min + nums[i]\n        } else {\n     \
    \       min = min + nums[i] - nums[i-1]\n        }\n    }\n    \n    return min\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    return minSum\n}\n", "    // write your code here\n   \
    \ if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        min = nums[i] + min\n    }\n  \
    \  \n    for i := 0; i < len(nums); i++ {\n        for j := i + 1; j < len(nums);\
    \ j++ {\n            if nums[i] + nums[j] < min {\n                min = nums[i]\
    \ + nums[j]\n            }\n        }\n    }\n    \n    return min\n}\n", "  \
    \  if len(nums) == 0 {\n        return 0\n    }\n    \n    n := len(nums)\n  \
    \  \n    dp := make([][]int, n)\n    \n    for i := 0; i < n; i++ {\n        dp[i]\
    \ = make([]int, n)\n    }\n    \n    for i := 0; i < n; i++ {\n        dp[i][i]\
    \ = nums[i]\n    }\n    \n    for i := 1; i < n; i++ {\n        for j := 0; j\
    \ < i; j++ {\n            dp[i][j] = dp[i-1][j] + nums[i]\n        }\n    }\n\
    \    \n    for i := 2; i < n; i++ {\n        for j := 0; j < i; j++ {\n      \
    \      dp[i][j] = min(dp[i-1][j], dp[i-1][j+1]) + nums[i]\n        }\n    }\n\
    \    \n    return dp[n-1][0]\n}\n", "    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n  \
    \      minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n\
    }\n", "    // write your code here\n    if len(nums) == 0 {\n        return 0\n\
    \    }\n\n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n      \
    \  minSum = min(minSum + nums[i], nums[i])\n    }\n\n    return minSum\n}\n",
  "    // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = nums[i] + minSum\n    }\n\n    for i := 1; i < len(nums); i++ {\n        for\
    \ j := i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j] < minSum\
    \ {\n                minSum = nums[i] + nums[j]\n            }\n        }\n  \
    \  }\n\n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    if len(nums) == 0 {\n        return 0\n \
    \   }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n   \
    \     minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n\
    }\n", "    // write your code here\n    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n  \
    \      minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n\
    }\n", "    // write your code here\n    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums); i++ {\n     \
    \   min = min + nums[i]\n    }\n    \n    for i := 0; i < len(nums); i++ {\n \
    \       if nums[i] < 0 {\n            min = min - nums[i]\n        } else {\n\
    \            min = min + nums[i]\n        }\n    }\n    \n    return min\n}\n",
  "    // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n\n    return minSum\n}\n", "    //\
    \ write your code here\n    n := len(nums)\n    if n == 0 {\n        return 0\n\
    \    }\n    \n    minSum := nums[0]\n    for i := 1; i < n; i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    for i := 0; i < n; i++ {\n\
    \        minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n\
    }\n", "    // write your code here\n    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n  \
    \      minSum = min(minSum + nums[i], nums[i])\n    }\n    return minSum\n}\n",
  "    // write your code here\n    n := len(nums)\n    if n == 0 {\n        return\
    \ 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < n; i++ {\n      \
    \  minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n",
  "    // write your code here\n    n := len(nums)\n    if n == 0 {\n        return\
    \ 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < n; i++ {\n      \
    \  minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n",
  "    var minSum int\n    for i := 0; i < len(nums); i++ {\n        minSum = nums[i]\n\
    \        for j := i + 1; j < len(nums); j++ {\n            minSum += nums[j]\n\
    \            if minSum < 0 {\n                minSum = 0\n            }\n    \
    \        if minSum < nums[i] {\n                minSum = nums[i]\n           \
    \ }\n        }\n    }\n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n\n    minSum := nums[0]\n \
    \   for i := 1; i < len(nums); i++ {\n        minSum = nums[i] + minSum\n    \
    \    if minSum < 0 {\n            minSum = 0\n        }\n    }\n\n    return minSum\n\
    }\n", "    // write your code here\n    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n  \
    \      minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n\
    }\n", "    // write your code here\n    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n  \
    \      minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n\
    }\n", "    // write your code here\n    n := len(nums)\n    if n == 0 {\n    \
    \    return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < n; i++\
    \ {\n        minSum = nums[i] + minSum\n    }\n    \n    for i := 0; i < n; i++\
    \ {\n        for j := i + 1; j < n; j++ {\n            if nums[i] + nums[j] <\
    \ minSum {\n                minSum = nums[i] + nums[j]\n            }\n      \
    \  }\n    }\n    \n    return minSum\n}\n", "    // write your code here\n   \
    \ if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    if len(nums) == 0 {\n \
    \       return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return\
    \ minSum\n}\n", "    // write your code here\n    if len(nums) == 0 {\n      \
    \  return 0\n    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums); i++\
    \ {\n        min = min + nums[i]\n    }\n    \n    for i := 0; i < len(nums);\
    \ i++ {\n        for j := i + 1; j < len(nums); j++ {\n            if nums[i]\
    \ + nums[j] < min {\n                min = nums[i] + nums[j]\n            }\n\
    \        }\n    }\n    \n    return min\n}\n", "    var minSum int\n    for i\
    \ := 0; i < len(nums); i++ {\n        minSum = nums[i]\n        for j := i + 1;\
    \ j < len(nums); j++ {\n            minSum += nums[j]\n            if minSum <\
    \ 0 {\n                minSum = 0\n            }\n            if minSum < nums[i]\
    \ {\n                minSum = nums[i]\n            }\n        }\n    }\n    return\
    \ minSum\n}\n", "    var sum int\n    for i := 0; i < len(nums); i++ {\n     \
    \   sum += nums[i]\n        if i > 0 && sum < 0 {\n            sum = 0\n     \
    \   }\n    }\n    return sum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n\n    minSum := nums[0]\n    for i := 1; i\
    \ < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    return minSum\n}\n", "    // write your code here\n    if len(nums) == 0\
    \ {\n        return 0\n    }\n    \n    nums_len := len(nums)\n    \n    min_sum\
    \ := nums[0]\n    \n    for i := 1; i < nums_len; i++ {\n        min_sum = min(min_sum\
    \ + nums[i], nums[i])\n    }\n    \n    return min_sum\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    if len(nums) == 0 {\n        return 0\n \
    \   }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n   \
    \     minSum = min(minSum + nums[i], nums[i])\n    }\n    return minSum\n}\n",
  "    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    n := len(nums)\n\
    \    \n    minSum := nums[0]\n    \n    for i := 1; i < n; i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = nums[i] + minSum\n    }\n    \n    for i := 0; i < len(nums) - 1; i++ {\n\
    \        for j := i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j]\
    \ < minSum {\n                minSum = nums[i] + nums[j]\n            }\n    \
    \    }\n    }\n    \n    return minSum\n}\n", "    // write your code here\n \
    \   if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = nums[i] + minSum\n   \
    \ }\n    \n    for i := 0; i < len(nums)-1; i++ {\n        minSum = nums[i] +\
    \ minSum\n        if minSum < 0 {\n            minSum = 0\n        }\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n\n    minSum := nums[0]\n    for i := 1; i\
    \ < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \n    return minSum\n}\n", "    // write your code here\n    if len(nums) == 0\
    \ {\n        return 0\n    }\n    \n    min := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        min = nums[i] + min\n    }\n    \n    for i := 0; i < len(nums);\
    \ i++ {\n        for j := i + 1; j < len(nums); j++ {\n            if nums[j]\
    \ < nums[i] {\n                min = nums[j] + min\n            }\n        }\n\
    \    }\n    \n    return min\n}\n", "    if len(nums) == 0 {\n        return 0\n\
    \    }\n\n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n      \
    \  minSum = min(minSum + nums[i], nums[i])\n    }\n\n    return minSum\n}\n",
  "    // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = nums[i] + minSum\n    }\n    \n    for i := 1; i < len(nums); i++ {\n    \
    \    for j := i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j] <\
    \ minSum {\n                minSum = nums[i] + nums[j]\n            }\n      \
    \  }\n    }\n    \n    return minSum\n}\n", "    var minSum int\n    for i :=\
    \ 0; i < len(nums); i++ {\n        minSum = nums[i]\n        for j := i + 1; j\
    \ < len(nums); j++ {\n            minSum += nums[j]\n            if minSum < 0\
    \ {\n                minSum = 0\n            }\n            if minSum < nums[i]\
    \ {\n                minSum = nums[i]\n            }\n        }\n    }\n    return\
    \ minSum\n}\n\n// Given a list of integers nums, find the minimum sum of any non-empty\
    \ sub-list\n// of nums.\n// Example\n// >>> minSubArraySum([2, 3, 4, 1, 2, 4])\n\
    // 1\n// >>> minSubArraySum([-1, -2, -3])\n// -6", "    // write your code here\n\
    \    n := len(nums)\n    if n == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < n; i++ {\n        minSum = nums[i] + min(minSum,\
    \ nums[i] + minSubArraySum(nums[i:]) )\n    }\n    return minSum\n}\n", "    //\
    \ write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n   \
    \ \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  var minSum int\n    for i := 0; i < len(nums); i++ {\n        minSum = nums[i]\n\
    \        for j := i + 1; j < len(nums); j++ {\n            minSum += nums[j]\n\
    \            if minSum < 0 {\n                minSum = 0\n            }\n    \
    \        if minSum < nums[i] {\n                minSum = nums[i]\n           \
    \ }\n        }\n    }\n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = nums[i] + minSum\n   \
    \ }\n    \n    for i := 0; i < len(nums); i++ {\n        for j := i + 1; j < len(nums);\
    \ j++ {\n            if nums[i] + nums[j] < minSum {\n                minSum =\
    \ nums[i] + nums[j]\n            }\n        }\n    }\n    \n    return minSum\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    if len(nums) == 0 {\n \
    \       return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return\
    \ minSum\n}\n", "    // write your code here\n    n := len(nums)\n    if n ==\
    \ 0 {\n        return 0\n    }\n    if n == 1 {\n        return nums[0]\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < n; i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    return minSum\n}\n", "    // write your code\
    \ here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum :=\
    \ nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum +\
    \ nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n\n    minSum :=\
    \ nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum +\
    \ nums[i], nums[i])\n    }\n\n    return minSum\n}\n", "    // write your code\
    \ here\n    if len(nums) == 0 {\n        return 0\n    }\n\n    n := len(nums)\n\
    \    dp := make([]int, n)\n    dp[0] = nums[0]\n    for i := 1; i < n; i++ {\n\
    \        dp[i] = dp[i-1] + nums[i]\n    }\n\n    for i := 1; i < n; i++ {\n  \
    \      for j := i; j < n; j++ {\n            if dp[j] - dp[i-1] < 0 {\n      \
    \          dp[j] = dp[i-1]\n            } else {\n                dp[j] = dp[j]\
    \ - dp[i-1]\n            }\n        }\n    }\n\n    return dp[n-1]\n}\n", "  \
    \  // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    return minSum\n}\n", "    // write\
    \ your code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n   \
    \ minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = nums[i]\
    \ + min(minSum, nums[i] + nums[i-1])\n    }\n    return minSum\n}\n", "    //\
    \ write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n   \
    \ \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = nums[i] + minSum\n    }\n    \n    for i := 1; i < len(nums); i++ {\n    \
    \    for j := i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j] <\
    \ minSum {\n                minSum = nums[i] + nums[j]\n            }\n      \
    \  }\n    }\n    \n    return minSum\n}\n", "    // write your code here\n   \
    \ if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = nums[i] + minSum\n   \
    \ }\n    \n    for i := 0; i < len(nums) - 1; i++ {\n        minSum = nums[i]\
    \ + minSum\n        for j := i + 1; j < len(nums); j++ {\n            minSum =\
    \ nums[j] + minSum\n            if minSum < minSum {\n                minSum =\
    \ minSum\n            }\n        }\n    }\n    \n    return minSum\n}\n", "  \
    \  // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = nums[i] + minSum\n    }\n\n    for i := 0; i < len(nums) - 1; i++ {\n    \
    \    for j := i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j] <\
    \ minSum {\n                minSum = nums[i] + nums[j]\n            }\n      \
    \  }\n    }\n\n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n    for i := 1; i\
    \ < len(nums); i++ {\n        min = min + nums[i]\n    }\n    \n    for i := 0;\
    \ i < len(nums) - 1; i++ {\n        for j := i + 1; j < len(nums); j++ {\n   \
    \         if nums[i] + nums[j] < min {\n                min = nums[i] + nums[j]\n\
    \            }\n        }\n    }\n    \n    return min\n}\n", "    // write your\
    \ code here\n    n := len(nums)\n    if n == 0 {\n        return 0\n    }\n  \
    \  \n    if n == 1 {\n        return nums[0]\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < n; i++ {\n        minSum = min(minSum + nums[i], nums[i])\n\
    \    }\n    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = nums[i] + minSum\n    }\n    \n    for\
    \ i := 1; i < len(nums); i++ {\n        for j := i + 1; j < len(nums); j++ {\n\
    \            if nums[i] + nums[j] < minSum {\n                minSum = nums[i]\
    \ + nums[j]\n            }\n        }\n    }\n    \n    return minSum\n}\n", " \
    \   // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = nums[i] + minSum\n    }\n    \n    for i := 0; i < len(nums); i++ {\n    \
    \    if i == 0 {\n            minSum = nums[i]\n        } else {\n           \
    \ minSum = nums[i] + minSum\n        }\n        \n        if minSum < 0 {\n  \
    \          minSum = 0\n        }\n    }\n    \n    return minSum\n}\n", "    var\
    \ minSum int\n    for i := 0; i < len(nums); i++ {\n        minSum = nums[i]\n\
    \        for j := i + 1; j < len(nums); j++ {\n            minSum += nums[j]\n\
    \            if minSum < 0 {\n                minSum = 0\n            }\n    \
    \        if minSum < nums[i] {\n                minSum = nums[i]\n           \
    \ }\n        }\n    }\n    return minSum\n}\n\n// Given a list of integers nums,\
    \ find the minimum sum of any non-empty sub-list\n// of nums.\n// Example\n//\
    \ >>> minSubArraySum([2, 3, 4, 1, 2, 4])\n// 1\n// >>> minSubArraySum([-1, -2,\
    \ -3])\n// -6", "    // write your code here\n    if len(nums) == 0 {\n      \
    \  return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = nums[i] + minSum\n    }\n    \n    for i := 1; i < len(nums);\
    \ i++ {\n        for j := i + 1; j < len(nums); j++ {\n            if nums[i]\
    \ + nums[j] < minSum {\n                minSum = nums[i] + nums[j]\n         \
    \   }\n        }\n    }\n    \n    return minSum\n}\n", "    // write your code\
    \ here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum :=\
    \ nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum +\
    \ nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    n := len(nums)\n    \n    // dp[i][j]\
    \ = min(dp[i][j], dp[i][j-1] + nums[i])\n    dp := make([][]int, n)\n    for i\
    \ := 0; i < n; i++ {\n        dp[i] = make([]int, n)\n        dp[i][i] = nums[i]\n\
    \    }\n    \n    for i := 1; i < n; i++ {\n        for j := i; j < n; j++ {\n\
    \            dp[i][j] = min(dp[i][j], dp[i][j-1] + nums[j])\n        }\n    }\n\
    \    \n    return dp[n-1][n-1]\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    nums.sort()\n    \n    minSum :=\
    \ nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = nums[i] + minSum\n\
    \    }\n    \n    for i := 0; i < len(nums) - 1; i++ {\n        minSum = nums[i]\
    \ + minSum\n    }\n    \n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    return minSum\n}\n", "    // write your code here\n   \
    \ if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    var minSum int\n    for\
    \ i := 0; i < len(nums); i++ {\n        minSum = nums[i]\n        for j := i +\
    \ 1; j < len(nums); j++ {\n            minSum += nums[j]\n            if minSum\
    \ < 0 {\n                minSum = 0\n            }\n            if minSum < minSum\
    \ {\n                minSum = minSum\n            }\n        }\n    }\n    return\
    \ minSum\n}\n", "    // write your code here\n    if len(nums) == 0 {\n      \
    \  return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return\
    \ minSum\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n\n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = nums[i] +\
    \ minSum\n    }\n\n    for i := 1; i < len(nums); i++ {\n        for j := i +\
    \ 1; j < len(nums); j++ {\n            if nums[i] + nums[j] < minSum {\n     \
    \           minSum = nums[i] + nums[j]\n            }\n        }\n    }\n\n  \
    \  return minSum\n}\n", "    // write your code here\n    if len(nums) == 0 {\n\
    \        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = nums[i] + minSum\n    }\n    \n    for i := 1; i < len(nums);\
    \ i++ {\n        for j := i + 1; j < len(nums); j++ {\n            if nums[i]\
    \ + nums[j] < minSum {\n                minSum = nums[i] + nums[j]\n         \
    \   }\n        }\n    }\n    \n    return minSum\n}\n", "    // write your code\
    \ here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum :=\
    \ nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum +\
    \ nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    nums.sort()\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    nums_copy := make([]int, len(nums))\n    copy(nums_copy, nums)\n  \
    \  \n    min_sum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        min_sum\
    \ = nums[i] + min_sum\n        \n        for j := 0; j < i; j++ {\n          \
    \  if nums[j] < 0 {\n                continue\n            }\n            \n \
    \           if nums[i] + nums[j] < min_sum {\n                min_sum = nums[i]\
    \ + nums[j]\n            }\n        }\n    }\n    \n    return min_sum\n}\n",
  "    // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = nums[i] + minSum\n    }\n    \n    for i := 1; i < len(nums); i++ {\n    \
    \    for j := i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j] <\
    \ minSum {\n                minSum = nums[i] + nums[j]\n            }\n      \
    \  }\n    }\n    \n    return minSum\n}\n", "    // write your code here\n   \
    \ if len(nums) == 0 {\n        return 0\n    }\n\n    minSum := nums[0]\n    for\
    \ i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n\
    \    }\n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n    for i := 1; i\
    \ < len(nums); i++ {\n        min = min + nums[i]\n    }\n    \n    for i := 0;\
    \ i < len(nums); i++ {\n        for j := i + 1; j < len(nums); j++ {\n       \
    \     if nums[i] + nums[j] < min {\n                min = nums[i] + nums[j]\n\
    \            }\n        }\n    }\n    \n    return min\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    n := len(nums)\n    if n == 0 {\n        return 0\n    }\n  \
    \  \n    minSum := nums[0]\n    for i := 1; i < n; i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = nums[i] +\
    \ minSum\n    }\n    \n    for i := 0; i < len(nums); i++ {\n        for j :=\
    \ i + 1; j < len(nums); j++ {\n            if nums[j] < nums[i] {\n          \
    \      minSum = nums[j] + minSum\n            }\n        }\n    }\n    \n    return\
    \ minSum\n}\n", "    // write your code here\n    if len(nums) == 0 {\n      \
    \  return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return\
    \ minSum\n}\n", "    // write your code here\n    if len(nums) == 0 {\n      \
    \  return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return\
    \ minSum\n}\n", "    // write your code here\n    if len(nums) == 0 {\n      \
    \  return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return\
    \ minSum\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n\n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n\n    return minSum\n}\n", "    // write your code\
    \ here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum :=\
    \ nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum +\
    \ nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    var minSum int\n\
    \    for i := 0; i < len(nums); i++ {\n        minSum = nums[i]\n        for j\
    \ := i + 1; j < len(nums); j++ {\n            minSum += nums[j]\n            if\
    \ minSum < 0 {\n                minSum = 0\n            }\n            if minSum\
    \ < nums[i] {\n                minSum = nums[i]\n            }\n        }\n  \
    \  }\n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = nums[i] + minSum\n    }\n    \n    for\
    \ i := 0; i < len(nums) - 1; i++ {\n        minSum = nums[i] + minSum\n      \
    \  for j := i + 1; j < len(nums); j++ {\n            minSum = nums[j] + minSum\n\
    \            if minSum < nums[i] {\n                minSum = nums[i]\n       \
    \     }\n        }\n    }\n    \n    return minSum\n}\n", "    // write your code\
    \ here\n    n := len(nums)\n    if n == 0 {\n        return 0\n    }\n    \n \
    \   minSum := nums[0]\n    for i := 1; i < n; i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    n := len(nums)\n    \n    // dp[i][j]\
    \ means the minimum sum of nums[0..i]\n    // when we have j elements\n    dp\
    \ := make([][]int, n)\n    for i := 0; i < n; i++ {\n        dp[i] = make([]int,\
    \ n)\n        for j := 0; j < n; j++ {\n            if i == j {\n            \
    \    dp[i][j] = nums[i]\n            } else {\n                dp[i][j] = dp[i][j-1]\
    \ + nums[i]\n            }\n        }\n    }\n    \n    // dp[i][j] means the\
    \ minimum sum of nums[0..i]\n    // when we have j elements\n    for i := 1; i\
    \ < n; i++ {\n        for j := 1; j < n; j++ {\n            dp[i][j] = min(dp[i-1][j],\
    \ dp[i][j-1]) + nums[i]\n        }\n    }\n    \n    return dp[n-1][n-1]\n}\n",
  "    // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    n := len(nums)\n    \n    dp := make([]int, n)\n    \n    for i :=\
    \ 0; i < n; i++ {\n        dp[i] = nums[i]\n    }\n    \n    for i := 1; i < n;\
    \ i++ {\n        for j := 0; j < i; j++ {\n            dp[i] = min(dp[i], dp[j]\
    \ + nums[i])\n        }\n    }\n    \n    return dp[n-1]\n}\n", "    // write\
    \ your code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n   \
    \ minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = nums[i] +\
    \ minSum\n    }\n    \n    for i := 1; i < len(nums); i++ {\n        for j :=\
    \ i + 1; j < len(nums); j++ {\n            if nums[i] + nums[j] < minSum {\n \
    \               minSum = nums[i] + nums[j]\n            }\n        }\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = nums[i] + min(minSum, nums[i] + nums[i-1])\n\
    \    }\n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    if len(nums) == 0 {\n        return 0\n \
    \   }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n   \
    \     minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n\
    }\n", "    // write your code here\n    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n  \
    \      minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n\n    min := nums[0]\n    for\
    \ i := 1; i < len(nums); i++ {\n        min = min + nums[i]\n    }\n\n    for\
    \ i := 0; i < len(nums) - 1; i++ {\n        for j := i + 1; j < len(nums); j++\
    \ {\n            if nums[i] + nums[j] < min {\n                min = nums[i] +\
    \ nums[j]\n            }\n        }\n    }\n\n    return min\n}\n", "    // write\
    \ your code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n   \
    \ n := len(nums)\n    \n    dp := make([]int, n)\n    \n    for i := 0; i < n;\
    \ i++ {\n        dp[i] = nums[i]\n    }\n    \n    for i := 1; i < n; i++ {\n\
    \        for j := 0; j < i; j++ {\n            dp[i] = min(dp[i], dp[j] + nums[i])\n\
    \        }\n    }\n    \n    return dp[n-1]\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        min = nums[i] + min\n    }\n  \
    \  \n    for i := 0; i < len(nums); i++ {\n        if nums[i] + min < 0 {\n  \
    \          min = 0\n        } else {\n            min = nums[i] + min\n      \
    \  }\n    }\n    \n    return min\n}\n", "    // write your code here\n    if\
    \ len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n   \
    \ for i := 1; i < len(nums); i++ {\n        minSum = nums[i] + minSum\n    }\n\
    \    \n    for i := 1; i < len(nums); i++ {\n        for j := i + 1; j < len(nums);\
    \ j++ {\n            if nums[i] + nums[j] < minSum {\n                minSum =\
    \ nums[i] + nums[j]\n            }\n        }\n    }\n    \n    return minSum\n\
    }\n", "    // write your code here\n    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n  \
    \      minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n\
    }\n", "    // write your code here\n    if len(nums) == 0 {\n        return 0\n\
    \    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n  \
    \      minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n\
    }\n", "    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    return minSum\n}\n", "    // write your code here\n   \
    \ if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your code here\n\
    \    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i],\
    \ nums[i])\n    }\n    \n    return minSum\n}\n", "    if len(nums) == 0 {\n \
    \       return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return\
    \ minSum\n}\n", "    // write your code here\n    n := len(nums)\n    if n ==\
    \ 0 {\n        return 0\n    }\n    \n    if n == 1 {\n        return nums[0]\n\
    \    }\n    \n    if n == 2 {\n        return nums[0] + nums[1]\n    }\n    \n\
    \    if nums[0] < 0 {\n        return minSubArraySum(nums[1:])\n    }\n    \n\
    \    if nums[n-1] < 0 {\n        return minSubArraySum(nums[0:n-1])\n    }\n \
    \   \n    sum := nums[0]\n    for i := 1; i < n; i++ {\n        sum += nums[i]\n\
    \        if sum < 0 {\n            sum = 0\n        }\n    }\n    \n    return\
    \ sum\n}\n", "    // write your code here\n    if len(nums) == 0 {\n        return\
    \ 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n\
    \        minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n\
    }\n", "    // write your code here\n    if len(nums) == 0 {\n        return 0\n\
    \    }\n\n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n      \
    \  minSum = min(minSum + nums[i], nums[i])\n    }\n    return minSum\n}\n", " \
    \   // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    return minSum\n}\n", "    // write\
    \ your code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n   \
    \ minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    nums.sort()\n    \n    sum := nums[0]\n\
    \    for i := 1; i < len(nums); i++ {\n        sum += nums[i]\n        if sum\
    \ < 0 {\n            sum = 0\n        }\n    }\n    \n    return sum\n}\n", " \
    \   // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    n := len(nums)\n    \n    // dp[i] stores the minimum sum of nums[0...i]\n\
    \    dp := make([]int, n)\n    \n    // dp[i] = min(dp[i-1], nums[i])\n    for\
    \ i := 1; i < n; i++ {\n        dp[i] = dp[i-1] + nums[i]\n    }\n    \n    //\
    \ dp[0] = nums[0]\n    dp[0] = nums[0]\n    \n    // dp[n-1] = nums[n-1]\n   \
    \ dp[n-1] = nums[n-1]\n    \n    // dp[i] = min(dp[i-1], dp[i-2] + nums[i])\n\
    \    for i := 2; i < n; i++ {\n        dp[i] = min(dp[i-1], dp[i-2] + nums[i])\n\
    \    }\n    \n    // return min(dp[n-1], dp[n-2])\n    return min(dp[n-1], dp[n-2])\n\
    }\n\n// min(a, b)", "    // write your code here\n    if len(nums) == 0 {\n  \
    \      return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums);\
    \ i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n    \n    return\
    \ minSum\n}\n", "    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    if len(nums) == 0 {\n        return 0\n \
    \   }\n\n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n       \
    \ minSum = min(minSum + nums[i], nums[i])\n    }\n\n    return minSum\n}\n", " \
    \   // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "  \
    \  if len(nums) == 0 {\n        return 0\n    }\n\n    minSum := nums[0]\n   \
    \ for i := 1; i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n\
    \    }\n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    if len(nums) == 0 {\n        return 0\n \
    \   }\n    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n   \
    \     minSum = min(minSum + nums[i], nums[i])\n    }\n    return minSum\n}\n",
  "    // write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n\
    \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n\n    return minSum\n}\n", "    //\
    \ write your code here\n    if len(nums) == 0 {\n        return 0\n    }\n   \
    \ \n    minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum\
    \ = min(minSum + nums[i], nums[i])\n    }\n    return minSum\n}\n", "    // write\
    \ your code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n   \
    \ minSum := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    // write your\
    \ code here\n    if len(nums) == 0 {\n        return 0\n    }\n    \n    minSum\
    \ := nums[0]\n    for i := 1; i < len(nums); i++ {\n        minSum = min(minSum\
    \ + nums[i], nums[i])\n    }\n    \n    return minSum\n}\n", "    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    return minSum\n}\n", "    // write your code here\n    if len(nums) == 0\
    \ {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1; i <\
    \ len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n \
    \   \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    minSum := nums[0]\n    for i := 1;\
    \ i < len(nums); i++ {\n        minSum = min(minSum + nums[i], nums[i])\n    }\n\
    \    \n    return minSum\n}\n", "    // write your code here\n    if len(nums)\
    \ == 0 {\n        return 0\n    }\n    \n    min := nums[0]\n    for i := 1; i\
    \ < len(nums); i++ {\n        min = min + nums[i]\n    }\n    \n    for i := 0;\
    \ i < len(nums); i++ {\n        for j := i + 1; j < len(nums); j++ {\n       \
    \     if nums[i] + nums[j] < min {\n                min = nums[i] + nums[j]\n\
    \            }\n        }\n    }\n    \n    return min\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

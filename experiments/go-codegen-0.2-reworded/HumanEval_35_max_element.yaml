name: HumanEval_35_max_element
language: go_test.go
prompt: "package max_element_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Return maximum element in the list.\n// >>> max_element([]int{1, 2, 3})\n// 3\n\
  // >>> max_element([]int{5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10})\n// 123\nfunc max_element(l\
  \ []int) int {\n"
tests: "func TestMax_Element(t *testing.T) {\n  candidate := max_element\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate([]int{1, 2, 3}), expected: 3 },\n     { actual:\
  \ candidate([]int{5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), expected: 124 },\n  \
  \ }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i),\
  \ func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n\n    max := l[0]\n    for _, v := range l {\n     \
    \   if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i\
    \ := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n \
    \       }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    \n    max := l[0]\n    for _, v := range l {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    \n    return max\n}\n", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _, v\
    \ := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n\
    \    max := l[0]\n    for _, v := range l {\n        if v > max {\n          \
    \  max = v\n        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n    \n    max := l[0]\n    for _, v := range l {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    \n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max :=\
    \ l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n         \
    \   max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max_value\
    \ := l[0]\n    for _, v := range l {\n        if v > max_value {\n           \
    \ max_value = v\n        }\n    }\n\n    return max_value\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _, v := range\
    \ l {\n        if v > max {\n            max = v\n        }\n    }\n    \n   \
    \ return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n   \
    \ max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n  \
    \          max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n\
    \    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _, v\
    \ := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n\
    \    max := l[0]\n    for _, v := range l {\n        if v > max {\n          \
    \  max = v\n        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n\
    \    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _, v\
    \ := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\
    \    \n    max := l[0]\n    for _, v := range l {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    \n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max\
    \ := l[0]\n    for _, v := range l {\n        if v > max {\n            max =\
    \ v\n        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n       \
    \ return 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n   \
    \ return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n   \
    \ max := l[0]\n    for _, v := range l {\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n \
    \       return 0\n    }\n    \n    max := l[0]\n    for _, v := range l {\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    \n    return max\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n\
    \    for _, v := range l {\n        if v > max {\n            max = v\n      \
    \  }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n \
    \   }\n\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n\n    return max\n}\n", " \
    \   if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for i :=\
    \ 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n    \
    \    }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    \n    return max\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i\
    \ := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n \
    \       }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n\n    max := l[0]\n    for _, v := range l {\n        if v > max {\n\
    \            max = v\n        }\n    }\n\n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n\n    return max\n}\n", " \
    \   if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for _, v\
    \ := range l {\n        if v > max {\n            max = v\n        }\n    }\n\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n\
    \    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for _, v := range\
    \ l {\n        if v > max {\n            max = v\n        }\n    }\n\n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max :=\
    \ l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n         \
    \   max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n\n    max_index := 0\n    max_value := l[0]\n\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max_value {\n          \
    \  max_value = l[i]\n            max_index = i\n        }\n    }\n\n    return\
    \ max_value\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max\
    \ := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n      \
    \      max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\
    \    \n    max := l[0]\n    for _, v := range l {\n        if v > max {\n    \
    \        max = v\n        }\n    }\n    return max\n}\n", "    if len(l) == 0\
    \ {\n        return 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n \
    \   \n    max := l[0]\n    for _, v := range l {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    \n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for _, v := range l\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n\n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n\
    \    for _, v := range l {\n        if v > max {\n            max = v\n      \
    \  }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    \n    return max\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i\
    \ := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n \
    \       }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    \n    max_index := 0\n    max_value := l[0]\n    for i := 1; i\
    \ < len(l); i++ {\n        if l[i] > max_value {\n            max_value = l[i]\n\
    \            max_index = i\n        }\n    }\n    return max_value\n}\n", "  \
    \  if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i\
    \ := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n \
    \       }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n\n    max := l[0]\n    for _, v := range l {\n        if v > max {\n\
    \            max = v\n        }\n    }\n\n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _, v := range\
    \ l {\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n\
    \    for _, v := range l {\n        if v > max {\n            max = v\n      \
    \  }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n\n    max := l[0]\n    for _, v := range l {\n        if v > max {\n \
    \           max = v\n        }\n    }\n\n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n\n    return max\n}\n", " \
    \   if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for\
    \ _, v := range l {\n        if v > max {\n            max = v\n        }\n  \
    \  }\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n \
    \   \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    \n    return max\n}\n", " \
    \   if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n       \
    \ return 0\n    }\n\n    max := l[0]\n    for _, v := range l {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n\n    return max\n}\n", "  \
    \  if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i\
    \ := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n \
    \       }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n\n    return max\n}\n", " \
    \   if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for _, v\
    \ := range l {\n        if v > max {\n            max = v\n        }\n    }\n\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n\
    \    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _, v\
    \ := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n\
    \    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for i := 1; i\
    \ < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\
    \    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    \n    return max\n}\n", " \
    \   if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for\
    \ _, v := range l {\n        if v > max {\n            max = v\n        }\n  \
    \  }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n  \
    \  }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    return max\n}\n", " \
    \   if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n       \
    \ return 0\n    }\n\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n    \
    \    if l[i] > max {\n            max = l[i]\n        }\n    }\n    return max\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n    \n    max := l[0]\n    for _, v := range l {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    \n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max :=\
    \ l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n         \
    \   max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n \
    \   \n    max := l[0]\n    for _, v := range l {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max\
    \ := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n      \
    \      max = l[i]\n        }\n    }\n\n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n\n    max := l[0]\n    for _, v := range l {\n\
    \        if v > max {\n            max = v\n        }\n    }\n\n    return max\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n    \n    max := l[0]\n    for _, v := range l {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for\
    \ _, v := range l {\n        if v > max {\n            max = v\n        }\n  \
    \  }\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n \
    \   \n    max := l[0]\n    for _, v := range l {\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    \n    return max\n}\n\n// Test max_element\n\
    // >>> max_element([])\n// 0\n// >>> max_element([1])\n// 1\n// >>> max_element([1,\
    \ 2, 3])\n// 3\n// >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
    // 123", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n\
    \    for _, v := range l {\n        if v > max {\n            max = v\n      \
    \  }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n       \
    \ if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max :=\
    \ l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n         \
    \   max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max\
    \ := l[0]\n    for _, v := range l {\n        if v > max {\n            max =\
    \ v\n        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n       \
    \ return 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n   \
    \ return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max\
    \ := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n      \
    \      max = l[i]\n        }\n    }\n\n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n\n    max := l[0]\n    for _, v := range l {\n\
    \        if v > max {\n            max = v\n        }\n    }\n\n    return max\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n    \n    max := l[0]\n    for _, v := range l {\n \
    \       if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n\n    max := l[0]\n    for _, v := range l {\n     \
    \   if v > max {\n            max = v\n        }\n    }\n    return max\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i\
    \ := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n \
    \       }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n       \
    \ if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max :=\
    \ l[0]\n    for _, v := range l {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    \n    max := l[0]\n    for _, v := range l {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    return max\n}\n\n// Test max_element\
    \ function.", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max :=\
    \ l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n         \
    \   max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n\
    \    max := l[0]\n    for _, v := range l {\n        if v > max {\n          \
    \  max = v\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n  \
    \      return 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max\
    \ := l[0]\n    for _, v := range l {\n        if v > max {\n            max =\
    \ v\n        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n       \
    \ return 0\n    }\n    \n    max := l[0]\n    for _, v := range l {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    \n    return max\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for _, v\
    \ := range l {\n        if v > max {\n            max = v\n        }\n    }\n\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n\
    \    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i :=\
    \ 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n    \
    \    }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n\n    max := l[0]\n    for _, v := range l {\n        if v > max {\n\
    \            max = v\n        }\n    }\n\n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n\n    max := l[0]\n    for _, v := range l {\n        if v > max {\n \
    \           max = v\n        }\n    }\n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n \
    \   return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max_value\
    \ := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max_value {\n\
    \            max_value = l[i]\n        }\n    }\n\n    return max_value\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i\
    \ := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n \
    \       }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    \n    max := l[0]\n    for _, v := range l {\n        if v > max\
    \ {\n            max = v\n        }\n    }\n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for _, v := range l\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n\n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n    \
    \    return 0\n    }\n    \n    max := l[0]\n    for _, v := range l {\n     \
    \   if v > max {\n            max = v\n        }\n    }\n    \n    return max\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n       \
    \ if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n      \
    \  return 0\n    }\n    \n    max := l[0]\n    for _, v := range l {\n       \
    \ if v > max {\n            max = v\n        }\n    }\n    \n    return max\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n\
    \    for _, v := range l {\n        if v > max {\n            max = v\n      \
    \  }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n\n    return max\n}\n", " \
    \   if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for i :=\
    \ 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n    \
    \    }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    \n    max := l[0]\n    for _, v := range l {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    \n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for _, v := range l\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n\n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max :=\
    \ l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n         \
    \   max = l[i]\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n\n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max :=\
    \ l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n         \
    \   max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n\
    \    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i :=\
    \ 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n    \
    \    }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n       \
    \ if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n      \
    \  return 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n   \
    \ return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n   \
    \ max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n  \
    \          max = l[i]\n        }\n    }\n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    \n    return max\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for i :=\
    \ 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n    \
    \    }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n\n    max := l[0]\n    for _, v := range l {\n        if v > max {\n \
    \           max = v\n        }\n    }\n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n\n    max := l[0]\n    for i := 1; i < len(l);\
    \ i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n\
    \    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    \n    return max\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _,\
    \ v := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\
    \    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    \n    return max\n}\n", " \
    \   if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n       \
    \ return 0\n    }\n\n    max := l[0]\n    for _, v := range l {\n        if v\
    \ > max {\n            max = v\n        }\n    }\n\n    return max\n}\n", "  \
    \  if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _,\
    \ v := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n\
    \    max := l[0]\n    for _, v := range l {\n        if v > max {\n          \
    \  max = v\n        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n\n    max_index := 0\n    max_value := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max_value {\n            max_value\
    \ = l[i]\n            max_index = i\n        }\n    }\n    return max_value\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n\n    max_value := l[0]\n    for i := 1; i < len(l); i++ {\n     \
    \   if l[i] > max_value {\n            max_value = l[i]\n        }\n    }\n\n\
    \    return max_value\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\
    \    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i := 1; i <\
    \ len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n        }\n\
    \    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    \n    return max\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _,\
    \ v := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n\
    \    max := l[0]\n    for _, v := range l {\n        if v > max {\n          \
    \  max = v\n        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n\
    \    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _, v := range\
    \ l {\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n\
    \    for _, v := range l {\n        if v > max {\n            max = v\n      \
    \  }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n \
    \   }\n\n    max := l[0]\n    for _, v := range l {\n        if v > max {\n  \
    \          max = v\n        }\n    }\n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _, v := range l\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    \n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n    \
    \    return 0\n    }\n    \n    max := l[0]\n    for _, v := range l {\n     \
    \   if v > max {\n            max = v\n        }\n    }\n    \n    return max\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n       \
    \ if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max :=\
    \ l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n         \
    \   max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if len(l) ==\
    \ 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _, v := range l\
    \ {\n        if v > max {\n            max = v\n        }\n    }\n    return max\n\
    }\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n\
    \    for _, v := range l {\n        if v > max {\n            max = v\n      \
    \  }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n       \
    \ if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n\
    \    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max =\
    \ l[i]\n        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n    \
    \    return 0\n    }\n\n    max := l[0]\n    for _, v := range l {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    return max\n}\n", "  \
    \  if len(l) == 0 {\n        return 0\n    }\n\n    max_index := 0\n    max_value\
    \ := l[0]\n\n    for i := 1; i < len(l); i++ {\n        if l[i] > max_value {\n\
    \            max_value = l[i]\n            max_index = i\n        }\n    }\n\n\
    \    return max_value\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\
    \    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    \n    return max\n}\n", " \
    \   if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n    for _, v\
    \ := range l {\n        if v > max {\n            max = v\n        }\n    }\n\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max\
    \ := l[0]\n    for _, v := range l {\n        if v > max {\n            max =\
    \ v\n        }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n       \
    \ return 0\n    }\n    \n    max_value := l[0]\n    for i := 1; i < len(l); i++\
    \ {\n        if l[i] > max_value {\n            max_value = l[i]\n        }\n\
    \    }\n    \n    return max_value\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n       \
    \ if l[i] > max {\n            max = l[i]\n        }\n    }\n    \n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max :=\
    \ l[0]\n    for _, v := range l {\n        if v > max {\n            max = v\n\
    \        }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n       \
    \ return 0\n    }\n    \n    max := l[0]\n    for _, v := range l {\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    return max\n}\n", "  \
    \  if len(l) == 0 {\n        return 0\n    }\n    \n    max_index := 0\n    max_value\
    \ := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max_value {\n\
    \            max_value = l[i]\n            max_index = i\n        }\n    }\n \
    \   \n    return max_value\n}\n", "    if len(l) == 0 {\n        return 0\n  \
    \  }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    \n    return max\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _,\
    \ v := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n\
    \    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n    \n    return max\n}\n", "    if\
    \ len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _, v\
    \ := range l {\n        if v > max {\n            max = v\n        }\n    }\n\
    \    \n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n\
    \    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n\
    \            max = l[i]\n        }\n    }\n\n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _, v := range\
    \ l {\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n    \n    max :=\
    \ l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i] > max {\n         \
    \   max = l[i]\n        }\n    }\n    return max\n}\n", "    if len(l) == 0 {\n\
    \        return 0\n    }\n\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n\
    \        if l[i] > max {\n            max = l[i]\n        }\n    }\n\n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n\
    \    for _, v := range l {\n        if v > max {\n            max = v\n      \
    \  }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    \n    max := l[0]\n    for _, v := range l {\n        if v > max {\n\
    \            max = v\n        }\n    }\n    \n    return max\n}\n", "    if len(l)\
    \ == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for _, v := range\
    \ l {\n        if v > max {\n            max = v\n        }\n    }\n    return\
    \ max\n}\n", "    if len(l) == 0 {\n        return 0\n    }\n\n    max := l[0]\n\
    \    for _, v := range l {\n        if v > max {\n            max = v\n      \
    \  }\n    }\n\n    return max\n}\n", "    if len(l) == 0 {\n        return 0\n\
    \    }\n    \n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n    \n    return max\n}\n",
  "    if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for i\
    \ := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n \
    \       }\n    }\n    \n    return max\n}\n", "    if len(l) == 0 {\n        return\
    \ 0\n    }\n\n    max := l[0]\n    for i := 1; i < len(l); i++ {\n        if l[i]\
    \ > max {\n            max = l[i]\n        }\n    }\n\n    return max\n}\n", " \
    \   if len(l) == 0 {\n        return 0\n    }\n    \n    max := l[0]\n    for\
    \ i := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    \n    return max\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "

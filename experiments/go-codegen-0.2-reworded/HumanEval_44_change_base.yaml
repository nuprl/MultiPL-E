name: HumanEval_44_change_base
language: go_test.go
prompt: "package change_base_test\n\nimport (\n    \"testing\"\n    \"fmt\"\n)\n\n\
  // Change numerical base of input number x to base.\n// return string representation\
  \ after the conversion.\n// base numbers are less than 10.\n// >>> change_base(8,\
  \ 3)\n// \"22\"\n// >>> change_base(8, 2)\n// \"1000\"\n// >>> change_base(7, 2)\n\
  // \"111\"\nfunc change_base(x int, base int) string {\n"
tests: "func TestChange_Base(t *testing.T) {\n  candidate := change_base\n\ttype test\
  \ struct {\n\t\tactual   interface{}\n\t\texpected interface{}\n\t}\n   tests :=\
  \ []test{\n     { actual: candidate(8, 3), expected: \"22\" },\n     { actual: candidate(9,\
  \ 3), expected: \"100\" },\n     { actual: candidate(234, 2), expected: \"11101010\"\
  \ },\n     { actual: candidate(16, 2), expected: \"10000\" },\n     { actual: candidate(8,\
  \ 2), expected: \"1000\" },\n     { actual: candidate(7, 2), expected: \"111\" },\n\
  \     { actual: candidate(2, 3), expected: \"2\" },\n     { actual: candidate(3,\
  \ 4), expected: \"3\" },\n     { actual: candidate(4, 5), expected: \"4\" },\n \
  \    { actual: candidate(5, 6), expected: \"5\" },\n     { actual: candidate(6,\
  \ 7), expected: \"6\" },\n     { actual: candidate(7, 8), expected: \"7\" },\n \
  \  }\n\n\tfor i, tc := range tests {\n\t\tt.Run(fmt.Sprintf(\"test num % d\", i),\
  \ func(t *testing.T) {\n\t\t\tif fmt.Sprintf(\"%v\", tc.actual) != fmt.Sprintf(\"\
  %v\", tc.expected) {\n\t\t\t\tt.Errorf(\"expected '%s', got '%s'\", tc.expected,\
  \ tc.actual)\n\t\t\t}\n\t\t})\n\t}\n}\n"
completions: ["    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x,\
    \ base)\n    }\n    if base < 2 || base > 36 {\n        return \"\"\n    }\n \
    \   if x == 0 {\n        return \"0\"\n    }\n    if base == 10 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    var result string\n    for x > 0 {\n    \
    \    result = fmt.Sprintf(\"%d\", x % base) + result\n        x /= base\n    }\n\
    \    return result\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n    return\
    \ result\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x = x / base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\"\
    \ + change_base(-x, base)\n    }\n    if base < 2 || base > 10 {\n        return\
    \ \"\"\n    }\n    if x == 0 {\n        return \"0\"\n    }\n    if x < 10 {\n\
    \        return fmt.Sprintf(\"%d\", x)\n    }\n    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x = x / base\n\
    \    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x,\
    \ base)\n    }\n    if base < 2 || base > 10 {\n        return \"\"\n    }\n \
    \   if x == 0 {\n        return \"0\"\n    }\n    s := \"\"\n    for x > 0 {\n\
    \        s = fmt.Sprintf(\"%d\", x%base) + s\n        x /= base\n    }\n    return\
    \ s\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %s%d\", result, x%base)\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x = x / base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%s%d\", result, x%base)\n        x /= base\n\
    \    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x,\
    \ base)\n    }\n    if base < 2 || base > 36 {\n        return \"\"\n    }\n \
    \   if x == 0 {\n        return \"0\"\n    }\n    s := \"\"\n    for x > 0 {\n\
    \        s = fmt.Sprintf(\"%d\", x % base) + s\n        x /= base\n    }\n   \
    \ return s\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    if x < 0 {\n\
    \        return \"-\" + change_base(-x, base)\n    }\n    if base < 2 || base\
    \ > 10 {\n        return \"\"\n    }\n    if x == 0 {\n        return \"0\"\n\
    \    }\n    s := \"\"\n    for x > 0 {\n        s = fmt.Sprintf(\"%d\", x%base)\
    \ + s\n        x /= base\n    }\n    return s\n}\n", "    var result string\n\
    \    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n    \
    \    x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x,\
    \ base)\n    }\n    if base < 2 || base > 10 {\n        return \"\"\n    }\n \
    \   if x == 0 {\n        return \"0\"\n    }\n    s := \"\"\n    for x > 0 {\n\
    \        s = fmt.Sprintf(\"%d\", x%base) + s\n        x /= base\n    }\n    return\
    \ s\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x, base)\n   \
    \ }\n    if x == 0 {\n        return \"0\"\n    }\n    if base == 10 {\n     \
    \   return fmt.Sprintf(\"%d\", x)\n    }\n    if base < 10 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if base > 10 {\n        return fmt.Sprintf(\"%d\", x)\n \
    \   }\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x =\
    \ x / base\n    }\n    return result\n}\n", "    var result string\n    for x\
    \ > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    var result string\n    for x > 0 {\n   \
    \     result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n\
    \    return result\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n    return\
    \ result\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x = x / base\n    }\n    return result\n}\n",
  "    if x < 0 {\n        return \"-\" + change_base(-x, base)\n    }\n    if base\
    \ < 2 || base > 10 {\n        return \"\"\n    }\n    if x == 0 {\n        return\
    \ \"0\"\n    }\n    s := \"\"\n    for x > 0 {\n        s = fmt.Sprintf(\"%d\"\
    , x%base) + s\n        x /= base\n    }\n    return s\n}\n", "    var result string\n\
    \    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n    \
    \    x = x / base\n    }\n    return result\n}\n", "    var result string\n  \
    \  for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n      \
    \  x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    var result string\n    for x > 0 {\n   \
    \     result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n\
    \    return result\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n    return\
    \ result\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%s%d\", result, x %\
    \ base)\n        x /= base\n    }\n    return result\n}\n", "    var result string\n\
    \    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n    \
    \    x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x = x / base\n\
    \    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x,\
    \ base)\n    }\n    if base < 2 || base > 10 {\n        return \"\"\n    }\n \
    \   if x == 0 {\n        return \"0\"\n    }\n    if x < 10 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    if x < 100 {\n        return fmt.Sprintf(\"\
    %d\", x/10)\n    }\n    if x < 1000 {\n        return fmt.Sprintf(\"%d\", x/100)\n\
    \    }\n    if x < 10000 {\n        return fmt.Sprintf(\"%d\", x/1000)\n    }\n\
    \    if x < 100000 {\n        return fmt.Sprintf(\"%d\", x/10000)\n    }\n   \
    \ if x < 1000000 {\n        return fmt.Sprintf(\"%d\", x/100000)\n    }\n    if\
    \ x < 10000000 {\n        return fmt.Sprintf(\"%d\", x/1000000)\n    }\n    if\
    \ x < 100000000 {\n        return fmt.Sprintf(\"%d\", x/10000000)\n    }\n   \
    \ if x < 1000000000 {\n        return fmt.Sprintf(\"%d\", x/100000000)\n    }\n\
    \    return fmt.Sprintf(\"%d\", x/1000000000)\n}\n", "    var result string\n\
    \    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n    \
    \    x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%s%d\", result, x % base)\n        x\
    \ /= base\n    }\n    return result\n}\n", "    var result string\n    for x >\
    \ 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    var result string\n    for x > 0 {\n   \
    \     result = fmt.Sprintf(\"%d\", x%base) + result\n        x = x / base\n  \
    \  }\n    return result\n}\n", "    var result string\n    for x > 0 {\n     \
    \   result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n\
    \    return result\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n    return\
    \ result\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   if x < 0 {\n        return \"-\" + change_base(-x, base)\n    }\n    if x\
    \ == 0 {\n        return \"0\"\n    }\n    s := \"\"\n    for x > 0 {\n      \
    \  s = fmt.Sprintf(\"%d\", x%base) + s\n        x /= base\n    }\n    return s\n\
    }\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x = x / base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x /= base\n    }\n    return result\n}\n", "    if x < 0 {\n        return\
    \ \"-\" + change_base(-x, base)\n    }\n    if base < 2 || base > 10 {\n     \
    \   return \"\"\n    }\n    if x == 0 {\n        return \"0\"\n    }\n    s :=\
    \ \"\"\n    for x > 0 {\n        s = fmt.Sprintf(\"%d\", x%base) + s\n       \
    \ x /= base\n    }\n    return s\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x,\
    \ base)\n    }\n    if base < 2 || base > 36 {\n        return \"\"\n    }\n \
    \   if x == 0 {\n        return \"0\"\n    }\n    if x < 10 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    var s string\n    for x > 0 {\n        s\
    \ = fmt.Sprintf(\"%d\", x%base) + s\n        x /= base\n    }\n    return s\n\
    }\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x = x / base\n    }\n    return result\n}\n", "    var result string\n   \
    \ for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n       \
    \ x /= base\n    }\n    return result\n}\n", "    var result string\n    for x\
    \ > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x,\
    \ base)\n    }\n    if base == 10 {\n        return fmt.Sprintf(\"%d\", x)\n \
    \   }\n    if x == 0 {\n        return \"0\"\n    }\n    if x == 1 {\n       \
    \ return \"1\"\n    }\n    if x == 2 {\n        return \"2\"\n    }\n    if x\
    \ == 3 {\n        return \"3\"\n    }\n    if x == 4 {\n        return \"4\"\n\
    \    }\n    if x == 5 {\n        return \"5\"\n    }\n    if x == 6 {\n      \
    \  return \"6\"\n    }\n    if x == 7 {\n        return \"7\"\n    }\n    if x\
    \ == 8 {\n        return \"8\"\n    }\n    if x == 9 {\n        return \"9\"\n\
    \    }\n    if x == 10 {\n        return \"10\"\n    }\n    if x == 11 {\n   \
    \     return \"11\"\n    }\n    if x == 12 {\n        return \"12\"\n    }\n \
    \   if x == 13 {\n        return \"13\"\n    }\n    if x == 14 {\n        return\
    \ \"14\"\n    }\n    if x == 15 {\n        return \"15\"\n    }\n    if x == 16\
    \ {\n        return \"16\"\n    }\n    if x == 17 {\n        return \"17\"\n \
    \   }\n    if x == 18 {\n        return \"18\"\n    }\n    if x == 19 {\n    \
    \    return \"19\"\n    }\n    if x == 20 {\n        return \"20\"\n    }\n  \
    \  if x == 21 {\n        return \"21\"\n    }\n    if x == 22 {\n        return\
    \ \"22\"\n    }\n    if x == 23 {\n        return \"23\"\n    }\n    if x == 24\
    \ {\n        return \"24\"\n    }\n    if x == 25 {\n        return \"25\"\n \
    \   }\n    if x == 26 {\n        return \"26\"\n    }\n    if x == 27 {\n    \
    \    return \"27\"\n    }\n    if x == 28 {\n        return \"28\"\n    }\n  \
    \  ", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x = x / base\n    }\n    return result\n}\n", "    var result string\n\
    \    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n    \
    \    x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\"\
    \ + change_base(-x, base)\n    }\n    if x == 0 {\n        return \"0\"\n    }\n\
    \    if base == 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base\
    \ < 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base > 10 {\n \
    \       return change_base(x, 10)\n    }\n    return change_base(x, base)\n}\n",
  "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%s%d\",\
    \ result, x % base)\n        x /= base\n    }\n    return result\n}\n", "    var\
    \ result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x = x / base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x = x / base\n    }\n    return result\n}\n", "    var result string\n\
    \    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n    \
    \    x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    var result string\n    for x > 0 {\n   \
    \     result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n\
    \    return result\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n    return\
    \ result\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x, base)\n\
    \    }\n    if base == 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n  \
    \  if x == 0 {\n        return \"0\"\n    }\n    var result string\n    for x\
    \ > 0 {\n        result = fmt.Sprintf(\"%s%d\", result, x % base)\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    var result string\n    for x > 0 {\n   \
    \     result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n\
    \    return result\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x = x / base\n    }\n    return\
    \ result\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x = x / base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    var result string\n    for x > 0 {\n   \
    \     result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n\
    \    return result\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x = x / base\n    }\n    return\
    \ result\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x, base)\n\
    \    }\n    if x == 0 {\n        return \"0\"\n    }\n    if base == 10 {\n  \
    \      return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 2 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    if base == 3 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if base == 4 {\n        return fmt.Sprintf(\"%d\", x)\n \
    \   }\n    if base == 5 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if\
    \ base == 6 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 7\
    \ {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 8 {\n      \
    \  return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 9 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    return \"error\"\n}\n", "    var result string\n    for x\
    \ > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x,\
    \ base)\n    }\n    if base < 2 || base > 10 {\n        return \"\"\n    }\n \
    \   if x == 0 {\n        return \"0\"\n    }\n    if x < 10 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    s := \"\"\n    for x > 0 {\n        s = fmt.Sprintf(\"\
    %d\", x % base) + s\n        x /= base\n    }\n    return s\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x = x / base\n    }\n    return result\n}\n", "    var result string\n\
    \    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n    \
    \    x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    var result string\n    for x > 0 {\n   \
    \     result = fmt.Sprintf(\"%s%d\", result, x % base)\n        x /= base\n  \
    \  }\n    return result\n}\n", "    var result string\n    for x > 0 {\n     \
    \   result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n\
    \    return result\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n    return\
    \ result\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x = x / base\n\
    \    }\n    return result\n}\n", "    var result string\n    for x > 0 {\n   \
    \     result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n\
    \    return result\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n    return\
    \ result\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x = x / base\n    }\n    return result\n}\n", "    var result string\n\
    \    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n    \
    \    x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x,\
    \ base)\n    }\n    if x == 0 {\n        return \"0\"\n    }\n    if base == 10\
    \ {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 2 {\n      \
    \  return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 3 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if base == 4 {\n        return fmt.Sprintf(\"%d\", x)\n \
    \   }\n    if base == 5 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if\
    \ base == 6 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 7\
    \ {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 8 {\n      \
    \  return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 9 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    var result string\n\
    \    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n    \
    \    x /= base\n    }\n    return result\n}\n", "    if x < 0 {\n        return\
    \ \"-\" + change_base(-x, base)\n    }\n    if base < 2 || base > 10 {\n     \
    \   return \"\"\n    }\n    if x == 0 {\n        return \"0\"\n    }\n    s :=\
    \ \"\"\n    for x > 0 {\n        s = fmt.Sprintf(\"%d\", x%base) + s\n       \
    \ x /= base\n    }\n    return s\n}\n", "    if x < 0 {\n        return \"-\"\
    \ + change_base(-x, base)\n    }\n    if x == 0 {\n        return \"0\"\n    }\n\
    \    if base == 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base\
    \ == 2 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 3 {\n \
    \       return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 4 {\n        return\
    \ fmt.Sprintf(\"%d\", x)\n    }\n    if base == 5 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if base == 6 {\n        return fmt.Sprintf(\"%d\", x)\n \
    \   }\n    if base == 7 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if\
    \ base == 8 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 9\
    \ {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    return \"error\"\n}\n",
  "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\"\
    \ + change_base(-x, base)\n    }\n    if base == 10 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if x == 0 {\n        return \"0\"\n    }\n    s := \"\"\n\
    \    for x > 0 {\n        s = fmt.Sprintf(\"%d\", x%base) + s\n        x /= base\n\
    \    }\n    return s\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n    return\
    \ result\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   if x < 0 {\n        return \"-\" + change_base(-x, base)\n    }\n    if x\
    \ == 0 {\n        return \"0\"\n    }\n    if base == 10 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    s := \"\"\n    for x > 0 {\n        s = fmt.Sprintf(\"%d\"\
    , x%base) + s\n        x /= base\n    }\n    return s\n}\n", "    var result string\n\
    \    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n    \
    \    x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    var result string\n    for x > 0 {\n   \
    \     result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n\
    \    return result\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x = x / base\n    }\n    return\
    \ result\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x,\
    \ base)\n    }\n    if x == 0 {\n        return \"0\"\n    }\n    s := \"\"\n\
    \    for x > 0 {\n        s = fmt.Sprintf(\"%d\", x%base) + s\n        x /= base\n\
    \    }\n    return s\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n    return\
    \ result\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   if x < 0 {\n        return \"-\" + change_base(-x, base)\n    }\n    if x\
    \ == 0 {\n        return \"0\"\n    }\n    if base == 10 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if base == 2 {\n        return fmt.Sprintf(\"%d\", x)\n \
    \   }\n    if base == 3 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if\
    \ base == 4 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 5\
    \ {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 6 {\n      \
    \  return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 7 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if base == 8 {\n        return fmt.Sprintf(\"%d\", x)\n \
    \   }\n    if base == 9 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    return\
    \ \"error\"\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x = x / base\n    }\n    return result\n}\n", "    var result string\n   \
    \ for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n       \
    \ x /= base\n    }\n    return result\n}\n", "    var result string\n    for x\
    \ > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    var result string\n    for x > 0 {\n   \
    \     result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n\
    \    return result\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x = x / base\n    }\n    return\
    \ result\n}\n", "    if x < 0 {\n        return \"-\" + change_base(-x, base)\n\
    \    }\n    if base < 2 || base > 36 {\n        return \"\"\n    }\n    if x ==\
    \ 0 {\n        return \"0\"\n    }\n    s := \"\"\n    for x > 0 {\n        s\
    \ = fmt.Sprintf(\"%d\", x%base) + s\n        x /= base\n    }\n    return s\n\
    }\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\"\
    \ + change_base(-x, base)\n    }\n    if base < 2 || base > 10 {\n        return\
    \ \"\"\n    }\n    if x == 0 {\n        return \"0\"\n    }\n    if x == 1 {\n\
    \        return string(base)\n    }\n    s := \"\"\n    for x > 0 {\n        s\
    \ = string(base) + s\n        x, base = x/base, base-1\n    }\n    return s\n\
    }\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x = x / base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    if x < 0 {\n        return \"-\"\
    \ + change_base(-x, base)\n    }\n    if x == 0 {\n        return \"0\"\n    }\n\
    \    if base == 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base\
    \ < 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 2 {\n \
    \       return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 16 {\n        return\
    \ fmt.Sprintf(\"%x\", x)\n    }\n    if base == 8 {\n        return fmt.Sprintf(\"\
    %o\", x)\n    }\n    return fmt.Sprintf(\"%d\", x)\n}\n", "    if x < 0 {\n  \
    \      return \"-\" + change_base(-x, base)\n    }\n    if x == 0 {\n        return\
    \ \"0\"\n    }\n    if base == 10 {\n        return fmt.Sprintf(\"%d\", x)\n \
    \   }\n    if base == 2 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if\
    \ base == 3 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 4\
    \ {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 5 {\n      \
    \  return fmt.Sprintf(\"%d\", x)\n    }\n    if base == 6 {\n        return fmt.Sprintf(\"\
    %d\", x)\n    }\n    if base == 7 {\n        return fmt.Sprintf(\"%d\", x)\n \
    \   }\n    if base == 8 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    if\
    \ base == 9 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    return \"error\"\
    \n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x /= base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /=\
    \ base\n    }\n    return result\n}\n", "    var result string\n    for x > 0\
    \ {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    var result string\n    for x > 0 {\n   \
    \     result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n\
    \    return result\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n    return\
    \ result\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x /= base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x = x / base\n    }\n    return result\n}\n", "    if x < 0 {\n        return\
    \ \"-\" + change_base(-x, base)\n    }\n    if base < 2 || base > 36 {\n     \
    \   return \"0\"\n    }\n    if x == 0 {\n        return \"0\"\n    }\n    var\
    \ result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x = x / base\n    }\n    return result\n}\n", "    var result string\n\
    \    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n    \
    \    x = x / base\n    }\n    return result\n}\n", "    var result string\n  \
    \  for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n      \
    \  x = x / base\n    }\n    return result\n}\n", "    var result string\n    for\
    \ x > 0 {\n        result = fmt.Sprintf(\"%s%d\", result, x % base)\n        x\
    \ /= base\n    }\n    return result\n}\n", "    var result string\n    for x >\
    \ 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n\
    \    }\n    return result\n}\n", "    var result string\n    for x > 0 {\n   \
    \     result = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n\
    \    return result\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n    return\
    \ result\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x = x / base\n    }\n    return result\n}\n",
  "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x = x / base\n    }\n    return result\n}\n", "    if x < 0 {\n     \
    \   return \"-\" + change_base(-x, base)\n    }\n    if base < 2 || base > 10\
    \ {\n        return \"\"\n    }\n    if x == 0 {\n        return \"0\"\n    }\n\
    \    if x < 10 {\n        return fmt.Sprintf(\"%d\", x)\n    }\n    s := \"\"\n\
    \    for x > 0 {\n        s = fmt.Sprintf(\"%d\", x%base) + s\n        x /= base\n\
    \    }\n    return s\n}\n", "    var result string\n    for x > 0 {\n        result\
    \ = fmt.Sprintf(\"%d\", x%base) + result\n        x /= base\n    }\n    return\
    \ result\n}\n", "    var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"\
    %d\", x%base) + result\n        x = x/base\n    }\n    return result\n}\n", " \
    \   var result string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base)\
    \ + result\n        x /= base\n    }\n    return result\n}\n", "    var result\
    \ string\n    for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n\
    \        x /= base\n    }\n    return result\n}\n", "    var result string\n \
    \   for x > 0 {\n        result = fmt.Sprintf(\"%d\", x%base) + result\n     \
    \   x = x / base\n    }\n    return result\n}\n"]
stop_tokens:
- "\nfunc"
- struct
- "\n// "
